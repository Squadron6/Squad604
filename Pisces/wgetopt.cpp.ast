typedef char *__builtin_va_list;
extern "C" {
    typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
    typedef typeof (sizeof(int)) size_t;
    typedef unsigned char __u_char;
    typedef unsigned short __u_short;
    typedef unsigned int __u_int;
    typedef unsigned long __u_long;
    typedef signed char __int8_t;
    typedef unsigned char __uint8_t;
    typedef short __int16_t;
    typedef unsigned short __uint16_t;
    typedef int __int32_t;
    typedef unsigned int __uint32_t;
    typedef long long __int64_t;
    typedef unsigned long long __uint64_t;
    typedef long long __quad_t;
    typedef unsigned long long __u_quad_t;
    typedef __u_quad_t __dev_t;
    typedef unsigned int __uid_t;
    typedef unsigned int __gid_t;
    typedef unsigned long __ino_t;
    typedef __u_quad_t __ino64_t;
    typedef unsigned int __mode_t;
    typedef unsigned int __nlink_t;
    typedef long __off_t;
    typedef __quad_t __off64_t;
    typedef int __pid_t;
    struct {
        int __val[2];
    };
    typedef struct __fsid_t __fsid_t;
    typedef long __clock_t;
    typedef unsigned long __rlim_t;
    typedef __u_quad_t __rlim64_t;
    typedef unsigned int __id_t;
    typedef long __time_t;
    typedef unsigned int __useconds_t;
    typedef long __suseconds_t;
    typedef int __daddr_t;
    typedef long __swblk_t;
    typedef int __key_t;
    typedef int __clockid_t;
    typedef void *__timer_t;
    typedef long __blksize_t;
    typedef long __blkcnt_t;
    typedef __quad_t __blkcnt64_t;
    typedef unsigned long __fsblkcnt_t;
    typedef __u_quad_t __fsblkcnt64_t;
    typedef unsigned long __fsfilcnt_t;
    typedef __u_quad_t __fsfilcnt64_t;
    typedef int __ssize_t;
    typedef __off64_t __loff_t;
    typedef __quad_t *__qaddr_t;
    typedef char *__caddr_t;
    typedef int __intptr_t;
    typedef unsigned int __socklen_t;
    struct _IO_FILE;
    typedef struct _IO_FILE FILE;
    typedef struct _IO_FILE __FILE;
    struct {
        int __count;
        union {
            unsigned int __wch;
            char __wchb[4];
        };
        union <anonymous union at /usr/include/wchar.h:86:3> __value;
    };
    typedef struct __mbstate_t __mbstate_t;
    struct {
        __off_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos_t _G_fpos_t;
    struct {
        __off64_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos64_t _G_fpos64_t;
    typedef short _G_int16_t;
    typedef int _G_int32_t;
    typedef unsigned short _G_uint16_t;
    typedef unsigned int _G_uint32_t;
    typedef __builtin_va_list va_list;
    typedef __builtin_va_list __gnuc_va_list;
    struct _IO_jump_t;
    struct _IO_FILE;
    typedef void _IO_lock_t;
    struct _IO_marker {
        struct _IO_marker;
        struct _IO_marker *_next;
        struct _IO_FILE *_sbuf;
        int _pos;
    };
    enum __codecvt_result {
        __codecvt_ok,
        __codecvt_partial,
        __codecvt_error,
        __codecvt_noconv
    };
    struct _IO_FILE {
        struct _IO_FILE;
        int _flags;
        char *_IO_read_ptr;
        char *_IO_read_end;
        char *_IO_read_base;
        char *_IO_write_base;
        char *_IO_write_ptr;
        char *_IO_write_end;
        char *_IO_buf_base;
        char *_IO_buf_end;
        char *_IO_save_base;
        char *_IO_backup_base;
        char *_IO_save_end;
        struct _IO_marker *_markers;
        struct _IO_FILE *_chain;
        int _fileno;
        int _flags2;
        __off_t _old_offset;
        unsigned short _cur_column;
        signed char _vtable_offset;
        char _shortbuf[1];
        _IO_lock_t *_lock;
        __off64_t _offset;
        void *__pad1;
        void *__pad2;
        void *__pad3;
        void *__pad4;
        size_t __pad5;
        int _mode;
        char _unused2[40];
    };
    struct _IO_FILE_plus;
    extern struct _IO_FILE_plus _IO_2_1_stdin_;
    extern struct _IO_FILE_plus _IO_2_1_stdout_;
    extern struct _IO_FILE_plus _IO_2_1_stderr_;
    typedef __ssize_t (__io_read_fn)(void *, char *, size_t);
    typedef __ssize_t (__io_write_fn)(void *, const char *, size_t);
    typedef int (__io_seek_fn)(void *, __off64_t *, int);
    typedef int (__io_close_fn)(void *);
    typedef __io_read_fn cookie_read_function_t;
    typedef __io_write_fn cookie_write_function_t;
    typedef __io_seek_fn cookie_seek_function_t;
    typedef __io_close_fn cookie_close_function_t;
    struct {
        __io_read_fn *read;
        __io_write_fn *write;
        __io_seek_fn *seek;
        __io_close_fn *close;
    };
    typedef struct _IO_cookie_io_functions_t _IO_cookie_io_functions_t;
    typedef _IO_cookie_io_functions_t cookie_io_functions_t;
    struct _IO_cookie_file;
    extern void _IO_cookie_init(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns);
    extern "C" {
        extern int __underflow(_IO_FILE *);
        extern int __uflow(_IO_FILE *);
        extern int __overflow(_IO_FILE *, int);
        extern int _IO_getc(_IO_FILE *__fp);
        extern int _IO_putc(int __c, _IO_FILE *__fp);
        extern int _IO_feof(_IO_FILE *__fp) throw();
        extern int _IO_ferror(_IO_FILE *__fp) throw();
        extern int _IO_peekc_locked(_IO_FILE *__fp);
        extern void _IO_flockfile(_IO_FILE *) throw();
        extern void _IO_funlockfile(_IO_FILE *) throw();
        extern int _IO_ftrylockfile(_IO_FILE *) throw();
        extern int _IO_vfscanf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list, int *restrict);
        extern int _IO_vfprintf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list);
        extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
        extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
        extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
        extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
        extern void _IO_free_backup_area(_IO_FILE *) throw();
    }
    typedef __gnuc_va_list va_list;
    typedef __off_t off_t;
    typedef __off64_t off64_t;
    typedef __ssize_t ssize_t;
    typedef _G_fpos_t fpos_t;
    typedef _G_fpos64_t fpos64_t;
    extern struct _IO_FILE *stdin;
    extern struct _IO_FILE *stdout;
    extern struct _IO_FILE *stderr;
    extern int remove(const char *__filename) throw();
    extern int rename(const char *__old, const char *__new) throw();
    extern int renameat(int __oldfd, const char *__old, int __newfd, const char *__new) throw();
    extern FILE *tmpfile();
    extern FILE *tmpfile64();
    extern char *tmpnam(char *__s) throw();
    extern char *tmpnam_r(char *__s) throw();
    extern char *tempnam(const char *__dir, const char *__pfx) throw();
    extern int fclose(FILE *__stream);
    extern int fflush(FILE *__stream);
    extern int fflush_unlocked(FILE *__stream);
    extern int fcloseall();
    extern FILE *fopen(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fopen64(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen64(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fdopen(int __fd, const char *__modes) throw();
    extern FILE *fopencookie(void *restrict __magic_cookie, const char *restrict __modes, _IO_cookie_io_functions_t __io_funcs) throw();
    extern FILE *fmemopen(void *__s, size_t __len, const char *__modes) throw();
    extern FILE *open_memstream(char **__bufloc, size_t *__sizeloc) throw();
    extern void setbuf(FILE *restrict __stream, char *restrict __buf) throw();
    extern int setvbuf(FILE *restrict __stream, char *restrict __buf, int __modes, size_t __n) throw();
    extern void setbuffer(FILE *restrict __stream, char *restrict __buf, size_t __size) throw();
    extern void setlinebuf(FILE *__stream) throw();
    extern int fprintf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int printf(const char *restrict __format, ...);
    extern int sprintf(char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfprintf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vprintf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsprintf(char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int snprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, ...) throw();
    extern int vsnprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int vasprintf(char **restrict __ptr, const char *restrict __f, __gnuc_va_list __arg) throw();
    extern int __asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int vdprintf(int __fd, const char *restrict __fmt, __gnuc_va_list __arg);
    extern int dprintf(int __fd, const char *restrict __fmt, ...);
    extern int fscanf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int scanf(const char *restrict __format, ...);
    extern int sscanf(const char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfscanf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vscanf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsscanf(const char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int fgetc(FILE *__stream);
    extern int getc(FILE *__stream);
    extern int getchar();
    extern int getc_unlocked(FILE *__stream);
    extern int getchar_unlocked();
    extern int fgetc_unlocked(FILE *__stream);
    extern int fputc(int __c, FILE *__stream);
    extern int putc(int __c, FILE *__stream);
    extern int putchar(int __c);
    extern int fputc_unlocked(int __c, FILE *__stream);
    extern int putc_unlocked(int __c, FILE *__stream);
    extern int putchar_unlocked(int __c);
    extern int getw(FILE *__stream);
    extern int putw(int __w, FILE *__stream);
    extern char *fgets(char *restrict __s, int __n, FILE *restrict __stream);
    extern char *gets(char *__s);
    extern char *fgets_unlocked(char *restrict __s, int __n, FILE *restrict __stream);
    extern __ssize_t __getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getline(char **restrict __lineptr, size_t *restrict __n, FILE *restrict __stream);
    extern int fputs(const char *restrict __s, FILE *restrict __stream);
    extern int puts(const char *__s);
    extern int ungetc(int __c, FILE *__stream);
    extern size_t fread(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __s);
    extern int fputs_unlocked(const char *restrict __s, FILE *restrict __stream);
    extern size_t fread_unlocked(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite_unlocked(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern int fseek(FILE *__stream, long __off, int __whence);
    extern long ftell(FILE *__stream);
    extern void rewind(FILE *__stream);
    extern int fseeko(FILE *__stream, __off_t __off, int __whence);
    extern __off_t ftello(FILE *__stream);
    extern int fgetpos(FILE *restrict __stream, fpos_t *restrict __pos);
    extern int fsetpos(FILE *__stream, const fpos_t *__pos);
    extern int fseeko64(FILE *__stream, __off64_t __off, int __whence);
    extern __off64_t ftello64(FILE *__stream);
    extern int fgetpos64(FILE *restrict __stream, fpos64_t *restrict __pos);
    extern int fsetpos64(FILE *__stream, const fpos64_t *__pos);
    extern void clearerr(FILE *__stream) throw();
    extern int feof(FILE *__stream) throw();
    extern int ferror(FILE *__stream) throw();
    extern void clearerr_unlocked(FILE *__stream) throw();
    extern int feof_unlocked(FILE *__stream) throw();
    extern int ferror_unlocked(FILE *__stream) throw();
    extern void perror(const char *__s);
    extern int sys_nerr;
    extern const char *const sys_errlist[];
    extern int _sys_nerr;
    extern const char *const _sys_errlist[];
    extern int fileno(FILE *__stream) throw();
    extern int fileno_unlocked(FILE *__stream) throw();
    extern FILE *popen(const char *__command, const char *__modes);
    extern int pclose(FILE *__stream);
    extern char *ctermid(char *__s) throw();
    extern char *cuserid(char *__s);
    struct obstack;
    extern int obstack_printf(struct obstack *restrict __obstack, const char *restrict __format, ...) throw();
    extern int obstack_vprintf(struct obstack *restrict __obstack, const char *restrict __format, __gnuc_va_list __args) throw();
    extern void flockfile(FILE *__stream) throw();
    extern int ftrylockfile(FILE *__stream) throw();
    extern void funlockfile(FILE *__stream) throw();
}
typedef unsigned int wint_t;
typedef __mbstate_t mbstate_t;
extern "C" {
    struct tm;
    extern wchar_t *wcscpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern wchar_t *wcscat(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncat(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern int wcscmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncasecmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    struct __locale_struct {
        struct __locale_struct;
        struct __locale_data;
        struct __locale_data *__locales[13];
        const unsigned short *__ctype_b;
        const int *__ctype_tolower;
        const int *__ctype_toupper;
        const char *__names[13];
    };
    typedef struct __locale_struct *__locale_t;
    typedef __locale_t locale_t;
    extern int wcscasecmp_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern int wcsncasecmp_l(const wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern int wcscoll(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern size_t wcsxfrm(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern int wcscoll_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern size_t wcsxfrm_l(wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern wchar_t *wcsdup(const wchar_t *__s) throw();
    extern wchar_t *wcschr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcsrchr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcschrnul(const wchar_t *__s, wchar_t __wc) throw();
    extern size_t wcscspn(const wchar_t *__wcs, const wchar_t *__reject) throw();
    extern size_t wcsspn(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcspbrk(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcsstr(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern wchar_t *wcstok(wchar_t *restrict __s, const wchar_t *restrict __delim, wchar_t **restrict __ptr) throw();
    extern size_t wcslen(const wchar_t *__s) throw();
    extern wchar_t *wcswcs(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern size_t wcsnlen(const wchar_t *__s, size_t __maxlen) throw();
    extern wchar_t *wmemchr(const wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern int wmemcmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern wchar_t *wmempcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wint_t btowc(int __c) throw();
    extern int wctob(wint_t __c) throw();
    extern int mbsinit(const mbstate_t *__ps) throw();
    extern size_t mbrtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n, mbstate_t *__p) throw();
    extern size_t wcrtomb(char *restrict __s, wchar_t __wc, mbstate_t *restrict __ps) throw();
    extern size_t __mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbsrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t mbsnrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __nmc, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsnrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __nwc, size_t __len, mbstate_t *restrict __ps) throw();
    extern int wcwidth(wchar_t __c) throw();
    extern int wcswidth(const wchar_t *__s, size_t __n) throw();
    extern double wcstod(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern float wcstof(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long double wcstold(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long wcstol(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long wcstoul(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoll(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstoull(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstouq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long wcstol_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long wcstoul_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long wcstoll_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long wcstoull_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double wcstod_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern float wcstof_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern long double wcstold_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern wchar_t *wcpcpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcpncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern __FILE *open_wmemstream(wchar_t **__bufloc, size_t *__sizeloc) throw();
    extern int fwide(__FILE *__fp, int __mode) throw();
    extern int fwprintf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wprintf(const wchar_t *restrict __format, ...);
    extern int swprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, ...) throw();
    extern int vfwprintf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwprintf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern int fwscanf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wscanf(const wchar_t *restrict __format, ...);
    extern int swscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, ...) throw();
    extern int vfwscanf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwscanf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern wint_t fgetwc(__FILE *__stream);
    extern wint_t getwc(__FILE *__stream);
    extern wint_t getwchar();
    extern wint_t fputwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar(wchar_t __wc);
    extern wchar_t *fgetws(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern wint_t ungetwc(wint_t __wc, __FILE *__stream);
    extern wint_t getwc_unlocked(__FILE *__stream);
    extern wint_t getwchar_unlocked();
    extern wint_t fgetwc_unlocked(__FILE *__stream);
    extern wint_t fputwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar_unlocked(wchar_t __wc);
    extern wchar_t *fgetws_unlocked(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws_unlocked(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern size_t wcsftime(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp) throw();
    extern size_t wcsftime_l(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
}
extern "C" {
    typedef __gid_t gid_t;
    typedef __uid_t uid_t;
    typedef __useconds_t useconds_t;
    typedef __pid_t pid_t;
    typedef __intptr_t intptr_t;
    typedef __socklen_t socklen_t;
    extern int access(const char *__name, int __type) throw();
    extern int euidaccess(const char *__name, int __type) throw();
    extern int eaccess(const char *__name, int __type) throw();
    extern int faccessat(int __fd, const char *__file, int __type, int __flag) throw();
    extern __off_t lseek(int __fd, __off_t __offset, int __whence) throw();
    extern __off64_t lseek64(int __fd, __off64_t __offset, int __whence) throw();
    extern int close(int __fd);
    extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
    extern ssize_t write(int __fd, const void *__buf, size_t __n);
    extern ssize_t pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset);
    extern ssize_t pwrite(int __fd, const void *__buf, size_t __n, __off_t __offset);
    extern ssize_t pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset);
    extern ssize_t pwrite64(int __fd, const void *__buf, size_t __n, __off64_t __offset);
    extern int pipe(int __pipedes[2]) throw();
    extern int pipe2(int __pipedes[2], int __flags) throw();
    extern unsigned int alarm(unsigned int __seconds) throw();
    extern unsigned int sleep(unsigned int __seconds);
    extern __useconds_t ualarm(__useconds_t __value, __useconds_t __interval) throw();
    extern int usleep(__useconds_t __useconds);
    extern int pause();
    extern int chown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchown(int __fd, __uid_t __owner, __gid_t __group) throw();
    extern int lchown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchownat(int __fd, const char *__file, __uid_t __owner, __gid_t __group, int __flag) throw();
    extern int chdir(const char *__path) throw();
    extern int fchdir(int __fd) throw();
    extern char *getcwd(char *__buf, size_t __size) throw();
    extern char *get_current_dir_name() throw();
    extern char *getwd(char *__buf) throw();
    extern int dup(int __fd) throw();
    extern int dup2(int __fd, int __fd2) throw();
    extern int dup3(int __fd, int __fd2, int __flags) throw();
    extern char **__environ;
    extern char **environ;
    extern int execve(const char *__path, char *const __argv[], char *const __envp[]) throw();
    extern int fexecve(int __fd, char *const __argv[], char *const __envp[]) throw();
    extern int execv(const char *__path, char *const __argv[]) throw();
    extern int execle(const char *__path, const char *__arg, ...) throw();
    extern int execl(const char *__path, const char *__arg, ...) throw();
    extern int execvp(const char *__file, char *const __argv[]) throw();
    extern int execlp(const char *__file, const char *__arg, ...) throw();
    extern int execvpe(const char *__file, char *const __argv[], char *const __envp[]) throw();
    extern int nice(int __inc) throw();
    extern void _exit(int __status);
    enum  {
        _PC_LINK_MAX,
        _PC_MAX_CANON,
        _PC_MAX_INPUT,
        _PC_NAME_MAX,
        _PC_PATH_MAX,
        _PC_PIPE_BUF,
        _PC_CHOWN_RESTRICTED,
        _PC_NO_TRUNC,
        _PC_VDISABLE,
        _PC_SYNC_IO,
        _PC_ASYNC_IO,
        _PC_PRIO_IO,
        _PC_SOCK_MAXBUF,
        _PC_FILESIZEBITS,
        _PC_REC_INCR_XFER_SIZE,
        _PC_REC_MAX_XFER_SIZE,
        _PC_REC_MIN_XFER_SIZE,
        _PC_REC_XFER_ALIGN,
        _PC_ALLOC_SIZE_MIN,
        _PC_SYMLINK_MAX,
        _PC_2_SYMLINKS
    };
    enum  {
        _SC_ARG_MAX,
        _SC_CHILD_MAX,
        _SC_CLK_TCK,
        _SC_NGROUPS_MAX,
        _SC_OPEN_MAX,
        _SC_STREAM_MAX,
        _SC_TZNAME_MAX,
        _SC_JOB_CONTROL,
        _SC_SAVED_IDS,
        _SC_REALTIME_SIGNALS,
        _SC_PRIORITY_SCHEDULING,
        _SC_TIMERS,
        _SC_ASYNCHRONOUS_IO,
        _SC_PRIORITIZED_IO,
        _SC_SYNCHRONIZED_IO,
        _SC_FSYNC,
        _SC_MAPPED_FILES,
        _SC_MEMLOCK,
        _SC_MEMLOCK_RANGE,
        _SC_MEMORY_PROTECTION,
        _SC_MESSAGE_PASSING,
        _SC_SEMAPHORES,
        _SC_SHARED_MEMORY_OBJECTS,
        _SC_AIO_LISTIO_MAX,
        _SC_AIO_MAX,
        _SC_AIO_PRIO_DELTA_MAX,
        _SC_DELAYTIMER_MAX,
        _SC_MQ_OPEN_MAX,
        _SC_MQ_PRIO_MAX,
        _SC_VERSION,
        _SC_PAGESIZE,
        _SC_RTSIG_MAX,
        _SC_SEM_NSEMS_MAX,
        _SC_SEM_VALUE_MAX,
        _SC_SIGQUEUE_MAX,
        _SC_TIMER_MAX,
        _SC_BC_BASE_MAX,
        _SC_BC_DIM_MAX,
        _SC_BC_SCALE_MAX,
        _SC_BC_STRING_MAX,
        _SC_COLL_WEIGHTS_MAX,
        _SC_EQUIV_CLASS_MAX,
        _SC_EXPR_NEST_MAX,
        _SC_LINE_MAX,
        _SC_RE_DUP_MAX,
        _SC_CHARCLASS_NAME_MAX,
        _SC_2_VERSION,
        _SC_2_C_BIND,
        _SC_2_C_DEV,
        _SC_2_FORT_DEV,
        _SC_2_FORT_RUN,
        _SC_2_SW_DEV,
        _SC_2_LOCALEDEF,
        _SC_PII,
        _SC_PII_XTI,
        _SC_PII_SOCKET,
        _SC_PII_INTERNET,
        _SC_PII_OSI,
        _SC_POLL,
        _SC_SELECT,
        _SC_UIO_MAXIOV,
        _SC_IOV_MAX = (ImplicitCastExpr 0x9da0128 </usr/include/i386-linux-gnu/bits/confname.h:202:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9d93994 <col:26> 'int' EnumConstant 0x9d93960 '_SC_UIO_MAXIOV' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>'))
,
        _SC_PII_INTERNET_STREAM,
        _SC_PII_INTERNET_DGRAM,
        _SC_PII_OSI_COTS,
        _SC_PII_OSI_CLTS,
        _SC_PII_OSI_M,
        _SC_T_IOV_MAX,
        _SC_THREADS,
        _SC_THREAD_SAFE_FUNCTIONS,
        _SC_GETGR_R_SIZE_MAX,
        _SC_GETPW_R_SIZE_MAX,
        _SC_LOGIN_NAME_MAX,
        _SC_TTY_NAME_MAX,
        _SC_THREAD_DESTRUCTOR_ITERATIONS,
        _SC_THREAD_KEYS_MAX,
        _SC_THREAD_STACK_MIN,
        _SC_THREAD_THREADS_MAX,
        _SC_THREAD_ATTR_STACKADDR,
        _SC_THREAD_ATTR_STACKSIZE,
        _SC_THREAD_PRIORITY_SCHEDULING,
        _SC_THREAD_PRIO_INHERIT,
        _SC_THREAD_PRIO_PROTECT,
        _SC_THREAD_PROCESS_SHARED,
        _SC_NPROCESSORS_CONF,
        _SC_NPROCESSORS_ONLN,
        _SC_PHYS_PAGES,
        _SC_AVPHYS_PAGES,
        _SC_ATEXIT_MAX,
        _SC_PASS_MAX,
        _SC_XOPEN_VERSION,
        _SC_XOPEN_XCU_VERSION,
        _SC_XOPEN_UNIX,
        _SC_XOPEN_CRYPT,
        _SC_XOPEN_ENH_I18N,
        _SC_XOPEN_SHM,
        _SC_2_CHAR_TERM,
        _SC_2_C_VERSION,
        _SC_2_UPE,
        _SC_XOPEN_XPG2,
        _SC_XOPEN_XPG3,
        _SC_XOPEN_XPG4,
        _SC_CHAR_BIT,
        _SC_CHAR_MAX,
        _SC_CHAR_MIN,
        _SC_INT_MAX,
        _SC_INT_MIN,
        _SC_LONG_BIT,
        _SC_WORD_BIT,
        _SC_MB_LEN_MAX,
        _SC_NZERO,
        _SC_SSIZE_MAX,
        _SC_SCHAR_MAX,
        _SC_SCHAR_MIN,
        _SC_SHRT_MAX,
        _SC_SHRT_MIN,
        _SC_UCHAR_MAX,
        _SC_UINT_MAX,
        _SC_ULONG_MAX,
        _SC_USHRT_MAX,
        _SC_NL_ARGMAX,
        _SC_NL_LANGMAX,
        _SC_NL_MSGMAX,
        _SC_NL_NMAX,
        _SC_NL_SETMAX,
        _SC_NL_TEXTMAX,
        _SC_XBS5_ILP32_OFF32,
        _SC_XBS5_ILP32_OFFBIG,
        _SC_XBS5_LP64_OFF64,
        _SC_XBS5_LPBIG_OFFBIG,
        _SC_XOPEN_LEGACY,
        _SC_XOPEN_REALTIME,
        _SC_XOPEN_REALTIME_THREADS,
        _SC_ADVISORY_INFO,
        _SC_BARRIERS,
        _SC_BASE,
        _SC_C_LANG_SUPPORT,
        _SC_C_LANG_SUPPORT_R,
        _SC_CLOCK_SELECTION,
        _SC_CPUTIME,
        _SC_THREAD_CPUTIME,
        _SC_DEVICE_IO,
        _SC_DEVICE_SPECIFIC,
        _SC_DEVICE_SPECIFIC_R,
        _SC_FD_MGMT,
        _SC_FIFO,
        _SC_PIPE,
        _SC_FILE_ATTRIBUTES,
        _SC_FILE_LOCKING,
        _SC_FILE_SYSTEM,
        _SC_MONOTONIC_CLOCK,
        _SC_MULTI_PROCESS,
        _SC_SINGLE_PROCESS,
        _SC_NETWORKING,
        _SC_READER_WRITER_LOCKS,
        _SC_SPIN_LOCKS,
        _SC_REGEXP,
        _SC_REGEX_VERSION,
        _SC_SHELL,
        _SC_SIGNALS,
        _SC_SPAWN,
        _SC_SPORADIC_SERVER,
        _SC_THREAD_SPORADIC_SERVER,
        _SC_SYSTEM_DATABASE,
        _SC_SYSTEM_DATABASE_R,
        _SC_TIMEOUTS,
        _SC_TYPED_MEMORY_OBJECTS,
        _SC_USER_GROUPS,
        _SC_USER_GROUPS_R,
        _SC_2_PBS,
        _SC_2_PBS_ACCOUNTING,
        _SC_2_PBS_LOCATE,
        _SC_2_PBS_MESSAGE,
        _SC_2_PBS_TRACK,
        _SC_SYMLOOP_MAX,
        _SC_STREAMS,
        _SC_2_PBS_CHECKPOINT,
        _SC_V6_ILP32_OFF32,
        _SC_V6_ILP32_OFFBIG,
        _SC_V6_LP64_OFF64,
        _SC_V6_LPBIG_OFFBIG,
        _SC_HOST_NAME_MAX,
        _SC_TRACE,
        _SC_TRACE_EVENT_FILTER,
        _SC_TRACE_INHERIT,
        _SC_TRACE_LOG,
        _SC_LEVEL1_ICACHE_SIZE,
        _SC_LEVEL1_ICACHE_ASSOC,
        _SC_LEVEL1_ICACHE_LINESIZE,
        _SC_LEVEL1_DCACHE_SIZE,
        _SC_LEVEL1_DCACHE_ASSOC,
        _SC_LEVEL1_DCACHE_LINESIZE,
        _SC_LEVEL2_CACHE_SIZE,
        _SC_LEVEL2_CACHE_ASSOC,
        _SC_LEVEL2_CACHE_LINESIZE,
        _SC_LEVEL3_CACHE_SIZE,
        _SC_LEVEL3_CACHE_ASSOC,
        _SC_LEVEL3_CACHE_LINESIZE,
        _SC_LEVEL4_CACHE_SIZE,
        _SC_LEVEL4_CACHE_ASSOC,
        _SC_LEVEL4_CACHE_LINESIZE,
        _SC_IPV6 = (ImplicitCastExpr 0x9da0138 </usr/include/i386-linux-gnu/bits/confname.h:468:33, line:499:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9d9fd98 <line:468:33, line:499:41> 'int' '+'
    (DeclRefExpr 0x9d9fd64 <line:468:33> 'int' EnumConstant 0x9d9f9b0 '_SC_LEVEL1_ICACHE_SIZE' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>')
    (IntegerLiteral 0x9d9fd80 <line:499:41> 'int' 50)))
,
        _SC_RAW_SOCKETS,
        _SC_V7_ILP32_OFF32,
        _SC_V7_ILP32_OFFBIG,
        _SC_V7_LP64_OFF64,
        _SC_V7_LPBIG_OFFBIG,
        _SC_SS_REPL_MAX,
        _SC_TRACE_EVENT_NAME_MAX,
        _SC_TRACE_NAME_MAX,
        _SC_TRACE_SYS_MAX,
        _SC_TRACE_USER_EVENT_MAX,
        _SC_XOPEN_STREAMS,
        _SC_THREAD_ROBUST_PRIO_INHERIT,
        _SC_THREAD_ROBUST_PRIO_PROTECT
    };
    enum  {
        _CS_PATH,
        _CS_V6_WIDTH_RESTRICTED_ENVS,
        _CS_GNU_LIBC_VERSION,
        _CS_GNU_LIBPTHREAD_VERSION,
        _CS_V5_WIDTH_RESTRICTED_ENVS,
        _CS_V7_WIDTH_RESTRICTED_ENVS,
        _CS_LFS_CFLAGS = (ImplicitCastExpr 0x9da6218 </usr/include/i386-linux-gnu/bits/confname.h:557:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9da0328 <col:22> 'int' 1000))
,
        _CS_LFS_LDFLAGS,
        _CS_LFS_LIBS,
        _CS_LFS_LINTFLAGS,
        _CS_LFS64_CFLAGS,
        _CS_LFS64_LDFLAGS,
        _CS_LFS64_LIBS,
        _CS_LFS64_LINTFLAGS,
        _CS_XBS5_ILP32_OFF32_CFLAGS = (ImplicitCastExpr 0x9da6228 </usr/include/i386-linux-gnu/bits/confname.h:574:35> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9da0538 <col:35> 'int' 1100))
,
        _CS_XBS5_ILP32_OFF32_LDFLAGS,
        _CS_XBS5_ILP32_OFF32_LIBS,
        _CS_XBS5_ILP32_OFF32_LINTFLAGS,
        _CS_XBS5_ILP32_OFFBIG_CFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LDFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LIBS,
        _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
        _CS_XBS5_LP64_OFF64_CFLAGS,
        _CS_XBS5_LP64_OFF64_LDFLAGS,
        _CS_XBS5_LP64_OFF64_LIBS,
        _CS_XBS5_LP64_OFF64_LINTFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_CFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LIBS,
        _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LIBS,
        _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_LP64_OFF64_CFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LIBS,
        _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LIBS,
        _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_LP64_OFF64_CFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LIBS,
        _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
        _CS_V6_ENV,
        _CS_V7_ENV
    };
    extern long pathconf(const char *__path, int __name) throw();
    extern long fpathconf(int __fd, int __name) throw();
    extern long sysconf(int __name) throw();
    extern size_t confstr(int __name, char *__buf, size_t __len) throw();
    extern __pid_t getpid() throw();
    extern __pid_t getppid() throw();
    extern __pid_t getpgrp() throw();
    extern __pid_t __getpgid(__pid_t __pid) throw();
    extern __pid_t getpgid(__pid_t __pid) throw();
    extern int setpgid(__pid_t __pid, __pid_t __pgid) throw();
    extern int setpgrp() throw();
    extern __pid_t setsid() throw();
    extern __pid_t getsid(__pid_t __pid) throw();
    extern __uid_t getuid() throw();
    extern __uid_t geteuid() throw();
    extern __gid_t getgid() throw();
    extern __gid_t getegid() throw();
    extern int getgroups(int __size, __gid_t __list[]) throw();
    extern int group_member(__gid_t __gid) throw();
    extern int setuid(__uid_t __uid) throw();
    extern int setreuid(__uid_t __ruid, __uid_t __euid) throw();
    extern int seteuid(__uid_t __uid) throw();
    extern int setgid(__gid_t __gid) throw();
    extern int setregid(__gid_t __rgid, __gid_t __egid) throw();
    extern int setegid(__gid_t __gid) throw();
    extern int getresuid(__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid) throw();
    extern int getresgid(__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid) throw();
    extern int setresuid(__uid_t __ruid, __uid_t __euid, __uid_t __suid) throw();
    extern int setresgid(__gid_t __rgid, __gid_t __egid, __gid_t __sgid) throw();
    extern __pid_t fork() throw();
    extern __pid_t vfork() throw() __attribute((returns_twice));
    extern char *ttyname(int __fd) throw();
    extern int ttyname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int isatty(int __fd) throw();
    extern int ttyslot() throw();
    extern int link(const char *__from, const char *__to) throw();
    extern int linkat(int __fromfd, const char *__from, int __tofd, const char *__to, int __flags) throw();
    extern int symlink(const char *__from, const char *__to) throw();
    extern ssize_t readlink(const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int symlinkat(const char *__from, int __tofd, const char *__to) throw();
    extern ssize_t readlinkat(int __fd, const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int unlink(const char *__name) throw();
    extern int unlinkat(int __fd, const char *__name, int __flag) throw();
    extern int rmdir(const char *__path) throw();
    extern __pid_t tcgetpgrp(int __fd) throw();
    extern int tcsetpgrp(int __fd, __pid_t __pgrp_id) throw();
    extern char *getlogin();
    extern int getlogin_r(char *__name, size_t __name_len);
    extern int setlogin(const char *__name) throw();
    extern "C" {
        extern char *optarg;
        extern int optind;
        extern int opterr;
        extern int optopt;
        extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    }
    extern int gethostname(char *__name, size_t __len) throw();
    extern int sethostname(const char *__name, size_t __len) throw();
    extern int sethostid(long __id) throw();
    extern int getdomainname(char *__name, size_t __len) throw();
    extern int setdomainname(const char *__name, size_t __len) throw();
    extern int vhangup() throw();
    extern int revoke(const char *__file) throw();
    extern int profil(unsigned short *__sample_buffer, size_t __size, size_t __offset, unsigned int __scale) throw();
    extern int acct(const char *__name) throw();
    extern char *getusershell() throw();
    extern void endusershell() throw();
    extern void setusershell() throw();
    extern int daemon(int __nochdir, int __noclose) throw();
    extern int chroot(const char *__path) throw();
    extern char *getpass(const char *__prompt);
    extern int fsync(int __fd);
    extern int syncfs(int __fd) throw();
    extern long gethostid();
    extern void sync() throw();
    extern int getpagesize() throw();
    extern int getdtablesize() throw();
    extern int truncate(const char *__file, __off_t __length) throw();
    extern int truncate64(const char *__file, __off64_t __length) throw();
    extern int ftruncate(int __fd, __off_t __length) throw();
    extern int ftruncate64(int __fd, __off64_t __length) throw();
    extern int brk(void *__addr) throw();
    extern void *sbrk(intptr_t __delta) throw();
    extern long syscall(long __sysno, ...) throw();
    extern int lockf(int __fd, int __cmd, __off_t __len);
    extern int lockf64(int __fd, int __cmd, __off64_t __len);
    extern int fdatasync(int __fildes);
    extern char *crypt(const char *__key, const char *__salt) throw();
    extern void encrypt(char *__libc_block, int __edflag) throw();
    extern void swab(const void *restrict __from, void *restrict __to, ssize_t __n) throw();
    extern char *ctermid(char *__s) throw();
}
extern "C" {
    typedef __u_char u_char;
    typedef __u_short u_short;
    typedef __u_int u_int;
    typedef __u_long u_long;
    typedef __quad_t quad_t;
    typedef __u_quad_t u_quad_t;
    typedef __fsid_t fsid_t;
    typedef __loff_t loff_t;
    typedef __ino_t ino_t;
    typedef __ino64_t ino64_t;
    typedef __dev_t dev_t;
    typedef __mode_t mode_t;
    typedef __nlink_t nlink_t;
    typedef __id_t id_t;
    typedef __daddr_t daddr_t;
    typedef __caddr_t caddr_t;
    typedef __key_t key_t;
    typedef __clock_t clock_t;
    typedef __time_t time_t;
    typedef __clockid_t clockid_t;
    typedef __timer_t timer_t;
    typedef __suseconds_t suseconds_t;
    typedef unsigned long ulong;
    typedef unsigned short ushort;
    typedef unsigned int uint;
    typedef signed char int8_t;
    typedef short int16_t;
    typedef int int32_t;
    typedef long long int64_t;
    typedef unsigned char u_int8_t;
    typedef unsigned short u_int16_t;
    typedef unsigned int u_int32_t;
    typedef unsigned long long u_int64_t;
    typedef int register_t;
    typedef int __sig_atomic_t;
    struct {
        unsigned long __val[32];
    };
    typedef struct __sigset_t __sigset_t;
    typedef __sigset_t sigset_t;
    struct timespec {
        struct timespec;
        __time_t tv_sec;
        long tv_nsec;
    };
    struct timeval {
        struct timeval;
        __time_t tv_sec;
        __suseconds_t tv_usec;
    };
    typedef long __fd_mask;
    struct {
        __fd_mask fds_bits[32];
    };
    typedef struct fd_set fd_set;
    typedef __fd_mask fd_mask;
    extern "C" {
        extern int select(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, struct timeval *restrict __timeout);
        extern int pselect(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, const struct timespec *restrict __timeout, const __sigset_t *restrict __sigmask);
    }
    extern "C" {
        extern unsigned int gnu_dev_major(unsigned long long __dev) throw();
        extern unsigned int gnu_dev_minor(unsigned long long __dev) throw();
        extern unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor) throw();
    }
    typedef __blksize_t blksize_t;
    typedef __blkcnt_t blkcnt_t;
    typedef __fsblkcnt_t fsblkcnt_t;
    typedef __fsfilcnt_t fsfilcnt_t;
    typedef __blkcnt64_t blkcnt64_t;
    typedef __fsblkcnt64_t fsblkcnt64_t;
    typedef __fsfilcnt64_t fsfilcnt64_t;
    typedef unsigned long pthread_t;
    union {
        char __size[36];
        long __align;
    };
    typedef union pthread_attr_t pthread_attr_t;
    struct __pthread_internal_slist {
        struct __pthread_internal_slist;
        struct __pthread_internal_slist *__next;
    };
    typedef struct __pthread_internal_slist __pthread_slist_t;
    union {
        struct __pthread_mutex_s {
            struct __pthread_mutex_s;
            int __lock;
            unsigned int __count;
            int __owner;
            int __kind;
            unsigned int __nusers;
            union {
                int __spins;
                __pthread_slist_t __list;
            } ;
            ;
            ;
        };
        struct __pthread_mutex_s __data;
        char __size[24];
        long __align;
    };
    typedef union pthread_mutex_t pthread_mutex_t;
    union {
        char __size[4];
        long __align;
    };
    typedef union pthread_mutexattr_t pthread_mutexattr_t;
    union {
        struct {
            int __lock;
            unsigned int __futex;
            unsigned long long __total_seq;
            unsigned long long __wakeup_seq;
            unsigned long long __woken_seq;
            void *__mutex;
            unsigned int __nwaiters;
            unsigned int __broadcast_seq;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> __data;
        char __size[48];
        long long __align;
    };
    typedef union pthread_cond_t pthread_cond_t;
    union {
        char __size[4];
        long __align;
    };
    typedef union pthread_condattr_t pthread_condattr_t;
    typedef unsigned int pthread_key_t;
    typedef int pthread_once_t;
    union {
        struct {
            int __lock;
            unsigned int __nr_readers;
            unsigned int __readers_wakeup;
            unsigned int __writer_wakeup;
            unsigned int __nr_readers_queued;
            unsigned int __nr_writers_queued;
            unsigned char __flags;
            unsigned char __shared;
            unsigned char __pad1;
            unsigned char __pad2;
            int __writer;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:121:3> __data;
        char __size[32];
        long __align;
    };
    typedef union pthread_rwlock_t pthread_rwlock_t;
    union {
        char __size[8];
        long __align;
    };
    typedef union pthread_rwlockattr_t pthread_rwlockattr_t;
    typedef volatile int pthread_spinlock_t;
    union {
        char __size[20];
        long __align;
    };
    typedef union pthread_barrier_t pthread_barrier_t;
    union {
        char __size[4];
        int __align;
    };
    typedef union pthread_barrierattr_t pthread_barrierattr_t;
}
extern "C" {
    struct stat {
        struct stat;
        __dev_t st_dev;
        unsigned short __pad1;
        __ino_t st_ino;
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned short __pad2;
        __off_t st_size;
        __blksize_t st_blksize;
        __blkcnt_t st_blocks;
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
        unsigned long __unused4;
        unsigned long __unused5;
    };
    struct stat64 {
        struct stat64;
        __dev_t st_dev;
        unsigned int __pad1;
        __ino_t __st_ino;
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned int __pad2;
        __off64_t st_size;
        __blksize_t st_blksize;
        __blkcnt64_t st_blocks;
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
        __ino64_t st_ino;
    };
    extern int stat(const char *restrict __file, struct stat *restrict __buf) throw();
    extern int fstat(int __fd, struct stat *__buf) throw();
    extern int stat64(const char *restrict __file, struct stat64 *restrict __buf) throw();
    extern int fstat64(int __fd, struct stat64 *__buf) throw();
    extern int fstatat(int __fd, const char *restrict __file, struct stat *restrict __buf, int __flag) throw();
    extern int fstatat64(int __fd, const char *restrict __file, struct stat64 *restrict __buf, int __flag) throw();
    extern int lstat(const char *restrict __file, struct stat *restrict __buf) throw();
    extern int lstat64(const char *restrict __file, struct stat64 *restrict __buf) throw();
    extern int chmod(const char *__file, __mode_t __mode) throw();
    extern int lchmod(const char *__file, __mode_t __mode) throw();
    extern int fchmod(int __fd, __mode_t __mode) throw();
    extern int fchmodat(int __fd, const char *__file, __mode_t __mode, int __flag) throw();
    extern __mode_t umask(__mode_t __mask) throw();
    extern __mode_t getumask() throw();
    extern int mkdir(const char *__path, __mode_t __mode) throw();
    extern int mkdirat(int __fd, const char *__path, __mode_t __mode) throw();
    extern int mknod(const char *__path, __mode_t __mode, __dev_t __dev) throw();
    extern int mknodat(int __fd, const char *__path, __mode_t __mode, __dev_t __dev) throw();
    extern int mkfifo(const char *__path, __mode_t __mode) throw();
    extern int mkfifoat(int __fd, const char *__path, __mode_t __mode) throw();
    extern int utimensat(int __fd, const char *__path, const struct timespec __times[2], int __flags) throw();
    extern int futimens(int __fd, const struct timespec __times[2]) throw();
    extern int __fxstat(int __ver, int __fildes, struct stat *__stat_buf) throw();
    extern int __xstat(int __ver, const char *__filename, struct stat *__stat_buf) throw();
    extern int __lxstat(int __ver, const char *__filename, struct stat *__stat_buf) throw();
    extern int __fxstatat(int __ver, int __fildes, const char *__filename, struct stat *__stat_buf, int __flag) throw();
    extern int __fxstat64(int __ver, int __fildes, struct stat64 *__stat_buf) throw();
    extern int __xstat64(int __ver, const char *__filename, struct stat64 *__stat_buf) throw();
    extern int __lxstat64(int __ver, const char *__filename, struct stat64 *__stat_buf) throw();
    extern int __fxstatat64(int __ver, int __fildes, const char *__filename, struct stat64 *__stat_buf, int __flag) throw();
    extern int __xmknod(int __ver, const char *__path, __mode_t __mode, __dev_t *__dev) throw();
    extern int __xmknodat(int __ver, int __fd, const char *__path, __mode_t __mode, __dev_t *__dev) throw();
}
extern "C" {
    struct dirent {
        struct dirent;
        __ino_t d_ino;
        __off_t d_off;
        unsigned short d_reclen;
        unsigned char d_type;
        char d_name[256];
    };
    struct dirent64 {
        struct dirent64;
        __ino64_t d_ino;
        __off64_t d_off;
        unsigned short d_reclen;
        unsigned char d_type;
        char d_name[256];
    };
    enum  {
        DT_UNKNOWN = (ImplicitCastExpr 0x9de0e78 </usr/include/dirent.h:101:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9de0ba0 <col:18> 'int' 0))
,
        DT_FIFO = (ImplicitCastExpr 0x9de0e88 </usr/include/dirent.h:103:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9de0bf8 <col:15> 'int' 1))
,
        DT_CHR = (ImplicitCastExpr 0x9de0e98 </usr/include/dirent.h:105:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9de0c48 <col:14> 'int' 2))
,
        DT_DIR = (ImplicitCastExpr 0x9de0ea8 </usr/include/dirent.h:107:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9de0c98 <col:14> 'int' 4))
,
        DT_BLK = (ImplicitCastExpr 0x9de0eb8 </usr/include/dirent.h:109:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9de0ce8 <col:14> 'int' 6))
,
        DT_REG = (ImplicitCastExpr 0x9de0ec8 </usr/include/dirent.h:111:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9de0d38 <col:14> 'int' 8))
,
        DT_LNK = (ImplicitCastExpr 0x9de0ed8 </usr/include/dirent.h:113:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9de0d88 <col:14> 'int' 10))
,
        DT_SOCK = (ImplicitCastExpr 0x9de0ee8 </usr/include/dirent.h:115:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9de0dd8 <col:15> 'int' 12))
,
        DT_WHT = (ImplicitCastExpr 0x9de0ef8 </usr/include/dirent.h:117:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9de0e28 <col:14> 'int' 14))

    };
    struct __dirstream;
    typedef struct __dirstream DIR;
    extern DIR *opendir(const char *__name);
    extern DIR *fdopendir(int __fd);
    extern int closedir(DIR *__dirp);
    extern struct dirent *readdir(DIR *__dirp);
    extern struct dirent64 *readdir64(DIR *__dirp);
    extern int readdir_r(DIR *restrict __dirp, struct dirent *restrict __entry, struct dirent **restrict __result);
    extern int readdir64_r(DIR *restrict __dirp, struct dirent64 *restrict __entry, struct dirent64 **restrict __result);
    extern void rewinddir(DIR *__dirp) throw();
    extern void seekdir(DIR *__dirp, long __pos) throw();
    extern long telldir(DIR *__dirp) throw();
    extern int dirfd(DIR *__dirp) throw();
    extern int scandir(const char *restrict __dir, struct dirent ***restrict __namelist, int (*__selector)(const struct dirent *), int (*__cmp)(const struct dirent **, const struct dirent **));
    extern int scandir64(const char *restrict __dir, struct dirent64 ***restrict __namelist, int (*__selector)(const struct dirent64 *), int (*__cmp)(const struct dirent64 **, const struct dirent64 **));
    extern int scandirat(int __dfd, const char *restrict __dir, struct dirent ***restrict __namelist, int (*__selector)(const struct dirent *), int (*__cmp)(const struct dirent **, const struct dirent **));
    extern int scandirat64(int __dfd, const char *restrict __dir, struct dirent64 ***restrict __namelist, int (*__selector)(const struct dirent64 *), int (*__cmp)(const struct dirent64 **, const struct dirent64 **));
    extern int alphasort(const struct dirent **__e1, const struct dirent **__e2) throw();
    extern int alphasort64(const struct dirent64 **__e1, const struct dirent64 **__e2) throw();
    extern __ssize_t getdirentries(int __fd, char *restrict __buf, size_t __nbytes, __off_t *restrict __basep) throw();
    extern __ssize_t getdirentries64(int __fd, char *restrict __buf, size_t __nbytes, __off64_t *restrict __basep) throw();
    extern int versionsort(const struct dirent **__e1, const struct dirent **__e2) throw();
    extern int versionsort64(const struct dirent64 **__e1, const struct dirent64 **__e2) throw();
}
extern "C" {
    union wait {
        union wait;
        int w_status;
        struct {
            unsigned int __w_termsig : (IntegerLiteral 0x9df11a0 </usr/include/i386-linux-gnu/bits/waitstatus.h:73:27> 'int' 7)
;
            unsigned int __w_coredump : (IntegerLiteral 0x9df1200 </usr/include/i386-linux-gnu/bits/waitstatus.h:74:28> 'int' 1)
;
            unsigned int __w_retcode : (IntegerLiteral 0x9df1260 </usr/include/i386-linux-gnu/bits/waitstatus.h:75:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9df12c0 </usr/include/i386-linux-gnu/bits/waitstatus.h:76:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:70:5> __wait_terminated;
        struct {
            unsigned int __w_stopval : (IntegerLiteral 0x9df1460 </usr/include/i386-linux-gnu/bits/waitstatus.h:88:27> 'int' 8)
;
            unsigned int __w_stopsig : (IntegerLiteral 0x9df14c0 </usr/include/i386-linux-gnu/bits/waitstatus.h:89:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x9df1520 </usr/include/i386-linux-gnu/bits/waitstatus.h:90:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:85:5> __wait_stopped;
    };
    struct {
        int quot;
        int rem;
    };
    typedef struct div_t div_t;
    struct {
        long quot;
        long rem;
    };
    typedef struct ldiv_t ldiv_t;
    struct {
        long long quot;
        long long rem;
    };
    typedef struct lldiv_t lldiv_t;
    extern size_t __ctype_get_mb_cur_max() throw();
    extern double atof(const char *__nptr) throw();
    extern int atoi(const char *__nptr) throw();
    extern long atol(const char *__nptr) throw();
    extern long long atoll(const char *__nptr) throw();
    extern double strtod(const char *restrict __nptr, char **restrict __endptr) throw();
    extern float strtof(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long double strtold(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long strtol(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long strtoul(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtouq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoll(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtoull(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long strtol_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long strtoul_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long strtoll_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long strtoull_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double strtod_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern float strtof_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern long double strtold_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern char *l64a(long __n) throw();
    extern long a64l(const char *__s) throw();
    extern long random() throw();
    extern void srandom(unsigned int __seed) throw();
    extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen) throw();
    extern char *setstate(char *__statebuf) throw();
    struct random_data {
        struct random_data;
        int32_t *fptr;
        int32_t *rptr;
        int32_t *state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int32_t *end_ptr;
    };
    extern int random_r(struct random_data *restrict __buf, int32_t *restrict __result) throw();
    extern int srandom_r(unsigned int __seed, struct random_data *__buf) throw();
    extern int initstate_r(unsigned int __seed, char *restrict __statebuf, size_t __statelen, struct random_data *restrict __buf) throw();
    extern int setstate_r(char *restrict __statebuf, struct random_data *restrict __buf) throw();
    extern int rand() throw();
    extern void srand(unsigned int __seed) throw();
    extern int rand_r(unsigned int *__seed) throw();
    extern double drand48() throw();
    extern double erand48(unsigned short __xsubi[3]) throw();
    extern long lrand48() throw();
    extern long nrand48(unsigned short __xsubi[3]) throw();
    extern long mrand48() throw();
    extern long jrand48(unsigned short __xsubi[3]) throw();
    extern void srand48(long __seedval) throw();
    extern unsigned short *seed48(unsigned short __seed16v[3]) throw();
    extern void lcong48(unsigned short __param[7]) throw();
    struct drand48_data {
        struct drand48_data;
        unsigned short __x[3];
        unsigned short __old_x[3];
        unsigned short __c;
        unsigned short __init;
        unsigned long long __a;
    };
    extern int drand48_r(struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int lrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int mrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int srand48_r(long __seedval, struct drand48_data *__buffer) throw();
    extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer) throw();
    extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer) throw();
    extern void *malloc(size_t __size) throw();
    extern void *calloc(size_t __nmemb, size_t __size) throw();
    extern void *realloc(void *__ptr, size_t __size) throw();
    extern void free(void *__ptr) throw();
    extern void cfree(void *__ptr) throw();
    extern "C" {
        extern void *alloca(size_t __size) throw();
    }
    extern void *valloc(size_t __size) throw();
    extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size) throw();
    extern void abort() throw();
    extern int atexit(void (*__func)()) throw();
    extern "C++" extern int at_quick_exit(void (*__func)()) throw()
    extern int on_exit(void (*__func)(int, void *), void *__arg) throw();
    extern void exit(int __status) throw();
    extern void quick_exit(int __status) throw();
    extern void _Exit(int __status) throw();
    extern char *getenv(const char *__name) throw();
    extern char *__secure_getenv(const char *__name) throw();
    extern int putenv(char *__string) throw();
    extern int setenv(const char *__name, const char *__value, int __replace) throw();
    extern int unsetenv(const char *__name) throw();
    extern int clearenv() throw();
    extern char *mktemp(char *__template) throw();
    extern int mkstemp(char *__template);
    extern int mkstemp64(char *__template);
    extern int mkstemps(char *__template, int __suffixlen);
    extern int mkstemps64(char *__template, int __suffixlen);
    extern char *mkdtemp(char *__template) throw();
    extern int mkostemp(char *__template, int __flags);
    extern int mkostemp64(char *__template, int __flags);
    extern int mkostemps(char *__template, int __suffixlen, int __flags);
    extern int mkostemps64(char *__template, int __suffixlen, int __flags);
    extern int system(const char *__command);
    extern char *canonicalize_file_name(const char *__name) throw();
    extern char *realpath(const char *restrict __name, char *restrict __resolved) throw();
    typedef int (*__compar_fn_t)(const void *, const void *);
    typedef __compar_fn_t comparison_fn_t;
    typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
    extern void *bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort_r(void *__base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void *__arg);
    extern int abs(int __x) throw();
    extern long labs(long __x) throw();
    extern long long llabs(long long __x) throw();
    extern div_t div(int __numer, int __denom) throw();
    extern ldiv_t ldiv(long __numer, long __denom) throw();
    extern lldiv_t lldiv(long long __numer, long long __denom) throw();
    extern char *ecvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *fcvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *gcvt(double __value, int __ndigit, char *__buf) throw();
    extern char *qecvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qfcvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qgcvt(long double __value, int __ndigit, char *__buf) throw();
    extern int ecvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int fcvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qecvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qfcvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int mblen(const char *__s, size_t __n) throw();
    extern int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n) throw();
    extern int wctomb(char *__s, wchar_t __wchar) throw();
    extern size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n) throw();
    extern size_t wcstombs(char *restrict __s, const wchar_t *restrict __pwcs, size_t __n) throw();
    extern int rpmatch(const char *__response) throw();
    extern int getsubopt(char **restrict __optionp, char *const *restrict __tokens, char **restrict __valuep) throw();
    extern void setkey(const char *__key) throw();
    extern int posix_openpt(int __oflag);
    extern int grantpt(int __fd) throw();
    extern int unlockpt(int __fd) throw();
    extern char *ptsname(int __fd) throw();
    extern int ptsname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int getpt();
    extern int getloadavg(double __loadavg[], int __nelem) throw();
}
extern "C" {
    extern wchar_t *woptarg;
    extern int woptind;
    extern int wopterr;
    extern int woptopt;
    struct woption {
        struct woption;
        const wchar_t *name;
        int has_arg;
        int *flag;
        int val;
    };
    extern int wgetopt(int argc, wchar_t *const *argv, const wchar_t *shortopts);
    extern int wgetopt_long(int argc, wchar_t *const *argv, const wchar_t *shortopts, const struct woption *longopts, int *longind);
    extern int wgetopt_long_only(int argc, wchar_t *const *argv, const wchar_t *shortopts, const struct woption *longopts, int *longind);
    extern int _wgetopt_internal(int argc, wchar_t *const *argv, const wchar_t *shortopts, const struct woption *longopts, int *longind, int long_only);
}
namespace std {
    typedef unsigned int size_t;
    typedef int ptrdiff_t;
}
namespace std {
    template <typename _Alloc = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Alloc = std::basic_string<wchar_t>> class allocator
template <typename _Alloc = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Alloc = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9edd1f8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa349c70 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa3499c4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9ee4cd0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9edd310 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9edd330 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = std::basic_string<char>> class allocator
template <typename _Alloc> class allocator;
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec8118 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9ec8100 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9ec80c0 <col:9> 'char_type':'char' lvalue ParmVar 0x9ec5650 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9ec80f0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9ec80d8 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec56e0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec81c8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9ec81b8 <col:9, col:24>
    (BinaryOperator 0x9ec81a0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ec8170 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8160 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec812c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec6e70 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9ec8190 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8180 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec8144 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9ec6ec0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec8278 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9ec8268 <col:9, col:23>
    (BinaryOperator 0x9ec8250 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9ec8220 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8210 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec81dc <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec6fe0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9ec8240 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8230 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec81f4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9ec7030 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec83a0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9ec8390 <col:9, col:48>
    (CallExpr 0x9ec8318 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9ec8308 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec828c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9ea4040 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9ec8350 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9ec8340 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ec82a4 <col:33> 'const char_type *' lvalue ParmVar 0x9ec7130 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9ec8370 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9ec8360 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ec82bc <col:39> 'const char_type *' lvalue ParmVar 0x9ec7180 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9ec8380 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ec82d4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9ec71c0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9ec8538 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9ec8528 <col:9, col:36>
    (CallExpr 0x9ec84f8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9ec84e8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec8494 <col:16> 'unsigned int (const char *)' lvalue Function 0x9ec83c0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9ec8518 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ec84ac <col:33> 'const char_type *' lvalue ParmVar 0x9ec7300 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9ec8828 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9ec8818 <col:9, col:77>
    (CXXStaticCastExpr 0x9ec8800 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9ec8778 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9ec8768 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec86e4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9ec8580 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9ec87b0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec87a0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec86fc <col:63> 'const char_type *' lvalue ParmVar 0x9ec7420 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9ec87d0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ec87c0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9ec8714 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9ec74b0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9ec87e0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec872c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7460 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec8978 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9ec8968 <col:9, col:74>
    (CXXStaticCastExpr 0x9ec8950 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec88c8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9ec88b8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec883c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9e945b0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9ec8900 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec88f0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8854 <col:58> 'char_type *' lvalue ParmVar 0x9ec7610 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9ec8920 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec8910 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec886c <col:64> 'const char_type *' lvalue ParmVar 0x9ec7660 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9ec8930 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8884 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9ec76a0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec8c18 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9ec8c08 <col:9, col:73>
    (CXXStaticCastExpr 0x9ec8bf0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec8b68 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9ec8b58 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec8af4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9ec8ba0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec8b90 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8b0c <col:57> 'char_type *' lvalue ParmVar 0x9ec77e0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9ec8bc0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec8bb0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8b24 <col:63> 'const char_type *' lvalue ParmVar 0x9ec7830 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9ec8bd0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8b3c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7870 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9ec8d68 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9ec8d58 <col:9, col:71>
    (CXXStaticCastExpr 0x9ec8d40 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec8cb8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9ec8ca8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec8c2c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9e9f540 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9ec8cf0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec8ce0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8c44 <col:57> 'char_type *' lvalue ParmVar 0x9ec7950 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9ec8d10 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ec8d00 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9ec8c5c <col:62> 'char_type':'char' lvalue ParmVar 0x9ec79d0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9ec8d20 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8c74 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7990 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9ecb548 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9ec8dd8 <col:9, col:42>
    (CXXStaticCastExpr 0x9ec8dc0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9ec8db0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9ec8da0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9ec8d7c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9ec7b60 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9ecb600 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9ecb5f0 <col:9, col:69>
    (CXXStaticCastExpr 0x9ecb5d8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9ecb5c8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9ecb5a8 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9ecb598 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9ecb588 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9ecb55c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9ec7c80 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ecb690 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9ecb680 <col:9, col:24>
    (BinaryOperator 0x9ecb668 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecb648 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb614 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9ec7da0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ecb658 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb62c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9ec7df0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ecb708 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9ecb6f8 <col:9, col:56>
    (CXXStaticCastExpr 0x9ecb6e0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9ecb6c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9ecb6a8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9ecb868 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9ecb858 <col:9, col:37>
    (ConditionalOperator 0x9ecb838 <col:16, col:37> 'int'
      (ParenExpr 0x9ecb7e0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9ecb7c8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9ecb7b8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ecb71c <col:17> 'const int_type':'const int' lvalue ParmVar 0x9ec7fa0 '__c' 'const int_type &'))
          (CallExpr 0x9ecb798 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9ecb788 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ecb734 <col:24> 'int_type (void)' lvalue CXXMethod 0x9ec7f30 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9ecb7f8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9ecb828 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb810 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9ec7fa0 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9eccfd8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9eccfc0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9eccf80 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9ecbc20 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9eccfb0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9eccf98 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbcb0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ecd068 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9ecd058 <col:9, col:24>
    (BinaryOperator 0x9ecd040 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecd020 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9eccfec <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbdd0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9ecd030 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd004 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbe20 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ecd0f8 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9ecd0e8 <col:9, col:23>
    (BinaryOperator 0x9ecd0d0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9ecd0b0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd07c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbf40 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9ecd0c0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd094 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbf90 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecd260 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9ecd250 <col:9, col:39>
    (CallExpr 0x9ecd1f8 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9ecd1e8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd18c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9d73e60 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9eb73c0 'wmemcmp')))
      (ImplicitCastExpr 0x9ecd220 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd144 <col:24> 'const char_type *' lvalue ParmVar 0x9ecc090 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9ecd230 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd15c <col:30> 'const char_type *' lvalue ParmVar 0x9ecc0e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecd240 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecd174 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc120 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9ecd368 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9ecd358 <col:9, col:26>
    (CallExpr 0x9ecd328 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9ecd318 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd2c4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9d737a0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9eb6e10 'wcslen')))
      (ImplicitCastExpr 0x9ecd348 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd2ac <col:23> 'const char_type *' lvalue ParmVar 0x9ecc230 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9ecd4a8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9ecd498 <col:9, col:37>
    (ImplicitCastExpr 0x9ecd488 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9ecd430 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9ecd420 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ecd400 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9d73cb0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9eb7820 'wmemchr')))
        (ImplicitCastExpr 0x9ecd458 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ecd3b8 <col:24> 'const char_type *' lvalue ParmVar 0x9ecc330 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9ecd468 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9ecd3d0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecc3c0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9ecd478 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ecd3e8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc370 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecda30 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9ecda20 <col:9, col:40>
    (CallExpr 0x9ecd9c8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9ecd9b8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd960 <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9d741b0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9eb74a0 'wmemmove')))
      (ImplicitCastExpr 0x9ecd9f0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd4f4 <col:25> 'char_type *' lvalue ParmVar 0x9ecc520 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9ecda00 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd50c <col:31> 'const char_type *' lvalue ParmVar 0x9ecc570 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecda10 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecd524 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc5b0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecdb70 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9ecdb60 <col:9, col:39>
    (CallExpr 0x9ecdb08 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9ecdaf8 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecdac4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9d74010 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9eb7430 'wmemcpy')))
      (ImplicitCastExpr 0x9ecdb30 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecda7c <col:24> 'char_type *' lvalue ParmVar 0x9ecc6c0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9ecdb40 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecda94 <col:30> 'const char_type *' lvalue ParmVar 0x9ecc710 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecdb50 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdaac <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc750 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9ecdcd0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9ecdcc0 <col:9, col:37>
    (CallExpr 0x9ecdc68 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9ecdc58 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecdc04 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9d74390 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9eb7510 'wmemset')))
      (ImplicitCastExpr 0x9ecdc90 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecdbbc <col:24> 'char_type *' lvalue ParmVar 0x9ecc830 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9ecdca0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecdbd4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9ecc8b0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9ecdcb0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdbec <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc870 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9ecdd50 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9ecdd40 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9ecdd28 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9ecdd18 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9ecdd08 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ecdcf0 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecca20 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9ecddd0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9ecddc0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9ecdda8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9ecdd98 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9ecdd88 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9ecdd70 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9eccb40 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ecde60 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9ecde50 <col:9, col:24>
    (BinaryOperator 0x9ecde38 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecde18 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdde4 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9eccc60 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ecde28 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecddfc <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecccb0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ecded8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9ecdec8 <col:9, col:42>
    (CXXStaticCastExpr 0x9ecdeb0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9ecde90 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9ecde78 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9ece0b0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9ece0a0 <col:9, col:46>
    (ConditionalOperator 0x9ece080 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9ecdff8 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9ecdfe8 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ecdeec <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9eccd50 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9ecdf04 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecce60 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9ece020 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9ecdf88 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9ecdf78 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ecdf1c <col:33> 'int_type (void)' lvalue CXXMethod 0x9eccdf0 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9ece070 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ece030 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9ece060 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ece048 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecce60 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa3497d8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa349638 <line:180:4, col:62>
    0xa349460 "void *__p =
      (CXXReinterpretCastExpr 0xa349620 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa349608 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa3495b0 <col:41> 'size_type []' lvalue Var 0xa059250 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa3497c8 <line:181:4, col:39>
    (UnaryOperator 0xa3497b0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa349798 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa349788 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa34976c <col:36> 'void *' lvalue Var 0xa349460 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa349448 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa349428 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa349150 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa349108 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa3490f8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fbd044 <col:8> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa349130 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa3490e0 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa348f40 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa3490c8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa3490a8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa349098 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa349060 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa0593e0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa349140 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9fbd130 <col:50> '_Bool' false))))
    (CompoundStmt 0xa349410 <line:236:6, line:245:6>
      (NullStmt 0x9fbd168 <line:238:67>)
      (IfStmt 0xa3493f0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa349248 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa349220 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa349210 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fbd198 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9f955b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa3491f8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa3491d8 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa058a20
                (ImplicitCastExpr 0xa3491c8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa3491a0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9fbd230 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9fbd218 <col:10> 'int' 1)))
          (IntegerLiteral 0x9fbd270 <col:16> 'int' 0))
        (CompoundStmt 0xa3493d8 <line:241:3, line:244:3>
          (NullStmt 0x9fbd2f0 <line:242:63>)
          (CXXMemberCallExpr 0xa3493b8 <line:243:5, col:19> 'void'
            (MemberExpr 0xa349380 <col:5> '<bound member function type>' ->_M_destroy 0xa05a090
              (CXXThisExpr 0xa349260 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa3493a0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa059f70 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa3486a0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa0363b8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa0363a8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9f9ad40 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9f9ad28 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa348ee0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa348ed0 <col:9, col:29>
    (ImplicitCastExpr 0xa348ec0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa348ea0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa036940
        (MemberExpr 0xa348e80 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa036970
          (CXXThisExpr 0xa348d60 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa348d48 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa348d38 <col:9, col:59>
    (UnaryOperator 0xa348d20 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa348d08 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa348cf0 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa348cd8 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa348cc0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa348ca0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa348c80 <col:44> '<bound member function type>' ->_M_data 0xa0369f0
                  (CXXThisExpr 0xa348c70 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9fbd9b8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9fbd9a0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa3485f0 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa3485d0 <col:9, col:51> 'void'
    (CXXTemporary 0xa348550)
    (CXXMemberCallExpr 0xa348568 <col:9, col:51> 'void'
      (MemberExpr 0xa3484cc <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa059fc0
        (CXXMemberCallExpr 0xa3484a0 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa348480 <col:9> '<bound member function type>' ->_M_rep 0xa036ce0
            (ImplicitCastExpr 0xa3484c0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa348360 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa3485c0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa3485b0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa348558 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa348550)
            (CXXMemberCallExpr 0xa348520 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa348500 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa050810
                (ImplicitCastExpr 0xa348540 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa3484f0 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa34b120 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa34b110 <col:9, col:26>
    (ImplicitCastExpr 0xa34b100 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa34b0e0 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa0588a0
        (ImplicitCastExpr 0xa34b0d0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa34b0b0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa34b090 <col:16> '<bound member function type>' ->_M_rep 0xa036ce0
              (CXXThisExpr 0xa34af70 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa34af58 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa34af48 <col:9, col:32>
    (BinaryOperator 0xa34af30 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa34af00 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa34aee0 <col:16, col:22> '<bound member function type>' ->size 0xa03dc20
          (CXXThisExpr 0xa34aed0 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa34af20 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9fc4a58 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa34b7c0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa34b248 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa34b1f0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa34b1e0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa34b174 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa03f180 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa34b1c0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa34b1a0 <col:13, col:19> '<bound member function type>' ->size 0xa03dc20
          (CXXThisExpr 0xa34b190 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa34b218 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa34b208 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc4ec4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa34b238 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fc4eb0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9fc4e80 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa34b7b0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa34b7a0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa34b788 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa34b740 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa34b720 <col:9> '<bound member function type>' ->_M_data 0xa0369f0
            (CXXThisExpr 0xa34b710 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa34b778 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa34b75c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa03f180 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa34e610 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa34e600 <col:9, col:24>
    (ImplicitCastExpr 0xa34e5f0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa34e5d0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa34e5b0 <col:16> '<bound member function type>' ->_M_data 0xa0369f0
          (CXXThisExpr 0xa34e5a0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa3499b0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa3499a0 <col:9, col:16>
    (CXXConstructExpr 0xa349978 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa349968 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa349958 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa349910 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa036970
            (CXXThisExpr 0xa3497f0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa010e98 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa010e88 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9f9ad40 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9f9ad28 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa34a7d0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa34a7c0 <col:9, col:29>
    (ImplicitCastExpr 0xa34a7b0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa34a790 <col:17, col:29> 'char *' lvalue ._M_p 0xa011420
        (MemberExpr 0xa34a770 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa011450
          (CXXThisExpr 0xa34a650 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa34a638 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa34a628 <col:9, col:59>
    (UnaryOperator 0xa34a610 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa34a5f8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa34a5e0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa34a5c8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa34a5b0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa34a590 <col:44, col:52> 'char *'
                (MemberExpr 0xa34a570 <col:44> '<bound member function type>' ->_M_data 0xa0114d0
                  (CXXThisExpr 0xa34a560 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9fbd9b8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9fbd9a0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa349f88 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa349f78 <col:9, col:26>
    (ImplicitCastExpr 0xa349f68 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa349f48 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa031350
        (ImplicitCastExpr 0xa349f38 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa349f00 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa349ee0 <col:16> '<bound member function type>' ->_M_rep 0xa0117a0
              (CXXThisExpr 0xa349db8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa349da0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa349d90 <col:9, col:32>
    (BinaryOperator 0xa349d78 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa349d48 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa349d28 <col:16, col:22> '<bound member function type>' ->size 0xa018710
          (CXXThisExpr 0xa349d18 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa349d68 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9fc4a58 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa34ae70 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa34a8f8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa34a8a0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa34a890 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa34a824 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa019c70 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa34a870 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa34a850 <col:13, col:19> '<bound member function type>' ->size 0xa018710
          (CXXThisExpr 0xa34a840 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa34a8c8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa34a8b8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc4ec4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa34a8e8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fc4eb0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9fc4e80 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa34ae60 <line:859:2, col:22>
    (ImplicitCastExpr 0xa34ae50 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa34ae38 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa34adf0 <col:9, col:17> 'char *'
          (MemberExpr 0xa34add0 <col:9> '<bound member function type>' ->_M_data 0xa0114d0
            (CXXThisExpr 0xa34adc0 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa34ae28 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa34ae0c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa019c70 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string;
    struct char_traits;
    typedef basic_string<char> string;
    struct char_traits;
    typedef basic_string<wchar_t> wstring;
}
namespace std {
    void __throw_bad_exception();
    void __throw_bad_alloc();
    void __throw_bad_cast();
    void __throw_bad_typeid();
    void __throw_logic_error(const char *);
    void __throw_domain_error(const char *);
    void __throw_invalid_argument(const char *);
    void __throw_length_error(const char *);
    void __throw_out_of_range(const char *);
    void __throw_runtime_error(const char *);
    void __throw_range_error(const char *);
    void __throw_overflow_error(const char *);
    void __throw_underflow_error(const char *);
    void __throw_ios_failure(const char *);
    void __throw_system_error(int);
    void __throw_future_error(int);
    void __throw_bad_function_call();
}
namespace __gnu_cxx {
    template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator;
}
namespace std {
    struct __true_type {
        struct __true_type;
    };
    struct __false_type {
        struct __false_type;
    };
    template <bool = true> struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    }
template <bool> struct __truth_type {
        struct __truth_type;
        typedef std::__false_type __type;
    };
    struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    };
    template <class _Sp = std::__is_arithmetic<int>, class _Tp = std::__is_pointer<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa347318 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3472c8 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa347080 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa347070 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa347050 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>' EnumConstant 0xa346db0 '__value' 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>')))
    (CXXFunctionalCastExpr 0xa3472b0 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa3472a0 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa34727c <col:51, col:56> 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>' EnumConstant 0xa347200 '__value' 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp = std::__is_integer<int>, class _Tp = std::__is_floating<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa346de8 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa346d98 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa346b58 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa346b48 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa346b24 <col:29, col:34> 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>' EnumConstant 0x9e30fe0 '__value' 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>')))
    (CXXFunctionalCastExpr 0xa346d80 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa346d70 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa346d4c <col:51, col:56> 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>' EnumConstant 0xa346cd0 '__value' 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp, class _Tp> struct __traitor {
        struct __traitor;
        enum  {
            __value = (BinaryOperator 0x9e2bd30 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> '_Bool' '||'
  (CXXUnresolvedConstructExpr 0x9e2bc98 <col:24, col:41> '_Bool'
    (DependentScopeDeclRefExpr 0x9e2bc70 <col:29, col:34> '<dependent type>' lvalue))
  (CXXUnresolvedConstructExpr 0x9e2bd10 <col:46, col:63> '_Bool'
    (DependentScopeDeclRefExpr 0x9e2bce8 <col:51, col:56> '<dependent type>' lvalue)))

        };
        typedef typename __truth_type<__value>::__type __type;
    };
    template <typename , typename > struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9e2c260 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x9e2d200 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = void> struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x9e2d8a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2d850 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_void {
        struct __is_void;
        enum  {
            __value = (IntegerLiteral 0x9e2d550 </usr/include/c++/4.6/bits/cpp_type_traits.h:121:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x9e2d8a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2d850 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = float> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e45588 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2dbb0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e31018 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e30fc0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e45018 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2dbb0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2f6d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2f680 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2f0b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2f060 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2fcf8 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2fca0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e32a18 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e329c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2f3c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2f370 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2f9e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2f990 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e31c58 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e31c00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = bool> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2df08 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2deb0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e44aa8 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2dbb0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e30d08 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2ffb0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e31948 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e318f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e31638 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e315e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e31328 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e312d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (IntegerLiteral 0x9e2dbb0 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2df08 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2deb0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2f0b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2f060 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2f3c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2f370 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2f6d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2f680 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2f9e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2f990 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e2fcf8 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2fca0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e30d08 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e2ffb0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e31018 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e30fc0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e31328 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e312d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e31638 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e315e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e31948 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e318f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e31c58 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e31c00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x9e32a18 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e329c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = float> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9e33078 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e33020 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa346d08 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e32d20 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9e33388 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e33330 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9e33698 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e33640 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (IntegerLiteral 0x9e32d20 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9e33078 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e33020 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9e33388 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e33330 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x9e33698 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e33640 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0xa347238 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e34680 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9e34680 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x9e34aa0 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned long *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0xa345758 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e34df0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9e34df0 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x9e35370 </usr/include/c++/4.6/bits/cpp_type_traits.h:317:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_arithmetic : public __traitor<__is_integer<int>, __is_floating<int> > {
        struct __is_arithmetic;
    }
template <typename _Tp> struct __is_arithmetic : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> > {
        struct __is_arithmetic;
    };
    template <typename _Tp> struct __is_fundamental : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> > {
        struct __is_fundamental;
    };
    template <typename _Tp = int> struct __is_scalar : public __traitor<__is_arithmetic<int>, __is_pointer<int> > {
        struct __is_scalar;
    }
template <typename _Tp> struct __is_scalar : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> > {
        struct __is_scalar;
    };
    template <typename _Tp = char> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9e38658 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e38600 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9e38968 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e38910 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_char {
        struct __is_char;
        enum  {
            __value = (IntegerLiteral 0x9e38300 </usr/include/c++/4.6/bits/cpp_type_traits.h:351:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9e38658 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e38600 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x9e38968 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e38910 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9e3a548 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e3a4f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9e38fc8 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e38f70 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9e3a238 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e3a1e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (IntegerLiteral 0x9e38c70 </usr/include/c++/4.6/bits/cpp_type_traits.h:374:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9e38fc8 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e38f70 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9e3a238 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e3a1e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x9e3a548 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9e3a4f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (IntegerLiteral 0x9e3a850 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
}
namespace __gnu_cxx {
    template <bool = false, typename  = void> struct __enable_if {
        struct __enable_if;
    }
template <bool = true, typename  = void> struct __enable_if {
        struct __enable_if;
        typedef void __type;
    }
template <bool, typename > struct __enable_if {
        struct __enable_if;
    };
    struct __enable_if {
        struct __enable_if;
        typedef _Tp __type;
    };
    template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<short>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<short>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<short> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<unsigned long>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<unsigned long>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<unsigned long> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<char>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<char>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<char> __type;
    }
template <bool _Cond = true, typename _Iftrue = unsigned long, typename _Iffalse = unsigned long long> struct __conditional_type {
        struct __conditional_type;
        typedef unsigned long __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<int>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<int>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<int> __type;
    }
template <bool _Cond, typename _Iftrue, typename _Iffalse> struct __conditional_type {
        struct __conditional_type;
        typedef _Iftrue __type;
    };
    struct __conditional_type {
        struct __conditional_type;
        typedef _Iffalse __type;
    };
    template <typename _Tp = int> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    }
template <typename _Tp = char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = short> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    }
template <typename _Tp = signed char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = wchar_t> struct __add_unsigned
template <typename _Tp = bool> struct __add_unsigned
template <typename _Tp = long long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    }
template <typename _Tp = long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    }
template <typename _Tp> struct __add_unsigned {
        struct __add_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    };
    struct __add_unsigned;
    struct __add_unsigned;
    template <typename _Tp = unsigned char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = unsigned long long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    }
template <typename _Tp = wchar_t> struct __remove_unsigned
template <typename _Tp = bool> struct __remove_unsigned
template <typename _Tp = unsigned short> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    }
template <typename _Tp = unsigned long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    }
template <typename _Tp = unsigned int> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    }
template <typename _Tp> struct __remove_unsigned {
        struct __remove_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    };
    struct __remove_unsigned;
    struct __remove_unsigned;
    template <typename _Type> inline bool __is_null_pointer(_Type *__ptr) (CompoundStmt 0x9e432b8 </usr/include/c++/4.6/ext/type_traits.h:151:5, col:26>
  (ReturnStmt 0x9e432a8 <col:7, col:23>
    (BinaryOperator 0x9e43290 <col:14, col:23> '<dependent type>' '=='
      (DeclRefExpr 0x9e4325c <col:14> '_Type *' lvalue ParmVar 0x9e43130 '__ptr' '_Type *')
      (IntegerLiteral 0x9e43278 <col:23> 'int' 0))))

;
    template <typename _Type> inline bool __is_null_pointer(_Type) (CompoundStmt 0x9e43480 </usr/include/c++/4.6/ext/type_traits.h:156:5, col:21>
  (ReturnStmt 0x9e43470 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9e43460 <col:14> '_Bool' false)))

;
    template <typename _Tp = double, bool = false> struct __promote {
        struct __promote;
        typedef double __type;
    }
template <typename _Tp = long double, bool = false> struct __promote {
        struct __promote;
        typedef long double __type;
    }
template <typename _Tp = float, bool = false> struct __promote {
        struct __promote;
        typedef float __type;
    }
template <typename _Tp, bool = (DependentScopeDeclRefExpr 0x9e435a0 </usr/include/c++/4.6/ext/type_traits.h:160:33, col:57> '<dependent type>' lvalue)
> struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
    };
    struct __promote {
        struct __promote;
        typedef long double __type;
    };
    struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
        typedef float __type;
    };
    template <typename _Tp, typename _Up, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type> struct __promote_2 {
        struct __promote_2;
        typedef typeof (_Tp2() + _Up2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type> struct __promote_3 {
        struct __promote_3;
        typedef typeof (_Tp2() + _Up2() + _Vp2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Wp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type, typename _Wp2 = typename __promote<_Wp>::__type> struct __promote_4 {
        struct __promote_4;
        typedef typeof (_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };
}
namespace __gnu_cxx {
    template <typename _Value = int> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const int __min = (ParenExpr 0x9fc1508 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'int':'int'
  (ConditionalOperator 0x9fc14e8 <line:42:31, line:47:67> 'int':'int'
    (ParenExpr 0x9fc13a0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9fc1388 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9fc1370 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9e49ae8 <col:37, col:40> 'int'
            (UnaryOperator 0x9e49ad0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9e49ab8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9e49b20 <col:44> 'int' 0)))
    (BinaryOperator 0x9fc14b0 <line:47:28, line:44:54> 'int':'int' '<<'
      (CStyleCastExpr 0x9fc13c0 <line:47:28, col:33> 'int':'int' <NoOp>
        (IntegerLiteral 0x9e49b68 <col:33> 'int' 1))
      (ParenExpr 0x9fc1498 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x9fc1480 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x9fc1408 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9fc13e0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
            (ImplicitCastExpr 0x9fc13f8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9e49bc0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9fc1470 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x9fc1458 <col:31, col:45> '_Bool'
              (BinaryOperator 0x9fc1440 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x9fc1428 <col:32, col:40> 'int':'int' <NoOp>
                  (ParenExpr 0x9e49c30 <col:37, col:40> 'int'
                    (UnaryOperator 0x9e49c18 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9e49c00 <col:39> 'int' 1))))
                (IntegerLiteral 0x9e49c68 <col:44> 'int' 0)))))))
    (CStyleCastExpr 0x9fc14d0 <line:47:62, col:67> 'int':'int' <NoOp>
      (IntegerLiteral 0x9e49cf8 <col:67> 'int' 0))))
;
        static const int __max = (ParenExpr 0x9fc1818 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'int'
  (ConditionalOperator 0x9fc17f8 <line:42:31, line:51:71> 'int'
    (ParenExpr 0x9fc15b0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x9fc1598 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x9fc1580 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x9e49dd8 <col:37, col:40> 'int'
            (UnaryOperator 0x9e49dc0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9e49da8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9e49e10 <col:44> 'int' 0)))
    (ParenExpr 0x9fc17a8 <line:51:4, col:61> 'int'
      (BinaryOperator 0x9fc1790 <col:5, col:60> 'int' '+'
        (ParenExpr 0x9fc1778 <col:5, col:56> 'int'
          (BinaryOperator 0x9fc1760 <col:6, col:55> 'int' '<<'
            (ParenExpr 0x9fc1748 <col:6, col:50> 'int'
              (BinaryOperator 0x9fc1730 <col:7, col:49> 'int' '-'
                (ParenExpr 0x9fc1718 <col:7, col:45> 'int':'int'
                  (BinaryOperator 0x9fc1700 <col:8, col:44> 'int':'int' '<<'
                    (CStyleCastExpr 0x9fc15d0 <col:8, col:13> 'int':'int' <NoOp>
                      (IntegerLiteral 0x9e4c648 <col:13> 'int' 1))
                    (ParenExpr 0x9fc16e8 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x9fc16d0 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x9fc16a8 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x9fc1690 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x9fc1618 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9fc15f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
                              (ImplicitCastExpr 0x9fc1608 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9e4c6a0 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x9fc1680 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x9fc1668 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x9fc1650 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x9fc1638 <col:32, col:40> 'int':'int' <NoOp>
                                    (ParenExpr 0x9e4c710 <col:37, col:40> 'int'
                                      (UnaryOperator 0x9e4c6f8 <col:38, col:39> 'int' prefix '-'
                                        (IntegerLiteral 0x9e4c6e0 <col:39> 'int' 1))))
                                  (IntegerLiteral 0x9e4c748 <col:44> 'int' 0))))))
                        (ImplicitCastExpr 0x9fc16c0 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9e4c7c0 <col:43> 'int' 1))))))
                (IntegerLiteral 0x9e4c838 <col:49> 'int' 1)))
            (IntegerLiteral 0x9e4c880 <col:55> 'int' 1)))
        (IntegerLiteral 0x9e4c8c8 <col:60> 'int' 1)))
    (UnaryOperator 0x9fc17e0 <col:65, col:71> 'int':'int' prefix '~'
      (CStyleCastExpr 0x9fc17c8 <col:66, col:71> 'int':'int' <NoOp>
        (IntegerLiteral 0x9e4c910 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x9fc18b0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x9fc1898 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x9fc1880 <col:32, col:40> 'int':'int' <NoOp>
      (ParenExpr 0x9e4ca08 <col:37, col:40> 'int'
        (UnaryOperator 0x9e4c9f0 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x9e4c9d8 <col:39> 'int' 1))))
    (IntegerLiteral 0x9e4ca40 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9fc19f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9fc19d8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9fc19c0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9fc1948 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9fc1920 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
        (ImplicitCastExpr 0x9fc1938 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9e4caf8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9fc19b0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x9fc1998 <col:31, col:45> '_Bool'
          (BinaryOperator 0x9fc1980 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x9fc1968 <col:32, col:40> 'int':'int' <NoOp>
              (ParenExpr 0x9e4cb68 <col:37, col:40> 'int'
                (UnaryOperator 0x9e4cb50 <col:38, col:39> 'int' prefix '-'
                  (IntegerLiteral 0x9e4cb38 <col:39> 'int' 1))))
            (IntegerLiteral 0x9e4cba0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = char> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const char __min = (ImplicitCastExpr 0xa13ec20 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const char':'const char' <IntegralCast>
  (ParenExpr 0xa13ec08 <col:3, col:68> 'int'
    (ConditionalOperator 0xa13ebe8 <line:42:31, line:47:67> 'int'
      (ParenExpr 0xa13ea40 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa13ea28 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa13ea18 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa13ea00 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0xa13e9f0 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9e49ae8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9e49ad0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9e49ab8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9e49b20 <col:44> 'int' 0)))
      (BinaryOperator 0xa13eb90 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0xa13eb80 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0xa13ea70 <col:28, col:33> 'char':'char' <NoOp>
            (ImplicitCastExpr 0xa13ea60 <col:33> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9e49b68 <col:33> 'int' 1))))
        (ParenExpr 0xa13eb68 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0xa13eb50 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0xa13eab8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0xa13ea90 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
              (ImplicitCastExpr 0xa13eaa8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9e49bc0 <col:22> 'int' 8)))
            (ImplicitCastExpr 0xa13eb40 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0xa13eb28 <col:31, col:45> '_Bool'
                (BinaryOperator 0xa13eb10 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0xa13eb00 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0xa13eae8 <col:32, col:40> 'char':'char' <NoOp>
                      (ImplicitCastExpr 0xa13ead8 <col:37, col:40> 'char':'char' <IntegralCast>
                        (ParenExpr 0x9e49c30 <col:37, col:40> 'int'
                          (UnaryOperator 0x9e49c18 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9e49c00 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9e49c68 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0xa13ebd8 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0xa13ebc0 <col:62, col:67> 'char':'char' <NoOp>
          (ImplicitCastExpr 0xa13ebb0 <col:67> 'char':'char' <IntegralCast>
            (IntegerLiteral 0x9e49cf8 <col:67> 'int' 0)))))))
;
        static const char __max = (ImplicitCastExpr 0xa13efc0 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const char':'const char' <IntegralCast>
  (ParenExpr 0xa13efa8 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0xa13ef88 <line:42:31, line:51:71> 'int'
      (ParenExpr 0xa13ece0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa13ecc8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa13ecb8 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa13eca0 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0xa13ec90 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x9e49dd8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9e49dc0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9e49da8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9e49e10 <col:44> 'int' 0)))
      (ParenExpr 0xa13ef18 <line:51:4, col:61> 'int'
        (BinaryOperator 0xa13ef00 <col:5, col:60> 'int' '+'
          (ParenExpr 0xa13eee8 <col:5, col:56> 'int'
            (BinaryOperator 0xa13eed0 <col:6, col:55> 'int' '<<'
              (ParenExpr 0xa13eeb8 <col:6, col:50> 'int'
                (BinaryOperator 0xa13eea0 <col:7, col:49> 'int' '-'
                  (ParenExpr 0xa13ee88 <col:7, col:45> 'int'
                    (BinaryOperator 0xa13ee70 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0xa13ee60 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0xa13ed10 <col:8, col:13> 'char':'char' <NoOp>
                          (ImplicitCastExpr 0xa13ed00 <col:13> 'char':'char' <IntegralCast>
                            (IntegerLiteral 0x9e4c648 <col:13> 'int' 1))))
                      (ParenExpr 0xa13ee48 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0xa13ee30 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0xa13ee08 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0xa13edf0 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0xa13ed58 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0xa13ed30 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
                                (ImplicitCastExpr 0xa13ed48 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9e4c6a0 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0xa13ede0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0xa13edc8 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0xa13edb0 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0xa13eda0 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0xa13ed88 <col:32, col:40> 'char':'char' <NoOp>
                                        (ImplicitCastExpr 0xa13ed78 <col:37, col:40> 'char':'char' <IntegralCast>
                                          (ParenExpr 0x9e4c710 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9e4c6f8 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9e4c6e0 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9e4c748 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0xa13ee20 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x9e4c7c0 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9e4c838 <col:49> 'int' 1)))
              (IntegerLiteral 0x9e4c880 <col:55> 'int' 1)))
          (IntegerLiteral 0x9e4c8c8 <col:60> 'int' 1)))
      (UnaryOperator 0xa13ef70 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0xa13ef60 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0xa13ef48 <col:66, col:71> 'char':'char' <NoOp>
            (ImplicitCastExpr 0xa13ef38 <col:71> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x9e4c910 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0xa13f070 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa13f058 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0xa13f048 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0xa13f030 <col:32, col:40> 'char':'char' <NoOp>
        (ImplicitCastExpr 0xa13f020 <col:37, col:40> 'char':'char' <IntegralCast>
          (ParenExpr 0x9e4ca08 <col:37, col:40> 'int'
            (UnaryOperator 0x9e4c9f0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9e4c9d8 <col:39> 'int' 1))))))
    (IntegerLiteral 0x9e4ca40 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa13f1d0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa13f1b8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa13f1a0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa13f108 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa13f0e0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0xa13f0f8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9e4caf8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa13f190 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa13f178 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa13f160 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0xa13f150 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0xa13f138 <col:32, col:40> 'char':'char' <NoOp>
                (ImplicitCastExpr 0xa13f128 <col:37, col:40> 'char':'char' <IntegralCast>
                  (ParenExpr 0x9e4cb68 <col:37, col:40> 'int'
                    (UnaryOperator 0x9e4cb50 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9e4cb38 <col:39> 'int' 1))))))
            (IntegerLiteral 0x9e4cba0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = short> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const short __min = (ImplicitCastExpr 0xa1fa1e0 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const short':'const short' <IntegralCast>
  (ParenExpr 0xa1fa1c8 <col:3, col:68> 'int'
    (ConditionalOperator 0xa1fa1a8 <line:42:31, line:47:67> 'int'
      (ParenExpr 0xa1fa000 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa1f9fe8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa1f9fd8 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa1f9fc0 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0xa1f9fb0 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9e49ae8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9e49ad0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9e49ab8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9e49b20 <col:44> 'int' 0)))
      (BinaryOperator 0xa1fa150 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0xa1fa140 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0xa1fa030 <col:28, col:33> 'short':'short' <NoOp>
            (ImplicitCastExpr 0xa1fa020 <col:33> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9e49b68 <col:33> 'int' 1))))
        (ParenExpr 0xa1fa128 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0xa1fa110 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0xa1fa078 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0xa1fa050 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
              (ImplicitCastExpr 0xa1fa068 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9e49bc0 <col:22> 'int' 8)))
            (ImplicitCastExpr 0xa1fa100 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0xa1fa0e8 <col:31, col:45> '_Bool'
                (BinaryOperator 0xa1fa0d0 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0xa1fa0c0 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0xa1fa0a8 <col:32, col:40> 'short':'short' <NoOp>
                      (ImplicitCastExpr 0xa1fa098 <col:37, col:40> 'short':'short' <IntegralCast>
                        (ParenExpr 0x9e49c30 <col:37, col:40> 'int'
                          (UnaryOperator 0x9e49c18 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x9e49c00 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x9e49c68 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0xa1fa198 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0xa1fa180 <col:62, col:67> 'short':'short' <NoOp>
          (ImplicitCastExpr 0xa1fa170 <col:67> 'short':'short' <IntegralCast>
            (IntegerLiteral 0x9e49cf8 <col:67> 'int' 0)))))))
;
        static const short __max = (ImplicitCastExpr 0xa1fa580 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const short':'const short' <IntegralCast>
  (ParenExpr 0xa1fa568 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0xa1fa548 <line:42:31, line:51:71> 'int'
      (ParenExpr 0xa1fa2a0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa1fa288 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa1fa278 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa1fa260 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0xa1fa250 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x9e49dd8 <col:37, col:40> 'int'
                  (UnaryOperator 0x9e49dc0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9e49da8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x9e49e10 <col:44> 'int' 0)))
      (ParenExpr 0xa1fa4d8 <line:51:4, col:61> 'int'
        (BinaryOperator 0xa1fa4c0 <col:5, col:60> 'int' '+'
          (ParenExpr 0xa1fa4a8 <col:5, col:56> 'int'
            (BinaryOperator 0xa1fa490 <col:6, col:55> 'int' '<<'
              (ParenExpr 0xa1fa478 <col:6, col:50> 'int'
                (BinaryOperator 0xa1fa460 <col:7, col:49> 'int' '-'
                  (ParenExpr 0xa1fa448 <col:7, col:45> 'int'
                    (BinaryOperator 0xa1fa430 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0xa1fa420 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0xa1fa2d0 <col:8, col:13> 'short':'short' <NoOp>
                          (ImplicitCastExpr 0xa1fa2c0 <col:13> 'short':'short' <IntegralCast>
                            (IntegerLiteral 0x9e4c648 <col:13> 'int' 1))))
                      (ParenExpr 0xa1fa408 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0xa1fa3f0 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0xa1fa3c8 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0xa1fa3b0 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0xa1fa318 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0xa1fa2f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
                                (ImplicitCastExpr 0xa1fa308 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x9e4c6a0 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0xa1fa3a0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0xa1fa388 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0xa1fa370 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0xa1fa360 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0xa1fa348 <col:32, col:40> 'short':'short' <NoOp>
                                        (ImplicitCastExpr 0xa1fa338 <col:37, col:40> 'short':'short' <IntegralCast>
                                          (ParenExpr 0x9e4c710 <col:37, col:40> 'int'
                                            (UnaryOperator 0x9e4c6f8 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x9e4c6e0 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x9e4c748 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0xa1fa3e0 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x9e4c7c0 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x9e4c838 <col:49> 'int' 1)))
              (IntegerLiteral 0x9e4c880 <col:55> 'int' 1)))
          (IntegerLiteral 0x9e4c8c8 <col:60> 'int' 1)))
      (UnaryOperator 0xa1fa530 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0xa1fa520 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0xa1fa508 <col:66, col:71> 'short':'short' <NoOp>
            (ImplicitCastExpr 0xa1fa4f8 <col:71> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x9e4c910 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0xa1fa630 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa1fa618 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0xa1fa608 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0xa1fa5f0 <col:32, col:40> 'short':'short' <NoOp>
        (ImplicitCastExpr 0xa1fa5e0 <col:37, col:40> 'short':'short' <IntegralCast>
          (ParenExpr 0x9e4ca08 <col:37, col:40> 'int'
            (UnaryOperator 0x9e4c9f0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9e4c9d8 <col:39> 'int' 1))))))
    (IntegerLiteral 0x9e4ca40 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa1fa790 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa1fa778 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa1fa760 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa1fa6c8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa1fa6a0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
        (ImplicitCastExpr 0xa1fa6b8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9e4caf8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa1fa750 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa1fa738 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa1fa720 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0xa1fa710 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0xa1fa6f8 <col:32, col:40> 'short':'short' <NoOp>
                (ImplicitCastExpr 0xa1fa6e8 <col:37, col:40> 'short':'short' <IntegralCast>
                  (ParenExpr 0x9e4cb68 <col:37, col:40> 'int'
                    (UnaryOperator 0x9e4cb50 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x9e4cb38 <col:39> 'int' 1))))))
            (IntegerLiteral 0x9e4cba0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = unsigned long> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const unsigned long __min = (ParenExpr 0xa08ef98 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'unsigned long':'unsigned long'
  (ConditionalOperator 0xa08ef78 <line:42:31, line:47:67> 'unsigned long':'unsigned long'
    (ParenExpr 0xa08edf0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa08edd8 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa08edb0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0xa08eda0 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9e49ae8 <col:37, col:40> 'int'
              (UnaryOperator 0x9e49ad0 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9e49ab8 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0xa08edc8 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9e49b20 <col:44> 'int' 0))))
    (BinaryOperator 0xa08ef30 <line:47:28, line:44:54> 'unsigned long':'unsigned long' '<<'
      (CStyleCastExpr 0xa08ee20 <line:47:28, col:33> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0xa08ee10 <col:33> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9e49b68 <col:33> 'int' 1)))
      (ParenExpr 0xa08ef18 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0xa08ef00 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0xa08ee68 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa08ee40 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
            (ImplicitCastExpr 0xa08ee58 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9e49bc0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa08eef0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0xa08eed8 <col:31, col:45> '_Bool'
              (BinaryOperator 0xa08eec0 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0xa08ee98 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                  (ImplicitCastExpr 0xa08ee88 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                    (ParenExpr 0x9e49c30 <col:37, col:40> 'int'
                      (UnaryOperator 0x9e49c18 <col:38, col:39> 'int' prefix '-'
                        (IntegerLiteral 0x9e49c00 <col:39> 'int' 1)))))
                (ImplicitCastExpr 0xa08eeb0 <col:44> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9e49c68 <col:44> 'int' 0))))))))
    (CStyleCastExpr 0xa08ef60 <line:47:62, col:67> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0xa08ef50 <col:67> 'unsigned long':'unsigned long' <IntegralCast>
        (IntegerLiteral 0x9e49cf8 <col:67> 'int' 0)))))
;
        static const unsigned long __max = (ParenExpr 0xa08f328 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'unsigned long'
  (ConditionalOperator 0xa08f308 <line:42:31, line:51:71> 'unsigned long'
    (ParenExpr 0xa08f060 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa08f048 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa08f020 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0xa08f010 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x9e49dd8 <col:37, col:40> 'int'
              (UnaryOperator 0x9e49dc0 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x9e49da8 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0xa08f038 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9e49e10 <col:44> 'int' 0))))
    (ParenExpr 0xa08f2a8 <line:51:4, col:61> 'unsigned long'
      (BinaryOperator 0xa08f290 <col:5, col:60> 'unsigned long' '+'
        (ParenExpr 0xa08f268 <col:5, col:56> 'unsigned long'
          (BinaryOperator 0xa08f250 <col:6, col:55> 'unsigned long' '<<'
            (ParenExpr 0xa08f238 <col:6, col:50> 'unsigned long'
              (BinaryOperator 0xa08f220 <col:7, col:49> 'unsigned long' '-'
                (ParenExpr 0xa08f1f8 <col:7, col:45> 'unsigned long':'unsigned long'
                  (BinaryOperator 0xa08f1e0 <col:8, col:44> 'unsigned long':'unsigned long' '<<'
                    (CStyleCastExpr 0xa08f090 <col:8, col:13> 'unsigned long':'unsigned long' <NoOp>
                      (ImplicitCastExpr 0xa08f080 <col:13> 'unsigned long':'unsigned long' <IntegralCast>
                        (IntegerLiteral 0x9e4c648 <col:13> 'int' 1)))
                    (ParenExpr 0xa08f1c8 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0xa08f1b0 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0xa08f188 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0xa08f170 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0xa08f0d8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0xa08f0b0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
                              (ImplicitCastExpr 0xa08f0c8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9e4c6a0 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0xa08f160 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0xa08f148 <col:31, col:45> '_Bool'
                                (BinaryOperator 0xa08f130 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0xa08f108 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                                    (ImplicitCastExpr 0xa08f0f8 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                                      (ParenExpr 0x9e4c710 <col:37, col:40> 'int'
                                        (UnaryOperator 0x9e4c6f8 <col:38, col:39> 'int' prefix '-'
                                          (IntegerLiteral 0x9e4c6e0 <col:39> 'int' 1)))))
                                  (ImplicitCastExpr 0xa08f120 <col:44> 'unsigned long' <IntegralCast>
                                    (IntegerLiteral 0x9e4c748 <col:44> 'int' 0)))))))
                        (ImplicitCastExpr 0xa08f1a0 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x9e4c7c0 <col:43> 'int' 1))))))
                (ImplicitCastExpr 0xa08f210 <col:49> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x9e4c838 <col:49> 'int' 1))))
            (IntegerLiteral 0x9e4c880 <col:55> 'int' 1)))
        (ImplicitCastExpr 0xa08f280 <col:60> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9e4c8c8 <col:60> 'int' 1))))
    (UnaryOperator 0xa08f2f0 <col:65, col:71> 'unsigned long':'unsigned long' prefix '~'
      (CStyleCastExpr 0xa08f2d8 <col:66, col:71> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0xa08f2c8 <col:71> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x9e4c910 <col:71> 'int' 0))))))
;
        static const bool __is_signed = (ParenExpr 0xa08f3e0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa08f3c8 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0xa08f3a0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0xa08f390 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
        (ParenExpr 0x9e4ca08 <col:37, col:40> 'int'
          (UnaryOperator 0x9e4c9f0 <col:38, col:39> 'int' prefix '-'
            (IntegerLiteral 0x9e4c9d8 <col:39> 'int' 1)))))
    (ImplicitCastExpr 0xa08f3b8 <col:44> 'unsigned long' <IntegralCast>
      (IntegerLiteral 0x9e4ca40 <col:44> 'int' 0))))
;
        static const int __digits = (ImplicitCastExpr 0xa08f540 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa08f528 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa08f510 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa08f478 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa08f450 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
        (ImplicitCastExpr 0xa08f468 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9e4caf8 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa08f500 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa08f4e8 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa08f4d0 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0xa08f4a8 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
              (ImplicitCastExpr 0xa08f498 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                (ParenExpr 0x9e4cb68 <col:37, col:40> 'int'
                  (UnaryOperator 0x9e4cb50 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9e4cb38 <col:39> 'int' 1)))))
            (ImplicitCastExpr 0xa08f4c0 <col:44> 'unsigned long' <IntegralCast>
              (IntegerLiteral 0x9e4cba0 <col:44> 'int' 0))))))))
;
    }
template <typename _Value> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const _Value __min = (ParenExpr 0x9e49d50 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> '<dependent type>'
  (ConditionalOperator 0x9e49d30 <line:42:31, line:47:67> '<dependent type>'
    (ParenExpr 0x9e49b50 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9e49b38 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9e49b08 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9e49ae8 <col:37, col:40> 'int'
            (UnaryOperator 0x9e49ad0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9e49ab8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9e49b20 <col:44> 'int' 0)))
    (BinaryOperator 0x9e49ce0 <line:47:28, line:44:54> '<dependent type>' '<<'
      (CStyleCastExpr 0x9e49b88 <line:47:28, col:33> '_Value' <Dependent>
        (IntegerLiteral 0x9e49b68 <col:33> 'int' 1))
      (ParenExpr 0x9e49cc8 <line:44:3, col:54> '<dependent type>'
        (BinaryOperator 0x9e49cb0 <col:4, line:42:45> '<dependent type>' '-'
          (BinaryOperator 0x9e49be8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9e49ba8 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
            (ImplicitCastExpr 0x9e49bd8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9e49bc0 <col:22> 'int' 8)))
          (ParenExpr 0x9e49c98 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
            (BinaryOperator 0x9e49c80 <col:32, col:44> '<dependent type>' '<'
              (CStyleCastExpr 0x9e49c50 <col:32, col:40> '_Value' <Dependent>
                (ParenExpr 0x9e49c30 <col:37, col:40> 'int'
                  (UnaryOperator 0x9e49c18 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x9e49c00 <col:39> 'int' 1))))
              (IntegerLiteral 0x9e49c68 <col:44> 'int' 0))))))
    (CStyleCastExpr 0x9e49d18 <line:47:62, col:67> '_Value' <Dependent>
      (IntegerLiteral 0x9e49cf8 <col:67> 'int' 0))))
;
        static const _Value __max = (ParenExpr 0x9e4c980 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> '<dependent type>'
  (ConditionalOperator 0x9e4c960 <line:42:31, line:51:71> '<dependent type>'
    (ParenExpr 0x9e49e40 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9e49e28 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9e49df8 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9e49dd8 <col:37, col:40> 'int'
            (UnaryOperator 0x9e49dc0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9e49da8 <col:39> 'int' 1))))
        (IntegerLiteral 0x9e49e10 <col:44> 'int' 0)))
    (ParenExpr 0x9e4c8f8 <line:51:4, col:61> '<dependent type>'
      (BinaryOperator 0x9e4c8e0 <col:5, col:60> '<dependent type>' '+'
        (ParenExpr 0x9e4c8b0 <col:5, col:56> '<dependent type>'
          (BinaryOperator 0x9e4c898 <col:6, col:55> '<dependent type>' '<<'
            (ParenExpr 0x9e4c868 <col:6, col:50> '<dependent type>'
              (BinaryOperator 0x9e4c850 <col:7, col:49> '<dependent type>' '-'
                (ParenExpr 0x9e4c820 <col:7, col:45> '<dependent type>'
                  (BinaryOperator 0x9e4c808 <col:8, col:44> '<dependent type>' '<<'
                    (CStyleCastExpr 0x9e4c668 <col:8, col:13> '_Value' <Dependent>
                      (IntegerLiteral 0x9e4c648 <col:13> 'int' 1))
                    (ParenExpr 0x9e4c7f0 <col:18, col:44> '<dependent type>'
                      (BinaryOperator 0x9e4c7d8 <line:44:3, line:51:43> '<dependent type>' '-'
                        (ParenExpr 0x9e4c7a8 <line:44:3, col:54> '<dependent type>'
                          (BinaryOperator 0x9e4c790 <col:4, line:42:45> '<dependent type>' '-'
                            (BinaryOperator 0x9e4c6c8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x9e4c688 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
                              (ImplicitCastExpr 0x9e4c6b8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x9e4c6a0 <col:22> 'int' 8)))
                            (ParenExpr 0x9e4c778 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
                              (BinaryOperator 0x9e4c760 <col:32, col:44> '<dependent type>' '<'
                                (CStyleCastExpr 0x9e4c730 <col:32, col:40> '_Value' <Dependent>
                                  (ParenExpr 0x9e4c710 <col:37, col:40> 'int'
                                    (UnaryOperator 0x9e4c6f8 <col:38, col:39> 'int' prefix '-'
                                      (IntegerLiteral 0x9e4c6e0 <col:39> 'int' 1))))
                                (IntegerLiteral 0x9e4c748 <col:44> 'int' 0)))))
                        (IntegerLiteral 0x9e4c7c0 <line:51:43> 'int' 1)))))
                (IntegerLiteral 0x9e4c838 <col:49> 'int' 1)))
            (IntegerLiteral 0x9e4c880 <col:55> 'int' 1)))
        (IntegerLiteral 0x9e4c8c8 <col:60> 'int' 1)))
    (UnaryOperator 0x9e4c948 <col:65, col:71> '<dependent type>' prefix '~'
      (CStyleCastExpr 0x9e4c930 <col:66, col:71> '_Value' <Dependent>
        (IntegerLiteral 0x9e4c910 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x9e4ca70 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
  (BinaryOperator 0x9e4ca58 <col:32, col:44> '<dependent type>' '<'
    (CStyleCastExpr 0x9e4ca28 <col:32, col:40> '_Value' <Dependent>
      (ParenExpr 0x9e4ca08 <col:37, col:40> 'int'
        (UnaryOperator 0x9e4c9f0 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x9e4c9d8 <col:39> 'int' 1))))
    (IntegerLiteral 0x9e4ca40 <col:44> 'int' 0)))
;
        static const int __digits = (ParenExpr 0x9e4cc00 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> '<dependent type>'
  (BinaryOperator 0x9e4cbe8 <col:4, line:42:45> '<dependent type>' '-'
    (BinaryOperator 0x9e4cb20 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
      (UnaryExprOrTypeTraitExpr 0x9e4cae0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
      (ImplicitCastExpr 0x9e4cb10 <<built-in>:17:22> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9e4caf8 <col:22> 'int' 8)))
    (ParenExpr 0x9e4cbd0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x9e4cbb8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x9e4cb88 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x9e4cb68 <col:37, col:40> 'int'
            (UnaryOperator 0x9e4cb50 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x9e4cb38 <col:39> 'int' 1))))
        (IntegerLiteral 0x9e4cba0 <col:44> 'int' 0)))))
;
    };
    static const _Value __min;
    static const _Value __max;
    static const bool __is_signed;
    static const int __digits;
    template <typename _Value = int> struct __numeric_traits_floating
template <typename _Value = char> struct __numeric_traits_floating
template <typename _Value = short> struct __numeric_traits_floating
template <typename _Value = unsigned long> struct __numeric_traits_floating
template <typename _Value> struct __numeric_traits_floating {
        struct __numeric_traits_floating;
        static const int __max_digits10 = (ImplicitCastExpr 0x9e4dc18 </usr/include/c++/4.6/ext/numeric_traits.h:88:3, line:89:38> 'const int' <IntegralCast>
  (ParenExpr 0x9e4dc00 <line:88:3, line:89:38> 'long'
    (BinaryOperator 0x9e4dbe8 <line:88:4, line:89:34> 'long' '+'
      (ImplicitCastExpr 0x9e4dbd8 <line:88:4> 'long' <IntegralCast>
        (IntegerLiteral 0x9e4d758 <col:4> 'int' 2))
      (BinaryOperator 0x9e4dbc0 <line:84:3, line:89:34> 'long' '/'
        (BinaryOperator 0x9e4db80 <line:84:3, line:89:27> 'long' '*'
          (ImplicitCastExpr 0x9e4db70 <line:84:3, line:85:60> 'long' <IntegralCast>
            (ParenExpr 0x9e4db40 <line:84:3, line:85:60> 'int'
              (ConditionalOperator 0x9e4db20 <line:84:4, <built-in>:85:27> 'int'
                (DependentScopeDeclRefExpr 0x9e4d900 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
                (IntegerLiteral 0x9e4d928 <<built-in>:59:26> 'int' 24)
                (ConditionalOperator 0x9e4db00 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:85:27> 'int'
                  (DependentScopeDeclRefExpr 0x9e4daa8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
                  (IntegerLiteral 0x9e4dad0 <<built-in>:72:26> 'int' 53)
                  (IntegerLiteral 0x9e4dae8 <line:85:27> 'int' 64)))))
          (IntegerLiteral 0x9e4db58 </usr/include/c++/4.6/ext/numeric_traits.h:89:27> 'long' 643))
        (ImplicitCastExpr 0x9e4dbb0 <col:34> 'long' <IntegralCast>
          (IntegerLiteral 0x9e4db98 <col:34> 'int' 2136))))))
;
        static const bool __is_signed = (CXXBoolLiteralExpr 0x9e4dc68 </usr/include/c++/4.6/ext/numeric_traits.h:105:39> '_Bool' true)
;
        static const int __digits10 = (ParenExpr 0x9e4dfe0 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x9e4dfc0 <line:84:4, <built-in>:81:22> 'int'
    (DependentScopeDeclRefExpr 0x9e4ddf0 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x9e4de18 <<built-in>:55:21> 'int' 6)
    (ConditionalOperator 0x9e4dfa0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:81:22> 'int'
      (DependentScopeDeclRefExpr 0x9e4df48 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x9e4df70 <<built-in>:68:21> 'int' 15)
      (IntegerLiteral 0x9e4df88 <line:81:22> 'int' 18))))
;
        static const int __max_exponent10 = (ParenExpr 0x9e4e360 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x9e4e340 <line:84:4, <built-in>:86:29> 'int'
    (DependentScopeDeclRefExpr 0x9e4e170 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x9e4e198 <<built-in>:60:28> 'int' 38)
    (ConditionalOperator 0x9e4e320 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:86:29> 'int'
      (DependentScopeDeclRefExpr 0x9e4e2c8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x9e4e2f0 <<built-in>:73:28> 'int' 308)
      (IntegerLiteral 0x9e4e308 <line:86:29> 'int' 4932))))
;
    };
    static const int __max_digits10;
    static const bool __is_signed;
    static const int __digits10;
    static const int __max_exponent10;
    template <typename _Value = int> struct __numeric_traits : public typename __conditional_type<std::__is_integer<int>::__value, __numeric_traits_integer<int>, __numeric_traits_floating<int> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = char> struct __numeric_traits : public typename __conditional_type<std::__is_integer<char>::__value, __numeric_traits_integer<char>, __numeric_traits_floating<char> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = short> struct __numeric_traits : public typename __conditional_type<std::__is_integer<short>::__value, __numeric_traits_integer<short>, __numeric_traits_floating<short> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = unsigned long> struct __numeric_traits : public typename __conditional_type<std::__is_integer<unsigned long>::__value, __numeric_traits_integer<unsigned long>, __numeric_traits_floating<unsigned long> >::__type {
        struct __numeric_traits;
    }
template <typename _Value> struct __numeric_traits : public __conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type {
        struct __numeric_traits;
    };
}
namespace std {
    template <typename _Tp> inline _Tp *__addressof(_Tp &__r) (CompoundStmt 0x9e551b0 </usr/include/c++/4.6/bits/move.h:44:5, line:47:5>
  (ReturnStmt 0x9e551a0 <line:45:7, line:46:66>
    (CXXReinterpretCastExpr 0x9e55188 <line:45:14, line:46:66> '_Tp *' reinterpret_cast<_Tp *> <Dependent>
      (UnaryOperator 0x9e55160 <col:3, col:65> 'char *' prefix '&'
        (CXXConstCastExpr 0x9e55148 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
          (CXXReinterpretCastExpr 0x9e4f928 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <Dependent>
            (DeclRefExpr 0x9e4f8dc <col:61> '_Tp' lvalue ParmVar 0x9e4f790 '__r' '_Tp &')))))))

;
}
namespace std {
    template <typename _Tp> inline void swap(_Tp &__a, _Tp &__b) (CompoundStmt 0x9e555d8 </usr/include/c++/4.6/bits/move.h:123:5, line:130:5>
  (DeclStmt 0x9e55508 <line:127:7, col:37>
    0x9e554a0 "_Tp __tmp =
      (ParenExpr 0x9e554f0 <line:105:30, col:36> '_Tp' lvalue
        (DeclRefExpr 0x9e554d4 <line:127:33> '_Tp' lvalue ParmVar 0x9e55310 '__a' '_Tp &'))")
  (BinaryOperator 0x9e55560 <line:128:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9e55518 <line:128:7> '_Tp' lvalue ParmVar 0x9e55310 '__a' '_Tp &')
    (ParenExpr 0x9e55548 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9e55530 <line:128:27> '_Tp' lvalue ParmVar 0x9e55360 '__b' '_Tp &')))
  (BinaryOperator 0x9e555c0 <line:129:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x9e55578 <line:129:7> '_Tp' lvalue ParmVar 0x9e55360 '__b' '_Tp &')
    (ParenExpr 0x9e555a8 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x9e55590 <line:129:27> '_Tp' lvalue Var 0x9e554a0 '__tmp' '_Tp'))))

;
    template <typename _Tp, size_t _Nm> inline void swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) (CompoundStmt 0x9e55bf0 </usr/include/c++/4.6/bits/move.h:137:5, line:140:5>
  (ForStmt 0x9e55bc8 <line:138:7, line:139:25>
    (DeclStmt 0x9e55a40 <line:138:12, col:26>
      0x9e559e0 "size_t __n =
        (ImplicitCastExpr 0x9e55a30 <col:25> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9e55a18 <col:25> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9e55a90 <col:28, col:34> '_Bool' '<'
      (ImplicitCastExpr 0x9e55a80 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9e55a50 <col:28> 'size_t':'unsigned int' lvalue Var 0x9e559e0 '__n' 'size_t':'unsigned int'))
      (DeclRefExpr 0x9e55a68 <col:34> 'size_t':'unsigned int' NonTypeTemplateParm 0x9e55670 '_Nm' 'size_t':'unsigned int'))
    (UnaryOperator 0x9e55ac0 <col:39, col:41> 'size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9e55aa8 <col:41> 'size_t':'unsigned int' lvalue Var 0x9e559e0 '__n' 'size_t':'unsigned int'))
    (CallExpr 0x9e55ba0 <line:139:2, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9e55ad8 <col:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9e559a0 0x9e55460)
      (ArraySubscriptExpr 0x9e55b40 <col:7, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9e55b10 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9e557c0 '__a' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9e55b28 <col:11> 'size_t':'unsigned int' lvalue Var 0x9e559e0 '__n' 'size_t':'unsigned int'))
      (ArraySubscriptExpr 0x9e55b88 <col:17, col:24> '<dependent type>' lvalue
        (DeclRefExpr 0x9e55b54 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x9e558a0 '__b' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x9e55b6c <col:21> 'size_t':'unsigned int' lvalue Var 0x9e559e0 '__n' 'size_t':'unsigned int')))))

;
}
namespace std {
    template <class _T1 = unsigned long long, class _T2 = unsigned long> struct pair
template <class _T1, class _T2> struct pair {
        struct pair;
        typedef _T1 first_type;
        typedef _T2 second_type;
        _T1 first;
        _T2 second;
        pair<_T1, _T2>() : first(), second() (CompoundStmt 0x9e57bf0 </usr/include/c++/4.6/bits/stl_pair.h:100:27, col:29>)


        pair<_T1, _T2>(const _T1 &__a, const _T2 &__b) : first((DeclRefExpr 0x9e57c00 </usr/include/c++/4.6/bits/stl_pair.h:104:15> 'const _T1' lvalue ParmVar 0x9e57610 '__a' 'const _T1 &')
), second((DeclRefExpr 0x9e57c58 </usr/include/c++/4.6/bits/stl_pair.h:104:28> 'const _T2' lvalue ParmVar 0x9e576a0 '__b' 'const _T2 &')
) (CompoundStmt 0x9e57cb0 </usr/include/c++/4.6/bits/stl_pair.h:104:33, col:35>)


        template <class _U1, class _U2> pair<_T1, _T2>(const pair<_U1, _U2> &__p) : first((CXXDependentScopeMemberExpr 0x9e57cd8 </usr/include/c++/4.6/bits/stl_pair.h:109:10, col:14> '<dependent type>' lvalue
  (DeclRefExpr 0x9e57cc0 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0x9e57a40 '__p' 'const pair<_U1, _U2> &'))
), second((CXXDependentScopeMemberExpr 0x9e57d60 </usr/include/c++/4.6/bits/stl_pair.h:109:29, col:33> '<dependent type>' lvalue
  (DeclRefExpr 0x9e57d48 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0x9e57a40 '__p' 'const pair<_U1, _U2> &'))
) (CompoundStmt 0x9e57de0 </usr/include/c++/4.6/bits/stl_pair.h:109:41, col:43>)

;
    };
    template <class _T1, class _T2> inline bool operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9e584b8 </usr/include/c++/4.6/bits/stl_pair.h:202:5, col:66>
  (ReturnStmt 0x9e584a8 <col:7, col:58>
    (BinaryOperator 0x9e58490 <col:14, col:58> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9e58368 <col:14, col:31> '<dependent type>'
        (UnresolvedLookupExpr 0x9e58330 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260)
        (CXXDependentScopeMemberExpr 0x9e582a8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9e58290 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e57ff0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9e582f8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9e582dc <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e58160 '__y' 'const pair<_T1, _T2> &')))
      (CXXOperatorCallExpr 0x9e58468 <col:40, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9e58430 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260)
        (CXXDependentScopeMemberExpr 0x9e583a8 <col:40, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x9e5838c <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e57ff0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9e583f8 <col:54, col:58> '<dependent type>' lvalue
          (DeclRefExpr 0x9e583dc <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e58160 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator<(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9e59018 </usr/include/c++/4.6/bits/stl_pair.h:208:5, line:209:65>
  (ReturnStmt 0x9e59008 <line:208:7, line:209:62>
    (BinaryOperator 0x9e58ff0 <line:208:14, line:209:62> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9e58d68 <line:208:14, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9e58d30 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60)
        (CXXDependentScopeMemberExpr 0x9e58ca8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9e58c90 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e58a10 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x9e58cf8 <col:26, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x9e58cdc <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e58b80 '__y' 'const pair<_T1, _T2> &')))
      (ParenExpr 0x9e58fd8 <line:209:10, col:62> '<dependent type>'
        (BinaryOperator 0x9e58fc0 <col:11, col:56> '<dependent type>' '&&'
          (UnaryOperator 0x9e58ea8 <col:11, col:34> '<dependent type>' prefix '!'
            (ParenExpr 0x9e58e90 <col:12, col:34> '<dependent type>'
              (CXXOperatorCallExpr 0x9e58e68 <col:13, col:29> '<dependent type>'
                (UnresolvedLookupExpr 0x9e58e30 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60)
                (CXXDependentScopeMemberExpr 0x9e58da8 <col:13, col:17> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e58d8c <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e58b80 '__y' 'const pair<_T1, _T2> &'))
                (CXXDependentScopeMemberExpr 0x9e58df8 <col:25, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9e58ddc <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e58a10 '__x' 'const pair<_T1, _T2> &')))))
          (CXXOperatorCallExpr 0x9e58f98 <col:39, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9e58f60 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60)
            (CXXDependentScopeMemberExpr 0x9e58ed8 <col:39, col:43> '<dependent type>' lvalue
              (DeclRefExpr 0x9e58ebc <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e58a10 '__x' 'const pair<_T1, _T2> &'))
            (CXXDependentScopeMemberExpr 0x9e58f28 <col:52, col:56> '<dependent type>' lvalue
              (DeclRefExpr 0x9e58f0c <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e58b80 '__y' 'const pair<_T1, _T2> &'))))))))

;
    template <class _T1, class _T2> inline bool operator!=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9e59560 </usr/include/c++/4.6/bits/stl_pair.h:215:5, col:29>
  (ReturnStmt 0x9e59550 <col:7, col:26>
    (UnaryOperator 0x9e59538 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9e59520 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9e594f8 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9e594c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260)
          (DeclRefExpr 0x9e59490 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e59210 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9e594a8 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e59380 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9e59ea0 </usr/include/c++/4.6/bits/stl_pair.h:221:5, col:25>
  (ReturnStmt 0x9e59e90 <col:7, col:20>
    (CXXOperatorCallExpr 0x9e59e68 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9e59e30 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60)
      (DeclRefExpr 0x9e59e00 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e59cf0 '__y' 'const pair<_T1, _T2> &')
      (DeclRefExpr 0x9e59e18 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e59760 '__x' 'const pair<_T1, _T2> &'))))

;
    template <class _T1, class _T2> inline bool operator<=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9e5a3f0 </usr/include/c++/4.6/bits/stl_pair.h:227:5, col:28>
  (ReturnStmt 0x9e5a3e0 <col:7, col:25>
    (UnaryOperator 0x9e5a3c8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9e5a3b0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9e5a388 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9e5a350 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60)
          (DeclRefExpr 0x9e5a320 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e5a210 '__y' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9e5a338 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e5a0a0 '__x' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x9e5a940 </usr/include/c++/4.6/bits/stl_pair.h:233:5, col:28>
  (ReturnStmt 0x9e5a930 <col:7, col:25>
    (UnaryOperator 0x9e5a918 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9e5a900 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9e5a8d8 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9e5a8a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60)
          (DeclRefExpr 0x9e5a870 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e5a5f0 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x9e5a888 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x9e5a760 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline pair<_T1, _T2> make_pair(_T1 __x, _T2 __y) (CompoundStmt 0x9e5ba38 </usr/include/c++/4.6/bits/stl_pair.h:273:5, col:40>
  (ReturnStmt 0x9e5ba28 <col:7, col:37>
    (CXXUnresolvedConstructExpr 0x9e5ba08 <col:14, col:37> 'pair<_T1, _T2>'
      (DeclRefExpr 0x9e5b9d8 <col:29> '_T1' lvalue ParmVar 0x9e5aaf0 '__x' '_T1')
      (DeclRefExpr 0x9e5b9f0 <col:34> '_T2' lvalue ParmVar 0x9e5ab30 '__y' '_T2'))))

;
}
namespace std {
    struct input_iterator_tag {
        struct input_iterator_tag;
    };
    struct output_iterator_tag {
        struct output_iterator_tag;
    };
    struct forward_iterator_tag : public std::input_iterator_tag {
        struct forward_iterator_tag;
    };
    struct bidirectional_iterator_tag : public std::forward_iterator_tag {
        struct bidirectional_iterator_tag;
    };
    struct random_access_iterator_tag : public std::bidirectional_iterator_tag {
        struct random_access_iterator_tag;
    };
    template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = bool *, typename _Reference = bool &> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef bool *pointer;
        typedef bool &reference;
        inline iterator() throw() (CompoundStmt 0xa287300 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


        inline iterator(const std::iterator<std::random_access_iterator_tag, bool, int, bool *, bool &> &) throw() (CompoundStmt 0xa289c50 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


    }
template <typename _Category = std::output_iterator_tag, typename _Tp = void, typename _Distance = void, typename _Pointer = void, typename _Reference = void> struct iterator {
        struct iterator;
        typedef std::output_iterator_tag iterator_category;
        typedef void value_type;
        typedef void difference_type;
        typedef void pointer;
        typedef void reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = std::_Bit_reference *, typename _Reference = std::_Bit_reference> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_reference reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = const bool *, typename _Reference = bool> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef const bool *pointer;
        typedef bool reference;
    }
template <typename _Category, typename _Tp, typename _Distance = ptrdiff_t, typename _Pointer = _Tp *, typename _Reference = _Tp &> struct iterator {
        struct iterator;
        typedef _Category iterator_category;
        typedef _Tp value_type;
        typedef _Distance difference_type;
        typedef _Pointer pointer;
        typedef _Reference reference;
    };
    template <typename _Iterator = std::_Bit_const_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_const_iterator::iterator_category iterator_category;
        typedef typename _Bit_const_iterator::value_type value_type;
        typedef typename _Bit_const_iterator::difference_type difference_type;
        typedef typename _Bit_const_iterator::pointer pointer;
        typedef typename _Bit_const_iterator::reference reference;
    }
template <typename _Iterator = std::_Bit_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_iterator::iterator_category iterator_category;
        typedef typename _Bit_iterator::value_type value_type;
        typedef typename _Bit_iterator::difference_type difference_type;
        typedef typename _Bit_iterator::pointer pointer;
        typedef typename _Bit_iterator::reference reference;
    }
template <typename _Iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Iterator::iterator_category iterator_category;
        typedef typename _Iterator::value_type value_type;
        typedef typename _Iterator::difference_type difference_type;
        typedef typename _Iterator::pointer pointer;
        typedef typename _Iterator::reference reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef _Tp &reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef const _Tp *pointer;
        typedef const _Tp &reference;
    };
    template <typename _Iter> inline typename iterator_traits<_Iter>::iterator_category __iterator_category(const _Iter &) (CompoundStmt 0x9e62710 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:202:5, col:68>
  (ReturnStmt 0x9e62700 <col:7, col:65>
    (CXXUnresolvedConstructExpr 0x9e626e8 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category')))

;
    template <typename _Iterator = unsigned long *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef unsigned long *iterator_type;
        static iterator_type _S_base(unsigned long *__it) (CompoundStmt 0xa348068 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0xa348058 <col:9, col:16>
    (ImplicitCastExpr 0xa348048 <col:16> 'unsigned long *':'unsigned long *' <LValueToRValue>
      (DeclRefExpr 0xa34802c <col:16> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa345b30 '__it' 'unsigned long *':'unsigned long *'))))


    }
template <typename _Iterator, bool _HasBase> struct _Iter_base {
        struct _Iter_base;
        typedef _Iterator iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9e62bd8 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x9e62bc8 <col:9, col:16>
    (DeclRefExpr 0x9e62bb0 <col:16> '_Iterator' lvalue ParmVar 0x9e62a90 '__it' '_Iterator')))


    };
    struct _Iter_base {
        struct _Iter_base;
        typedef typename _Iterator::iterator_type iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x9e63200 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:221:7, col:29>
  (ReturnStmt 0x9e631f0 <col:9, col:26>
    (CallExpr 0x9e631d0 <col:16, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e63198 <col:16, col:21> '<dependent type>' lvalue
        (DeclRefExpr 0x9e63180 <col:16> '_Iterator' lvalue ParmVar 0x9e63060 '__it' '_Iterator')))))


    };
}
namespace std {
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type __distance(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x9e65a58 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:74:5, line:85:5>
  (DeclStmt 0x9e65900 <line:78:7, col:72>
    0x9e658b0 "typename iterator_traits<_InputIterator>::difference_type __n =
      (IntegerLiteral 0x9e658e8 <col:71> 'int' 0)")
  (WhileStmt 0x9e65a18 <line:79:7, line:83:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e65978 <line:79:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9e65940 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460)
      (DeclRefExpr 0x9e65910 <col:14> '_InputIterator' lvalue ParmVar 0x9e63420 '__first' '_InputIterator')
      (DeclRefExpr 0x9e65928 <col:25> '_InputIterator' lvalue ParmVar 0x9e65620 '__last' '_InputIterator'))
    (CompoundStmt 0x9e65a00 <line:80:2, line:83:2>
      (UnaryOperator 0x9e659b8 <line:81:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e6599c <col:6> '_InputIterator' lvalue ParmVar 0x9e63420 '__first' '_InputIterator'))
      (UnaryOperator 0x9e659e8 <line:82:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e659cc <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9e658b0 '__n' 'typename iterator_traits<_InputIterator>::difference_type'))))
  (ReturnStmt 0x9e65a48 <line:84:7, col:14>
    (DeclRefExpr 0x9e65a2c <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9e658b0 '__n' 'typename iterator_traits<_InputIterator>::difference_type')))

;
    template <typename _RandomAccessIterator> inline typename iterator_traits<_RandomAccessIterator>::difference_type __distance(_RandomAccessIterator __first, _RandomAccessIterator __last, std::random_access_iterator_tag) (CompoundStmt 0x9e65df0 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:91:5, line:96:5>
  (ReturnStmt 0x9e65de0 <line:95:7, col:23>
    (BinaryOperator 0x9e65dc8 <col:14, col:23> '<dependent type>' '-'
      (DeclRefExpr 0x9e65d94 <col:14> '_RandomAccessIterator' lvalue ParmVar 0x9e65bf0 '__last' '_RandomAccessIterator')
      (DeclRefExpr 0x9e65dac <col:23> '_RandomAccessIterator' lvalue ParmVar 0x9e65bb0 '__first' '_RandomAccessIterator'))))

;
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type distance(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9e66210 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:113:5, line:117:5>
  (ReturnStmt 0x9e66200 <line:115:7, line:116:42>
    (CallExpr 0x9e661d8 <line:115:14, line:116:42> '<dependent type>'
      (UnresolvedLookupExpr 0x9e660e8 <line:115:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e65790 0x9e65d60)
      (DeclRefExpr 0x9e66120 <col:30> '_InputIterator' lvalue ParmVar 0x9e65f40 '__first' '_InputIterator')
      (DeclRefExpr 0x9e66138 <col:39> '_InputIterator' lvalue ParmVar 0x9e65f80 '__last' '_InputIterator')
      (CallExpr 0x9e661b8 <line:116:9, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9e66168 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e625d0)
        (DeclRefExpr 0x9e6619c <col:34> '_InputIterator' lvalue ParmVar 0x9e65f40 '__first' '_InputIterator')))))

;
    template <typename _InputIterator, typename _Distance> inline void __advance(_InputIterator &__i, _Distance __n, std::input_iterator_tag) (CompoundStmt 0x9e66578 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:122:5, line:127:5>
  (WhileStmt 0x9e66560 <line:125:7, line:126:4>
    <<<NULL>>>
    (UnaryOperator 0x9e66518 <line:125:14, col:17> '<dependent type>' postfix '--'
      (DeclRefExpr 0x9e664e4 <col:14> '_Distance' lvalue ParmVar 0x9e66350 '__n' '_Distance'))
    (UnaryOperator 0x9e66548 <line:126:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9e6652c <col:4> '_InputIterator' lvalue ParmVar 0x9e66310 '__i' '_InputIterator &'))))

;
    template <typename _BidirectionalIterator, typename _Distance> inline void __advance(_BidirectionalIterator &__i, _Distance __n, std::bidirectional_iterator_tag) (CompoundStmt 0x9e682c8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:133:5, line:143:5>
  (IfStmt 0x9e682a8 <line:137:7, line:142:6>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e68160 <line:137:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9e68128 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0)
      (DeclRefExpr 0x9e680f4 <col:11> '_Distance' lvalue ParmVar 0x9e67f60 '__n' '_Distance')
      (IntegerLiteral 0x9e68110 <col:17> 'int' 0))
    (WhileStmt 0x9e68200 <line:138:9, line:139:6>
      <<<NULL>>>
      (UnaryOperator 0x9e681b8 <line:138:16, col:19> '<dependent type>' postfix '--'
        (DeclRefExpr 0x9e68184 <col:16> '_Distance' lvalue ParmVar 0x9e67f60 '__n' '_Distance'))
      (UnaryOperator 0x9e681e8 <line:139:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e681cc <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9e67f20 '__i' '_BidirectionalIterator &')))
    (WhileStmt 0x9e68290 <line:141:9, line:142:6>
      <<<NULL>>>
      (UnaryOperator 0x9e68248 <line:141:16, col:19> '<dependent type>' postfix '++'
        (DeclRefExpr 0x9e68214 <col:16> '_Distance' lvalue ParmVar 0x9e67f60 '__n' '_Distance'))
      (UnaryOperator 0x9e68278 <line:142:4, col:6> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9e6825c <col:6> '_BidirectionalIterator' lvalue ParmVar 0x9e67f20 '__i' '_BidirectionalIterator &')))))

;
    template <typename _RandomAccessIterator, typename _Distance> inline void __advance(_RandomAccessIterator &__i, _Distance __n, std::random_access_iterator_tag) (CompoundStmt 0x9e685e8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:149:5, line:154:5>
  (CompoundAssignOperator 0x9e685c8 <line:153:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9e68594 <col:7> '_RandomAccessIterator' lvalue ParmVar 0x9e683c0 '__i' '_RandomAccessIterator &')
    (DeclRefExpr 0x9e685ac <col:14> '_Distance' lvalue ParmVar 0x9e68400 '__n' '_Distance')))

;
    template <typename _InputIterator, typename _Distance> inline void advance(_InputIterator &__i, _Distance __n) (CompoundStmt 0x9e68ae8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:171:5, line:175:5>
  (DeclStmt 0x9e68990 <line:173:7, col:74>
    0x9e68940 "typename iterator_traits<_InputIterator>::difference_type __d =
      (DeclRefExpr 0x9e68974 <col:71> '_Distance' lvalue ParmVar 0x9e68720 '__n' '_Distance')")
  (CallExpr 0x9e68ac0 <line:174:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0x9e689c8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e664b0 0x9e680c0 0x9e68560)
    (DeclRefExpr 0x9e68a04 <col:22> '_InputIterator' lvalue ParmVar 0x9e686e0 '__i' '_InputIterator &')
    (DeclRefExpr 0x9e68a1c <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x9e68940 '__d' 'typename iterator_traits<_InputIterator>::difference_type')
    (CallExpr 0x9e68aa0 <col:32, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x9e68a50 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e625d0)
      (DeclRefExpr 0x9e68a84 <col:57> '_InputIterator' lvalue ParmVar 0x9e686e0 '__i' '_InputIterator &'))))

;
}
namespace std {
    template <typename _Iterator = __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = std::_Bit_const_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_const_iterator>::iterator_category, typename iterator_traits<_Bit_const_iterator>::value_type, typename iterator_traits<_Bit_const_iterator>::difference_type, typename iterator_traits<_Bit_const_iterator>::pointer, typename iterator_traits<_Bit_const_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_const_iterator current;
        typedef iterator_traits<std::_Bit_const_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_const_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_const_iterator> &__x);
        template <typename _Iter = std::_Bit_const_iterator> reverse_iterator(const reverse_iterator<std::_Bit_const_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator++();
        std::reverse_iterator<std::_Bit_const_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_const_iterator> &operator--();
        std::reverse_iterator<std::_Bit_const_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_const_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_const_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = std::_Bit_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_iterator>::iterator_category, typename iterator_traits<_Bit_iterator>::value_type, typename iterator_traits<_Bit_iterator>::difference_type, typename iterator_traits<_Bit_iterator>::pointer, typename iterator_traits<_Bit_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_iterator current;
        typedef iterator_traits<std::_Bit_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_iterator> &__x);
        template <typename _Iter = std::_Bit_iterator> reverse_iterator(const reverse_iterator<std::_Bit_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_iterator> &operator++();
        std::reverse_iterator<std::_Bit_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_iterator> &operator--();
        std::reverse_iterator<std::_Bit_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator> class reverse_iterator : public iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        _Iterator current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator<_Iterator>() : current() (CompoundStmt 0x9e6bfd0 </usr/include/c++/4.6/bits/stl_iterator.h:121:38, col:40>)


        reverse_iterator<_Iterator>(iterator_type __x) : current((DeclRefExpr 0x9e6bfe0 </usr/include/c++/4.6/bits/stl_iterator.h:127:53> 'iterator_type':'_Iterator' lvalue ParmVar 0x9e6a6b0 '__x' 'iterator_type':'_Iterator')
) (CompoundStmt 0x9e6c040 </usr/include/c++/4.6/bits/stl_iterator.h:127:58, col:60>)


        reverse_iterator<_Iterator>(const reverse_iterator<_Iterator> &__x) : current((CXXDependentScopeMemberExpr 0x9e6c068 </usr/include/c++/4.6/bits/stl_iterator.h:133:17, col:21> '<dependent type>' lvalue
  (DeclRefExpr 0x9e6c050 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e6a7f0 '__x' 'const reverse_iterator<_Iterator> &'))
) (CompoundStmt 0x9e6c0e0 </usr/include/c++/4.6/bits/stl_iterator.h:133:30, col:32>)


        template <typename _Iter> reverse_iterator<_Iterator>(const reverse_iterator<_Iter> &__x) : current((CallExpr 0x9e6c140 </usr/include/c++/4.6/bits/stl_iterator.h:141:12, col:21> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9e6c108 <col:12, col:16> '<dependent type>' lvalue
    (DeclRefExpr 0x9e6c0f0 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0x9e6aa50 '__x' 'const reverse_iterator<_Iter> &')))
) (CompoundStmt 0x9e6c1a0 </usr/include/c++/4.6/bits/stl_iterator.h:141:24, col:26>)

;
        iterator_type base() const (CompoundStmt 0x9e6c228 </usr/include/c++/4.6/bits/stl_iterator.h:148:7, col:25>
  (ReturnStmt 0x9e6c218 <col:9, col:16>
    (MemberExpr 0x9e6c1f4 <col:16> 'const _Iterator' lvalue ->current 0x9e6a290
      (CXXThisExpr 0x9e6c1c8 <col:16> 'const reverse_iterator<_Iterator> *' this))))


        reference operator*() const (CompoundStmt 0x9e6c320 </usr/include/c++/4.6/bits/stl_iterator.h:157:7, line:160:7>
  (DeclStmt 0x9e6c2b8 <line:158:2, col:27>
    0x9e6c250 "_Iterator __tmp =
      (MemberExpr 0x9e6c298 <col:20> 'const _Iterator' lvalue ->current 0x9e6a290
        (CXXThisExpr 0x9e6c288 <col:20> 'const reverse_iterator<_Iterator> *' this))")
  (ReturnStmt 0x9e6c310 <line:159:2, col:12>
    (UnaryOperator 0x9e6c2f8 <col:9, col:12> '<dependent type>' prefix '*'
      (UnaryOperator 0x9e6c2e0 <col:10, col:12> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9e6c2c8 <col:12> '_Iterator' lvalue Var 0x9e6c250 '__tmp' '_Iterator')))))


        pointer operator->() const (CompoundStmt 0x9e6c3c8 </usr/include/c++/4.6/bits/stl_iterator.h:169:7, col:32>
  (ReturnStmt 0x9e6c3b8 <col:9, col:29>
    (UnaryOperator 0x9e6c3a0 <col:16, col:29> '<dependent type>' prefix '&'
      (ParenExpr 0x9e6c388 <col:17, col:29> '<dependent type>'
        (CallExpr 0x9e6c368 <col:18, col:28> '<dependent type>'
          (MemberExpr 0x9e6c348 <col:18, col:26> '<bound member function type>' ->operator* 0x9e6b6b0
            (CXXThisExpr 0x9e6c338 <col:18> 'const reverse_iterator<_Iterator> *' this)))))))


        reverse_iterator<_Iterator> &operator++() (CompoundStmt 0x9e6c460 </usr/include/c++/4.6/bits/stl_iterator.h:178:7, line:181:7>
  (UnaryOperator 0x9e6c410 <line:179:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9e6c3f0 <col:4> '_Iterator' lvalue ->current 0x9e6a290
      (CXXThisExpr 0x9e6c3e0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9e6c450 <line:180:2, col:10>
    (UnaryOperator 0x9e6c438 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e6c428 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator++(int) (CompoundStmt 0x9e6c560 </usr/include/c++/4.6/bits/stl_iterator.h:190:7, line:194:7>
  (DeclStmt 0x9e6c4e0 <line:191:2, col:32>
    0x9e6c480 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9e6c4c8 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9e6c4b8 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9e6c520 <line:192:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9e6c500 <col:4> '_Iterator' lvalue ->current 0x9e6a290
      (CXXThisExpr 0x9e6c4f0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9e6c550 <line:193:2, col:9>
    (DeclRefExpr 0x9e6c534 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9e6c480 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> &operator--() (CompoundStmt 0x9e6e0a0 </usr/include/c++/4.6/bits/stl_iterator.h:203:7, line:206:7>
  (UnaryOperator 0x9e6c5b0 <line:204:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9e6c590 <col:4> '_Iterator' lvalue ->current 0x9e6a290
      (CXXThisExpr 0x9e6c580 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9e6e090 <line:205:2, col:10>
    (UnaryOperator 0x9e6e078 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e6e068 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator--(int) (CompoundStmt 0x9e6e1a0 </usr/include/c++/4.6/bits/stl_iterator.h:215:7, line:219:7>
  (DeclStmt 0x9e6e120 <line:216:2, col:32>
    0x9e6e0c0 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x9e6e108 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9e6e0f8 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x9e6e160 <line:217:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9e6e140 <col:4> '_Iterator' lvalue ->current 0x9e6a290
      (CXXThisExpr 0x9e6e130 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x9e6e190 <line:218:2, col:9>
    (DeclRefExpr 0x9e6e174 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x9e6e0c0 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> operator+(difference_type __n) const (CompoundStmt 0x9e6e258 </usr/include/c++/4.6/bits/stl_iterator.h:228:7, col:49>
  (ReturnStmt 0x9e6e248 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9e6e228 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9e6e210 <col:33, col:43> '<dependent type>' '-'
        (MemberExpr 0x9e6e1d8 <col:33> 'const _Iterator' lvalue ->current 0x9e6a290
          (CXXThisExpr 0x9e6e1c8 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9e6e1f8 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9e6bae0 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator+=(difference_type __n) (CompoundStmt 0x9e6e310 </usr/include/c++/4.6/bits/stl_iterator.h:237:7, line:240:7>
  (CompoundAssignOperator 0x9e6e2b8 <line:238:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9e6e280 <col:2> '_Iterator' lvalue ->current 0x9e6a290
      (CXXThisExpr 0x9e6e270 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x9e6e2a0 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9e6bbf0 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9e6e300 <line:239:2, col:10>
    (UnaryOperator 0x9e6e2e8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e6e2d8 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator-(difference_type __n) const (CompoundStmt 0x9e6e3c0 </usr/include/c++/4.6/bits/stl_iterator.h:249:7, col:49>
  (ReturnStmt 0x9e6e3b0 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9e6e390 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x9e6e378 <col:33, col:43> '<dependent type>' '+'
        (MemberExpr 0x9e6e340 <col:33> 'const _Iterator' lvalue ->current 0x9e6a290
          (CXXThisExpr 0x9e6e330 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x9e6e360 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9e6bd00 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator-=(difference_type __n) (CompoundStmt 0x9e6e478 </usr/include/c++/4.6/bits/stl_iterator.h:258:7, line:261:7>
  (CompoundAssignOperator 0x9e6e420 <line:259:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9e6e3e8 <col:2> '_Iterator' lvalue ->current 0x9e6a290
      (CXXThisExpr 0x9e6e3d8 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x9e6e408 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9e6bdc0 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x9e6e468 <line:260:2, col:10>
    (UnaryOperator 0x9e6e450 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e6e440 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reference operator[](difference_type __n) const (CompoundStmt 0x9e6e528 </usr/include/c++/4.6/bits/stl_iterator.h:270:7, col:32>
  (ReturnStmt 0x9e6e518 <col:9, col:29>
    (UnaryOperator 0x9e6e500 <col:16, col:29> '<dependent type>' prefix '*'
      (ParenExpr 0x9e6e4e8 <col:17, col:29> '<dependent type>'
        (BinaryOperator 0x9e6e4d0 <col:18, col:26> '<dependent type>' '+'
          (UnaryOperator 0x9e6e4a0 <col:18, col:19> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9e6e490 <col:19> 'const reverse_iterator<_Iterator> *' this))
          (DeclRefExpr 0x9e6e4b4 <col:26> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x9e6be90 '__n' 'difference_type':'typename __traits_type::difference_type'))))))


    };
    template <typename _Iterator> inline bool operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9e6ea00 </usr/include/c++/4.6/bits/stl_iterator.h:287:5, col:40>
  (ReturnStmt 0x9e6e9f0 <col:7, col:37>
    (CXXOperatorCallExpr 0x9e6e9c8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9e6e990 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e6e880 0x9e58260)
      (CallExpr 0x9e6e900 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e6e8c8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9e6e8b0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e6e680 '__x' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9e6e970 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e6e938 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9e6e91c <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e6e780 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator<(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9e6eea0 </usr/include/c++/4.6/bits/stl_iterator.h:293:5, col:39>
  (ReturnStmt 0x9e6ee90 <col:7, col:36>
    (CXXOperatorCallExpr 0x9e6ee68 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9e6ee30 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e6ed20 0x9e58c60)
      (CallExpr 0x9e6eda0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e6ed68 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9e6ed50 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e6ec40 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9e6ee10 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e6edd8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9e6edbc <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e6eb40 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator!=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9e70250 </usr/include/c++/4.6/bits/stl_iterator.h:299:5, col:29>
  (ReturnStmt 0x9e70240 <col:7, col:26>
    (UnaryOperator 0x9e70228 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9e70210 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9e701e8 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9e701b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e6e880 0x9e58260)
          (DeclRefExpr 0x9e70180 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e6efe0 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9e70198 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e70070 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9e70640 </usr/include/c++/4.6/bits/stl_iterator.h:305:5, col:25>
  (ReturnStmt 0x9e70630 <col:7, col:20>
    (CXXOperatorCallExpr 0x9e70608 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9e705d0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e6ed20 0x9e58c60)
      (DeclRefExpr 0x9e705a0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e70490 '__y' 'const reverse_iterator<_Iterator> &')
      (DeclRefExpr 0x9e705b8 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e70390 '__x' 'const reverse_iterator<_Iterator> &'))))

;
    template <typename _Iterator> inline bool operator<=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9e70a60 </usr/include/c++/4.6/bits/stl_iterator.h:311:5, col:28>
  (ReturnStmt 0x9e70a50 <col:7, col:25>
    (UnaryOperator 0x9e70a38 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9e70a20 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9e709f8 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9e709c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e6ed20 0x9e58c60)
          (DeclRefExpr 0x9e70990 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e70880 '__y' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9e709a8 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e70780 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9e70e80 </usr/include/c++/4.6/bits/stl_iterator.h:317:5, col:28>
  (ReturnStmt 0x9e70e70 <col:7, col:25>
    (UnaryOperator 0x9e70e58 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9e70e40 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9e70e18 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9e70de0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e6ed20 0x9e58c60)
          (DeclRefExpr 0x9e70db0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e70ba0 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x9e70dc8 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e70ca0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline typename reverse_iterator<_Iterator>::difference_type operator-(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x9e71460 </usr/include/c++/4.6/bits/stl_iterator.h:323:5, col:39>
  (ReturnStmt 0x9e71450 <col:7, col:36>
    (CXXOperatorCallExpr 0x9e71428 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9e713f0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0)
      (CallExpr 0x9e71360 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e71328 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9e71310 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e711d0 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x9e713d0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e71398 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9e7137c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e710d0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline reverse_iterator<_Iterator> operator+(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator> &__x) (CompoundStmt 0x9e71a68 </usr/include/c++/4.6/bits/stl_iterator.h:329:5, col:61>
  (ReturnStmt 0x9e71a58 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x9e71a38 <col:14, col:58> 'reverse_iterator<_Iterator>'
      (CXXOperatorCallExpr 0x9e71a10 <col:42, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9e719d8 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0)
        (CallExpr 0x9e719a0 <col:42, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e71968 <col:42, col:46> '<dependent type>' lvalue
            (DeclRefExpr 0x9e71950 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x9e71750 '__x' 'const reverse_iterator<_Iterator> &')))
        (DeclRefExpr 0x9e719bc <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0x9e71650 '__n' 'typename reverse_iterator<_Iterator>::difference_type')))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9e71ff0 </usr/include/c++/4.6/bits/stl_iterator.h:337:5, col:40>
  (ReturnStmt 0x9e71fc8 <col:7, col:37>
    (CXXOperatorCallExpr 0x9e71fa0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9e71f60 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71e50 0x9e6e880 0x9e58260)
      (CallExpr 0x9e71ed0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e71e98 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9e71e80 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9e71c00 '__x' 'const reverse_iterator<_IteratorL> &')))
      (CallExpr 0x9e71f40 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e71f08 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9e71eec <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9e71d50 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9e724f8 </usr/include/c++/4.6/bits/stl_iterator.h:343:5, col:39>
  (ReturnStmt 0x9e724e8 <col:7, col:36>
    (CXXOperatorCallExpr 0x9e724c0 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9e72480 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e72370 0x9e6ed20 0x9e58c60)
      (CallExpr 0x9e723f0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e723b8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9e723a0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9e72290 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x9e72460 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e72428 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9e7240c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9e72190 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator!=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9e72978 </usr/include/c++/4.6/bits/stl_iterator.h:349:5, col:29>
  (ReturnStmt 0x9e72968 <col:7, col:26>
    (UnaryOperator 0x9e72950 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9e72938 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9e72910 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9e728d0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71e50 0x9e6e880 0x9e58260)
          (DeclRefExpr 0x9e728a0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9e72690 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x9e728b8 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9e72790 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9e72dc8 </usr/include/c++/4.6/bits/stl_iterator.h:355:5, col:25>
  (ReturnStmt 0x9e72db8 <col:7, col:20>
    (CXXOperatorCallExpr 0x9e72d90 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9e72d50 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e72370 0x9e6ed20 0x9e58c60)
      (DeclRefExpr 0x9e72d20 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9e72c10 '__y' 'const reverse_iterator<_IteratorR> &')
      (DeclRefExpr 0x9e72d38 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9e72b10 '__x' 'const reverse_iterator<_IteratorL> &'))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9e73888 </usr/include/c++/4.6/bits/stl_iterator.h:361:5, col:28>
  (ReturnStmt 0x9e73878 <col:7, col:25>
    (UnaryOperator 0x9e73860 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9e73848 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9e73820 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9e737e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e72370 0x9e6ed20 0x9e58c60)
          (DeclRefExpr 0x9e737b0 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9e736a0 '__y' 'const reverse_iterator<_IteratorR> &')
          (DeclRefExpr 0x9e737c8 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9e72f60 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9e73d08 </usr/include/c++/4.6/bits/stl_iterator.h:367:5, col:28>
  (ReturnStmt 0x9e73cf8 <col:7, col:25>
    (UnaryOperator 0x9e73ce0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9e73cc8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9e73ca0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9e73c60 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e72370 0x9e6ed20 0x9e58c60)
          (DeclRefExpr 0x9e73c30 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9e73a20 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x9e73c48 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9e73b20 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline typename reverse_iterator<_IteratorL>::difference_type operator-(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x9e74300 </usr/include/c++/4.6/bits/stl_iterator.h:381:5, col:39>
  (ReturnStmt 0x9e742f0 <col:7, col:36>
    (CXXOperatorCallExpr 0x9e742c8 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9e74290 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e74180 0x9e712e0)
      (CallExpr 0x9e74200 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e741c8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x9e741b0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x9e74070 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x9e74270 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e74238 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x9e7421c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x9e73f70 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _Container> class back_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class back_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        back_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9e756e0 </usr/include/c++/4.6/bits/stl_iterator.h:408:57, col:58> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9e756c4 <col:58> '_Container' lvalue ParmVar 0x9e751e0 '__x' '_Container &'))
) (CompoundStmt 0x9e75740 </usr/include/c++/4.6/bits/stl_iterator.h:408:63, col:65>)


        back_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9e75840 </usr/include/c++/4.6/bits/stl_iterator.h:424:7, line:427:7>
  (CallExpr 0x9e757e8 <line:425:2, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e75798 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9e75778 <col:2> '_Container *' lvalue ->container 0x9e75100
        (CXXThisExpr 0x9e75768 <col:2> 'back_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x9e757cc <col:23> 'typename _Container::const_reference' lvalue ParmVar 0x9e75390 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9e75830 <line:426:2, col:10>
    (UnaryOperator 0x9e75818 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e75808 <col:10> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator*() (CompoundStmt 0x9e75890 </usr/include/c++/4.6/bits/stl_iterator.h:447:7, col:23>
  (ReturnStmt 0x9e75880 <col:9, col:17>
    (UnaryOperator 0x9e75868 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e75858 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator++() (CompoundStmt 0x9e758e0 </usr/include/c++/4.6/bits/stl_iterator.h:452:7, col:23>
  (ReturnStmt 0x9e758d0 <col:9, col:17>
    (UnaryOperator 0x9e758b8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e758a8 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9e75930 </usr/include/c++/4.6/bits/stl_iterator.h:457:7, col:23>
  (ReturnStmt 0x9e75920 <col:9, col:17>
    (UnaryOperator 0x9e75908 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e758f8 <col:17> 'back_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline back_insert_iterator<_Container> back_inserter(_Container &__x) (CompoundStmt 0x9e768e8 </usr/include/c++/4.6/bits/stl_iterator.h:474:5, col:53>
  (ReturnStmt 0x9e768d8 <col:7, col:50>
    (CXXUnresolvedConstructExpr 0x9e768b8 <col:14, col:50> 'back_insert_iterator<_Container>'
      (DeclRefExpr 0x9e768a0 <col:47> '_Container' lvalue ParmVar 0x9e75a60 '__x' '_Container &'))))

;
    template <typename _Container> class front_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class front_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        front_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x9e772b0 </usr/include/c++/4.6/bits/stl_iterator.h:498:67, col:68> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9e77294 <col:68> '_Container' lvalue ParmVar 0x9e76df0 '__x' '_Container &'))
) (CompoundStmt 0x9e77310 </usr/include/c++/4.6/bits/stl_iterator.h:498:73, col:75>)


        front_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9e77410 </usr/include/c++/4.6/bits/stl_iterator.h:514:7, line:517:7>
  (CallExpr 0x9e773b8 <line:515:2, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9e77368 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x9e77348 <col:2> '_Container *' lvalue ->container 0x9e76d10
        (CXXThisExpr 0x9e77338 <col:2> 'front_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x9e7739c <col:24> 'typename _Container::const_reference' lvalue ParmVar 0x9e76f60 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x9e77400 <line:516:2, col:10>
    (UnaryOperator 0x9e773e8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e773d8 <col:10> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator*() (CompoundStmt 0x9e77460 </usr/include/c++/4.6/bits/stl_iterator.h:537:7, col:23>
  (ReturnStmt 0x9e77450 <col:9, col:17>
    (UnaryOperator 0x9e77438 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e77428 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator++() (CompoundStmt 0x9e774b0 </usr/include/c++/4.6/bits/stl_iterator.h:542:7, col:23>
  (ReturnStmt 0x9e774a0 <col:9, col:17>
    (UnaryOperator 0x9e77488 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e77478 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> operator++(int) (CompoundStmt 0x9e77500 </usr/include/c++/4.6/bits/stl_iterator.h:547:7, col:23>
  (ReturnStmt 0x9e774f0 <col:9, col:17>
    (UnaryOperator 0x9e774d8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e774c8 <col:17> 'front_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline front_insert_iterator<_Container> front_inserter(_Container &__x) (CompoundStmt 0x9e78160 </usr/include/c++/4.6/bits/stl_iterator.h:564:5, col:54>
  (ReturnStmt 0x9e78150 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x9e77838 <col:14, col:51> 'front_insert_iterator<_Container>'
      (DeclRefExpr 0x9e77820 <col:48> '_Container' lvalue ParmVar 0x9e77630 '__x' '_Container &'))))

;
    template <typename _Container> class insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class insert_iterator;
    protected:
    protected:
        _Container *container;
        typename _Container::iterator iter;
    public:
    public:
        typedef _Container container_type;
        insert_iterator<_Container>(_Container &__x, typename _Container::iterator __i) : container((UnaryOperator 0x9e78c80 </usr/include/c++/4.6/bits/stl_iterator.h:597:19, col:20> '<dependent type>' prefix '&'
  (DeclRefExpr 0x9e78c64 <col:20> '_Container' lvalue ParmVar 0x9e78730 '__x' '_Container &'))
), iter((DeclRefExpr 0x9e78cd8 </usr/include/c++/4.6/bits/stl_iterator.h:597:31> 'typename _Container::iterator' lvalue ParmVar 0x9e787b0 '__i' 'typename _Container::iterator')
) (CompoundStmt 0x9e78d30 </usr/include/c++/4.6/bits/stl_iterator.h:597:36, col:37>)


        insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x9e78ef8 </usr/include/c++/4.6/bits/stl_iterator.h:625:7, line:629:7>
  (BinaryOperator 0x9e78e60 <line:626:2, col:40> '<dependent type>' '='
    (MemberExpr 0x9e78d68 <col:2> 'typename _Container::iterator' lvalue ->iter 0x9e78650
      (CXXThisExpr 0x9e78d58 <col:2> 'insert_iterator<_Container> *' this))
    (CallExpr 0x9e78e38 <col:9, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9e78db8 <col:9, col:20> '<dependent type>' lvalue
        (MemberExpr 0x9e78d98 <col:9> '_Container *' lvalue ->container 0x9e78590
          (CXXThisExpr 0x9e78d88 <col:9> 'insert_iterator<_Container> *' this)))
      (MemberExpr 0x9e78e00 <col:27> 'typename _Container::iterator' lvalue ->iter 0x9e78650
        (CXXThisExpr 0x9e78df0 <col:27> 'insert_iterator<_Container> *' this))
      (DeclRefExpr 0x9e78e20 <col:33> 'typename _Container::const_reference' lvalue ParmVar 0x9e78930 '__value' 'typename _Container::const_reference')))
  (UnaryOperator 0x9e78ea8 <line:627:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9e78e88 <col:4> 'typename _Container::iterator' lvalue ->iter 0x9e78650
      (CXXThisExpr 0x9e78e78 <col:4> 'insert_iterator<_Container> *' this)))
  (ReturnStmt 0x9e78ee8 <line:628:2, col:10>
    (UnaryOperator 0x9e78ed0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e78ec0 <col:10> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator*() (CompoundStmt 0x9e78f50 </usr/include/c++/4.6/bits/stl_iterator.h:651:7, col:23>
  (ReturnStmt 0x9e78f40 <col:9, col:17>
    (UnaryOperator 0x9e78f28 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e78f18 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++() (CompoundStmt 0x9e78fa0 </usr/include/c++/4.6/bits/stl_iterator.h:656:7, col:23>
  (ReturnStmt 0x9e78f90 <col:9, col:17>
    (UnaryOperator 0x9e78f78 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e78f68 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++(int) (CompoundStmt 0x9e78ff0 </usr/include/c++/4.6/bits/stl_iterator.h:661:7, col:23>
  (ReturnStmt 0x9e78fe0 <col:9, col:17>
    (UnaryOperator 0x9e78fc8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e78fb8 <col:17> 'insert_iterator<_Container> *' this))))


    };
    template <typename _Container, typename _Iterator> inline insert_iterator<_Container> inserter(_Container &__x, _Iterator __i) (CompoundStmt 0x9e7a1d0 </usr/include/c++/4.6/bits/stl_iterator.h:678:5, line:681:5>
  (ReturnStmt 0x9e7a1c0 <line:679:7, line:680:41>
    (CXXUnresolvedConstructExpr 0x9e7a1a0 <line:679:14, line:680:41> 'insert_iterator<_Container>'
      (DeclRefExpr 0x9e7a0f0 <line:679:42> '_Container' lvalue ParmVar 0x9e79eb0 '__x' '_Container &')
      (CXXUnresolvedConstructExpr 0x9e7a180 <line:680:7, col:40> 'typename _Container::iterator'
        (DeclRefExpr 0x9e7a164 <col:37> '_Iterator' lvalue ParmVar 0x9e79ef0 '__i' '_Iterator')))))

;
}
namespace __gnu_cxx {
    using std::iterator_traits;
    ;
    using std::iterator;
    ;
    template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        _Iterator _M_current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator<_Iterator, _Container>() : _M_current((CXXUnresolvedConstructExpr 0x9e23e78 </usr/include/c++/4.6/bits/stl_iterator.h:717:59, col:69> '_Iterator')
) (CompoundStmt 0x9e23ed0 </usr/include/c++/4.6/bits/stl_iterator.h:717:72, col:74>)


        __normal_iterator<_Iterator, _Container>(const _Iterator &__i) : _M_current((DeclRefExpr 0x9e23ee0 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const _Iterator' lvalue ParmVar 0x9e7ab20 '__i' 'const _Iterator &')
) (CompoundStmt 0x9e7f120 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator<_Iterator, _Container>(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &__i) : _M_current((CallExpr 0x9e7f180 </usr/include/c++/4.6/bits/stl_iterator.h:728:22, col:31> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9e7f148 <col:22, col:26> '<dependent type>' lvalue
    (DeclRefExpr 0x9e7f130 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0x9e232f0 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &')))
) (CompoundStmt 0x9e7f1e0 </usr/include/c++/4.6/bits/stl_iterator.h:728:34, col:36>)

;
        reference operator*() const (CompoundStmt 0x9e7f280 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0x9e7f270 <col:9, col:17>
    (UnaryOperator 0x9e7f258 <col:16, col:17> '<dependent type>' prefix '*'
      (MemberExpr 0x9e7f234 <col:17> 'const _Iterator' lvalue ->_M_current 0x9e7a5d0
        (CXXThisExpr 0x9e7f208 <col:17> 'const __normal_iterator<_Iterator, _Container> *' this)))))


        pointer operator->() const (CompoundStmt 0x9e7f2d8 </usr/include/c++/4.6/bits/stl_iterator.h:737:7, col:28>
  (ReturnStmt 0x9e7f2c8 <col:9, col:16>
    (MemberExpr 0x9e7f2a8 <col:16> 'const _Iterator' lvalue ->_M_current 0x9e7a5d0
      (CXXThisExpr 0x9e7f298 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> &operator++() (CompoundStmt 0x9e7f370 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0x9e7f320 <line:742:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x9e7f300 <col:4> '_Iterator' lvalue ->_M_current 0x9e7a5d0
      (CXXThisExpr 0x9e7f2f0 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x9e7f360 <line:743:2, col:10>
    (UnaryOperator 0x9e7f348 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e7f338 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator++(int) (CompoundStmt 0x9e7f420 </usr/include/c++/4.6/bits/stl_iterator.h:748:7, col:49>
  (ReturnStmt 0x9e7f410 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9e7f3f0 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x9e7f3d8 <col:34, col:44> '<dependent type>' postfix '++'
        (MemberExpr 0x9e7f3a0 <col:34> '_Iterator' lvalue ->_M_current 0x9e7a5d0
          (CXXThisExpr 0x9e7f390 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        __normal_iterator<_Iterator, _Container> &operator--() (CompoundStmt 0x9e7f4b8 </usr/include/c++/4.6/bits/stl_iterator.h:753:7, line:756:7>
  (UnaryOperator 0x9e7f468 <line:754:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x9e7f448 <col:4> '_Iterator' lvalue ->_M_current 0x9e7a5d0
      (CXXThisExpr 0x9e7f438 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x9e7f4a8 <line:755:2, col:10>
    (UnaryOperator 0x9e7f490 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e7f480 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator--(int) (CompoundStmt 0x9e7f568 </usr/include/c++/4.6/bits/stl_iterator.h:760:7, col:49>
  (ReturnStmt 0x9e7f558 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9e7f538 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x9e7f520 <col:34, col:44> '<dependent type>' postfix '--'
        (MemberExpr 0x9e7f4e8 <col:34> '_Iterator' lvalue ->_M_current 0x9e7a5d0
          (CXXThisExpr 0x9e7f4d8 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        reference operator[](const difference_type &__n) const (CompoundStmt 0x9e7f5f0 </usr/include/c++/4.6/bits/stl_iterator.h:765:7, col:33>
  (ReturnStmt 0x9e7f5e0 <col:9, col:30>
    (ArraySubscriptExpr 0x9e7f5c8 <col:16, col:30> '<dependent type>' lvalue
      (MemberExpr 0x9e7f590 <col:16> 'const _Iterator' lvalue ->_M_current 0x9e7a5d0
        (CXXThisExpr 0x9e7f580 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))
      (DeclRefExpr 0x9e7f5b0 <col:27> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9e238c0 '__n' 'const difference_type &'))))


        __normal_iterator<_Iterator, _Container> &operator+=(const difference_type &__n) (CompoundStmt 0x9e7f6a8 </usr/include/c++/4.6/bits/stl_iterator.h:769:7, col:42>
  (CompoundAssignOperator 0x9e7f650 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9e7f618 <col:9> '_Iterator' lvalue ->_M_current 0x9e7a5d0
      (CXXThisExpr 0x9e7f608 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x9e7f638 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9e239e0 '__n' 'const difference_type &'))
  (ReturnStmt 0x9e7f698 <col:28, col:36>
    (UnaryOperator 0x9e7f680 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e7f670 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator+(const difference_type &__n) const (CompoundStmt 0x9e7f758 </usr/include/c++/4.6/bits/stl_iterator.h:773:7, col:53>
  (ReturnStmt 0x9e7f748 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9e7f728 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x9e7f710 <col:34, col:47> '<dependent type>' '+'
        (MemberExpr 0x9e7f6d8 <col:34> 'const _Iterator' lvalue ->_M_current 0x9e7a5d0
          (CXXThisExpr 0x9e7f6c8 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x9e7f6f8 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9e23b00 '__n' 'const difference_type &')))))


        __normal_iterator<_Iterator, _Container> &operator-=(const difference_type &__n) (CompoundStmt 0x9e7f810 </usr/include/c++/4.6/bits/stl_iterator.h:777:7, col:42>
  (CompoundAssignOperator 0x9e7f7b8 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9e7f780 <col:9> '_Iterator' lvalue ->_M_current 0x9e7a5d0
      (CXXThisExpr 0x9e7f770 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x9e7f7a0 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9e23c20 '__n' 'const difference_type &'))
  (ReturnStmt 0x9e7f800 <col:28, col:36>
    (UnaryOperator 0x9e7f7e8 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9e7f7d8 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator-(const difference_type &__n) const (CompoundStmt 0x9e7f8c0 </usr/include/c++/4.6/bits/stl_iterator.h:781:7, col:53>
  (ReturnStmt 0x9e7f8b0 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9e7f890 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x9e7f878 <col:34, col:47> '<dependent type>' '-'
        (MemberExpr 0x9e7f840 <col:34> 'const _Iterator' lvalue ->_M_current 0x9e7a5d0
          (CXXThisExpr 0x9e7f830 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x9e7f860 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x9e23d00 '__n' 'const difference_type &')))))


        const _Iterator &base() const (CompoundStmt 0x9e7f918 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x9e7f908 <col:9, col:16>
    (MemberExpr 0x9e7f8e8 <col:16> 'const _Iterator' lvalue ->_M_current 0x9e7a5d0
      (CXXThisExpr 0x9e7f8d8 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


    };
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator==(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9e80030 </usr/include/c++/4.6/bits/stl_iterator.h:801:5, col:44>
  (ReturnStmt 0x9e80020 <col:7, col:41>
    (CXXOperatorCallExpr 0x9e7fff8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9e7ffc0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e7feb0)
      (CallExpr 0x9e7ff30 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e7fef8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e7fee0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9e7fbd0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9e7ffa0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e7ff68 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9e7ff4c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9e7fdb0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator==(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9e81360 </usr/include/c++/4.6/bits/stl_iterator.h:807:5, col:44>
  (ReturnStmt 0x9e81350 <col:7, col:41>
    (CXXOperatorCallExpr 0x9e81328 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9e812f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e811e0 0x9e7feb0)
      (CallExpr 0x9e81260 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e81228 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e81210 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e80f70 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9e812d0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e81298 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9e8127c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e810e0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator!=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9e81980 </usr/include/c++/4.6/bits/stl_iterator.h:813:5, col:44>
  (ReturnStmt 0x9e81970 <col:7, col:41>
    (CXXOperatorCallExpr 0x9e81948 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9e81910 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e81800)
      (CallExpr 0x9e81880 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e81848 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e81830 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9e815b0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9e818f0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e818b8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9e8189c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9e81720 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator!=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9e81f70 </usr/include/c++/4.6/bits/stl_iterator.h:819:5, col:44>
  (ReturnStmt 0x9e81f60 <col:7, col:41>
    (CXXOperatorCallExpr 0x9e81f38 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9e81f00 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e81df0 0x9e81800)
      (CallExpr 0x9e81e70 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e81e38 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e81e20 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e81b80 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9e81ee0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e81ea8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9e81e8c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e81cf0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9e82590 </usr/include/c++/4.6/bits/stl_iterator.h:826:5, col:43>
  (ReturnStmt 0x9e82580 <col:7, col:40>
    (CXXOperatorCallExpr 0x9e82558 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9e82520 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e82410)
      (CallExpr 0x9e82490 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e82458 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e82440 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9e821c0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9e82500 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e824c8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9e824ac <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9e82330 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9e82b60 </usr/include/c++/4.6/bits/stl_iterator.h:832:5, col:43>
  (ReturnStmt 0x9e82b50 <col:7, col:40>
    (CXXOperatorCallExpr 0x9e82b28 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9e82af0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e829e0 0x9e82410)
      (CallExpr 0x9e82a60 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e82a28 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e82a10 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e82790 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9e82ad0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e82a98 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9e82a7c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e82900 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9e83190 </usr/include/c++/4.6/bits/stl_iterator.h:838:5, col:43>
  (ReturnStmt 0x9e83180 <col:7, col:40>
    (CXXOperatorCallExpr 0x9e83158 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9e83120 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e83010)
      (CallExpr 0x9e83090 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e83058 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e83040 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9e82db0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9e83100 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e830c8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9e830ac <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9e82f30 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9e83760 </usr/include/c++/4.6/bits/stl_iterator.h:844:5, col:43>
  (ReturnStmt 0x9e83750 <col:7, col:40>
    (CXXOperatorCallExpr 0x9e83728 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9e836f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e835e0 0x9e83010)
      (CallExpr 0x9e83660 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e83628 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e83610 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e83390 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9e836d0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e83698 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9e8367c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e83500 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9e83d80 </usr/include/c++/4.6/bits/stl_iterator.h:850:5, col:44>
  (ReturnStmt 0x9e83d70 <col:7, col:41>
    (CXXOperatorCallExpr 0x9e83d48 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9e83d10 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e83c00)
      (CallExpr 0x9e83c80 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e83c48 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e83c30 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9e839b0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9e83cf0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e83cb8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9e83c9c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9e83b20 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9e84360 </usr/include/c++/4.6/bits/stl_iterator.h:856:5, col:44>
  (ReturnStmt 0x9e84350 <col:7, col:41>
    (CXXOperatorCallExpr 0x9e84328 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9e842f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e841e0 0x9e83c00)
      (CallExpr 0x9e84260 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e84228 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e84210 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e83f90 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9e842d0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e84298 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9e8427c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e84100 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9e84980 </usr/include/c++/4.6/bits/stl_iterator.h:862:5, col:44>
  (ReturnStmt 0x9e84970 <col:7, col:41>
    (CXXOperatorCallExpr 0x9e84948 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9e84910 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e84800)
      (CallExpr 0x9e84880 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e84848 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e84830 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9e845b0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9e848f0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e848b8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9e8489c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9e84720 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9e85370 </usr/include/c++/4.6/bits/stl_iterator.h:868:5, col:44>
  (ReturnStmt 0x9e85360 <col:7, col:41>
    (CXXOperatorCallExpr 0x9e85338 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x9e85300 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e84dd0 0x9e84800)
      (CallExpr 0x9e85270 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e85238 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e85220 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e84b80 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9e852e0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e852a8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9e8528c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e84cf0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline typename __normal_iterator<_IteratorL, _Container>::difference_type operator-(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x9e85b10 </usr/include/c++/4.6/bits/stl_iterator.h:886:5, col:43>
  (ReturnStmt 0x9e85b00 <col:7, col:40>
    (CXXOperatorCallExpr 0x9e85ad8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9e85aa0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e85990)
      (CallExpr 0x9e85a10 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e859d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e859c0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x9e85710 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x9e85a80 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e85a48 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9e85a2c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x9e85880 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline typename __normal_iterator<_Iterator, _Container>::difference_type operator-(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x9e868a8 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0x9e86898 <col:7, col:40>
    (CXXOperatorCallExpr 0x9e86870 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9e86838 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e860e0 0x9e85990)
      (CallExpr 0x9e86160 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e86128 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9e86110 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e85e60 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x9e861d0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9e86198 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9e8617c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e85fd0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline __normal_iterator<_Iterator, _Container> operator+(typename __normal_iterator<_Iterator, _Container>::difference_type __n, const __normal_iterator<_Iterator, _Container> &__i) (CompoundStmt 0x9e87080 </usr/include/c++/4.6/bits/stl_iterator.h:898:5, col:74>
  (ReturnStmt 0x9e87070 <col:7, col:71>
    (CXXUnresolvedConstructExpr 0x9e87050 <col:14, col:71> '__normal_iterator<_Iterator, _Container>'
      (CXXOperatorCallExpr 0x9e87028 <col:55, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x9e86ff0 <col:66, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e86e30)
        (CallExpr 0x9e86fb8 <col:55, col:64> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9e86f80 <col:55, col:59> '<dependent type>' lvalue
            (DeclRefExpr 0x9e86f68 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x9e86d00 '__i' 'const __normal_iterator<_Iterator, _Container> &')))
        (DeclRefExpr 0x9e86fd4 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0x9e86b90 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type')))))

;
}
namespace std {
    namespace __debug {
    }
}
namespace __gnu_debug {
    using namespace std::__debug;
}
namespace std {
    template <bool _BoolType = true> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9e8d130 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x9e8d108 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x9e8d070 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9e55460 0x9e559a0)
    (UnaryOperator 0x9e8d0c0 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9e8d0a8 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9e8cef0 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x9e8d0f0 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9e8d0d4 <col:23> '_ForwardIterator2' lvalue ParmVar 0x9e8cf30 '__b' '_ForwardIterator2'))))

;
    }
template <bool _BoolType> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9e8cc08 </usr/include/c++/4.6/bits/stl_algobase.h:86:9, line:92:2>
  (DeclStmt 0x9e8ca40 <line:87:11, line:88:24>
    0x9e8ca10 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x9e8caf0 <line:89:11, col:50>
    0x9e8ca70 "_ValueType1 __tmp =
      (ParenExpr 0x9e8cad8 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
        (UnaryOperator 0x9e8cac0 </usr/include/c++/4.6/bits/stl_algobase.h:89:45, col:46> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9e8caa4 <col:46> '_ForwardIterator1' lvalue ParmVar 0x9e875c0 '__a' '_ForwardIterator1')))")
  (BinaryOperator 0x9e8cb78 <line:90:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x9e8cb18 </usr/include/c++/4.6/bits/stl_algobase.h:90:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9e8cb00 <col:12> '_ForwardIterator1' lvalue ParmVar 0x9e875c0 '__a' '_ForwardIterator1'))
    (ParenExpr 0x9e8cb60 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
      (UnaryOperator 0x9e8cb48 </usr/include/c++/4.6/bits/stl_algobase.h:90:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9e8cb2c <col:33> '_ForwardIterator2' lvalue ParmVar 0x9e87600 '__b' '_ForwardIterator2'))))
  (BinaryOperator 0x9e8cbf0 <line:91:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x9e8cba8 </usr/include/c++/4.6/bits/stl_algobase.h:91:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9e8cb90 <col:12> '_ForwardIterator2' lvalue ParmVar 0x9e87600 '__b' '_ForwardIterator2'))
    (ParenExpr 0x9e8cbd8 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue
      (DeclRefExpr 0x9e8cbbc </usr/include/c++/4.6/bits/stl_algobase.h:91:32> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue Var 0x9e8ca70 '__tmp' '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'))))

;
    };
    struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9e8d130 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x9e8d108 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x9e8d070 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x9e55460 0x9e559a0)
    (UnaryOperator 0x9e8d0c0 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9e8d0a8 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9e8cef0 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x9e8d0f0 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9e8d0d4 <col:23> '_ForwardIterator2' lvalue ParmVar 0x9e8cf30 '__b' '_ForwardIterator2'))))

;
    };
    template <typename _ForwardIterator1, typename _ForwardIterator2> inline void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x9e8e588 </usr/include/c++/4.6/bits/stl_algobase.h:119:5, line:143:5>
  (DeclStmt 0x9e8d480 <line:120:7, line:121:13>
    0x9e8d450 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x9e8d610 <line:122:7, line:123:13>
    0x9e8d5e0 "typedef typename iterator_traits<_ForwardIterator2>::value_type _ValueType2")
  (DeclStmt 0x9e8d740 <line:135:7, line:136:17>
    0x9e8d710 "typedef typename iterator_traits<_ForwardIterator1>::reference _ReferenceType1")
  (DeclStmt 0x9e8d890 <line:137:7, line:138:17>
    0x9e8d860 "typedef typename iterator_traits<_ForwardIterator2>::reference _ReferenceType2")
  (CallExpr 0x9e8e560 <line:139:7, line:142:20> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9e8e508 <line:139:7, line:142:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9e8e52c <col:12> '_ForwardIterator1' lvalue ParmVar 0x9e8d210 '__a' '_ForwardIterator1')
    (DeclRefExpr 0x9e8e544 <col:17> '_ForwardIterator2' lvalue ParmVar 0x9e8d250 '__b' '_ForwardIterator2')))

;
    template <typename _ForwardIterator1, typename _ForwardIterator2> _ForwardIterator2 swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2) (CompoundStmt 0x9e8ea70 </usr/include/c++/4.6/bits/stl_algobase.h:161:5, line:172:5>
  (NullStmt 0x9e8e848 <line:167:56>)
  (ForStmt 0x9e8ea20 <line:169:7, line:170:35>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e8e8c8 <line:169:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9e8e888 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
      (DeclRefExpr 0x9e8e854 <col:14> '_ForwardIterator1' lvalue ParmVar 0x9e8e670 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x9e8e86c <col:26> '_ForwardIterator1' lvalue ParmVar 0x9e8e6b0 '__last1' '_ForwardIterator1'))
    (BinaryOperator 0x9e8e950 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x9e8e908 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e8e8ec <col:37> '_ForwardIterator1' lvalue ParmVar 0x9e8e670 '__first1' '_ForwardIterator1'))
      (UnaryOperator 0x9e8e938 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e8e91c <col:49> '_ForwardIterator2' lvalue ParmVar 0x9e8e6f0 '__first2' '_ForwardIterator2')))
    (CallExpr 0x9e8e9f8 <line:170:2, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9e8e990 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8d330)
      (DeclRefExpr 0x9e8e9c4 <col:17> '_ForwardIterator1' lvalue ParmVar 0x9e8e670 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x9e8e9dc <col:27> '_ForwardIterator2' lvalue ParmVar 0x9e8e6f0 '__first2' '_ForwardIterator2')))
  (ReturnStmt 0x9e8ea60 <line:171:7, col:14>
    (DeclRefExpr 0x9e8ea44 <col:14> '_ForwardIterator2' lvalue ParmVar 0x9e8e6f0 '__first2' '_ForwardIterator2')))

;
    template <typename _Tp = int> inline const int &min(const int &__a, const int &__b)template <typename _Tp = unsigned int> inline const unsigned int &min(const unsigned int &__a, const unsigned int &__b)template <typename _Tp> inline const _Tp &min(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x9e8eda8 </usr/include/c++/4.6/bits/stl_algobase.h:188:5, line:195:5>
  (IfStmt 0x9e8ed60 <line:192:7, line:193:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e8ed10 <line:192:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9e8ecd0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
      (DeclRefExpr 0x9e8eca0 <col:11> 'const _Tp' lvalue ParmVar 0x9e8eb70 '__b' 'const _Tp &')
      (DeclRefExpr 0x9e8ecb8 <col:17> 'const _Tp' lvalue ParmVar 0x9e8eb20 '__a' 'const _Tp &'))
    (ReturnStmt 0x9e8ed50 <line:193:2, col:9>
      (DeclRefExpr 0x9e8ed34 <col:9> 'const _Tp' lvalue ParmVar 0x9e8eb70 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9e8ed98 <line:194:7, col:14>
    (DeclRefExpr 0x9e8ed7c <col:14> 'const _Tp' lvalue ParmVar 0x9e8eb20 '__a' 'const _Tp &')))

;
    template <typename _Tp> inline const _Tp &max(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x9e8f4d8 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0x9e8f490 <line:215:7, line:216:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e8f440 <line:215:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9e8f400 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
      (DeclRefExpr 0x9e8f3d0 <col:11> 'const _Tp' lvalue ParmVar 0x9e8ee50 '__a' 'const _Tp &')
      (DeclRefExpr 0x9e8f3e8 <col:17> 'const _Tp' lvalue ParmVar 0x9e8eea0 '__b' 'const _Tp &'))
    (ReturnStmt 0x9e8f480 <line:216:2, col:9>
      (DeclRefExpr 0x9e8f464 <col:9> 'const _Tp' lvalue ParmVar 0x9e8eea0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9e8f4c8 <line:217:7, col:14>
    (DeclRefExpr 0x9e8f4ac <col:14> 'const _Tp' lvalue ParmVar 0x9e8ee50 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &min(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x9e8f898 </usr/include/c++/4.6/bits/stl_algobase.h:234:5, line:239:5>
  (IfStmt 0x9e8f850 <line:236:7, line:237:9>
    <<<NULL>>>
    (CallExpr 0x9e8f800 <line:236:11, col:26> '<dependent type>'
      (DeclRefExpr 0x9e8f7b4 <col:11> '_Compare' lvalue ParmVar 0x9e8f660 '__comp' '_Compare')
      (DeclRefExpr 0x9e8f7cc <col:18> 'const _Tp' lvalue ParmVar 0x9e8f620 '__b' 'const _Tp &')
      (DeclRefExpr 0x9e8f7e4 <col:23> 'const _Tp' lvalue ParmVar 0x9e8f5d0 '__a' 'const _Tp &'))
    (ReturnStmt 0x9e8f840 <line:237:2, col:9>
      (DeclRefExpr 0x9e8f824 <col:9> 'const _Tp' lvalue ParmVar 0x9e8f620 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9e8f888 <line:238:7, col:14>
    (DeclRefExpr 0x9e8f86c <col:14> 'const _Tp' lvalue ParmVar 0x9e8f5d0 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &max(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x9e8fc28 </usr/include/c++/4.6/bits/stl_algobase.h:255:5, line:260:5>
  (IfStmt 0x9e8fbe0 <line:257:7, line:258:9>
    <<<NULL>>>
    (CallExpr 0x9e8fb90 <line:257:11, col:26> '<dependent type>'
      (DeclRefExpr 0x9e8fb44 <col:11> '_Compare' lvalue ParmVar 0x9e8fa20 '__comp' '_Compare')
      (DeclRefExpr 0x9e8fb5c <col:18> 'const _Tp' lvalue ParmVar 0x9e8f990 '__a' 'const _Tp &')
      (DeclRefExpr 0x9e8fb74 <col:23> 'const _Tp' lvalue ParmVar 0x9e8f9e0 '__b' 'const _Tp &'))
    (ReturnStmt 0x9e8fbd0 <line:258:2, col:9>
      (DeclRefExpr 0x9e8fbb4 <col:9> 'const _Tp' lvalue ParmVar 0x9e8f9e0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x9e8fc18 <line:259:7, col:14>
    (DeclRefExpr 0x9e8fbfc <col:14> 'const _Tp' lvalue ParmVar 0x9e8f990 '__a' 'const _Tp &')))

;
    template <typename _Iterator = unsigned long *> struct _Niter_base :  _Iter_base<unsigned long *, __is_normal_iterator<unsigned long *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator> struct _Niter_base :  _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value> {
        struct _Niter_base;
    };
    template <typename _Iterator = unsigned long *> inline typename _Niter_base<unsigned long *>::iterator_type __niter_base(unsigned long *__it) (CompoundStmt 0xa348018 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0xa348008 <col:7, col:55>
    (CallExpr 0xa347fd8 <col:14, col:55> 'iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa347fc8 <col:14, col:43> 'iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa347f6c <col:14, col:43> 'iterator_type (unsigned long *)' lvalue CXXMethod 0xa345bd0 '_S_base' 'iterator_type (unsigned long *)'))
      (ImplicitCastExpr 0xa347ff8 <col:51> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa347f8c <col:51> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa345ce0 '__it' 'unsigned long *':'unsigned long *')))))

template <typename _Iterator> inline typename _Niter_base<_Iterator>::iterator_type __niter_base(_Iterator __it) (CompoundStmt 0x9e908e0 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x9e908d0 <col:7, col:55>
    (CallExpr 0x9e908b0 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9e90870 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x9e90894 <col:51> '_Iterator' lvalue ParmVar 0x9e90240 '__it' '_Iterator'))))

;
    template <typename _Iterator> struct _Miter_base :  _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value> {
        struct _Miter_base;
    };
    template <typename _Iterator> inline typename _Miter_base<_Iterator>::iterator_type __miter_base(_Iterator __it) (CompoundStmt 0x9e91170 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0x9e91160 <col:7, col:55>
    (CallExpr 0x9e91140 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9e91100 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x9e91124 <col:51> '_Iterator' lvalue ParmVar 0x9e90f00 '__it' '_Iterator'))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9e93178 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x9e92d40 <line:326:4, col:68>
    0x9e92d10 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x9e93128 <line:327:4, line:332:6>
    (DeclStmt 0x9e92e38 <line:327:8, col:40>
      0x9e92d70 "_Distance __n =
        (CXXOperatorCallExpr 0x9e92e10 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9e92dd8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (DeclRefExpr 0x9e92da4 <col:24> '_II' lvalue ParmVar 0x9e92aa0 '__last' '_II')
          (DeclRefExpr 0x9e92dbc <col:33> '_II' lvalue ParmVar 0x9e92a60 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e92eb8 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9e92e78 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (DeclRefExpr 0x9e92e48 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9e92d70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x9e92e60 <col:48> 'int' 0))
    (UnaryOperator 0x9e92ef8 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9e92edc <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9e92d70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x9e93108 <line:328:6, line:332:6>
      (BinaryOperator 0x9e93090 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x9e92f28 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9e92f0c <col:9> '_OI' lvalue ParmVar 0x9e92ae0 '__result' '_OI'))
        (UnaryOperator 0x9e92f58 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9e92f3c <col:21> '_II' lvalue ParmVar 0x9e92a60 '__first' '_II')))
      (UnaryOperator 0x9e930c0 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e930a8 <col:10> '_II' lvalue ParmVar 0x9e92a60 '__first' '_II'))
      (UnaryOperator 0x9e930f0 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e930d4 <col:10> '_OI' lvalue ParmVar 0x9e92ae0 '__result' '_OI'))))
  (ReturnStmt 0x9e93168 <line:333:4, col:11>
    (DeclRefExpr 0x9e9314c <col:11> '_OI' lvalue ParmVar 0x9e92ae0 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9e926e8 </usr/include/c++/4.6/bits/stl_algobase.h:297:9, line:301:2>
  (ForStmt 0x9e92698 <line:298:4, line:299:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e92580 <line:298:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9e92540 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
      (DeclRefExpr 0x9e92510 <col:11> '_II' lvalue ParmVar 0x9e915c0 '__first' '_II')
      (DeclRefExpr 0x9e92528 <col:22> '_II' lvalue ParmVar 0x9e91600 '__last' '_II'))
    (BinaryOperator 0x9e92608 <col:30, col:44> '<dependent type>' ','
      (UnaryOperator 0x9e925c0 <col:30, col:32> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e925a4 <col:32> '_OI' lvalue ParmVar 0x9e91640 '__result' '_OI'))
      (UnaryOperator 0x9e925f0 <col:42, col:44> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e925d4 <col:44> '_II' lvalue ParmVar 0x9e915c0 '__first' '_II')))
    (BinaryOperator 0x9e92680 <line:299:6, col:19> '<dependent type>' '='
      (UnaryOperator 0x9e92638 <col:6, col:7> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9e92620 <col:7> '_OI' lvalue ParmVar 0x9e91640 '__result' '_OI'))
      (UnaryOperator 0x9e92668 <col:18, col:19> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9e9264c <col:19> '_II' lvalue ParmVar 0x9e915c0 '__first' '_II'))))
  (ReturnStmt 0x9e926d8 <line:300:4, col:11>
    (DeclRefExpr 0x9e926bc <col:11> '_OI' lvalue ParmVar 0x9e91640 '__result' '_OI')))

;
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x9e93178 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x9e92d40 <line:326:4, col:68>
    0x9e92d10 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x9e93128 <line:327:4, line:332:6>
    (DeclStmt 0x9e92e38 <line:327:8, col:40>
      0x9e92d70 "_Distance __n =
        (CXXOperatorCallExpr 0x9e92e10 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x9e92dd8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (DeclRefExpr 0x9e92da4 <col:24> '_II' lvalue ParmVar 0x9e92aa0 '__last' '_II')
          (DeclRefExpr 0x9e92dbc <col:33> '_II' lvalue ParmVar 0x9e92a60 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e92eb8 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9e92e78 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (DeclRefExpr 0x9e92e48 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9e92d70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x9e92e60 <col:48> 'int' 0))
    (UnaryOperator 0x9e92ef8 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9e92edc <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x9e92d70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x9e93108 <line:328:6, line:332:6>
      (BinaryOperator 0x9e93090 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x9e92f28 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9e92f0c <col:9> '_OI' lvalue ParmVar 0x9e92ae0 '__result' '_OI'))
        (UnaryOperator 0x9e92f58 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9e92f3c <col:21> '_II' lvalue ParmVar 0x9e92a60 '__first' '_II')))
      (UnaryOperator 0x9e930c0 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e930a8 <col:10> '_II' lvalue ParmVar 0x9e92a60 '__first' '_II'))
      (UnaryOperator 0x9e930f0 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9e930d4 <col:10> '_OI' lvalue ParmVar 0x9e92ae0 '__result' '_OI'))))
  (ReturnStmt 0x9e93168 <line:333:4, col:11>
    (DeclRefExpr 0x9e9314c <col:11> '_OI' lvalue ParmVar 0x9e92ae0 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _Tp> static _Tp *__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x9e948b8 </usr/include/c++/4.6/bits/stl_algobase.h:363:9, line:368:2>
  (DeclStmt 0x9e94538 <line:364:4, col:43>
    0x9e94470 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x9e94510 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9e944d8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9e944a4 <col:27> 'const _Tp *' lvalue ParmVar 0x9e94260 '__last' 'const _Tp *')
        (DeclRefExpr 0x9e944bc <col:36> 'const _Tp *' lvalue ParmVar 0x9e94210 '__first' 'const _Tp *'))")
  (IfStmt 0x9e947f8 <line:365:4, line:366:61>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e94570 <line:365:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e94560 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9e94548 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x9e94470 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x9e947d0 <line:366:6, col:61> '<dependent type>'
      (DeclRefExpr 0x9e94714 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9e945b0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (DeclRefExpr 0x9e9472c <col:24> '_Tp *' lvalue ParmVar 0x9e942f0 '__result' '_Tp *')
      (DeclRefExpr 0x9e94744 <col:34> 'const _Tp *' lvalue ParmVar 0x9e94210 '__first' 'const _Tp *')
      (BinaryOperator 0x9e947b8 <col:43, col:57> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9e94768 <col:43, col:53> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x9e947a8 <col:57> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9e94798 <col:57> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x9e94780 <col:57> 'const ptrdiff_t':'const int' lvalue Var 0x9e94470 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9e948a8 <line:367:4, col:22>
    (CXXOperatorCallExpr 0x9e94880 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9e94848 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
      (DeclRefExpr 0x9e94814 <col:11> '_Tp *' lvalue ParmVar 0x9e942f0 '__result' '_Tp *')
      (DeclRefExpr 0x9e9482c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x9e94470 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a(_II __first, _II __last, _OI __result) (CompoundStmt 0x9e95918 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0x9e94cd0 <line:375:7, col:68>
    0x9e94ca0 "typedef typename iterator_traits<_II>::value_type _ValueTypeI")
  (DeclStmt 0x9e94e60 <line:376:7, col:68>
    0x9e94e30 "typedef typename iterator_traits<_OI>::value_type _ValueTypeO")
  (DeclStmt 0x9e94fb0 <line:377:7, col:73>
    0x9e94f80 "typedef typename iterator_traits<_II>::iterator_category _Category")
  (DeclStmt 0x9e95670 <line:378:7, line:381:58>
    0x9e95200 "const bool __simple =
      (ParenExpr 0x9e95658 <line:378:29, line:381:57> '<dependent type>'
        (BinaryOperator 0x9e95640 <line:378:30, line:381:50> '<dependent type>' '&&'
          (BinaryOperator 0x9e95498 <line:378:30, line:380:45> '<dependent type>' '&&'
            (BinaryOperator 0x9e95378 <line:378:30, line:379:45> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x9e95258 <line:378:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x9e95350 <line:379:26, col:45> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9e95470 <line:380:26, col:45> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9e95618 <line:381:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9e95908 <line:383:7, line:384:70>
    (CallExpr 0x9e958e0 <line:383:14, line:384:70> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9e95870 <line:383:14, line:384:36> '<dependent type>' lvalue)
      (DeclRefExpr 0x9e95894 <col:45> '_II' lvalue ParmVar 0x9e949e0 '__first' '_II')
      (DeclRefExpr 0x9e958ac <col:54> '_II' lvalue ParmVar 0x9e94a20 '__last' '_II')
      (DeclRefExpr 0x9e958c4 <col:62> '_OI' lvalue ParmVar 0x9e94a60 '__result' '_OI'))))

;
    template <typename _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec8118 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9ec8100 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9ec80c0 <col:9> 'char_type':'char' lvalue ParmVar 0x9ec5650 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9ec80f0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9ec80d8 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec56e0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec81c8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9ec81b8 <col:9, col:24>
    (BinaryOperator 0x9ec81a0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ec8170 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8160 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec812c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec6e70 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9ec8190 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8180 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec8144 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9ec6ec0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec8278 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9ec8268 <col:9, col:23>
    (BinaryOperator 0x9ec8250 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9ec8220 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8210 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec81dc <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec6fe0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9ec8240 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8230 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec81f4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9ec7030 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec83a0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9ec8390 <col:9, col:48>
    (CallExpr 0x9ec8318 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9ec8308 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec828c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9ea4040 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9ec8350 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9ec8340 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ec82a4 <col:33> 'const char_type *' lvalue ParmVar 0x9ec7130 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9ec8370 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9ec8360 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ec82bc <col:39> 'const char_type *' lvalue ParmVar 0x9ec7180 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9ec8380 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ec82d4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9ec71c0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9ec8538 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9ec8528 <col:9, col:36>
    (CallExpr 0x9ec84f8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9ec84e8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec8494 <col:16> 'unsigned int (const char *)' lvalue Function 0x9ec83c0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9ec8518 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ec84ac <col:33> 'const char_type *' lvalue ParmVar 0x9ec7300 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9ec8828 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9ec8818 <col:9, col:77>
    (CXXStaticCastExpr 0x9ec8800 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9ec8778 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9ec8768 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec86e4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9ec8580 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9ec87b0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec87a0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec86fc <col:63> 'const char_type *' lvalue ParmVar 0x9ec7420 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9ec87d0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ec87c0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9ec8714 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9ec74b0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9ec87e0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec872c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7460 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec8978 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9ec8968 <col:9, col:74>
    (CXXStaticCastExpr 0x9ec8950 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec88c8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9ec88b8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec883c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9e945b0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9ec8900 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec88f0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8854 <col:58> 'char_type *' lvalue ParmVar 0x9ec7610 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9ec8920 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec8910 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec886c <col:64> 'const char_type *' lvalue ParmVar 0x9ec7660 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9ec8930 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8884 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9ec76a0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec8c18 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9ec8c08 <col:9, col:73>
    (CXXStaticCastExpr 0x9ec8bf0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec8b68 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9ec8b58 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec8af4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9ec8ba0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec8b90 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8b0c <col:57> 'char_type *' lvalue ParmVar 0x9ec77e0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9ec8bc0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec8bb0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8b24 <col:63> 'const char_type *' lvalue ParmVar 0x9ec7830 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9ec8bd0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8b3c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7870 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9ec8d68 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9ec8d58 <col:9, col:71>
    (CXXStaticCastExpr 0x9ec8d40 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec8cb8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9ec8ca8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec8c2c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9e9f540 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9ec8cf0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec8ce0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8c44 <col:57> 'char_type *' lvalue ParmVar 0x9ec7950 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9ec8d10 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ec8d00 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9ec8c5c <col:62> 'char_type':'char' lvalue ParmVar 0x9ec79d0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9ec8d20 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8c74 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7990 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9ecb548 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9ec8dd8 <col:9, col:42>
    (CXXStaticCastExpr 0x9ec8dc0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9ec8db0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9ec8da0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9ec8d7c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9ec7b60 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9ecb600 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9ecb5f0 <col:9, col:69>
    (CXXStaticCastExpr 0x9ecb5d8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9ecb5c8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9ecb5a8 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9ecb598 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9ecb588 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9ecb55c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9ec7c80 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ecb690 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9ecb680 <col:9, col:24>
    (BinaryOperator 0x9ecb668 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecb648 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb614 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9ec7da0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ecb658 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb62c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9ec7df0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ecb708 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9ecb6f8 <col:9, col:56>
    (CXXStaticCastExpr 0x9ecb6e0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9ecb6c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9ecb6a8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9ecb868 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9ecb858 <col:9, col:37>
    (ConditionalOperator 0x9ecb838 <col:16, col:37> 'int'
      (ParenExpr 0x9ecb7e0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9ecb7c8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9ecb7b8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ecb71c <col:17> 'const int_type':'const int' lvalue ParmVar 0x9ec7fa0 '__c' 'const int_type &'))
          (CallExpr 0x9ecb798 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9ecb788 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ecb734 <col:24> 'int_type (void)' lvalue CXXMethod 0x9ec7f30 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9ecb7f8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9ecb828 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb810 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9ec7fa0 '__c' 'const int_type &')))))


    }
template <typename _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9eccfd8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9eccfc0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9eccf80 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9ecbc20 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9eccfb0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9eccf98 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbcb0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ecd068 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9ecd058 <col:9, col:24>
    (BinaryOperator 0x9ecd040 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecd020 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9eccfec <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbdd0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9ecd030 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd004 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbe20 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ecd0f8 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9ecd0e8 <col:9, col:23>
    (BinaryOperator 0x9ecd0d0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9ecd0b0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd07c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbf40 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9ecd0c0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd094 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbf90 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecd260 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9ecd250 <col:9, col:39>
    (CallExpr 0x9ecd1f8 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9ecd1e8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd18c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9d73e60 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9eb73c0 'wmemcmp')))
      (ImplicitCastExpr 0x9ecd220 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd144 <col:24> 'const char_type *' lvalue ParmVar 0x9ecc090 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9ecd230 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd15c <col:30> 'const char_type *' lvalue ParmVar 0x9ecc0e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecd240 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecd174 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc120 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9ecd368 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9ecd358 <col:9, col:26>
    (CallExpr 0x9ecd328 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9ecd318 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd2c4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9d737a0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9eb6e10 'wcslen')))
      (ImplicitCastExpr 0x9ecd348 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd2ac <col:23> 'const char_type *' lvalue ParmVar 0x9ecc230 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9ecd4a8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9ecd498 <col:9, col:37>
    (ImplicitCastExpr 0x9ecd488 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9ecd430 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9ecd420 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ecd400 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9d73cb0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9eb7820 'wmemchr')))
        (ImplicitCastExpr 0x9ecd458 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ecd3b8 <col:24> 'const char_type *' lvalue ParmVar 0x9ecc330 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9ecd468 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9ecd3d0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecc3c0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9ecd478 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ecd3e8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc370 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecda30 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9ecda20 <col:9, col:40>
    (CallExpr 0x9ecd9c8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9ecd9b8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd960 <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9d741b0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9eb74a0 'wmemmove')))
      (ImplicitCastExpr 0x9ecd9f0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd4f4 <col:25> 'char_type *' lvalue ParmVar 0x9ecc520 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9ecda00 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd50c <col:31> 'const char_type *' lvalue ParmVar 0x9ecc570 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecda10 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecd524 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc5b0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecdb70 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9ecdb60 <col:9, col:39>
    (CallExpr 0x9ecdb08 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9ecdaf8 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecdac4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9d74010 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9eb7430 'wmemcpy')))
      (ImplicitCastExpr 0x9ecdb30 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecda7c <col:24> 'char_type *' lvalue ParmVar 0x9ecc6c0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9ecdb40 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecda94 <col:30> 'const char_type *' lvalue ParmVar 0x9ecc710 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecdb50 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdaac <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc750 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9ecdcd0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9ecdcc0 <col:9, col:37>
    (CallExpr 0x9ecdc68 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9ecdc58 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecdc04 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9d74390 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9eb7510 'wmemset')))
      (ImplicitCastExpr 0x9ecdc90 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecdbbc <col:24> 'char_type *' lvalue ParmVar 0x9ecc830 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9ecdca0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecdbd4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9ecc8b0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9ecdcb0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdbec <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc870 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9ecdd50 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9ecdd40 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9ecdd28 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9ecdd18 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9ecdd08 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ecdcf0 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecca20 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9ecddd0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9ecddc0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9ecdda8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9ecdd98 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9ecdd88 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9ecdd70 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9eccb40 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ecde60 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9ecde50 <col:9, col:24>
    (BinaryOperator 0x9ecde38 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecde18 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdde4 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9eccc60 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ecde28 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecddfc <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecccb0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ecded8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9ecdec8 <col:9, col:42>
    (CXXStaticCastExpr 0x9ecdeb0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9ecde90 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9ecde78 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9ece0b0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9ece0a0 <col:9, col:46>
    (ConditionalOperator 0x9ece080 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9ecdff8 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9ecdfe8 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ecdeec <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9eccd50 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9ecdf04 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecce60 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9ece020 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9ecdf88 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9ecdf78 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ecdf1c <col:33> 'int_type (void)' lvalue CXXMethod 0x9eccdf0 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9ece070 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ece030 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9ece060 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ece048 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecce60 '__c' 'const int_type &')))))


    }
template <typename _CharT> struct char_traits;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits> class istreambuf_iterator;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits> class ostreambuf_iterator;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *);
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a2(_II __first, _II __last, _OI __result) (CompoundStmt 0x9e98308 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0x9e982f8 <line:420:7, line:422:39>
    (CXXUnresolvedConstructExpr 0x9e982d8 <line:420:14, line:422:39> '_OI'
      (CallExpr 0x9e982b0 <line:420:18, line:422:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9e980b0 <line:420:18, col:44> '<dependent type>' lvalue (no ADL) = '1' 0x9e94b80)
        (CallExpr 0x9e98180 <col:46, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0x9e98130 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
          (DeclRefExpr 0x9e98164 <col:64> '_II' lvalue ParmVar 0x9e97ec0 '__first' '_II'))
        (CallExpr 0x9e98208 <line:421:11, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9e981b8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
          (DeclRefExpr 0x9e981ec <col:29> '_II' lvalue ParmVar 0x9e97f00 '__last' '_II'))
        (CallExpr 0x9e98290 <line:422:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9e98240 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
          (DeclRefExpr 0x9e98274 <col:29> '_OI' lvalue ParmVar 0x9e97f40 '__result' '_OI'))))))

;
    template <typename _II = unsigned long *, typename _OI = unsigned long *> inline unsigned long *copy(unsigned long *__first, unsigned long *__last, unsigned long *__result)template <typename _II = std::_Bit_const_iterator, typename _OI = std::_Bit_iterator> inline std::_Bit_iterator copy(std::_Bit_const_iterator __first, std::_Bit_const_iterator __last, std::_Bit_iterator __result)template <typename _II, typename _OI> inline _OI copy(_II __first, _II __last, _OI __result) (CompoundStmt 0x9e98dc0 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0x9e98588 <line:450:54>)
  (ReturnStmt 0x9e98db0 <line:452:7, line:454:18>
    (ParenExpr 0x9e98d98 <line:452:14, line:454:18> '<dependent type>'
      (CallExpr 0x9e98d70 <line:452:15, line:454:17> '<dependent type>'
        (UnresolvedLookupExpr 0x9e98bd0 <line:452:15, col:67> '<dependent type>' lvalue (no ADL) = '1' 0x9e96c10 0x9e97460 0x9e97d80 0x9e98030)
        (CallExpr 0x9e98cb0 <line:453:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9e98c60 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e91010)
          (DeclRefExpr 0x9e98c94 <col:27> '_II' lvalue ParmVar 0x9e983e0 '__first' '_II'))
        (CallExpr 0x9e98d38 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x9e98ce8 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e91010)
          (DeclRefExpr 0x9e98d1c <col:55> '_II' lvalue ParmVar 0x9e98420 '__last' '_II'))
        (DeclRefExpr 0x9e98d58 <line:454:9> '_OI' lvalue ParmVar 0x9e98460 '__result' '_OI')))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9e9b0e8 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x9e9ad38 <line:529:4, col:55>
    0x9e9ad00 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x9e9b098 <line:530:4, line:531:23>
    (BinaryOperator 0x9e9af10 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9e9ad48 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9e9ad00 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x9e9adc8 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9e9ad90 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9e9ad60 <col:15> '_BI1' lvalue ParmVar 0x9e99900 '__last' '_BI1')
        (DeclRefExpr 0x9e9ad78 <col:24> '_BI1' lvalue ParmVar 0x9e998c0 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e9af98 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9e9af58 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (DeclRefExpr 0x9e9af28 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9e9ad00 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x9e9af40 <col:39> 'int' 0))
    (UnaryOperator 0x9e9afd8 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9e9afbc <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9e9ad00 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x9e9b080 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9e9b020 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9e9b008 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9e9afec <col:9> '_BI2' lvalue ParmVar 0x9e99940 '__result' '_BI2')))
      (UnaryOperator 0x9e9b068 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9e9b050 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9e9b034 <col:23> '_BI1' lvalue ParmVar 0x9e99900 '__last' '_BI1')))))
  (ReturnStmt 0x9e9b0d8 <line:532:4, col:11>
    (DeclRefExpr 0x9e9b0bc <col:11> '_BI2' lvalue ParmVar 0x9e99940 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9e99550 </usr/include/c++/4.6/bits/stl_algobase.h:500:9, line:504:2>
  (WhileStmt 0x9e99510 <line:501:4, line:502:23>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e99440 <line:501:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9e99400 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
      (DeclRefExpr 0x9e993d0 <col:11> '_BI1' lvalue ParmVar 0x9e99210 '__first' '_BI1')
      (DeclRefExpr 0x9e993e8 <col:22> '_BI1' lvalue ParmVar 0x9e99250 '__last' '_BI1'))
    (BinaryOperator 0x9e994f8 <line:502:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9e99498 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9e99480 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9e99464 <col:9> '_BI2' lvalue ParmVar 0x9e99290 '__result' '_BI2')))
      (UnaryOperator 0x9e994e0 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9e994c8 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9e994ac <col:23> '_BI1' lvalue ParmVar 0x9e99250 '__last' '_BI1')))))
  (ReturnStmt 0x9e99540 <line:503:4, col:11>
    (DeclRefExpr 0x9e99524 <col:11> '_BI2' lvalue ParmVar 0x9e99290 '__result' '_BI2')))

;
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9e9b0e8 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x9e9ad38 <line:529:4, col:55>
    0x9e9ad00 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x9e9b098 <line:530:4, line:531:23>
    (BinaryOperator 0x9e9af10 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x9e9ad48 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9e9ad00 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x9e9adc8 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9e9ad90 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9e9ad60 <col:15> '_BI1' lvalue ParmVar 0x9e99900 '__last' '_BI1')
        (DeclRefExpr 0x9e9ad78 <col:24> '_BI1' lvalue ParmVar 0x9e998c0 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e9af98 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x9e9af58 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (DeclRefExpr 0x9e9af28 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9e9ad00 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x9e9af40 <col:39> 'int' 0))
    (UnaryOperator 0x9e9afd8 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x9e9afbc <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x9e9ad00 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x9e9b080 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x9e9b020 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x9e9b008 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9e9afec <col:9> '_BI2' lvalue ParmVar 0x9e99940 '__result' '_BI2')))
      (UnaryOperator 0x9e9b068 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x9e9b050 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x9e9b034 <col:23> '_BI1' lvalue ParmVar 0x9e99900 '__last' '_BI1')))))
  (ReturnStmt 0x9e9b0d8 <line:532:4, col:11>
    (DeclRefExpr 0x9e9b0bc <col:11> '_BI2' lvalue ParmVar 0x9e99940 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _Tp> static _Tp *__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x9e9baf8 </usr/include/c++/4.6/bits/stl_algobase.h:558:9, line:563:2>
  (DeclStmt 0x9e9b898 <line:559:4, col:43>
    0x9e9b7d0 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x9e9b870 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9e9b838 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9e9b804 <col:27> 'const _Tp *' lvalue ParmVar 0x9e9b610 '__last' 'const _Tp *')
        (DeclRefExpr 0x9e9b81c <col:36> 'const _Tp *' lvalue ParmVar 0x9e9b5c0 '__first' 'const _Tp *'))")
  (IfStmt 0x9e9ba38 <line:560:4, line:561:68>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e9b8d0 <line:560:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9e9b8c0 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x9e9b8a8 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x9e9b7d0 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x9e9ba10 <line:561:6, col:68> '<dependent type>'
      (DeclRefExpr 0x9e9b8dc <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9e945b0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (CXXOperatorCallExpr 0x9e9b960 <col:24, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9e9b928 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9e9b8f4 <col:24> '_Tp *' lvalue ParmVar 0x9e9b680 '__result' '_Tp *')
        (DeclRefExpr 0x9e9b90c <col:35> 'const ptrdiff_t':'const int' lvalue Var 0x9e9b7d0 '_Num' 'const ptrdiff_t':'const int'))
      (DeclRefExpr 0x9e9b984 <col:41> 'const _Tp *' lvalue ParmVar 0x9e9b5c0 '__first' 'const _Tp *')
      (BinaryOperator 0x9e9b9f8 <col:50, col:64> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9e9b9a8 <col:50, col:60> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x9e9b9e8 <col:64> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9e9b9d8 <col:64> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x9e9b9c0 <col:64> 'const ptrdiff_t':'const int' lvalue Var 0x9e9b7d0 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x9e9bae8 <line:562:4, col:22>
    (CXXOperatorCallExpr 0x9e9bac0 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9e9ba88 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (DeclRefExpr 0x9e9ba54 <col:11> '_Tp *' lvalue ParmVar 0x9e9b680 '__result' '_Tp *')
      (DeclRefExpr 0x9e9ba6c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x9e9b7d0 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9e9ce68 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0x9e9c580 <line:570:7, col:69>
    0x9e9c550 "typedef typename iterator_traits<_BI1>::value_type _ValueType1")
  (DeclStmt 0x9e9c6b0 <line:571:7, col:69>
    0x9e9c680 "typedef typename iterator_traits<_BI2>::value_type _ValueType2")
  (DeclStmt 0x9e9c7e0 <line:572:7, col:74>
    0x9e9c7b0 "typedef typename iterator_traits<_BI1>::iterator_category _Category")
  (DeclStmt 0x9e9cbc0 <line:573:7, line:576:58>
    0x9e9c800 "const bool __simple =
      (ParenExpr 0x9e9cba8 <line:573:29, line:576:57> '<dependent type>'
        (BinaryOperator 0x9e9cb90 <line:573:30, line:576:50> '<dependent type>' '&&'
          (BinaryOperator 0x9e9ca38 <line:573:30, line:575:46> '<dependent type>' '&&'
            (BinaryOperator 0x9e9c948 <line:573:30, line:574:46> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x9e9c858 <line:573:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x9e9c920 <line:574:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9e9ca10 <line:575:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9e9cb68 <line:576:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9e9ce58 <line:578:7, line:581:18>
    (CallExpr 0x9e9ce30 <line:578:14, line:581:18> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9e9cdc0 <line:578:14, line:579:45> '<dependent type>' lvalue)
      (DeclRefExpr 0x9e9cde4 <col:59> '_BI1' lvalue ParmVar 0x9e9bc20 '__first' '_BI1')
      (DeclRefExpr 0x9e9cdfc <line:580:10> '_BI1' lvalue ParmVar 0x9e9bc60 '__last' '_BI1')
      (DeclRefExpr 0x9e9ce14 <line:581:10> '_BI2' lvalue ParmVar 0x9e9c340 '__result' '_BI2'))))

;
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9e9d618 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0x9e9d608 <line:588:7, line:590:34>
    (CXXUnresolvedConstructExpr 0x9e9d5e8 <line:588:14, line:590:34> '_BI2'
      (CallExpr 0x9e9d5c0 <line:588:19, line:590:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9e9d190 <line:588:19, col:54> '<dependent type>' lvalue (no ADL) = '1' 0x9e9c430)
        (CallExpr 0x9e9d260 <line:589:6, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x9e9d210 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
          (DeclRefExpr 0x9e9d244 <col:24> '_BI1' lvalue ParmVar 0x9e9cfa0 '__first' '_BI1'))
        (CallExpr 0x9e9d2e8 <col:34, col:58> '<dependent type>'
          (UnresolvedLookupExpr 0x9e9d298 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
          (DeclRefExpr 0x9e9d2cc <col:52> '_BI1' lvalue ParmVar 0x9e9cfe0 '__last' '_BI1'))
        (CallExpr 0x9e9d5a0 <line:590:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9e9d550 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
          (DeclRefExpr 0x9e9d584 <col:24> '_BI2' lvalue ParmVar 0x9e9d020 '__result' '_BI2'))))))

;
    template <typename _BI1, typename _BI2> inline _BI2 copy_backward(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x9e9db98 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0x9e9d898 <line:621:54>)
  (ReturnStmt 0x9e9db88 <line:623:7, line:625:18>
    (ParenExpr 0x9e9db70 <line:623:14, line:625:18> '<dependent type>'
      (CallExpr 0x9e9db48 <line:623:15, line:625:17> '<dependent type>'
        (UnresolvedLookupExpr 0x9e9d9b8 <line:623:15, col:77> '<dependent type>' lvalue (no ADL) = '1' 0x9e9d110)
        (CallExpr 0x9e9da88 <line:624:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9e9da38 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e91010)
          (DeclRefExpr 0x9e9da6c <col:27> '_BI1' lvalue ParmVar 0x9e9d6f0 '__first' '_BI1'))
        (CallExpr 0x9e9db10 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x9e9dac0 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e91010)
          (DeclRefExpr 0x9e9daf4 <col:55> '_BI1' lvalue ParmVar 0x9e9d730 '__last' '_BI1'))
        (DeclRefExpr 0x9e9db30 <line:625:9> '_BI2' lvalue ParmVar 0x9e9d770 '__result' '_BI2')))))

;
    template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9e9e2a8 </usr/include/c++/4.6/bits/stl_algobase.h:674:5, line:677:5>
  (ForStmt 0x9e9e280 <line:675:7, line:676:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e9e1c8 <line:675:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9e9e188 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
      (DeclRefExpr 0x9e9e154 <col:14> '_ForwardIterator' lvalue ParmVar 0x9e9df40 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9e9e16c <col:25> '_ForwardIterator' lvalue ParmVar 0x9e9df80 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9e9e208 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9e9e1ec <col:35> '_ForwardIterator' lvalue ParmVar 0x9e9df40 '__first' '_ForwardIterator'))
    (BinaryOperator 0x9e9e268 <line:676:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9e9e238 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9e9e21c <col:3> '_ForwardIterator' lvalue ParmVar 0x9e9df40 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x9e9e24c <col:13> 'const _Tp' lvalue ParmVar 0x9e9dff0 '__value' 'const _Tp &'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type __fill_a(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa3482c8 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0xa3480f0 <line:685:7, col:32>
    0xa348090 "const int __tmp =
      (ImplicitCastExpr 0xa3480e0 <col:25> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0xa3480c4 <col:25> 'const int':'const int' lvalue ParmVar 0xa347cd0 '__value' 'const int &'))")
  (ForStmt 0xa3482a0 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa348190 <line:686:14, col:25> '_Bool' '!='
      (ImplicitCastExpr 0xa348170 <col:14> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa34813c <col:14> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa347c20 '__first' 'unsigned long *':'unsigned long *'))
      (ImplicitCastExpr 0xa348180 <col:25> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa348154 <col:25> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa347c60 '__last' 'unsigned long *':'unsigned long *')))
    (UnaryOperator 0xa3481c0 <col:33, col:35> 'unsigned long *':'unsigned long *' lvalue prefix '++'
      (DeclRefExpr 0xa3481a8 <col:35> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa347c20 '__first' 'unsigned long *':'unsigned long *'))
    (BinaryOperator 0xa348250 <line:687:2, col:13> 'unsigned long' lvalue '='
      (UnaryOperator 0xa348200 <col:2, col:3> 'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa3481f0 <col:3> 'unsigned long *':'unsigned long *' <LValueToRValue>
          (DeclRefExpr 0xa3481d4 <col:3> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa347c20 '__first' 'unsigned long *':'unsigned long *')))
      (ImplicitCastExpr 0xa348240 <col:13> 'unsigned long' <IntegralCast>
        (ImplicitCastExpr 0xa348230 <col:13> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0xa348214 <col:13> 'const int':'const int' lvalue Var 0xa348090 '__tmp' 'const int':'const int'))))))

template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9e9ef50 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0x9e9edf0 <line:685:7, col:32>
    0x9e9eda0 "const _Tp __tmp =
      (DeclRefExpr 0x9e9edd4 <col:25> 'const _Tp' lvalue ParmVar 0x9e9ec30 '__value' 'const _Tp &')")
  (ForStmt 0x9e9ef28 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9e9ee70 <line:686:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9e9ee30 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
      (DeclRefExpr 0x9e9ee00 <col:14> '_ForwardIterator' lvalue ParmVar 0x9e9eb80 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9e9ee18 <col:25> '_ForwardIterator' lvalue ParmVar 0x9e9ebc0 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9e9eeb0 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9e9ee94 <col:35> '_ForwardIterator' lvalue ParmVar 0x9e9eb80 '__first' '_ForwardIterator'))
    (BinaryOperator 0x9e9ef10 <line:687:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9e9eee0 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9e9eec4 <col:3> '_ForwardIterator' lvalue ParmVar 0x9e9eb80 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x9e9eef4 <col:13> 'const _Tp' lvalue Var 0x9e9eda0 '__tmp' 'const _Tp'))))

;
    template <typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type __fill_a(_Tp *__first, _Tp *__last, const _Tp &__c) (CompoundStmt 0x9e9f7d0 </usr/include/c++/4.6/bits/stl_algobase.h:695:5, line:699:5>
  (DeclStmt 0x9e9f500 <line:696:7, col:28>
    0x9e9f4b0 "const _Tp __tmp =
      (DeclRefExpr 0x9e9f4e4 <col:25> 'const _Tp' lvalue ParmVar 0x9e9f340 '__c' 'const _Tp &')")
  (CallExpr 0x9e9f7a8 <line:697:7, line:698:26> '<dependent type>'
    (DeclRefExpr 0x9e9f6a4 <line:697:7> 'void *(void *, int, unsigned int)' lvalue Function 0x9e9f540 '__builtin_memset' 'void *(void *, int, unsigned int)')
    (DeclRefExpr 0x9e9f6bc <col:24> '_Tp *' lvalue ParmVar 0x9e9f280 '__first' '_Tp *')
    (CXXStaticCastExpr 0x9e9f700 <col:33, col:65> 'unsigned char' static_cast<unsigned char> <Dependent>
      (DeclRefExpr 0x9e9f6d4 <col:60> 'const _Tp' lvalue Var 0x9e9f4b0 '__tmp' 'const _Tp'))
    (CXXOperatorCallExpr 0x9e9f780 <line:698:10, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9e9f748 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (DeclRefExpr 0x9e9f718 <col:10> '_Tp *' lvalue ParmVar 0x9e9f2d0 '__last' '_Tp *')
      (DeclRefExpr 0x9e9f730 <col:19> '_Tp *' lvalue ParmVar 0x9e9f280 '__first' '_Tp *'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline void fill(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa347ee0 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x9e9fed8 <line:720:54>)
  (CallExpr 0xa347eb8 <line:722:7, line:723:14> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type':'void'
    (ImplicitCastExpr 0xa347ea8 <line:722:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa347e64 <col:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa347d60 '__fill_a' 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x9e9ed60 '__fill_a')))
    (CallExpr 0xa345e78 <col:21, col:46> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa345e68 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa345e08 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa345d60 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x9e90780 '__niter_base')))
      (ImplicitCastExpr 0xa345e98 <col:39> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa34528c <col:39> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa28d5a0 '__first' 'unsigned long *':'unsigned long *')))
    (CallExpr 0xa345f60 <col:49, col:73> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa345f50 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa345f28 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa345d60 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x9e90780 '__niter_base')))
      (ImplicitCastExpr 0xa345f80 <col:67> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa345edc <col:67> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa28d5e0 '__last' 'unsigned long *':'unsigned long *')))
    (DeclRefExpr 0xa345f8c <line:723:7> 'const int':'const int' lvalue ParmVar 0xa28d670 '__value' 'const int &')))

template <typename _ForwardIterator = std::_Bit_iterator, typename _Tp = bool> inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__value)template <typename _ForwardIterator, typename _Tp> inline void fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x9ea0098 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x9e9fed8 <line:720:54>)
  (CallExpr 0x9ea0070 <line:722:7, line:723:14> '<dependent type>'
    (UnresolvedLookupExpr 0x9e9ff08 <line:722:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9e120 0x9e9ed60 0x9e9f470)
    (CallExpr 0x9e9ffb0 <col:21, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9e9ff60 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
      (DeclRefExpr 0x9e9ff94 <col:39> '_ForwardIterator' lvalue ParmVar 0x9e9f8b0 '__first' '_ForwardIterator'))
    (CallExpr 0x9ea0038 <col:49, col:73> '<dependent type>'
      (UnresolvedLookupExpr 0x9e9ffe8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
      (DeclRefExpr 0x9ea001c <col:67> '_ForwardIterator' lvalue ParmVar 0x9e9f8f0 '__last' '_ForwardIterator'))
    (DeclRefExpr 0x9ea0058 <line:723:7> 'const _Tp' lvalue ParmVar 0x9e9f960 '__value' 'const _Tp &')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9ea09b0 </usr/include/c++/4.6/bits/stl_algobase.h:730:5, line:735:5>
  (ForStmt 0x9ea0960 <line:731:7, line:733:13>
    (DeclStmt 0x9ea07e0 <line:731:12, col:45>
      0x9ea0790 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x9ea07c4 <col:42> '_Size' lvalue ParmVar 0x9ea04d0 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ea0860 <line:732:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9ea0820 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (DeclRefExpr 0x9ea07f0 <col:5> 'decltype(__n + 0)' lvalue Var 0x9ea0790 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x9ea0808 <col:15> 'int' 0))
    (BinaryOperator 0x9ea08e8 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x9ea08a0 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9ea0884 <col:20> 'decltype(__n + 0)' lvalue Var 0x9ea0790 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x9ea08d0 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ea08b4 <col:31> '_OutputIterator' lvalue ParmVar 0x9ea0490 '__first' '_OutputIterator')))
    (BinaryOperator 0x9ea0948 <line:733:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9ea0918 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ea0900 <col:3> '_OutputIterator' lvalue ParmVar 0x9ea0490 '__first' '_OutputIterator'))
      (DeclRefExpr 0x9ea092c <col:13> 'const _Tp' lvalue ParmVar 0x9ea0560 '__value' 'const _Tp &')))
  (ReturnStmt 0x9ea09a0 <line:734:7, col:14>
    (DeclRefExpr 0x9ea0984 <col:14> '_OutputIterator' lvalue ParmVar 0x9ea0490 '__first' '_OutputIterator')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9ea16f0 </usr/include/c++/4.6/bits/stl_algobase.h:741:5, line:747:5>
  (DeclStmt 0x9ea1410 <line:742:7, col:32>
    0x9ea13c0 "const _Tp __tmp =
      (DeclRefExpr 0x9ea13f4 <col:25> 'const _Tp' lvalue ParmVar 0x9ea0e10 '__value' 'const _Tp &')")
  (ForStmt 0x9ea16a0 <line:743:7, line:745:13>
    (DeclStmt 0x9ea1520 <line:743:12, col:45>
      0x9ea14d0 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x9ea1504 <col:42> '_Size' lvalue ParmVar 0x9ea0da0 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ea15a0 <line:744:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9ea1560 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (DeclRefExpr 0x9ea1530 <col:5> 'decltype(__n + 0)' lvalue Var 0x9ea14d0 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x9ea1548 <col:15> 'int' 0))
    (BinaryOperator 0x9ea1628 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x9ea15e0 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x9ea15c4 <col:20> 'decltype(__n + 0)' lvalue Var 0x9ea14d0 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x9ea1610 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ea15f4 <col:31> '_OutputIterator' lvalue ParmVar 0x9ea0d60 '__first' '_OutputIterator')))
    (BinaryOperator 0x9ea1688 <line:745:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x9ea1658 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9ea1640 <col:3> '_OutputIterator' lvalue ParmVar 0x9ea0d60 '__first' '_OutputIterator'))
      (DeclRefExpr 0x9ea166c <col:13> 'const _Tp' lvalue Var 0x9ea13c0 '__tmp' 'const _Tp')))
  (ReturnStmt 0x9ea16e0 <line:746:7, col:14>
    (DeclRefExpr 0x9ea16c4 <col:14> '_OutputIterator' lvalue ParmVar 0x9ea0d60 '__first' '_OutputIterator')))

;
    template <typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type __fill_n_a(_Tp *__first, _Size __n, const _Tp &__c) (CompoundStmt 0x9ea1eb0 </usr/include/c++/4.6/bits/stl_algobase.h:753:5, line:756:5>
  (CallExpr 0x9ea1de8 <line:754:7, col:48> '<dependent type>'
    (UnresolvedLookupExpr 0x9ea1ce8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9e120 0x9e9ed60 0x9e9f470)
    (DeclRefExpr 0x9ea1d24 <col:21> '_Tp *' lvalue ParmVar 0x9ea1ab0 '__first' '_Tp *')
    (CXXOperatorCallExpr 0x9ea1da8 <col:30, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9ea1d70 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
      (DeclRefExpr 0x9ea1d3c <col:30> '_Tp *' lvalue ParmVar 0x9ea1ab0 '__first' '_Tp *')
      (DeclRefExpr 0x9ea1d54 <col:40> '_Size' lvalue ParmVar 0x9ea1af0 '__n' '_Size'))
    (DeclRefExpr 0x9ea1dcc <col:45> 'const _Tp' lvalue ParmVar 0x9ea1b60 '__c' 'const _Tp &'))
  (ReturnStmt 0x9ea1ea0 <line:755:7, col:24>
    (CXXOperatorCallExpr 0x9ea1e78 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9ea1e40 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
      (DeclRefExpr 0x9ea1e10 <col:14> '_Tp *' lvalue ParmVar 0x9ea1ab0 '__first' '_Tp *')
      (DeclRefExpr 0x9ea1e28 <col:24> '_Size' lvalue ParmVar 0x9ea1af0 '__n' '_Size'))))

;
    template <typename _OI, typename _Size, typename _Tp> inline _OI fill_n(_OI __first, _Size __n, const _Tp &__value) (CompoundStmt 0x9ea3388 </usr/include/c++/4.6/bits/stl_algobase.h:776:5, line:781:5>
  (ReturnStmt 0x9ea3378 <line:780:7, col:75>
    (CXXUnresolvedConstructExpr 0x9ea3358 <col:14, col:75> '_OI'
      (CallExpr 0x9ea3330 <col:18, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea2208 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ea0690 0x9ea1380 0x9ea1c90)
        (CallExpr 0x9ea22b0 <col:34, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0x9ea2260 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
          (DeclRefExpr 0x9ea2294 <col:52> '_OI' lvalue ParmVar 0x9ea1fe0 '__first' '_OI'))
        (DeclRefExpr 0x9ea22d0 <col:62> '_Size' lvalue ParmVar 0x9ea2020 '__n' '_Size')
        (DeclRefExpr 0x9ea3318 <col:67> 'const _Tp' lvalue ParmVar 0x9ea2090 '__value' 'const _Tp &')))))

;
    template <bool _BoolType = true> struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x9ea4d28 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x9ea4d18 <line:804:4, line:805:30>
    (UnaryOperator 0x9ea42f8 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x9ea42d0 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x9ea41a4 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9ea4040 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9ea41bc <col:29> 'const _Tp *' lvalue ParmVar 0x9ea3e00 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9ea41d4 <col:39> 'const _Tp *' lvalue ParmVar 0x9ea3ea0 '__first2' 'const _Tp *')
        (BinaryOperator 0x9ea42b8 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x9ea41f8 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x9ea42a0 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x9ea4278 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9ea4240 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (DeclRefExpr 0x9ea4210 <col:11> 'const _Tp *' lvalue ParmVar 0x9ea3e50 '__last1' 'const _Tp *')
              (DeclRefExpr 0x9ea4228 <col:21> 'const _Tp *' lvalue ParmVar 0x9ea3e00 '__first1' 'const _Tp *'))))))))

;
    }
template <bool _BoolType> struct __equal {
        struct __equal;
        template <typename _II1, typename _II2> static bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9ea3b50 </usr/include/c++/4.6/bits/stl_algobase.h:789:9, line:794:2>
  (ForStmt 0x9ea3b08 <line:790:4, line:792:15>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ea3930 <line:790:11, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9ea38f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
      (DeclRefExpr 0x9ea38c0 <col:11> '_II1' lvalue ParmVar 0x9ea36d0 '__first1' '_II1')
      (DeclRefExpr 0x9ea38d8 <col:23> '_II1' lvalue ParmVar 0x9ea3710 '__last1' '_II1'))
    (BinaryOperator 0x9ea39b8 <col:32, col:46> '<dependent type>' ','
      (UnaryOperator 0x9ea3970 <col:32, col:34> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ea3954 <col:34> '_II1' lvalue ParmVar 0x9ea36d0 '__first1' '_II1'))
      (UnaryOperator 0x9ea39a0 <col:44, col:46> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ea3984 <col:46> '_II2' lvalue ParmVar 0x9ea3750 '__first2' '_II2')))
    (IfStmt 0x9ea3ae8 <line:791:6, line:792:15>
      <<<NULL>>>
      (UnaryOperator 0x9ea3ab0 <line:791:10, col:34> '<dependent type>' prefix '!'
        (ParenExpr 0x9ea3a98 <col:11, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x9ea3a70 <col:12, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x9ea3a30 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50)
            (UnaryOperator 0x9ea39e8 <col:12, col:13> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9ea39d0 <col:13> '_II1' lvalue ParmVar 0x9ea36d0 '__first1' '_II1'))
            (UnaryOperator 0x9ea3a18 <col:25, col:26> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9ea39fc <col:26> '_II2' lvalue ParmVar 0x9ea3750 '__first2' '_II2')))))
      (ReturnStmt 0x9ea3ad8 <line:792:8, col:15>
        (CXXBoolLiteralExpr 0x9ea3ac8 <col:15> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x9ea3b40 <line:793:4, col:11>
    (CXXBoolLiteralExpr 0x9ea3b30 <col:11> '_Bool' true)))

;
    };
    struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x9ea4d28 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x9ea4d18 <line:804:4, line:805:30>
    (UnaryOperator 0x9ea42f8 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x9ea42d0 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x9ea41a4 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9ea4040 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9ea41bc <col:29> 'const _Tp *' lvalue ParmVar 0x9ea3e00 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9ea41d4 <col:39> 'const _Tp *' lvalue ParmVar 0x9ea3ea0 '__first2' 'const _Tp *')
        (BinaryOperator 0x9ea42b8 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x9ea41f8 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x9ea42a0 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x9ea4278 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9ea4240 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (DeclRefExpr 0x9ea4210 <col:11> 'const _Tp *' lvalue ParmVar 0x9ea3e50 '__last1' 'const _Tp *')
              (DeclRefExpr 0x9ea4228 <col:21> 'const _Tp *' lvalue ParmVar 0x9ea3e00 '__first1' 'const _Tp *'))))))))

;
    };
    template <typename _II1, typename _II2> inline bool __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9ea58b8 </usr/include/c++/4.6/bits/stl_algobase.h:812:5, line:821:5>
  (DeclStmt 0x9ea50f0 <line:813:7, col:69>
    0x9ea50c0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9ea5220 <line:814:7, col:69>
    0x9ea51f0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x9ea56f0 <line:815:7, line:818:58>
    0x9ea5240 "const bool __simple =
      (ParenExpr 0x9ea56d8 <line:815:29, line:818:57> '<dependent type>'
        (BinaryOperator 0x9ea56c0 <line:815:30, line:818:50> '<dependent type>' '&&'
          (BinaryOperator 0x9ea5568 <line:815:30, line:817:46> '<dependent type>' '&&'
            (BinaryOperator 0x9ea5478 <line:815:30, line:816:46> '<dependent type>' '&&'
              (DependentScopeDeclRefExpr 0x9ea5380 <line:815:30, col:57> '<dependent type>' lvalue)
              (DependentScopeDeclRefExpr 0x9ea5450 <line:816:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x9ea5540 <line:817:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9ea5698 <line:818:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9ea58a8 <line:820:7, col:71>
    (CallExpr 0x9ea5880 <col:14, col:71> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ea5810 <col:14, col:38> '<dependent type>' lvalue)
      (DeclRefExpr 0x9ea5834 <col:44> '_II1' lvalue ParmVar 0x9ea4e00 '__first1' '_II1')
      (DeclRefExpr 0x9ea584c <col:54> '_II1' lvalue ParmVar 0x9ea4e40 '__last1' '_II1')
      (DeclRefExpr 0x9ea5864 <col:63> '_II2' lvalue ParmVar 0x9ea4e80 '__first2' '_II2'))))

;
    template <typename  = std::random_access_iterator_tag, typename  = std::random_access_iterator_tag> struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x9ea7e60 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x9ea6e78 <line:846:4, line:847:34>
    0x9ea6db0 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x9ea6e50 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea6e18 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ea6de4 <col:16> '_RAI1' lvalue ParmVar 0x9ea6900 '__last1' '_RAI1')
        (DeclRefExpr 0x9ea6dfc <col:26> '_RAI1' lvalue ParmVar 0x9ea68c0 '__first1' '_RAI1'))")
  (DeclStmt 0x9ea7058 <line:848:4, line:849:34>
    0x9ea6f90 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x9ea7030 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea6ff8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ea6fc4 <col:16> '_RAI2' lvalue ParmVar 0x9ea6980 '__last2' '_RAI2')
        (DeclRefExpr 0x9ea6fdc <col:26> '_RAI2' lvalue ParmVar 0x9ea6940 '__first2' '_RAI2'))")
  (ReturnStmt 0x9ea7e50 <line:850:4, col:52>
    (ConditionalOperator 0x9ea7e30 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x9ea70d8 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea7098 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
        (DeclRefExpr 0x9ea7068 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9ea6f90 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x9ea7080 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x9ea6db0 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x9ea7df0 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea7db8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (DeclRefExpr 0x9ea70fc <col:31> '_RAI1' lvalue ParmVar 0x9ea68c0 '__first1' '_RAI1')
        (DeclRefExpr 0x9ea7114 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9ea6f90 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x9ea7e14 <col:52> '_RAI1' lvalue ParmVar 0x9ea6900 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x9ea7ea0 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x9ea7e90 <col:11, col:18>
    (CXXBoolLiteralExpr 0x9ea7e80 <col:18> '_Bool' true)))

;
    }
template <typename , typename > struct __lc_rai {
        struct __lc_rai;
        template <typename _II1, typename _II2> static _II1 __newlast1(_II1, _II1 __last1, _II2, _II2) (CompoundStmt 0x9ea64e8 </usr/include/c++/4.6/bits/stl_algobase.h:830:9, col:27>
  (ReturnStmt 0x9ea64d8 <col:11, col:18>
    (DeclRefExpr 0x9ea64c0 <col:18> '_II1' lvalue ParmVar 0x9ea5cc0 '__last1' '_II1')))

;
        template <typename _II> static bool __cnd2(_II __first, _II __last) (CompoundStmt 0x9ea65a8 </usr/include/c++/4.6/bits/stl_algobase.h:835:9, col:37>
  (ReturnStmt 0x9ea6598 <col:11, col:29>
    (CXXOperatorCallExpr 0x9ea6570 <col:18, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9ea6530 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
      (DeclRefExpr 0x9ea64fc <col:18> '_II' lvalue ParmVar 0x9ea6340 '__first' '_II')
      (DeclRefExpr 0x9ea6514 <col:29> '_II' lvalue ParmVar 0x9ea6380 '__last' '_II'))))

;
    };
    struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x9ea7e60 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x9ea6e78 <line:846:4, line:847:34>
    0x9ea6db0 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x9ea6e50 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea6e18 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ea6de4 <col:16> '_RAI1' lvalue ParmVar 0x9ea6900 '__last1' '_RAI1')
        (DeclRefExpr 0x9ea6dfc <col:26> '_RAI1' lvalue ParmVar 0x9ea68c0 '__first1' '_RAI1'))")
  (DeclStmt 0x9ea7058 <line:848:4, line:849:34>
    0x9ea6f90 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x9ea7030 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea6ff8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ea6fc4 <col:16> '_RAI2' lvalue ParmVar 0x9ea6980 '__last2' '_RAI2')
        (DeclRefExpr 0x9ea6fdc <col:26> '_RAI2' lvalue ParmVar 0x9ea6940 '__first2' '_RAI2'))")
  (ReturnStmt 0x9ea7e50 <line:850:4, col:52>
    (ConditionalOperator 0x9ea7e30 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x9ea70d8 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea7098 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
        (DeclRefExpr 0x9ea7068 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9ea6f90 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x9ea7080 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x9ea6db0 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x9ea7df0 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea7db8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (DeclRefExpr 0x9ea70fc <col:31> '_RAI1' lvalue ParmVar 0x9ea68c0 '__first1' '_RAI1')
        (DeclRefExpr 0x9ea7114 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x9ea6f90 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x9ea7e14 <col:52> '_RAI1' lvalue ParmVar 0x9ea6900 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x9ea7ea0 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x9ea7e90 <col:11, col:18>
    (CXXBoolLiteralExpr 0x9ea7e80 <col:18> '_Bool' true)))

;
    };
    template <bool _BoolType = true> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x9eaaea0 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x9ea9e08 <line:897:4, col:44>
    0x9ea9d40 "const size_t __len1 =
      (CXXOperatorCallExpr 0x9ea9de0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea9da8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ea9d74 <col:26> 'const _Tp *' lvalue ParmVar 0x9ea9b00 '__last1' 'const _Tp *')
        (DeclRefExpr 0x9ea9d8c <col:36> 'const _Tp *' lvalue ParmVar 0x9ea9ab0 '__first1' 'const _Tp *'))")
  (DeclStmt 0x9ea9ee8 <line:898:4, col:44>
    0x9ea9e20 "const size_t __len2 =
      (CXXOperatorCallExpr 0x9ea9ec0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea9e88 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ea9e54 <col:26> 'const _Up *' lvalue ParmVar 0x9ea9bc0 '__last2' 'const _Up *')
        (DeclRefExpr 0x9ea9e6c <col:36> 'const _Up *' lvalue ParmVar 0x9ea9b70 '__first2' 'const _Up *'))")
  (DeclStmt 0x9eaad48 <line:899:4, line:900:32>
    0x9ea9f10 "const int __result =
      (CallExpr 0x9eaad20 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x9ea9f44 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9ea4040 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9ea9f5c <col:42> 'const _Tp *' lvalue ParmVar 0x9ea9ab0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9ea9f74 <col:52> 'const _Up *' lvalue ParmVar 0x9ea9b70 '__first2' 'const _Up *')
        (CallExpr 0x9eaacf8 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x9eaace8 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9eaac88 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x9eaabe0 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9e8ec70 'min')))
          (DeclRefExpr 0x9ea9fe0 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9ea9d40 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x9ea9ff8 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x9ea9e20 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x9eaae90 <line:901:4, col:51>
    (ConditionalOperator 0x9eaae70 <col:11, col:51> '_Bool'
      (BinaryOperator 0x9eaad98 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9eaad88 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x9eaad58 <col:11> 'const int' lvalue Var 0x9ea9f10 '__result' 'const int'))
        (IntegerLiteral 0x9eaad70 <col:23> 'int' 0))
      (BinaryOperator 0x9eaadf0 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x9eaade0 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x9eaadb0 <col:27> 'const int' lvalue Var 0x9ea9f10 '__result' 'const int'))
        (IntegerLiteral 0x9eaadc8 <col:38> 'int' 0))
      (BinaryOperator 0x9eaae58 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x9eaae38 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9eaae08 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x9ea9d40 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9eaae48 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9eaae20 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x9ea9e20 '__len2' 'const size_t':'const unsigned int'))))))

;
    }
template <bool _BoolType> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _II1, typename _II2> static bool __lc(_II1, _II1, _II2, _II2);
    };
    template <typename _II1, typename _II2> static bool __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9ea97a8 </usr/include/c++/4.6/bits/stl_algobase.h:871:7, line:887:7>
  (DeclStmt 0x9ea8a10 <line:872:2, col:70>
    0x9ea89e0 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x9ea8ba0 <line:873:2, col:70>
    0x9ea8b70 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x9ea9100 <line:874:2, col:59>
    0x9ea90d0 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (BinaryOperator 0x9ea9220 <line:876:2, line:877:24> '<dependent type>' '='
    (DeclRefExpr 0x9ea9110 <line:876:2> '_II1' lvalue ParmVar 0x9ea86c0 '__last1' '_II1')
    (CallExpr 0x9ea91f0 <col:12, line:877:24> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9ea9168 <line:876:12, col:24> '<dependent type>' lvalue)
      (DeclRefExpr 0x9ea918c <col:35> '_II1' lvalue ParmVar 0x9ea8680 '__first1' '_II1')
      (DeclRefExpr 0x9ea91a4 <col:45> '_II1' lvalue ParmVar 0x9ea86c0 '__last1' '_II1')
      (DeclRefExpr 0x9ea91bc <line:877:7> '_II2' lvalue ParmVar 0x9ea8700 '__first2' '_II2')
      (DeclRefExpr 0x9ea91d4 <col:17> '_II2' lvalue ParmVar 0x9ea8740 '__last2' '_II2')))
  (ForStmt 0x9ea9628 <line:878:2, line:885:4>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9ea9370 <line:878:9, col:68> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9ea92a8 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea9268 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
        (DeclRefExpr 0x9ea9238 <col:9> '_II1' lvalue ParmVar 0x9ea8680 '__first1' '_II1')
        (DeclRefExpr 0x9ea9250 <col:21> '_II1' lvalue ParmVar 0x9ea86c0 '__last1' '_II1'))
      (CallExpr 0x9ea9348 <col:32, col:68> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9ea92f0 <col:32, col:44> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ea9314 <col:51> '_II2' lvalue ParmVar 0x9ea8700 '__first2' '_II2')
        (DeclRefExpr 0x9ea932c <col:61> '_II2' lvalue ParmVar 0x9ea8740 '__last2' '_II2')))
    (BinaryOperator 0x9ea93e8 <line:879:7, col:21> '<dependent type>' ','
      (UnaryOperator 0x9ea93a0 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ea9388 <col:9> '_II1' lvalue ParmVar 0x9ea8680 '__first1' '_II1'))
      (UnaryOperator 0x9ea93d0 <col:19, col:21> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9ea93b4 <col:21> '_II2' lvalue ParmVar 0x9ea8700 '__first2' '_II2')))
    (CompoundStmt 0x9ea9610 <line:880:4, line:885:4>
      (IfStmt 0x9ea94e8 <line:881:6, line:882:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ea94a0 <line:881:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9ea9460 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
          (UnaryOperator 0x9ea9418 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9ea9400 <col:11> '_II1' lvalue ParmVar 0x9ea8680 '__first1' '_II1'))
          (UnaryOperator 0x9ea9448 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9ea942c <col:23> '_II2' lvalue ParmVar 0x9ea8700 '__first2' '_II2')))
        (ReturnStmt 0x9ea94d8 <line:882:8, col:15>
          (CXXBoolLiteralExpr 0x9ea94c8 <col:15> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x9ea95f0 <line:883:6, line:884:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ea95a8 <line:883:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9ea9568 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
          (UnaryOperator 0x9ea9520 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9ea9504 <col:11> '_II2' lvalue ParmVar 0x9ea8700 '__first2' '_II2'))
          (UnaryOperator 0x9ea9550 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9ea9534 <col:23> '_II1' lvalue ParmVar 0x9ea8680 '__first1' '_II1')))
        (ReturnStmt 0x9ea95e0 <line:884:8, col:15>
          (CXXBoolLiteralExpr 0x9ea95d0 <col:15> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x9ea9798 <line:886:2, col:44>
    (BinaryOperator 0x9ea9780 <col:9, col:44> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9ea96c0 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea9680 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50)
        (DeclRefExpr 0x9ea964c <col:9> '_II1' lvalue ParmVar 0x9ea8680 '__first1' '_II1')
        (DeclRefExpr 0x9ea9664 <col:21> '_II1' lvalue ParmVar 0x9ea86c0 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x9ea9758 <col:32, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea9718 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
        (DeclRefExpr 0x9ea96e4 <col:32> '_II2' lvalue ParmVar 0x9ea8700 '__first2' '_II2')
        (DeclRefExpr 0x9ea96fc <col:44> '_II2' lvalue ParmVar 0x9ea8740 '__last2' '_II2')))))

;
    struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x9eaaea0 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x9ea9e08 <line:897:4, col:44>
    0x9ea9d40 "const size_t __len1 =
      (CXXOperatorCallExpr 0x9ea9de0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea9da8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ea9d74 <col:26> 'const _Tp *' lvalue ParmVar 0x9ea9b00 '__last1' 'const _Tp *')
        (DeclRefExpr 0x9ea9d8c <col:36> 'const _Tp *' lvalue ParmVar 0x9ea9ab0 '__first1' 'const _Tp *'))")
  (DeclStmt 0x9ea9ee8 <line:898:4, col:44>
    0x9ea9e20 "const size_t __len2 =
      (CXXOperatorCallExpr 0x9ea9ec0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9ea9e88 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ea9e54 <col:26> 'const _Up *' lvalue ParmVar 0x9ea9bc0 '__last2' 'const _Up *')
        (DeclRefExpr 0x9ea9e6c <col:36> 'const _Up *' lvalue ParmVar 0x9ea9b70 '__first2' 'const _Up *'))")
  (DeclStmt 0x9eaad48 <line:899:4, line:900:32>
    0x9ea9f10 "const int __result =
      (CallExpr 0x9eaad20 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x9ea9f44 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9ea4040 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x9ea9f5c <col:42> 'const _Tp *' lvalue ParmVar 0x9ea9ab0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x9ea9f74 <col:52> 'const _Up *' lvalue ParmVar 0x9ea9b70 '__first2' 'const _Up *')
        (CallExpr 0x9eaacf8 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x9eaace8 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9eaac88 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x9eaabe0 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x9e8ec70 'min')))
          (DeclRefExpr 0x9ea9fe0 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x9ea9d40 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x9ea9ff8 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x9ea9e20 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x9eaae90 <line:901:4, col:51>
    (ConditionalOperator 0x9eaae70 <col:11, col:51> '_Bool'
      (BinaryOperator 0x9eaad98 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x9eaad88 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x9eaad58 <col:11> 'const int' lvalue Var 0x9ea9f10 '__result' 'const int'))
        (IntegerLiteral 0x9eaad70 <col:23> 'int' 0))
      (BinaryOperator 0x9eaadf0 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x9eaade0 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x9eaadb0 <col:27> 'const int' lvalue Var 0x9ea9f10 '__result' 'const int'))
        (IntegerLiteral 0x9eaadc8 <col:38> 'int' 0))
      (BinaryOperator 0x9eaae58 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x9eaae38 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9eaae08 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x9ea9d40 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x9eaae48 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9eaae20 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x9ea9e20 '__len2' 'const size_t':'const unsigned int'))))))

;
    };
    template <typename _II1, typename _II2> inline bool __lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9eabd28 </usr/include/c++/4.6/bits/stl_algobase.h:909:5, line:921:5>
  (DeclStmt 0x9eab2b0 <line:910:7, col:69>
    0x9eab280 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9eab3e0 <line:911:7, col:69>
    0x9eab3b0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x9eabb48 <line:912:7, line:917:34>
    0x9eab400 "const bool __simple =
      (ParenExpr 0x9eabb30 <line:913:2, line:917:33> '<dependent type>'
        (BinaryOperator 0x9eabb18 <line:913:3, line:917:26> '<dependent type>' '&&'
          (BinaryOperator 0x9eaba08 <line:913:3, line:916:26> '<dependent type>' '&&'
            (BinaryOperator 0x9eab920 <line:913:3, line:915:49> '<dependent type>' '&&'
              (BinaryOperator 0x9eab7e0 <line:913:3, line:914:49> '<dependent type>' '&&'
                (BinaryOperator 0x9eab688 <line:913:3, col:62> '<dependent type>' '&&'
                  (DependentScopeDeclRefExpr 0x9eab540 <col:3, col:27> '<dependent type>' lvalue)
                  (DependentScopeDeclRefExpr 0x9eab660 <col:38, col:62> '<dependent type>' lvalue))
                (UnaryOperator 0x9eab7c8 <line:914:6, col:49> '<dependent type>' prefix '!'
                  (DependentScopeDeclRefExpr 0x9eab7a0 <col:7, col:49> '<dependent type>' lvalue)))
              (UnaryOperator 0x9eab908 <line:915:6, col:49> '<dependent type>' prefix '!'
                (DependentScopeDeclRefExpr 0x9eab8e0 <col:7, col:49> '<dependent type>' lvalue)))
            (DependentScopeDeclRefExpr 0x9eab9e0 <line:916:6, col:26> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x9eabaf0 <line:917:6, col:26> '<dependent type>' lvalue)))")
  (ReturnStmt 0x9eabd18 <line:919:7, line:920:29>
    (CallExpr 0x9eabce8 <line:919:14, line:920:29> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9eabc60 <line:919:14, col:56> '<dependent type>' lvalue)
      (DeclRefExpr 0x9eabc84 <col:61> '_II1' lvalue ParmVar 0x9eaaf80 '__first1' '_II1')
      (DeclRefExpr 0x9eabc9c <col:71> '_II1' lvalue ParmVar 0x9eaafc0 '__last1' '_II1')
      (DeclRefExpr 0x9eabcb4 <line:920:12> '_II2' lvalue ParmVar 0x9eab000 '__first2' '_II2')
      (DeclRefExpr 0x9eabccc <col:22> '_II2' lvalue ParmVar 0x9eab040 '__last2' '_II2'))))

;
    template <typename _ForwardIterator, typename _Tp> _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__val) (CompoundStmt 0x9eac930 </usr/include/c++/4.6/bits/stl_algobase.h:938:5, line:966:5>
  (DeclStmt 0x9eac130 <line:939:7, line:940:12>
    0x9eac100 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (DeclStmt 0x9eac260 <line:941:7, line:942:15>
    0x9eac230 "typedef typename iterator_traits<_ForwardIterator>::difference_type _DistanceType")
  (NullStmt 0x9eac270 <line:947:67>)
  (DeclStmt 0x9eac380 <line:949:7, col:59>
    0x9eac2a0 "_DistanceType __len =
      (CallExpr 0x9eac358 <col:29, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9eac2f0 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e66090)
        (DeclRefExpr 0x9eac324 <col:43> '_ForwardIterator' lvalue ParmVar 0x9eabe10 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9eac33c <col:52> '_ForwardIterator' lvalue ParmVar 0x9eabe50 '__last' '_ForwardIterator'))")
  (WhileStmt 0x9eac8f0 <line:951:7, line:964:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9eac400 <line:951:14, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9eac3c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (DeclRefExpr 0x9eac390 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9eac2a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
      (IntegerLiteral 0x9eac3a8 <col:22> 'int' 0))
    (CompoundStmt 0x9eac8d0 <line:952:2, line:964:2>
      (DeclStmt 0x9eac4b0 <line:953:4, col:37>
        0x9eac430 "_DistanceType __half =
          (BinaryOperator 0x9eac498 <col:27, col:36> '<dependent type>' '>>'
            (DeclRefExpr 0x9eac464 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9eac2a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (IntegerLiteral 0x9eac480 <col:36> 'int' 1))")
      (DeclStmt 0x9eac520 <line:954:4, col:39>
        0x9eac4d0 "_ForwardIterator __middle =
          (DeclRefExpr 0x9eac504 <col:32> '_ForwardIterator' lvalue ParmVar 0x9eabe10 '__first' '_ForwardIterator')")
      (CallExpr 0x9eac5c0 <line:955:4, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9eac558 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e68820)
        (DeclRefExpr 0x9eac58c <col:17> '_ForwardIterator' lvalue Var 0x9eac4d0 '__middle' '_ForwardIterator')
        (DeclRefExpr 0x9eac5a4 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9eac430 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
      (IfStmt 0x9eac8b0 <line:956:4, line:963:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9eac670 <line:956:8, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9eac630 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
          (UnaryOperator 0x9eac600 <col:8, col:9> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9eac5e4 <col:9> '_ForwardIterator' lvalue Var 0x9eac4d0 '__middle' '_ForwardIterator'))
          (DeclRefExpr 0x9eac614 <col:20> 'const _Tp' lvalue ParmVar 0x9eabec0 '__val' 'const _Tp &'))
        (CompoundStmt 0x9eac848 <line:957:6, line:961:6>
          (BinaryOperator 0x9eac6c8 <line:958:8, col:18> '<dependent type>' '='
            (DeclRefExpr 0x9eac694 <col:8> '_ForwardIterator' lvalue ParmVar 0x9eabe10 '__first' '_ForwardIterator')
            (DeclRefExpr 0x9eac6ac <col:18> '_ForwardIterator' lvalue Var 0x9eac4d0 '__middle' '_ForwardIterator'))
          (UnaryOperator 0x9eac6f8 <line:959:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9eac6e0 <col:10> '_ForwardIterator' lvalue ParmVar 0x9eabe10 '__first' '_ForwardIterator'))
          (BinaryOperator 0x9eac830 <line:960:8, col:33> '<dependent type>' '='
            (DeclRefExpr 0x9eac70c <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9eac2a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (CXXOperatorCallExpr 0x9eac808 <col:16, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9eac7d0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (CXXOperatorCallExpr 0x9eac790 <col:16, col:24> '<dependent type>'
                (UnresolvedLookupExpr 0x9eac758 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                (DeclRefExpr 0x9eac724 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9eac2a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
                (DeclRefExpr 0x9eac73c <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9eac430 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
              (IntegerLiteral 0x9eac7b8 <col:33> 'int' 1))))
        (BinaryOperator 0x9eac898 <line:963:6, col:14> '<dependent type>' '='
          (DeclRefExpr 0x9eac864 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9eac2a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
          (DeclRefExpr 0x9eac87c <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x9eac430 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')))))
  (ReturnStmt 0x9eac920 <line:965:7, col:14>
    (DeclRefExpr 0x9eac904 <col:14> '_ForwardIterator' lvalue ParmVar 0x9eabe10 '__first' '_ForwardIterator')))

;
    template <typename _Size> inline _Size __lg(_Size __n) (CompoundStmt 0x9ead180 </usr/include/c++/4.6/bits/stl_algobase.h:973:5, line:978:5>
  (DeclStmt 0x9eacf48 <line:974:7, col:16>
    0x9eacf10 "_Size __k")
  (ForStmt 0x9ead0b8 <line:975:7, line:976:4>
    (BinaryOperator 0x9eacf88 <line:975:12, col:18> '<dependent type>' '='
      (DeclRefExpr 0x9eacf58 <col:12> '_Size' lvalue Var 0x9eacf10 '__k' '_Size')
      (IntegerLiteral 0x9eacf70 <col:18> 'int' 0))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ead010 <col:21, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9eacfd0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
      (DeclRefExpr 0x9eacfa0 <col:21> '_Size' lvalue ParmVar 0x9eac9c0 '__n' '_Size')
      (IntegerLiteral 0x9eacfb8 <col:28> 'int' 0))
    (CompoundAssignOperator 0x9ead068 <col:31, col:39> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x9ead034 <col:31> '_Size' lvalue ParmVar 0x9eac9c0 '__n' '_Size')
      (IntegerLiteral 0x9ead050 <col:39> 'int' 1))
    (UnaryOperator 0x9ead0a0 <line:976:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9ead088 <col:4> '_Size' lvalue Var 0x9eacf10 '__k' '_Size')))
  (ReturnStmt 0x9ead170 <line:977:7, col:20>
    (CXXOperatorCallExpr 0x9ead148 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9ead110 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (DeclRefExpr 0x9ead0dc <col:14> '_Size' lvalue Var 0x9eacf10 '__k' '_Size')
      (IntegerLiteral 0x9ead0f8 <col:20> 'int' 1))))

;
    inline int __lg(int __n) (CompoundStmt 0x9ead4f0 </usr/include/c++/4.6/bits/stl_algobase.h:982:3, col:66>
  (ReturnStmt 0x9ead4e0 <col:5, col:63>
    (ImplicitCastExpr 0x9ead4d0 <col:12, col:63> 'int' <IntegralCast>
      (BinaryOperator 0x9ead4b8 <col:12, col:63> 'unsigned int' '-'
        (BinaryOperator 0x9ead308 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x9ead2c8 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9ead288 </usr/include/c++/4.6/bits/stl_algobase.h:982:12, col:22> 'unsigned int' sizeof 'int')
            (ImplicitCastExpr 0x9ead2b8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9ead2a0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9ead2f8 </usr/include/c++/4.6/bits/stl_algobase.h:982:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ead2e0 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x9ead4a8 <col:46, col:63> 'unsigned int' <IntegralCast>
          (CallExpr 0x9ead468 <col:46, col:63> 'int'
            (ImplicitCastExpr 0x9ead458 <col:46> 'int (*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ead410 <col:46> 'int (unsigned int)' lvalue Function 0x9ead320 '__builtin_clz' 'int (unsigned int)'))
            (ImplicitCastExpr 0x9ead498 <col:60> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x9ead488 <col:60> 'int' <LValueToRValue>
                (DeclRefExpr 0x9ead428 <col:60> 'int' lvalue ParmVar 0x9ead1b0 '__n' 'int')))))))))


    inline long __lg(long __n) (CompoundStmt 0x9ead880 </usr/include/c++/4.6/bits/stl_algobase.h:986:3, col:67>
  (ReturnStmt 0x9ead870 <col:5, col:64>
    (ImplicitCastExpr 0x9ead860 <col:12, col:64> 'long' <IntegralCast>
      (BinaryOperator 0x9ead848 <col:12, col:64> 'unsigned int' '-'
        (BinaryOperator 0x9ead678 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x9ead638 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9ead5f8 </usr/include/c++/4.6/bits/stl_algobase.h:986:12, col:23> 'unsigned int' sizeof 'long')
            (ImplicitCastExpr 0x9ead628 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9ead610 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9ead668 </usr/include/c++/4.6/bits/stl_algobase.h:986:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ead650 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x9ead838 <col:46, col:64> 'unsigned int' <IntegralCast>
          (CallExpr 0x9ead7f8 <col:46, col:64> 'int'
            (ImplicitCastExpr 0x9ead7e8 <col:46> 'int (*)(unsigned long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ead7a0 <col:46> 'int (unsigned long)' lvalue Function 0x9ead6b0 '__builtin_clzl' 'int (unsigned long)'))
            (ImplicitCastExpr 0x9ead828 <col:61> 'unsigned long' <IntegralCast>
              (ImplicitCastExpr 0x9ead818 <col:61> 'long' <LValueToRValue>
                (DeclRefExpr 0x9ead7b8 <col:61> 'long' lvalue ParmVar 0x9ead520 '__n' 'long')))))))))


    inline long long __lg(long long __n) (CompoundStmt 0x9eadc10 </usr/include/c++/4.6/bits/stl_algobase.h:990:3, col:73>
  (ReturnStmt 0x9eadc00 <col:5, col:70>
    (ImplicitCastExpr 0x9eadbf0 <col:12, col:70> 'long long' <IntegralCast>
      (BinaryOperator 0x9eadbd8 <col:12, col:70> 'unsigned int' '-'
        (BinaryOperator 0x9eada08 <col:12, col:47> 'unsigned int' '-'
          (BinaryOperator 0x9ead9c8 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9ead988 </usr/include/c++/4.6/bits/stl_algobase.h:990:12, col:28> 'unsigned int' sizeof 'long long')
            (ImplicitCastExpr 0x9ead9b8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9ead9a0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x9ead9f8 </usr/include/c++/4.6/bits/stl_algobase.h:990:47> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9ead9e0 <col:47> 'int' 1)))
        (ImplicitCastExpr 0x9eadbc8 <col:51, col:70> 'unsigned int' <IntegralCast>
          (CallExpr 0x9eadb88 <col:51, col:70> 'int'
            (ImplicitCastExpr 0x9eadb78 <col:51> 'int (*)(unsigned long long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9eadb30 <col:51> 'int (unsigned long long)' lvalue Function 0x9eada40 '__builtin_clzll' 'int (unsigned long long)'))
            (ImplicitCastExpr 0x9eadbb8 <col:67> 'unsigned long long' <IntegralCast>
              (ImplicitCastExpr 0x9eadba8 <col:67> 'long long' <LValueToRValue>
                (DeclRefExpr 0x9eadb48 <col:67> 'long long' lvalue ParmVar 0x9ead8b0 '__n' 'long long')))))))))


    template <typename _II1, typename _II2> inline bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x9eaeb00 </usr/include/c++/4.6/bits/stl_algobase.h:1011:5, line:1023:5>
  (NullStmt 0x9eade98 <line:1018:56>)
  (ReturnStmt 0x9eaeaf0 <line:1020:7, line:1022:37>
    (CallExpr 0x9eaeac8 <line:1020:14, line:1022:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9eadec0 <line:1020:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ea4fa0)
      (CallExpr 0x9eae998 <col:31, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9eae948 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
        (DeclRefExpr 0x9eae97c <col:49> '_II1' lvalue ParmVar 0x9eadcf0 '__first1' '_II1'))
      (CallExpr 0x9eaea20 <line:1021:10, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9eae9d0 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
        (DeclRefExpr 0x9eaea04 <col:28> '_II1' lvalue ParmVar 0x9eadd30 '__last1' '_II1'))
      (CallExpr 0x9eaeaa8 <line:1022:10, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9eaea58 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
        (DeclRefExpr 0x9eaea8c <col:28> '_II2' lvalue ParmVar 0x9eadd70 '__first2' '_II2')))))

;
    template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> inline bool equal(_IIter1 __first1, _IIter1 __last1, _IIter2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x9eaf0d0 </usr/include/c++/4.6/bits/stl_algobase.h:1044:5, line:1054:5>
  (NullStmt 0x9eaee48 <line:1048:56>)
  (ForStmt 0x9eaf088 <line:1050:7, line:1052:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9eaeec8 <line:1050:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9eaee88 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
      (DeclRefExpr 0x9eaee54 <col:14> '_IIter1' lvalue ParmVar 0x9eaec30 '__first1' '_IIter1')
      (DeclRefExpr 0x9eaee6c <col:26> '_IIter1' lvalue ParmVar 0x9eaec70 '__last1' '_IIter1'))
    (BinaryOperator 0x9eaef50 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x9eaef08 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9eaeeec <col:37> '_IIter1' lvalue ParmVar 0x9eaec30 '__first1' '_IIter1'))
      (UnaryOperator 0x9eaef38 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9eaef1c <col:49> '_IIter2' lvalue ParmVar 0x9eaecb0 '__first2' '_IIter2')))
    (IfStmt 0x9eaf068 <line:1051:2, line:1052:11>
      <<<NULL>>>
      (UnaryOperator 0x9eaf030 <line:1051:6, col:47> '_Bool' prefix '!'
        (CXXUnresolvedConstructExpr 0x9eaf010 <col:7, col:47> '_Bool'
          (CallExpr 0x9eaefe8 <col:12, col:46> '<dependent type>'
            (DeclRefExpr 0x9eaef70 <col:12> '_BinaryPredicate' lvalue ParmVar 0x9eaecf0 '__binary_pred' '_BinaryPredicate')
            (UnaryOperator 0x9eaefa0 <col:26, col:27> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9eaef88 <col:27> '_IIter1' lvalue ParmVar 0x9eaec30 '__first1' '_IIter1'))
            (UnaryOperator 0x9eaefd0 <col:37, col:38> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9eaefb4 <col:38> '_IIter2' lvalue ParmVar 0x9eaecb0 '__first2' '_IIter2')))))
      (ReturnStmt 0x9eaf058 <line:1052:4, col:11>
        (CXXBoolLiteralExpr 0x9eaf048 <col:11> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x9eaf0c0 <line:1053:7, col:14>
    (CXXBoolLiteralExpr 0x9eaf0b0 <col:14> '_Bool' true)))

;
    template <typename _II1, typename _II2> inline bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x9eaf8c0 </usr/include/c++/4.6/bits/stl_algobase.h:1075:5, line:1090:5>
  (DeclStmt 0x9eaf4b0 <line:1077:7, col:69>
    0x9eaf480 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x9eaf5e0 <line:1078:7, col:69>
    0x9eaf5b0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (NullStmt 0x9eaf5f0 <line:1083:56>)
  (NullStmt 0x9eaf600 <line:1084:56>)
  (ReturnStmt 0x9eaf8b0 <line:1086:7, line:1089:33>
    (CallExpr 0x9eaf880 <line:1086:14, line:1089:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9eaf628 <line:1086:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eab160)
      (CallExpr 0x9eaf6c8 <col:49, col:75> '<dependent type>'
        (UnresolvedLookupExpr 0x9eaf678 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
        (DeclRefExpr 0x9eaf6ac <col:67> '_II1' lvalue ParmVar 0x9eaf1b0 '__first1' '_II1'))
      (CallExpr 0x9eaf750 <line:1087:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9eaf700 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
        (DeclRefExpr 0x9eaf734 <col:25> '_II1' lvalue ParmVar 0x9eaf1f0 '__last1' '_II1'))
      (CallExpr 0x9eaf7d8 <line:1088:7, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x9eaf788 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
        (DeclRefExpr 0x9eaf7bc <col:25> '_II2' lvalue ParmVar 0x9eaf230 '__first2' '_II2'))
      (CallExpr 0x9eaf860 <line:1089:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9eaf810 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e90780)
        (DeclRefExpr 0x9eaf844 <col:25> '_II2' lvalue ParmVar 0x9eaf270 '__last2' '_II2')))))

;
    template <typename _II1, typename _II2, typename _Compare> bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2, _Compare __comp) (CompoundStmt 0x9eb0b78 </usr/include/c++/4.6/bits/stl_algobase.h:1109:5, line:1130:5>
  (DeclStmt 0x9eb01c0 <line:1110:7, col:75>
    0x9eb0190 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x9eb02f0 <line:1111:7, col:75>
    0x9eb02c0 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x9eb0500 <line:1112:7, col:64>
    0x9eb04d0 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (NullStmt 0x9eb0510 <line:1117:56>)
  (NullStmt 0x9eb0520 <line:1118:56>)
  (BinaryOperator 0x9eb0640 <line:1120:7, col:76> '<dependent type>' '='
    (DeclRefExpr 0x9eb052c <col:7> '_II1' lvalue ParmVar 0x9eafe70 '__last1' '_II1')
    (CallExpr 0x9eb0610 <col:17, col:76> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9eb0588 <col:17, col:29> '<dependent type>' lvalue)
      (DeclRefExpr 0x9eb05ac <col:40> '_II1' lvalue ParmVar 0x9eafe30 '__first1' '_II1')
      (DeclRefExpr 0x9eb05c4 <col:50> '_II1' lvalue ParmVar 0x9eafe70 '__last1' '_II1')
      (DeclRefExpr 0x9eb05dc <col:59> '_II2' lvalue ParmVar 0x9eafeb0 '__first2' '_II2')
      (DeclRefExpr 0x9eb05f4 <col:69> '_II2' lvalue ParmVar 0x9eafef0 '__last2' '_II2')))
  (ForStmt 0x9eb09f8 <line:1121:7, line:1128:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9eb0790 <line:1121:14, col:73> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9eb06c8 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb0688 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
        (DeclRefExpr 0x9eb0658 <col:14> '_II1' lvalue ParmVar 0x9eafe30 '__first1' '_II1')
        (DeclRefExpr 0x9eb0670 <col:26> '_II1' lvalue ParmVar 0x9eafe70 '__last1' '_II1'))
      (CallExpr 0x9eb0768 <col:37, col:73> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9eb0710 <col:37, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x9eb0734 <col:56> '_II2' lvalue ParmVar 0x9eafeb0 '__first2' '_II2')
        (DeclRefExpr 0x9eb074c <col:66> '_II2' lvalue ParmVar 0x9eafef0 '__last2' '_II2')))
    (BinaryOperator 0x9eb0808 <line:1122:5, col:19> '<dependent type>' ','
      (UnaryOperator 0x9eb07c0 <col:5, col:7> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9eb07a8 <col:7> '_II1' lvalue ParmVar 0x9eafe30 '__first1' '_II1'))
      (UnaryOperator 0x9eb07f0 <col:17, col:19> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9eb07d4 <col:19> '_II2' lvalue ParmVar 0x9eafeb0 '__first2' '_II2')))
    (CompoundStmt 0x9eb09e0 <line:1123:2, line:1128:2>
      (IfStmt 0x9eb08e0 <line:1124:4, line:1125:13>
        <<<NULL>>>
        (CallExpr 0x9eb0898 <line:1124:8, col:35> '<dependent type>'
          (DeclRefExpr 0x9eb0820 <col:8> '_Compare' lvalue ParmVar 0x9eaff30 '__comp' '_Compare')
          (UnaryOperator 0x9eb0850 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9eb0838 <col:16> '_II1' lvalue ParmVar 0x9eafe30 '__first1' '_II1'))
          (UnaryOperator 0x9eb0880 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9eb0864 <col:27> '_II2' lvalue ParmVar 0x9eafeb0 '__first2' '_II2')))
        (ReturnStmt 0x9eb08d0 <line:1125:6, col:13>
          (CXXBoolLiteralExpr 0x9eb08c0 <col:13> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x9eb09c0 <line:1126:4, line:1127:13>
        <<<NULL>>>
        (CallExpr 0x9eb0978 <line:1126:8, col:35> '<dependent type>'
          (DeclRefExpr 0x9eb08fc <col:8> '_Compare' lvalue ParmVar 0x9eaff30 '__comp' '_Compare')
          (UnaryOperator 0x9eb0930 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9eb0914 <col:16> '_II2' lvalue ParmVar 0x9eafeb0 '__first2' '_II2'))
          (UnaryOperator 0x9eb0960 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9eb0944 <col:27> '_II1' lvalue ParmVar 0x9eafe30 '__first1' '_II1')))
        (ReturnStmt 0x9eb09b0 <line:1127:6, col:13>
          (CXXBoolLiteralExpr 0x9eb09a0 <col:13> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x9eb0b68 <line:1129:7, col:49>
    (BinaryOperator 0x9eb0b50 <col:14, col:49> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9eb0a90 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb0a50 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50)
        (DeclRefExpr 0x9eb0a1c <col:14> '_II1' lvalue ParmVar 0x9eafe30 '__first1' '_II1')
        (DeclRefExpr 0x9eb0a34 <col:26> '_II1' lvalue ParmVar 0x9eafe70 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x9eb0b28 <col:37, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb0ae8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
        (DeclRefExpr 0x9eb0ab4 <col:37> '_II2' lvalue ParmVar 0x9eafeb0 '__first2' '_II2')
        (DeclRefExpr 0x9eb0acc <col:49> '_II2' lvalue ParmVar 0x9eafef0 '__last2' '_II2')))))

;
    template <typename _InputIterator1, typename _InputIterator2> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) (CompoundStmt 0x9eb12b8 </usr/include/c++/4.6/bits/stl_algobase.h:1149:5, line:1164:5>
  (NullStmt 0x9eb0f38 <line:1156:56>)
  (WhileStmt 0x9eb1138 <line:1158:7, line:1162:9>
    <<<NULL>>>
    (BinaryOperator 0x9eb10a8 <line:1158:14, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9eb0fb8 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb0f78 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
        (DeclRefExpr 0x9eb0f44 <col:14> '_InputIterator1' lvalue ParmVar 0x9eb0d40 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9eb0f5c <col:26> '_InputIterator1' lvalue ParmVar 0x9eb0d80 '__last1' '_InputIterator1'))
      (CXXOperatorCallExpr 0x9eb1080 <col:37, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb1040 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50)
        (UnaryOperator 0x9eb0ff8 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9eb0fdc <col:38> '_InputIterator1' lvalue ParmVar 0x9eb0d40 '__first1' '_InputIterator1'))
        (UnaryOperator 0x9eb1028 <col:50, col:51> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9eb100c <col:51> '_InputIterator2' lvalue ParmVar 0x9eb0dc0 '__first2' '_InputIterator2'))))
    (CompoundStmt 0x9eb1120 <line:1159:9, line:1162:9>
      (UnaryOperator 0x9eb10d8 <line:1160:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9eb10c0 <col:6> '_InputIterator1' lvalue ParmVar 0x9eb0d40 '__first1' '_InputIterator1'))
      (UnaryOperator 0x9eb1108 <line:1161:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9eb10ec <col:6> '_InputIterator2' lvalue ParmVar 0x9eb0dc0 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x9eb12a8 <line:1163:7, col:71>
    (CXXUnresolvedConstructExpr 0x9eb1288 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x9eb1258 <col:53> '_InputIterator1' lvalue ParmVar 0x9eb0d40 '__first1' '_InputIterator1')
      (DeclRefExpr 0x9eb1270 <col:63> '_InputIterator2' lvalue ParmVar 0x9eb0dc0 '__first2' '_InputIterator2'))))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x9eb1a88 </usr/include/c++/4.6/bits/stl_algobase.h:1187:5, line:1199:5>
  (NullStmt 0x9eb1708 <line:1191:56>)
  (WhileStmt 0x9eb1908 <line:1193:7, line:1197:9>
    <<<NULL>>>
    (BinaryOperator 0x9eb1878 <line:1193:14, col:77> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9eb1788 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x9eb1748 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870)
        (DeclRefExpr 0x9eb1714 <col:14> '_InputIterator1' lvalue ParmVar 0x9eb14c0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9eb172c <col:26> '_InputIterator1' lvalue ParmVar 0x9eb1500 '__last1' '_InputIterator1'))
      (CXXUnresolvedConstructExpr 0x9eb1858 <col:37, col:77> '_Bool'
        (CallExpr 0x9eb1830 <col:42, col:76> '<dependent type>'
          (DeclRefExpr 0x9eb17b8 <col:42> '_BinaryPredicate' lvalue ParmVar 0x9eb1580 '__binary_pred' '_BinaryPredicate')
          (UnaryOperator 0x9eb17e8 <col:56, col:57> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9eb17d0 <col:57> '_InputIterator1' lvalue ParmVar 0x9eb14c0 '__first1' '_InputIterator1'))
          (UnaryOperator 0x9eb1818 <col:67, col:68> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9eb17fc <col:68> '_InputIterator2' lvalue ParmVar 0x9eb1540 '__first2' '_InputIterator2')))))
    (CompoundStmt 0x9eb18f0 <line:1194:9, line:1197:9>
      (UnaryOperator 0x9eb18a8 <line:1195:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9eb1890 <col:6> '_InputIterator1' lvalue ParmVar 0x9eb14c0 '__first1' '_InputIterator1'))
      (UnaryOperator 0x9eb18d8 <line:1196:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9eb18bc <col:6> '_InputIterator2' lvalue ParmVar 0x9eb1540 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x9eb1a78 <line:1198:7, col:71>
    (CXXUnresolvedConstructExpr 0x9eb1a58 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x9eb1a28 <col:53> '_InputIterator1' lvalue ParmVar 0x9eb14c0 '__first1' '_InputIterator1')
      (DeclRefExpr 0x9eb1a40 <col:63> '_InputIterator2' lvalue ParmVar 0x9eb1540 '__first2' '_InputIterator2'))))

;
}
extern void *__builtin_memmove(void *, const void *, unsigned int);
extern void *__builtin_memset(void *, int, unsigned int);
extern int __builtin_memcmp(const void *, const void *, unsigned int);
extern int __builtin_clz(unsigned int);
extern int __builtin_clzl(unsigned long);
extern int __builtin_clzll(unsigned long long);
namespace std {
    using ::mbstate_t;
    ;
}
namespace std {
    using ::wint_t;
    ;
    using ::btowc;
    ;
    using ::fgetwc;
    ;
    using ::fgetws;
    ;
    using ::fputwc;
    ;
    using ::fputws;
    ;
    using ::fwide;
    ;
    using ::fwprintf;
    ;
    using ::fwscanf;
    ;
    using ::getwc;
    ;
    using ::getwchar;
    ;
    using ::mbrlen;
    ;
    using ::mbrtowc;
    ;
    using ::mbsinit;
    ;
    using ::mbsrtowcs;
    ;
    using ::putwc;
    ;
    using ::putwchar;
    ;
    using ::swprintf;
    ;
    using ::swscanf;
    ;
    using ::ungetwc;
    ;
    using ::vfwprintf;
    ;
    using ::vfwscanf;
    ;
    using ::vswprintf;
    ;
    using ::vswscanf;
    ;
    using ::vwprintf;
    ;
    using ::vwscanf;
    ;
    using ::wcrtomb;
    ;
    using ::wcscat;
    ;
    using ::wcscmp;
    ;
    using ::wcscoll;
    ;
    using ::wcscpy;
    ;
    using ::wcscspn;
    ;
    using ::wcsftime;
    ;
    using ::wcslen;
    ;
    using ::wcsncat;
    ;
    using ::wcsncmp;
    ;
    using ::wcsncpy;
    ;
    using ::wcsrtombs;
    ;
    using ::wcsspn;
    ;
    using ::wcstod;
    ;
    using ::wcstof;
    ;
    using ::wcstok;
    ;
    using ::wcstol;
    ;
    using ::wcstoul;
    ;
    using ::wcsxfrm;
    ;
    using ::wctob;
    ;
    using ::wmemcmp;
    ;
    using ::wmemcpy;
    ;
    using ::wmemmove;
    ;
    using ::wmemset;
    ;
    using ::wprintf;
    ;
    using ::wscanf;
    ;
    using ::wcschr;
    ;
    using ::wcspbrk;
    ;
    using ::wcsrchr;
    ;
    using ::wcsstr;
    ;
    using ::wmemchr;
    ;
    inline wchar_t *wcschr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x9eb7ae0 </usr/include/c++/4.6/cwchar:214:3, col:58>
  (ReturnStmt 0x9eb7ad0 <col:5, col:55>
    (CallExpr 0x9eb7a98 <col:12, col:55> 'wchar_t *'
      (ImplicitCastExpr 0x9eb7a88 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9eb7a28 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9d72ad0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x9eb7660 'wcschr')))
      (CXXConstCastExpr 0x9eb79f8 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9eb79e8 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9eb79c0 <col:46> 'wchar_t *' lvalue ParmVar 0x9eb7860 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9eb7ac0 <col:52> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9eb7a10 <col:52> 'wchar_t' lvalue ParmVar 0x9eb78a0 '__c' 'wchar_t')))))


    inline wchar_t *wcspbrk(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9eb7d80 </usr/include/c++/4.6/cwchar:218:3, col:61>
  (ReturnStmt 0x9eb7d70 <col:5, col:58>
    (CallExpr 0x9eb7d38 <col:12, col:58> 'wchar_t *'
      (ImplicitCastExpr 0x9eb7d28 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9eb7cc8 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9d732d0 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x9eb76d0 'wcspbrk')))
      (CXXConstCastExpr 0x9eb7c98 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9eb7c88 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9eb7c60 <col:47> 'wchar_t *' lvalue ParmVar 0x9eb7b10 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9eb7d60 <col:54> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9eb7cb0 <col:54> 'const wchar_t *' lvalue ParmVar 0x9eb7b60 '__s2' 'const wchar_t *')))))


    inline wchar_t *wcsrchr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x9eb7fd0 </usr/include/c++/4.6/cwchar:222:3, col:59>
  (ReturnStmt 0x9eb7fc0 <col:5, col:56>
    (CallExpr 0x9eb7f88 <col:12, col:56> 'wchar_t *'
      (ImplicitCastExpr 0x9eb7f78 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9eb7f58 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9d72c30 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x9eb7740 'wcsrchr')))
      (CXXConstCastExpr 0x9eb7f28 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9eb7f18 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9eb7ef0 <col:47> 'wchar_t *' lvalue ParmVar 0x9eb7db0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9eb7fb0 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9eb7f40 <col:53> 'wchar_t' lvalue ParmVar 0x9eb7df0 '__c' 'wchar_t')))))


    inline wchar_t *wcsstr(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x9eb9220 </usr/include/c++/4.6/cwchar:226:3, col:60>
  (ReturnStmt 0x9eb9210 <col:5, col:57>
    (CallExpr 0x9eb91d8 <col:12, col:57> 'wchar_t *'
      (ImplicitCastExpr 0x9eb91c8 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9eb91a8 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9d73440 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x9eb77b0 'wcsstr')))
      (CXXConstCastExpr 0x9eb9178 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9eb9168 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9eb9140 <col:46> 'wchar_t *' lvalue ParmVar 0x9eb8000 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x9eb9200 <col:53> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x9eb9190 <col:53> 'const wchar_t *' lvalue ParmVar 0x9eb9040 '__s2' 'const wchar_t *')))))


    inline wchar_t *wmemchr(wchar_t *__p, wchar_t __c, size_t __n) (CompoundStmt 0x9eb9550 </usr/include/c++/4.6/cwchar:230:3, col:64>
  (ReturnStmt 0x9eb9540 <col:5, col:61>
    (CallExpr 0x9eb94f8 <col:12, col:61> 'wchar_t *'
      (ImplicitCastExpr 0x9eb94e8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9eb9488 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9d73cb0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9eb7820 'wmemchr')))
      (CXXConstCastExpr 0x9eb9440 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x9eb9430 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9eb9408 <col:47> 'wchar_t *' lvalue ParmVar 0x9eb9250 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x9eb9520 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9eb9458 <col:53> 'wchar_t' lvalue ParmVar 0x9eb9290 '__c' 'wchar_t'))
      (ImplicitCastExpr 0x9eb9530 <col:58> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9eb9470 <col:58> 'size_t':'unsigned int' lvalue ParmVar 0x9eb92d0 '__n' 'size_t':'unsigned int')))))


}
namespace __gnu_cxx {
    using ::wcstold;
    ;
    using ::wcstoll;
    ;
    using ::wcstoull;
    ;
}
namespace std {
    using ::__gnu_cxx::wcstold;
    ;
    using ::__gnu_cxx::wcstoll;
    ;
    using ::__gnu_cxx::wcstoull;
    ;
}
namespace std {
    typedef long long streamoff;
    typedef ptrdiff_t streamsize;
    template <typename _StateT = __mbstate_t> class fpos
template <typename _StateT> class fpos {
        class fpos;
    private:
    private:
        streamoff _M_off;
        _StateT _M_state;
    public:
    public:
        fpos<_StateT>() : _M_off((IntegerLiteral 0x9eba678 </usr/include/c++/4.6/bits/postypes.h:125:16> 'int' 0)
), _M_state() (CompoundStmt 0x9eba710 </usr/include/c++/4.6/bits/postypes.h:125:31, col:33>)


        fpos<_StateT>(streamoff __off) : _M_off((DeclRefExpr 0x9eba720 </usr/include/c++/4.6/bits/postypes.h:135:16> 'streamoff':'long long' lvalue ParmVar 0x9eb9df0 '__off' 'streamoff':'long long')
), _M_state() (CompoundStmt 0x9eba7c0 </usr/include/c++/4.6/bits/postypes.h:135:35, col:37>)


        streamoff operator streamoff() const (CompoundStmt 0x9eba848 </usr/include/c++/4.6/bits/postypes.h:138:34, col:51>
  (ReturnStmt 0x9eba838 <col:36, col:43>
    (MemberExpr 0x9eba814 <col:43> 'const streamoff':'const long long' lvalue ->_M_off 0x9eb9ca0
      (CXXThisExpr 0x9eba7e8 <col:43> 'const fpos<_StateT> *' this))))


        void state(_StateT __st) (CompoundStmt 0x9eba8c0 </usr/include/c++/4.6/bits/postypes.h:143:7, col:26>
  (BinaryOperator 0x9eba8a8 <col:9, col:20> '<dependent type>' '='
    (MemberExpr 0x9eba870 <col:9> '_StateT' lvalue ->_M_state 0x9eb9ce0
      (CXXThisExpr 0x9eba860 <col:9> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9eba890 <col:20> '_StateT' lvalue ParmVar 0x9eb9fe0 '__st' '_StateT')))


        _StateT state() const (CompoundStmt 0x9eba918 </usr/include/c++/4.6/bits/postypes.h:148:7, col:26>
  (ReturnStmt 0x9eba908 <col:9, col:16>
    (MemberExpr 0x9eba8e8 <col:16> 'const _StateT' lvalue ->_M_state 0x9eb9ce0
      (CXXThisExpr 0x9eba8d8 <col:16> 'const fpos<_StateT> *' this))))


        fpos<_StateT> &operator+=(streamoff __off) (CompoundStmt 0x9eba9d0 </usr/include/c++/4.6/bits/postypes.h:156:7, line:159:7>
  (CompoundAssignOperator 0x9eba978 <line:157:2, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9eba940 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x9eb9ca0
      (CXXThisExpr 0x9eba930 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9eba960 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9eba170 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9eba9c0 <line:158:2, col:10>
    (UnaryOperator 0x9eba9a8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9eba998 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> &operator-=(streamoff __off) (CompoundStmt 0x9ebaa88 </usr/include/c++/4.6/bits/postypes.h:167:7, line:170:7>
  (CompoundAssignOperator 0x9ebaa30 <line:168:2, col:12> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x9eba9f8 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x9eb9ca0
      (CXXThisExpr 0x9eba9e8 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x9ebaa18 <col:12> 'streamoff':'long long' lvalue ParmVar 0x9eba2a0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ebaa78 <line:169:2, col:10>
    (UnaryOperator 0x9ebaa60 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ebaa50 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> operator+(streamoff __off) const (CompoundStmt 0x9ebabb8 </usr/include/c++/4.6/bits/postypes.h:180:7, line:184:7>
  (DeclStmt 0x9ebab30 <line:181:2, col:19>
    0x9ebaab0 "fpos<_StateT> __pos =
      (ParenListExpr 0x9ebab10 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9ebaaf8 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ebaae8 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9ebab70 <line:182:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9ebab40 <col:2> 'fpos<_StateT>' lvalue Var 0x9ebaab0 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9ebab58 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9eba370 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ebaba8 <line:183:2, col:9>
    (DeclRefExpr 0x9ebab90 <col:9> 'fpos<_StateT>' lvalue Var 0x9ebaab0 '__pos' 'fpos<_StateT>')))


        fpos<_StateT> operator-(streamoff __off) const (CompoundStmt 0x9ebace8 </usr/include/c++/4.6/bits/postypes.h:194:7, line:198:7>
  (DeclStmt 0x9ebac60 <line:195:2, col:19>
    0x9ebabe0 "fpos<_StateT> __pos =
      (ParenListExpr 0x9ebac40 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x9ebac28 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ebac18 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x9ebaca0 <line:196:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9ebac70 <col:2> 'fpos<_StateT>' lvalue Var 0x9ebabe0 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x9ebac88 <col:11> 'streamoff':'long long' lvalue ParmVar 0x9eba480 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x9ebacd8 <line:197:2, col:9>
    (DeclRefExpr 0x9ebacc0 <col:9> 'fpos<_StateT>' lvalue Var 0x9ebabe0 '__pos' 'fpos<_StateT>')))


        streamoff operator-(const fpos<_StateT> &__other) const (CompoundStmt 0x9ebadf8 </usr/include/c++/4.6/bits/postypes.h:207:7, col:41>
  (ReturnStmt 0x9ebade8 <col:9, col:33>
    (CXXOperatorCallExpr 0x9ebadc0 <col:16, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x9ebad88 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (MemberExpr 0x9ebad18 <col:16> 'const streamoff':'const long long' lvalue ->_M_off 0x9eb9ca0
        (CXXThisExpr 0x9ebad08 <col:16> 'const fpos<_StateT> *' this))
      (CXXDependentScopeMemberExpr 0x9ebad50 <col:25, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9ebad38 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0x9eba570 '__other' 'const fpos<_StateT> &')))))


    };
    template <typename _StateT> inline bool operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9ebd3d8 </usr/include/c++/4.6/bits/postypes.h:218:5, col:52>
  (ReturnStmt 0x9ebd3c8 <col:7, col:49>
    (BinaryOperator 0x9ebd3b0 <col:14, col:49> '_Bool' '=='
      (CXXUnresolvedConstructExpr 0x9ebd350 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9ebd338 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9ebaf50 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9ebd390 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9ebd378 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9ebd200 '__rhs' 'const fpos<_StateT> &')))))

;
    template <typename _StateT> inline bool operator!=(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x9ebd7c8 </usr/include/c++/4.6/bits/postypes.h:223:5, col:52>
  (ReturnStmt 0x9ebd7b8 <col:7, col:49>
    (BinaryOperator 0x9ebd7a0 <col:14, col:49> '_Bool' '!='
      (CXXUnresolvedConstructExpr 0x9ebd740 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x9ebd728 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x9ebd510 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x9ebd780 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x9ebd768 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x9ebd610 '__rhs' 'const fpos<_StateT> &')))))

;
    typedef fpos<mbstate_t> streampos;
    typedef fpos<mbstate_t> wstreampos;
}
namespace __gnu_cxx {
    template <typename _CharT> struct _Char_types {
        struct _Char_types;
        typedef unsigned long int_type;
        typedef std::streampos pos_type;
        typedef std::streamoff off_type;
        typedef std::mbstate_t state_type;
    };
    template <typename _CharT> struct char_traits {
        struct char_traits;
        typedef _CharT char_type;
        typedef typename _Char_types<_CharT>::int_type int_type;
        typedef typename _Char_types<_CharT>::pos_type pos_type;
        typedef typename _Char_types<_CharT>::off_type off_type;
        typedef typename _Char_types<_CharT>::state_type state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec0ea8 </usr/include/c++/4.6/bits/char_traits.h:94:7, col:22>
  (BinaryOperator 0x9ec0e90 <col:9, col:16> '<dependent type>' '='
    (DeclRefExpr 0x9ec0e60 <col:9> 'char_type':'_CharT' lvalue ParmVar 0x9ebe6b0 '__c1' 'char_type &')
    (DeclRefExpr 0x9ec0e78 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9ebe720 '__c2' 'const char_type &')))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec0f60 </usr/include/c++/4.6/bits/char_traits.h:98:7, col:30>
  (ReturnStmt 0x9ec0f50 <col:9, col:24>
    (CXXOperatorCallExpr 0x9ec0f28 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9ec0ef0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e7feb0 0x9e811e0)
      (DeclRefExpr 0x9ec0ebc <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9ebe840 '__c1' 'const char_type &')
      (DeclRefExpr 0x9ec0ed4 <col:24> 'const char_type':'const _CharT' lvalue ParmVar 0x9ebe890 '__c2' 'const char_type &'))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec1018 </usr/include/c++/4.6/bits/char_traits.h:102:7, col:29>
  (ReturnStmt 0x9ec1008 <col:9, col:23>
    (CXXOperatorCallExpr 0x9ec0fe0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9ec0fa8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e82410 0x9e829e0)
      (DeclRefExpr 0x9ec0f74 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x9ebe9b0 '__c1' 'const char_type &')
      (DeclRefExpr 0x9ec0f8c <col:23> 'const char_type':'const _CharT' lvalue ParmVar 0x9ebea00 '__c2' 'const char_type &'))))


        static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n);
        static std::size_t length(const char_type *__s);
        static const char_type *find(const char_type *__s, std::size_t __n, const char_type &__a);
        static char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *assign(char_type *__s, std::size_t __n, char_type __a);
        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9ec1078 </usr/include/c++/4.6/bits/char_traits.h:124:7, col:45>
  (ReturnStmt 0x9ec1068 <col:9, col:42>
    (CXXStaticCastExpr 0x9ec1050 <col:16, col:42> 'char_type':'_CharT' static_cast<char_type> <Dependent>
      (DeclRefExpr 0x9ec102c <col:39> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ec08e0 '__c' 'const int_type &'))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9ec10d8 </usr/include/c++/4.6/bits/char_traits.h:128:7, col:44>
  (ReturnStmt 0x9ec10c8 <col:9, col:41>
    (CXXStaticCastExpr 0x9ec10b0 <col:16, col:41> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (DeclRefExpr 0x9ec108c <col:38> 'const char_type':'const _CharT' lvalue ParmVar 0x9ec0a00 '__c' 'const char_type &'))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ec1190 </usr/include/c++/4.6/bits/char_traits.h:132:7, col:30>
  (ReturnStmt 0x9ec1180 <col:9, col:24>
    (CXXOperatorCallExpr 0x9ec1158 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9ec1120 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e7feb0 0x9e811e0)
      (DeclRefExpr 0x9ec10ec <col:16> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ec0b20 '__c1' 'const int_type &')
      (DeclRefExpr 0x9ec1104 <col:24> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ec0b70 '__c2' 'const int_type &'))))


        static int_type eof() (CompoundStmt 0x9ec1208 </usr/include/c++/4.6/bits/char_traits.h:136:7, col:59>
  (ReturnStmt 0x9ec11f8 <col:9, col:56>
    (CXXStaticCastExpr 0x9ec11e0 <col:16, col:56> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (UnaryOperator 0x9ec11c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9ec11a8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9ec1368 </usr/include/c++/4.6/bits/char_traits.h:140:7, col:75>
  (ReturnStmt 0x9ec1358 <col:9, col:72>
    (ConditionalOperator 0x9ec1338 <col:16, col:72> '<dependent type>'
      (UnaryOperator 0x9ec12b0 <col:16, col:39> '<dependent type>' prefix '!'
        (CallExpr 0x9ec1288 <col:17, col:39> '<dependent type>'
          (DeclRefExpr 0x9ec121c <col:17> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9ec0c10 'eq_int_type' '_Bool (const int_type &, const int_type &)')
          (DeclRefExpr 0x9ec1234 <col:29> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ec0d40 '__c' 'const int_type &')
          (CallExpr 0x9ec1268 <col:34, col:38> '<dependent type>'
            (DeclRefExpr 0x9ec124c <col:34> 'int_type (void)' lvalue CXXMethod 0x9ec0cd0 'eof' 'int_type (void)'))))
      (DeclRefExpr 0x9ec12c4 <col:43> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x9ec0d40 '__c' 'const int_type &')
      (CallExpr 0x9ec1318 <col:49, col:72> '<dependent type>'
        (DeclRefExpr 0x9ec12dc <col:49> 'int_type (const char_type &)' lvalue CXXMethod 0x9ec0aa0 'to_int_type' 'int_type (const char_type &)')
        (CXXUnresolvedConstructExpr 0x9ec1300 <col:61, col:71> 'char_type':'_CharT')))))


    };
    static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9ec1ab0 </usr/include/c++/4.6/bits/char_traits.h:147:5, line:154:5>
  (ForStmt 0x9ec1a60 <line:148:7, line:152:11>
    (DeclStmt 0x9ec1770 <line:148:12, col:31>
      0x9ec1710 "std::size_t __i =
        (ImplicitCastExpr 0x9ec1760 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ec1748 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9ec17d0 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x9ec17b0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ec1780 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x9ec1710 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x9ec17c0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ec1798 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x9ec15e0 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x9ec1800 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9ec17e8 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x9ec1710 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x9ec1a40 <line:149:2, line:152:11>
      <<<NULL>>>
      (CallExpr 0x9ec18c0 <line:149:6, col:29> '<dependent type>'
        (DeclRefExpr 0x9ec1814 <col:6> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ebea60 'lt' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9ec1860 <col:9, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9ec182c <col:9> 'const char_type *' lvalue ParmVar 0x9ec1530 '__s1' 'const char_type *')
          (DeclRefExpr 0x9ec1844 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x9ec1710 '__i' 'std::size_t':'unsigned int'))
        (ArraySubscriptExpr 0x9ec18a8 <col:20, col:28> '<dependent type>' lvalue
          (DeclRefExpr 0x9ec1874 <col:20> 'const char_type *' lvalue ParmVar 0x9ec1580 '__s2' 'const char_type *')
          (DeclRefExpr 0x9ec188c <col:25> 'std::size_t':'unsigned int' lvalue Var 0x9ec1710 '__i' 'std::size_t':'unsigned int')))
      (ReturnStmt 0x9ec1918 <line:150:4, col:12>
        (UnaryOperator 0x9ec1900 <col:11, col:12> 'int' prefix '-'
          (IntegerLiteral 0x9ec18e8 <col:12> 'int' 1)))
      (IfStmt 0x9ec1a20 <line:151:7, line:152:11>
        <<<NULL>>>
        (CallExpr 0x9ec19d0 <line:151:11, col:34> '<dependent type>'
          (DeclRefExpr 0x9ec1928 <col:11> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ebea60 'lt' '_Bool (const char_type &, const char_type &)')
          (ArraySubscriptExpr 0x9ec1970 <col:14, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x9ec1940 <col:14> 'const char_type *' lvalue ParmVar 0x9ec1580 '__s2' 'const char_type *')
            (DeclRefExpr 0x9ec1958 <col:19> 'std::size_t':'unsigned int' lvalue Var 0x9ec1710 '__i' 'std::size_t':'unsigned int'))
          (ArraySubscriptExpr 0x9ec19b8 <col:25, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x9ec1984 <col:25> 'const char_type *' lvalue ParmVar 0x9ec1530 '__s1' 'const char_type *')
            (DeclRefExpr 0x9ec199c <col:30> 'std::size_t':'unsigned int' lvalue Var 0x9ec1710 '__i' 'std::size_t':'unsigned int')))
        (ReturnStmt 0x9ec1a10 <line:152:4, col:11>
          (IntegerLiteral 0x9ec19f8 <col:11> 'int' 1))
        <<<NULL>>>)))
  (ReturnStmt 0x9ec1aa0 <line:153:7, col:14>
    (IntegerLiteral 0x9ec1a88 <col:14> 'int' 0)))


    static std::size_t length(const char_type *__p) (CompoundStmt 0x9ec1f70 </usr/include/c++/4.6/bits/char_traits.h:160:5, line:165:5>
  (DeclStmt 0x9ec1e20 <line:161:7, col:26>
    0x9ec1dc0 "std::size_t __i =
      (ImplicitCastExpr 0x9ec1e10 <col:25> 'std::size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ec1df8 <col:25> 'int' 0))")
  (WhileStmt 0x9ec1f20 <line:162:7, line:163:11>
    <<<NULL>>>
    (UnaryOperator 0x9ec1ed8 <line:162:14, col:39> '<dependent type>' prefix '!'
      (CallExpr 0x9ec1eb0 <col:15, col:39> '<dependent type>'
        (DeclRefExpr 0x9ec1e30 <col:15> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ebe930 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9ec1e78 <col:18, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9ec1e48 <col:18> 'const char_type *' lvalue ParmVar 0x9ec1ca0 '__p' 'const char_type *')
          (DeclRefExpr 0x9ec1e60 <col:22> 'std::size_t':'unsigned int' lvalue Var 0x9ec1dc0 '__i' 'std::size_t':'unsigned int'))
        (CXXUnresolvedConstructExpr 0x9ec1e98 <col:28, col:38> 'char_type':'_CharT')))
    (UnaryOperator 0x9ec1f08 <line:163:9, col:11> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9ec1eec <col:11> 'std::size_t':'unsigned int' lvalue Var 0x9ec1dc0 '__i' 'std::size_t':'unsigned int')))
  (ReturnStmt 0x9ec1f60 <line:164:7, col:14>
    (ImplicitCastExpr 0x9ec1f50 <col:14> 'std::size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9ec1f34 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x9ec1dc0 '__i' 'std::size_t':'unsigned int'))))


    static const typename char_traits<_CharT>::char_type *find(const char_type *__s, std::size_t __n, const char_type &__a) (CompoundStmt 0x9ec3b88 </usr/include/c++/4.6/bits/char_traits.h:171:5, line:176:5>
  (ForStmt 0x9ec3b38 <line:172:7, line:174:24>
    (DeclStmt 0x9ec3930 <line:172:12, col:31>
      0x9ec38d0 "std::size_t __i =
        (ImplicitCastExpr 0x9ec3920 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ec3908 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x9ec3990 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x9ec3970 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ec3940 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x9ec38d0 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x9ec3980 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ec3958 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x9ec22a0 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x9ec39c0 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x9ec39a8 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x9ec38d0 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x9ec3b18 <line:173:9, line:174:24>
      <<<NULL>>>
      (CallExpr 0x9ec3a50 <line:173:13, col:29> '<dependent type>'
        (DeclRefExpr 0x9ec39d4 <col:13> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x9ebe930 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x9ec3a20 <col:16, col:23> '<dependent type>' lvalue
          (DeclRefExpr 0x9ec39ec <col:16> 'const char_type *' lvalue ParmVar 0x9ec2240 '__s' 'const char_type *')
          (DeclRefExpr 0x9ec3a04 <col:20> 'std::size_t':'unsigned int' lvalue Var 0x9ec38d0 '__i' 'std::size_t':'unsigned int'))
        (DeclRefExpr 0x9ec3a34 <col:26> 'const char_type':'const _CharT' lvalue ParmVar 0x9ec22f0 '__a' 'const char_type &'))
      (ReturnStmt 0x9ec3b08 <line:174:11, col:24>
        (CXXOperatorCallExpr 0x9ec3ae0 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9ec3aa8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e86e30)
          (DeclRefExpr 0x9ec3a74 <col:18> 'const char_type *' lvalue ParmVar 0x9ec2240 '__s' 'const char_type *')
          (DeclRefExpr 0x9ec3a8c <col:24> 'std::size_t':'unsigned int' lvalue Var 0x9ec38d0 '__i' 'std::size_t':'unsigned int')))
      <<<NULL>>>))
  (ReturnStmt 0x9ec3b78 <line:175:7, col:14>
    (IntegerLiteral 0x9ec3b60 <col:14> 'int' 0)))


    static typename char_traits<_CharT>::char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9ec4220 </usr/include/c++/4.6/bits/char_traits.h:182:5, line:185:5>
  (ReturnStmt 0x9ec4210 <line:183:7, line:184:35>
    (CXXStaticCastExpr 0x9ec41f8 <line:183:14, line:184:35> '_CharT *' static_cast<_CharT *> <Dependent>
      (CallExpr 0x9ec41a8 <line:183:35, line:184:34> '<dependent type>'
        (DeclRefExpr 0x9ec40fc <line:183:35> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9e945b0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
        (DeclRefExpr 0x9ec4114 <col:53> 'char_type *' lvalue ParmVar 0x9ec3e20 '__s1' 'char_type *')
        (DeclRefExpr 0x9ec412c <col:59> 'const char_type *' lvalue ParmVar 0x9ec3e70 '__s2' 'const char_type *')
        (BinaryOperator 0x9ec4190 <line:184:11, col:33> 'unsigned int' '*'
          (ImplicitCastExpr 0x9ec4180 <col:11> 'std::size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9ec4144 <col:11> 'std::size_t':'unsigned int' lvalue ParmVar 0x9ec3ed0 '__n' 'std::size_t':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x9ec4168 <col:17, col:33> 'unsigned int' sizeof 'char_type':'_CharT'))))))


    static typename char_traits<_CharT>::char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x9ec4908 </usr/include/c++/4.6/bits/char_traits.h:191:5, line:195:5>
  (CallExpr 0x9ec48b8 <line:193:7, col:39> '<dependent type>'
    (UnresolvedLookupExpr 0x9ec47c0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550)
    (DeclRefExpr 0x9ec47f4 <col:17> 'const char_type *' lvalue ParmVar 0x9ec4510 '__s2' 'const char_type *')
    (CXXOperatorCallExpr 0x9ec4878 <col:23, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9ec4840 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e86e30)
      (DeclRefExpr 0x9ec480c <col:23> 'const char_type *' lvalue ParmVar 0x9ec4510 '__s2' 'const char_type *')
      (DeclRefExpr 0x9ec4824 <col:30> 'std::size_t':'unsigned int' lvalue ParmVar 0x9ec4570 '__n' 'std::size_t':'unsigned int'))
    (DeclRefExpr 0x9ec489c <col:35> 'char_type *' lvalue ParmVar 0x9ec44c0 '__s1' 'char_type *'))
  (ReturnStmt 0x9ec48f8 <line:194:7, col:14>
    (DeclRefExpr 0x9ec48e0 <col:14> 'char_type *' lvalue ParmVar 0x9ec44c0 '__s1' 'char_type *')))


    static typename char_traits<_CharT>::char_type *assign(char_type *__s, std::size_t __n, char_type __a) (CompoundStmt 0x9ec4f60 </usr/include/c++/4.6/bits/char_traits.h:201:5, line:205:5>
  (CallExpr 0x9ec4f10 <line:203:7, col:32> '<dependent type>'
    (UnresolvedLookupExpr 0x9ec4e90 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ea21b0)
    (DeclRefExpr 0x9ec4ec4 <col:19> 'char_type *' lvalue ParmVar 0x9ec4ba0 '__s' 'char_type *')
    (DeclRefExpr 0x9ec4edc <col:24> 'std::size_t':'unsigned int' lvalue ParmVar 0x9ec4c00 '__n' 'std::size_t':'unsigned int')
    (DeclRefExpr 0x9ec4ef4 <col:29> 'char_type':'_CharT' lvalue ParmVar 0x9ec4c40 '__a' 'char_type':'_CharT'))
  (ReturnStmt 0x9ec4f50 <line:204:7, col:14>
    (DeclRefExpr 0x9ec4f38 <col:14> 'char_type *' lvalue ParmVar 0x9ec4ba0 '__s' 'char_type *')))


}
namespace std {
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec8118 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9ec8100 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9ec80c0 <col:9> 'char_type':'char' lvalue ParmVar 0x9ec5650 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9ec80f0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9ec80d8 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec56e0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec81c8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9ec81b8 <col:9, col:24>
    (BinaryOperator 0x9ec81a0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ec8170 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8160 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec812c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec6e70 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9ec8190 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8180 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec8144 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9ec6ec0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec8278 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9ec8268 <col:9, col:23>
    (BinaryOperator 0x9ec8250 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9ec8220 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8210 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec81dc <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec6fe0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9ec8240 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8230 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec81f4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9ec7030 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec83a0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9ec8390 <col:9, col:48>
    (CallExpr 0x9ec8318 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9ec8308 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec828c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9ea4040 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9ec8350 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9ec8340 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ec82a4 <col:33> 'const char_type *' lvalue ParmVar 0x9ec7130 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9ec8370 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9ec8360 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ec82bc <col:39> 'const char_type *' lvalue ParmVar 0x9ec7180 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9ec8380 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ec82d4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9ec71c0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9ec8538 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9ec8528 <col:9, col:36>
    (CallExpr 0x9ec84f8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9ec84e8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec8494 <col:16> 'unsigned int (const char *)' lvalue Function 0x9ec83c0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9ec8518 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ec84ac <col:33> 'const char_type *' lvalue ParmVar 0x9ec7300 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9ec8828 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9ec8818 <col:9, col:77>
    (CXXStaticCastExpr 0x9ec8800 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9ec8778 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9ec8768 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec86e4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9ec8580 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9ec87b0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec87a0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec86fc <col:63> 'const char_type *' lvalue ParmVar 0x9ec7420 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9ec87d0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ec87c0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9ec8714 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9ec74b0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9ec87e0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec872c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7460 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec8978 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9ec8968 <col:9, col:74>
    (CXXStaticCastExpr 0x9ec8950 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec88c8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9ec88b8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec883c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9e945b0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9ec8900 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec88f0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8854 <col:58> 'char_type *' lvalue ParmVar 0x9ec7610 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9ec8920 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec8910 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec886c <col:64> 'const char_type *' lvalue ParmVar 0x9ec7660 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9ec8930 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8884 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9ec76a0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec8c18 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9ec8c08 <col:9, col:73>
    (CXXStaticCastExpr 0x9ec8bf0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec8b68 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9ec8b58 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec8af4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9ec8ba0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec8b90 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8b0c <col:57> 'char_type *' lvalue ParmVar 0x9ec77e0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9ec8bc0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec8bb0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8b24 <col:63> 'const char_type *' lvalue ParmVar 0x9ec7830 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9ec8bd0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8b3c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7870 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9ec8d68 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9ec8d58 <col:9, col:71>
    (CXXStaticCastExpr 0x9ec8d40 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec8cb8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9ec8ca8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec8c2c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9e9f540 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9ec8cf0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec8ce0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8c44 <col:57> 'char_type *' lvalue ParmVar 0x9ec7950 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9ec8d10 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ec8d00 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9ec8c5c <col:62> 'char_type':'char' lvalue ParmVar 0x9ec79d0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9ec8d20 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8c74 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7990 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9ecb548 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9ec8dd8 <col:9, col:42>
    (CXXStaticCastExpr 0x9ec8dc0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9ec8db0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9ec8da0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9ec8d7c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9ec7b60 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9ecb600 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9ecb5f0 <col:9, col:69>
    (CXXStaticCastExpr 0x9ecb5d8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9ecb5c8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9ecb5a8 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9ecb598 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9ecb588 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9ecb55c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9ec7c80 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ecb690 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9ecb680 <col:9, col:24>
    (BinaryOperator 0x9ecb668 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecb648 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb614 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9ec7da0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ecb658 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb62c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9ec7df0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ecb708 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9ecb6f8 <col:9, col:56>
    (CXXStaticCastExpr 0x9ecb6e0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9ecb6c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9ecb6a8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9ecb868 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9ecb858 <col:9, col:37>
    (ConditionalOperator 0x9ecb838 <col:16, col:37> 'int'
      (ParenExpr 0x9ecb7e0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9ecb7c8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9ecb7b8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ecb71c <col:17> 'const int_type':'const int' lvalue ParmVar 0x9ec7fa0 '__c' 'const int_type &'))
          (CallExpr 0x9ecb798 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9ecb788 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ecb734 <col:24> 'int_type (void)' lvalue CXXMethod 0x9ec7f30 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9ecb7f8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9ecb828 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb810 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9ec7fa0 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9eccfd8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9eccfc0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9eccf80 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9ecbc20 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9eccfb0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9eccf98 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbcb0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ecd068 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9ecd058 <col:9, col:24>
    (BinaryOperator 0x9ecd040 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecd020 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9eccfec <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbdd0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9ecd030 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd004 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbe20 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ecd0f8 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9ecd0e8 <col:9, col:23>
    (BinaryOperator 0x9ecd0d0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9ecd0b0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd07c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbf40 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9ecd0c0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd094 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbf90 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecd260 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9ecd250 <col:9, col:39>
    (CallExpr 0x9ecd1f8 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9ecd1e8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd18c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9d73e60 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9eb73c0 'wmemcmp')))
      (ImplicitCastExpr 0x9ecd220 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd144 <col:24> 'const char_type *' lvalue ParmVar 0x9ecc090 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9ecd230 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd15c <col:30> 'const char_type *' lvalue ParmVar 0x9ecc0e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecd240 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecd174 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc120 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9ecd368 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9ecd358 <col:9, col:26>
    (CallExpr 0x9ecd328 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9ecd318 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd2c4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9d737a0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9eb6e10 'wcslen')))
      (ImplicitCastExpr 0x9ecd348 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd2ac <col:23> 'const char_type *' lvalue ParmVar 0x9ecc230 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9ecd4a8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9ecd498 <col:9, col:37>
    (ImplicitCastExpr 0x9ecd488 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9ecd430 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9ecd420 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ecd400 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9d73cb0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9eb7820 'wmemchr')))
        (ImplicitCastExpr 0x9ecd458 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ecd3b8 <col:24> 'const char_type *' lvalue ParmVar 0x9ecc330 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9ecd468 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9ecd3d0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecc3c0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9ecd478 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ecd3e8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc370 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecda30 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9ecda20 <col:9, col:40>
    (CallExpr 0x9ecd9c8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9ecd9b8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd960 <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9d741b0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9eb74a0 'wmemmove')))
      (ImplicitCastExpr 0x9ecd9f0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd4f4 <col:25> 'char_type *' lvalue ParmVar 0x9ecc520 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9ecda00 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd50c <col:31> 'const char_type *' lvalue ParmVar 0x9ecc570 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecda10 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecd524 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc5b0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecdb70 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9ecdb60 <col:9, col:39>
    (CallExpr 0x9ecdb08 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9ecdaf8 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecdac4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9d74010 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9eb7430 'wmemcpy')))
      (ImplicitCastExpr 0x9ecdb30 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecda7c <col:24> 'char_type *' lvalue ParmVar 0x9ecc6c0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9ecdb40 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecda94 <col:30> 'const char_type *' lvalue ParmVar 0x9ecc710 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecdb50 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdaac <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc750 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9ecdcd0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9ecdcc0 <col:9, col:37>
    (CallExpr 0x9ecdc68 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9ecdc58 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecdc04 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9d74390 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9eb7510 'wmemset')))
      (ImplicitCastExpr 0x9ecdc90 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecdbbc <col:24> 'char_type *' lvalue ParmVar 0x9ecc830 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9ecdca0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecdbd4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9ecc8b0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9ecdcb0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdbec <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc870 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9ecdd50 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9ecdd40 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9ecdd28 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9ecdd18 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9ecdd08 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ecdcf0 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecca20 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9ecddd0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9ecddc0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9ecdda8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9ecdd98 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9ecdd88 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9ecdd70 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9eccb40 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ecde60 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9ecde50 <col:9, col:24>
    (BinaryOperator 0x9ecde38 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecde18 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdde4 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9eccc60 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ecde28 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecddfc <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecccb0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ecded8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9ecdec8 <col:9, col:42>
    (CXXStaticCastExpr 0x9ecdeb0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9ecde90 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9ecde78 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9ece0b0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9ece0a0 <col:9, col:46>
    (ConditionalOperator 0x9ece080 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9ecdff8 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9ecdfe8 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ecdeec <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9eccd50 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9ecdf04 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecce60 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9ece020 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9ecdf88 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9ecdf78 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ecdf1c <col:33> 'int_type (void)' lvalue CXXMethod 0x9eccdf0 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9ece070 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ece030 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9ece060 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ece048 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecce60 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits : public __gnu_cxx::char_traits<_CharT> {
        struct char_traits;
    };
    struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec8118 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x9ec8100 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x9ec80c0 <col:9> 'char_type':'char' lvalue ParmVar 0x9ec5650 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9ec80f0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9ec80d8 <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec56e0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec81c8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x9ec81b8 <col:9, col:24>
    (BinaryOperator 0x9ec81a0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ec8170 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8160 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec812c <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec6e70 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9ec8190 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8180 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec8144 <col:24> 'const char_type':'const char' lvalue ParmVar 0x9ec6ec0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ec8278 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x9ec8268 <col:9, col:23>
    (BinaryOperator 0x9ec8250 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9ec8220 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8210 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec81dc <col:16> 'const char_type':'const char' lvalue ParmVar 0x9ec6fe0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x9ec8240 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9ec8230 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9ec81f4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x9ec7030 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec83a0 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x9ec8390 <col:9, col:48>
    (CallExpr 0x9ec8318 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x9ec8308 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec828c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x9ea4040 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x9ec8350 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9ec8340 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ec82a4 <col:33> 'const char_type *' lvalue ParmVar 0x9ec7130 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x9ec8370 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x9ec8360 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ec82bc <col:39> 'const char_type *' lvalue ParmVar 0x9ec7180 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x9ec8380 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ec82d4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9ec71c0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9ec8538 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x9ec8528 <col:9, col:36>
    (CallExpr 0x9ec84f8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x9ec84e8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ec8494 <col:16> 'unsigned int (const char *)' lvalue Function 0x9ec83c0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x9ec8518 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ec84ac <col:33> 'const char_type *' lvalue ParmVar 0x9ec7300 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9ec8828 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x9ec8818 <col:9, col:77>
    (CXXStaticCastExpr 0x9ec8800 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x9ec8778 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x9ec8768 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec86e4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x9ec8580 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9ec87b0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec87a0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec86fc <col:63> 'const char_type *' lvalue ParmVar 0x9ec7420 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x9ec87d0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ec87c0 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9ec8714 <col:68> 'const char_type':'const char' lvalue ParmVar 0x9ec74b0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x9ec87e0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec872c <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7460 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec8978 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x9ec8968 <col:9, col:74>
    (CXXStaticCastExpr 0x9ec8950 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec88c8 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x9ec88b8 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec883c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9e945b0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9ec8900 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec88f0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8854 <col:58> 'char_type *' lvalue ParmVar 0x9ec7610 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9ec8920 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec8910 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec886c <col:64> 'const char_type *' lvalue ParmVar 0x9ec7660 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9ec8930 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8884 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x9ec76a0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ec8c18 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x9ec8c08 <col:9, col:73>
    (CXXStaticCastExpr 0x9ec8bf0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec8b68 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x9ec8b58 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec8af4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9ec8ba0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec8b90 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8b0c <col:57> 'char_type *' lvalue ParmVar 0x9ec77e0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x9ec8bc0 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9ec8bb0 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8b24 <col:63> 'const char_type *' lvalue ParmVar 0x9ec7830 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x9ec8bd0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8b3c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7870 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9ec8d68 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x9ec8d58 <col:9, col:71>
    (CXXStaticCastExpr 0x9ec8d40 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x9ec8cb8 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x9ec8ca8 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ec8c2c <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x9e9f540 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x9ec8cf0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x9ec8ce0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9ec8c44 <col:57> 'char_type *' lvalue ParmVar 0x9ec7950 '__s' 'char_type *')))
        (ImplicitCastExpr 0x9ec8d10 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9ec8d00 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x9ec8c5c <col:62> 'char_type':'char' lvalue ParmVar 0x9ec79d0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x9ec8d20 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ec8c74 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x9ec7990 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9ecb548 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x9ec8dd8 <col:9, col:42>
    (CXXStaticCastExpr 0x9ec8dc0 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x9ec8db0 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x9ec8da0 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x9ec8d7c <col:39> 'const int_type':'const int' lvalue ParmVar 0x9ec7b60 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9ecb600 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x9ecb5f0 <col:9, col:69>
    (CXXStaticCastExpr 0x9ecb5d8 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x9ecb5c8 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x9ecb5a8 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9ecb598 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9ecb588 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9ecb55c <col:65> 'const char_type':'const char' lvalue ParmVar 0x9ec7c80 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ecb690 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x9ecb680 <col:9, col:24>
    (BinaryOperator 0x9ecb668 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecb648 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb614 <col:16> 'const int_type':'const int' lvalue ParmVar 0x9ec7da0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ecb658 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb62c <col:24> 'const int_type':'const int' lvalue ParmVar 0x9ec7df0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ecb708 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x9ecb6f8 <col:9, col:56>
    (CXXStaticCastExpr 0x9ecb6e0 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x9ecb6c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x9ecb6a8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9ecb868 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x9ecb858 <col:9, col:37>
    (ConditionalOperator 0x9ecb838 <col:16, col:37> 'int'
      (ParenExpr 0x9ecb7e0 <col:16, col:29> '_Bool'
        (BinaryOperator 0x9ecb7c8 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x9ecb7b8 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x9ecb71c <col:17> 'const int_type':'const int' lvalue ParmVar 0x9ec7fa0 '__c' 'const int_type &'))
          (CallExpr 0x9ecb798 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x9ecb788 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ecb734 <col:24> 'int_type (void)' lvalue CXXMethod 0x9ec7f30 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x9ecb7f8 <col:33> 'int' 0)
      (ImplicitCastExpr 0x9ecb828 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9ecb810 <col:37> 'const int_type':'const int' lvalue ParmVar 0x9ec7fa0 '__c' 'const int_type &')))))


    };
    struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x9eccfd8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x9eccfc0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x9eccf80 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x9ecbc20 '__c1' 'char_type &')
    (ImplicitCastExpr 0x9eccfb0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x9eccf98 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbcb0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ecd068 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x9ecd058 <col:9, col:24>
    (BinaryOperator 0x9ecd040 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecd020 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9eccfec <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbdd0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9ecd030 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd004 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbe20 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x9ecd0f8 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x9ecd0e8 <col:9, col:23>
    (BinaryOperator 0x9ecd0d0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x9ecd0b0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd07c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbf40 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x9ecd0c0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecd094 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecbf90 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecd260 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x9ecd250 <col:9, col:39>
    (CallExpr 0x9ecd1f8 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x9ecd1e8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd18c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9d73e60 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9eb73c0 'wmemcmp')))
      (ImplicitCastExpr 0x9ecd220 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd144 <col:24> 'const char_type *' lvalue ParmVar 0x9ecc090 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x9ecd230 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd15c <col:30> 'const char_type *' lvalue ParmVar 0x9ecc0e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecd240 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecd174 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc120 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x9ecd368 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x9ecd358 <col:9, col:26>
    (CallExpr 0x9ecd328 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x9ecd318 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd2c4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x9d737a0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x9eb6e10 'wcslen')))
      (ImplicitCastExpr 0x9ecd348 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd2ac <col:23> 'const char_type *' lvalue ParmVar 0x9ecc230 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x9ecd4a8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x9ecd498 <col:9, col:37>
    (ImplicitCastExpr 0x9ecd488 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x9ecd430 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x9ecd420 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ecd400 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9d73cb0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9eb7820 'wmemchr')))
        (ImplicitCastExpr 0x9ecd458 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9ecd3b8 <col:24> 'const char_type *' lvalue ParmVar 0x9ecc330 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x9ecd468 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9ecd3d0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x9ecc3c0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x9ecd478 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ecd3e8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc370 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecda30 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x9ecda20 <col:9, col:40>
    (CallExpr 0x9ecd9c8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x9ecd9b8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecd960 <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9d741b0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x9eb74a0 'wmemmove')))
      (ImplicitCastExpr 0x9ecd9f0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd4f4 <col:25> 'char_type *' lvalue ParmVar 0x9ecc520 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9ecda00 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecd50c <col:31> 'const char_type *' lvalue ParmVar 0x9ecc570 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecda10 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecd524 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc5b0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x9ecdb70 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x9ecdb60 <col:9, col:39>
    (CallExpr 0x9ecdb08 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x9ecdaf8 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecdac4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x9d74010 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x9eb7430 'wmemcpy')))
      (ImplicitCastExpr 0x9ecdb30 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecda7c <col:24> 'char_type *' lvalue ParmVar 0x9ecc6c0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x9ecdb40 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecda94 <col:30> 'const char_type *' lvalue ParmVar 0x9ecc710 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x9ecdb50 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdaac <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc750 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x9ecdcd0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x9ecdcc0 <col:9, col:37>
    (CallExpr 0x9ecdc68 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x9ecdc58 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ecdc04 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x9d74390 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x9eb7510 'wmemset')))
      (ImplicitCastExpr 0x9ecdc90 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9ecdbbc <col:24> 'char_type *' lvalue ParmVar 0x9ecc830 '__s' 'char_type *'))
      (ImplicitCastExpr 0x9ecdca0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x9ecdbd4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x9ecc8b0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x9ecdcb0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdbec <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x9ecc870 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x9ecdd50 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x9ecdd40 <col:9, col:29>
    (CXXFunctionalCastExpr 0x9ecdd28 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x9ecdd18 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x9ecdd08 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x9ecdcf0 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecca20 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x9ecddd0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x9ecddc0 <col:9, col:28>
    (CXXFunctionalCastExpr 0x9ecdda8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x9ecdd98 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9ecdd88 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x9ecdd70 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x9eccb40 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x9ecde60 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x9ecde50 <col:9, col:24>
    (BinaryOperator 0x9ecde38 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x9ecde18 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecdde4 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x9eccc60 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x9ecde28 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ecddfc <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecccb0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x9ecded8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x9ecdec8 <col:9, col:42>
    (CXXStaticCastExpr 0x9ecdeb0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x9ecde90 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0x9ecde78 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x9ece0b0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x9ece0a0 <col:9, col:46>
    (ConditionalOperator 0x9ece080 <col:16, col:46> 'unsigned int'
      (CallExpr 0x9ecdff8 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x9ecdfe8 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ecdeec <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x9eccd50 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x9ecdf04 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecce60 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x9ece020 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x9ecdf88 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x9ecdf78 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9ecdf1c <col:33> 'int_type (void)' lvalue CXXMethod 0x9eccdf0 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x9ece070 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9ece030 <col:42> 'int' 0))
      (ImplicitCastExpr 0x9ece060 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9ece048 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x9ecce60 '__c' 'const int_type &')))))


    };
}
extern unsigned int __builtin_strlen(const char *);
extern void *__builtin_memchr(const void *, int, unsigned int);
extern void *__builtin_memcpy(void *, const void *, unsigned int);
extern "C++" {
    namespace std {
        class exception {
            class exception;
        public:
        public:
            exception() throw() (CompoundStmt 0x9ece5d0 </usr/include/c++/4.6/exception:63:25, col:27>)


            virtual void ~exception() throw();
            virtual const char *what() const throw();
            inline std::exception &operator=(const std::exception &) throw();
            inline exception(const std::exception &) throw();
        };
        class bad_exception : public std::exception {
            class bad_exception;
        public:
        public:
            bad_exception() throw() : std::exception() (CompoundStmt 0x9ecebb0 </usr/include/c++/4.6/exception:76:29, col:31>)


            virtual void ~bad_exception() throw();
            virtual const char *what() const throw();
            inline std::bad_exception &operator=(const std::bad_exception &) throw();
        };
        typedef void (*terminate_handler)();
        typedef void (*unexpected_handler)();
        terminate_handler set_terminate(terminate_handler) throw();
        void terminate() throw();
        unexpected_handler set_unexpected(unexpected_handler) throw();
        void unexpected();
        bool uncaught_exception() throw();
    }
    namespace __gnu_cxx {
        void __verbose_terminate_handler();
    }
}
extern "C++" {
    namespace std {
        class bad_alloc : public std::exception {
            class bad_alloc;
        public:
        public:
            bad_alloc() throw() : std::exception() (CompoundStmt 0x9ecf6c0 </usr/include/c++/4.6/new:58:25, col:27>)


            virtual void ~bad_alloc() throw();
            virtual const char *what() const throw();
            inline std::bad_alloc &operator=(const std::bad_alloc &) throw();
        };
        struct nothrow_t {
            struct nothrow_t;
        };
        extern const std::nothrow_t nothrow;
        typedef void (*new_handler)();
        new_handler set_new_handler(new_handler) throw();
    }
    void *operator new(std::size_t) throw(std::bad_alloc);
    void *operator new[](std::size_t) throw(std::bad_alloc);
    void operator delete(void *) throw();
    void operator delete[](void *) throw();
    void *operator new(std::size_t, const std::nothrow_t &) throw();
    void *operator new[](std::size_t, const std::nothrow_t &) throw();
    void operator delete(void *, const std::nothrow_t &) throw();
    void operator delete[](void *, const std::nothrow_t &) throw();
    inline void *operator new(std::size_t, void *__p) throw() (CompoundStmt 0x9ed74b8 </usr/include/c++/4.6/new:102:59, col:73>
  (ReturnStmt 0x9ed74a8 <col:61, col:68>
    (ImplicitCastExpr 0x9ed7498 <col:68> 'void *' <LValueToRValue>
      (DeclRefExpr 0x9ed747c <col:68> 'void *' lvalue ParmVar 0x9ed7330 '__p' 'void *'))))


    inline void *operator new[](std::size_t, void *__p) throw() (CompoundStmt 0x9ed7698 </usr/include/c++/4.6/new:103:61, col:75>
  (ReturnStmt 0x9ed7688 <col:63, col:70>
    (ImplicitCastExpr 0x9ed7678 <col:70> 'void *' <LValueToRValue>
      (DeclRefExpr 0x9ed765c <col:70> 'void *' lvalue ParmVar 0x9ed7550 '__p' 'void *'))))


    inline void operator delete(void *, void *) throw() (CompoundStmt 0x9ed7860 </usr/include/c++/4.6/new:106:54, col:56>)


    inline void operator delete[](void *, void *) throw() (CompoundStmt 0x9ed79e0 </usr/include/c++/4.6/new:107:54, col:56>)


}
namespace __gnu_cxx {
    using std::size_t;
    ;
    using std::ptrdiff_t;
    ;
    template <typename _Tp = char> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw();
        new_allocator(const __gnu_cxx::new_allocator<char> &) throw();
        template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw();
        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const char &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = wchar_t> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0x9ed98b0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<wchar_t> &) throw() (CompoundStmt 0x9ed98c0 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1 = wchar_t> new_allocator(const new_allocator<wchar_t> &) throw()template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0x9ed98e0 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const wchar_t &__val);
        void destroy(pointer __p);
    }
template <typename _Tp> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef new_allocator<_Tp1> other;
        };
        new_allocator<_Tp>() throw() (CompoundStmt 0x9ed98b0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator<_Tp>(const new_allocator<_Tp> &) throw() (CompoundStmt 0x9ed98c0 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1> new_allocator<_Tp>(const new_allocator<_Tp1> &) throw() (CompoundStmt 0x9ed98d0 </usr/include/c++/4.6/ext/new_allocator.h:74:59, col:61>)

;
        void ~new_allocator<_Tp>() throw() (CompoundStmt 0x9ed98e0 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const (CompoundStmt 0x9ed9988 </usr/include/c++/4.6/ext/new_allocator.h:79:36, col:68>
  (ReturnStmt 0x9ed9978 <col:38, col:65>
    (CallExpr 0x9ed9958 <col:45, col:65> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed9908 <col:45, col:50> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
      (DeclRefExpr 0x9ed993c <col:62> '_Tp' lvalue ParmVar 0x9ed9040 '__x' 'reference':'_Tp &'))))


        const_pointer address(const_reference __x) const (CompoundStmt 0x9ed9a38 </usr/include/c++/4.6/ext/new_allocator.h:82:42, col:74>
  (ReturnStmt 0x9ed9a28 <col:44, col:71>
    (CallExpr 0x9ed9a08 <col:51, col:71> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed99b8 <col:51, col:56> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
      (DeclRefExpr 0x9ed99ec <col:68> 'const _Tp' lvalue ParmVar 0x9ed9180 '__x' 'const_reference':'const _Tp &'))))


        pointer allocate(size_type __n, const void * = (ImplicitCastExpr 0x9ed98a0 </usr/include/c++/4.6/ext/new_allocator.h:87:45> 'const void *' <NullToPointer>
  (IntegerLiteral 0x9ed9888 <col:45> 'int' 0))
) (CompoundStmt 0x9ed9d90 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0x9ed9bd8 <line:89:2, line:90:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ed9b28 <line:89:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x9ed9af0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e83010 0x9e835e0)
      (DeclRefExpr 0x9ed9a4c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9ed92b0 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9ed9ad0 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ed9a98 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x9ed9a88 <col:12> 'new_allocator<_Tp> *' this))))
    (CallExpr 0x9ed9bb8 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0x9ed9ba8 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ed9b70 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9e229a0 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9ed9d80 <line:92:2, col:60>
    (CXXStaticCastExpr 0x9ed9d68 <col:9, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
      (CallExpr 0x9ed9d38 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0x9ed9d28 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ed9cd0 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0x9ed6730 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0x9ed9cb8 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0x9ed9ca8 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9ed9c6c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x9ed92b0 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x9ed9c90 <col:48, col:58> 'unsigned int' sizeof '_Tp'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0x9ed9e38 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0x9ed9e18 <col:9, col:30> '<dependent type>'
    (UnresolvedLookupExpr 0x9ed9dc0 <col:9, col:20> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ed69a0 0x9ed7070 0x9ed77b0)
    (DeclRefExpr 0x9ed9dfc <col:27> 'pointer':'_Tp *' lvalue ParmVar 0x9ed9410 '__p' 'pointer':'_Tp *')))


        size_type max_size() const throw() (CompoundStmt 0x9ed9ef8 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0x9ed9ee8 <col:9, col:39>
    (BinaryOperator 0x9ed9ed0 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0x9ed9e98 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0x9ed9e88 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0x9ed9e70 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0x9ed9e58 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0x9ed9eb8 <col:29, col:39> 'unsigned int' sizeof '_Tp'))))


        void construct(pointer __p, const _Tp &__val) (CompoundStmt 0x9ed9fb0 </usr/include/c++/4.6/ext/new_allocator.h:108:7, col:40>
  (CXXNewExpr 0x9ed9f70 <col:9, col:37> '_Tp *'
    (CStyleCastExpr 0x9ed9f38 <col:15, col:23> 'void *' <Dependent>
      (DeclRefExpr 0x9ed9f0c <col:23> 'pointer':'_Tp *' lvalue ParmVar 0x9ed9620 '__p' 'pointer':'_Tp *'))
    (DeclRefExpr 0x9ed9f50 <col:32> 'const _Tp' lvalue ParmVar 0x9ed9670 '__val' 'const _Tp &')))


        void destroy(pointer __p) (CompoundStmt 0x9eda038 </usr/include/c++/4.6/ext/new_allocator.h:118:28, col:43>
  (CallExpr 0x9eda018 <col:30, col:40> 'void'
    (CXXPseudoDestructorExpr 0x9ed9fe8 <col:30, col:36> 'void (*)(void)'
      (DeclRefExpr 0x9ed9fc4 <col:30> 'pointer':'_Tp *' lvalue ParmVar 0x9ed9780 '__p' 'pointer':'_Tp *'))))


    };
    template <typename _Tp> inline bool operator==(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x9eda3e0 </usr/include/c++/4.6/ext/new_allocator.h:124:5, col:20>
  (ReturnStmt 0x9eda3d0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9eda3c0 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator!=(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x9eda750 </usr/include/c++/4.6/ext/new_allocator.h:129:5, col:21>
  (ReturnStmt 0x9eda740 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9eda730 <col:14> '_Bool' false)))

;
}
namespace std {
    template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9edd1f8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa349c70 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa3499c4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9ee4cd0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9edd310 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9edd330 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator;
    class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    };
    template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9edd1f8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa349c70 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa3499c4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9ee4cd0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9edd310 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9edd330 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator : public __gnu_cxx::new_allocator<_Tp> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
        allocator<_Alloc>() throw() (CompoundStmt 0x9edd1f8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator<_Alloc>(const allocator<_Alloc> &__a) throw() : __gnu_cxx::new_allocator<_Tp>((DeclRefExpr 0x9edd2b8 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const allocator<_Alloc>' lvalue ParmVar 0x9edcdd0 '__a' 'const allocator<_Alloc> &')
) (CompoundStmt 0x9edd310 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1> allocator<_Alloc>(const allocator<_Tp1> &) throw() (CompoundStmt 0x9edd320 </usr/include/c++/4.6/bits/allocator.h:113:51, col:53>)

;
        void ~allocator<_Alloc>() throw() (CompoundStmt 0x9edd330 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _T1, typename _T2> inline bool operator==(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x9edd780 </usr/include/c++/4.6/bits/allocator.h:123:5, col:20>
  (ReturnStmt 0x9edd770 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9edd760 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator==(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x9eddb10 </usr/include/c++/4.6/bits/allocator.h:128:5, col:20>
  (ReturnStmt 0x9eddb00 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9eddaf0 <col:14> '_Bool' true)))

;
    template <typename _T1, typename _T2> inline bool operator!=(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x9eddee0 </usr/include/c++/4.6/bits/allocator.h:133:5, col:21>
  (ReturnStmt 0x9edded0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9eddec0 <col:14> '_Bool' false)))

;
    template <typename _Tp> inline bool operator!=(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x9edeac0 </usr/include/c++/4.6/bits/allocator.h:138:5, col:21>
  (ReturnStmt 0x9edeab0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x9edeaa0 <col:14> '_Bool' false)))

;
    class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    };
    class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9edd1f8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa349c70 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa3499c4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9ee4cd0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9edd310 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9edd330 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x9ee52f0 </usr/include/c++/4.6/bits/allocator.h:151:36, col:53> '_Bool')
> struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &, _Alloc &) (CompoundStmt 0x9ee5740 </usr/include/c++/4.6/bits/allocator.h:153:46, col:48>)


    };
    struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &__one, _Alloc &__two) (CompoundStmt 0x9ee5db0 </usr/include/c++/4.6/bits/allocator.h:160:7, line:164:7>
  (IfStmt 0x9ee5d90 <line:162:2, line:163:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ee5cd8 <line:162:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x9ee5c90 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9edea70 0x9edde90 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0)
      (DeclRefExpr 0x9ee5c60 <col:6> '_Alloc' lvalue ParmVar 0x9ee5b10 '__one' '_Alloc &')
      (DeclRefExpr 0x9ee5c78 <col:15> '_Alloc' lvalue ParmVar 0x9ee5b60 '__two' '_Alloc &'))
    (CallExpr 0x9ee5d68 <line:163:4, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9ee5d00 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x9e55460 0x9e559a0)
      (DeclRefExpr 0x9ee5d38 <col:9> '_Alloc' lvalue ParmVar 0x9ee5b10 '__one' '_Alloc &')
      (DeclRefExpr 0x9ee5d50 <col:16> '_Alloc' lvalue ParmVar 0x9ee5b60 '__two' '_Alloc &'))
    <<<NULL>>>))


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x9ee5e20 </usr/include/c++/4.6/bits/allocator.h:168:36, col:53> '_Bool')
> struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &, const _Alloc &) (CompoundStmt 0x9ee7330 </usr/include/c++/4.6/bits/allocator.h:173:7, col:23>
  (ReturnStmt 0x9ee7320 <col:9, col:16>
    (CXXBoolLiteralExpr 0x9ee7310 <col:16> '_Bool' false)))


    };
    struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &__one, const _Alloc &__two) (CompoundStmt 0x9ee7910 </usr/include/c++/4.6/bits/allocator.h:181:7, col:32>
  (ReturnStmt 0x9ee7900 <col:9, col:25>
    (CXXOperatorCallExpr 0x9ee78d8 <col:16, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9ee7890 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9edea70 0x9edde90 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0)
      (DeclRefExpr 0x9ee7860 <col:16> 'const _Alloc' lvalue ParmVar 0x9ee7710 '__one' 'const _Alloc &')
      (DeclRefExpr 0x9ee7878 <col:25> 'const _Alloc' lvalue ParmVar 0x9ee7760 '__two' 'const _Alloc &'))))


    };
}
enum  {
    __LC_CTYPE = (ImplicitCastExpr 0x9ee7da8 </usr/include/i386-linux-gnu/bits/locale.h:29:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7990 <col:16> 'int' 0))
,
    __LC_NUMERIC = (ImplicitCastExpr 0x9ee7db8 </usr/include/i386-linux-gnu/bits/locale.h:30:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee79e8 <col:18> 'int' 1))
,
    __LC_TIME = (ImplicitCastExpr 0x9ee7dc8 </usr/include/i386-linux-gnu/bits/locale.h:31:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7a38 <col:15> 'int' 2))
,
    __LC_COLLATE = (ImplicitCastExpr 0x9ee7dd8 </usr/include/i386-linux-gnu/bits/locale.h:32:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7a88 <col:18> 'int' 3))
,
    __LC_MONETARY = (ImplicitCastExpr 0x9ee7de8 </usr/include/i386-linux-gnu/bits/locale.h:33:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7ad8 <col:19> 'int' 4))
,
    __LC_MESSAGES = (ImplicitCastExpr 0x9ee7df8 </usr/include/i386-linux-gnu/bits/locale.h:34:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7b28 <col:19> 'int' 5))
,
    __LC_ALL = (ImplicitCastExpr 0x9ee7e08 </usr/include/i386-linux-gnu/bits/locale.h:35:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7b78 <col:14> 'int' 6))
,
    __LC_PAPER = (ImplicitCastExpr 0x9ee7e18 </usr/include/i386-linux-gnu/bits/locale.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7bc8 <col:16> 'int' 7))
,
    __LC_NAME = (ImplicitCastExpr 0x9ee7e28 </usr/include/i386-linux-gnu/bits/locale.h:37:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7c18 <col:15> 'int' 8))
,
    __LC_ADDRESS = (ImplicitCastExpr 0x9ee7e38 </usr/include/i386-linux-gnu/bits/locale.h:38:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7c68 <col:18> 'int' 9))
,
    __LC_TELEPHONE = (ImplicitCastExpr 0x9ee7e48 </usr/include/i386-linux-gnu/bits/locale.h:39:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7cb8 <col:20> 'int' 10))
,
    __LC_MEASUREMENT = (ImplicitCastExpr 0x9ee7e58 </usr/include/i386-linux-gnu/bits/locale.h:40:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7d08 <col:22> 'int' 11))
,
    __LC_IDENTIFICATION = (ImplicitCastExpr 0x9ee7e68 </usr/include/i386-linux-gnu/bits/locale.h:41:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9ee7d58 <col:25> 'int' 12))

};
extern "C" {
    struct lconv {
        struct lconv;
        char *decimal_point;
        char *thousands_sep;
        char *grouping;
        char *int_curr_symbol;
        char *currency_symbol;
        char *mon_decimal_point;
        char *mon_thousands_sep;
        char *mon_grouping;
        char *positive_sign;
        char *negative_sign;
        char int_frac_digits;
        char frac_digits;
        char p_cs_precedes;
        char p_sep_by_space;
        char n_cs_precedes;
        char n_sep_by_space;
        char p_sign_posn;
        char n_sign_posn;
        char int_p_cs_precedes;
        char int_p_sep_by_space;
        char int_n_cs_precedes;
        char int_n_sep_by_space;
        char int_p_sign_posn;
        char int_n_sign_posn;
    };
    extern char *setlocale(int __category, const char *__locale) throw();
    extern struct lconv *localeconv() throw();
    extern __locale_t newlocale(int __category_mask, const char *__locale, __locale_t __base) throw();
    extern __locale_t duplocale(__locale_t __dataset) throw();
    extern void freelocale(__locale_t __dataset) throw();
    extern __locale_t uselocale(__locale_t __dataset) throw();
}
namespace std {
    using ::lconv;
    ;
    using ::setlocale;
    ;
    using ::localeconv;
    ;
}
namespace __gnu_cxx {
    extern "C" extern typeof (uselocale) __uselocale
}
namespace std {
    typedef __locale_t __c_locale;
    inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...) (CompoundStmt 0x9efa660 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:73:3, line:109:3>
  (DeclStmt 0x9ef9dd8 <line:75:5, col:54>
    0x9ef9cd0 "__c_locale __old =
      (CallExpr 0x9ef9da8 <col:24, col:53> '__locale_t':'struct __locale_struct *'
        (ImplicitCastExpr 0x9ef9d98 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9ef9d28 <col:24, col:35> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x9ee9060 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
        (ImplicitCastExpr 0x9ef9dc8 <col:47> '__c_locale':'struct __locale_struct *' <LValueToRValue>
          (DeclRefExpr 0x9ef9d48 <col:47> 'const __c_locale':'struct __locale_struct *const' lvalue ParmVar 0x9ee9260 '__cloc' 'const __c_locale &')))")
  (DeclStmt 0x9ef9e28 <line:88:5, col:29>
    0x9ef9df0 "__builtin_va_list __args")
  (CallExpr 0x9efa028 <line:89:5, col:37> '_Bool'
    (ImplicitCastExpr 0x9efa018 <col:5> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9ef9f94 <col:5> 'void (__builtin_va_list &, ...)' lvalue Function 0x9ef9ec0 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0x9ef9fac <col:24> '__builtin_va_list':'char *' lvalue Var 0x9ef9df0 '__args' '__builtin_va_list':'char *')
    (DeclRefExpr 0x9ef9fc4 <col:32> 'const char *' lvalue ParmVar 0x9ef9b90 '__fmt' 'const char *'))
  (DeclStmt 0x9efa3b8 <line:92:5, col:72>
    0x9efa060 "const int __ret =
      (CallExpr 0x9efa338 <col:23, col:71> 'int'
        (ImplicitCastExpr 0x9efa328 <col:23> 'int (*)(char *, unsigned int, const char *, __builtin_va_list)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9efa270 <col:23> 'int (char *, unsigned int, const char *, __builtin_va_list)' lvalue Function 0x9efa0a0 '__builtin_vsnprintf' 'int (char *, unsigned int, const char *, __builtin_va_list)'))
        (ImplicitCastExpr 0x9efa368 <col:43> 'char *' <LValueToRValue>
          (DeclRefExpr 0x9efa288 <col:43> 'char *' lvalue ParmVar 0x9ef9ab0 '__out' 'char *'))
        (ImplicitCastExpr 0x9efa388 <col:50> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x9efa378 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x9efa2a0 <col:50> 'const int' lvalue ParmVar 0x9ef9b00 '__size' 'const int')))
        (ImplicitCastExpr 0x9efa398 <col:58> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9efa2b8 <col:58> 'const char *' lvalue ParmVar 0x9ef9b90 '__fmt' 'const char *'))
        (ImplicitCastExpr 0x9efa3a8 <col:65> '__builtin_va_list':'char *' <LValueToRValue>
          (DeclRefExpr 0x9efa2d0 <col:65> '__builtin_va_list':'char *' lvalue Var 0x9ef9df0 '__args' '__builtin_va_list':'char *')))")
  (CallExpr 0x9efa568 <line:97:5, col:28> 'void'
    (ImplicitCastExpr 0x9efa558 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9efa4e4 <col:5> 'void (__builtin_va_list &)' lvalue Function 0x9efa410 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0x9efa4fc <col:22> '__builtin_va_list':'char *' lvalue Var 0x9ef9df0 '__args' '__builtin_va_list':'char *'))
  (CallExpr 0x9efa5f8 <line:100:5, col:33> '__locale_t':'struct __locale_struct *'
    (ImplicitCastExpr 0x9efa5e8 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
      (DeclRefExpr 0x9efa5ac <col:5, col:16> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x9ee9060 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
    (ImplicitCastExpr 0x9efa618 <col:28> '__c_locale':'struct __locale_struct *' <LValueToRValue>
      (DeclRefExpr 0x9efa5cc <col:28> '__c_locale':'struct __locale_struct *' lvalue Var 0x9ef9cd0 '__old' '__c_locale':'struct __locale_struct *')))
  (ReturnStmt 0x9efa650 <line:108:5, col:12>
    (ImplicitCastExpr 0x9efa640 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0x9efa624 <col:12> 'const int' lvalue Var 0x9efa060 '__ret' 'const int'))))


}
extern void __builtin_va_start(__builtin_va_list &, ...);
extern int __builtin_vsnprintf(char *, unsigned int, const char *, __builtin_va_list);
extern void __builtin_va_end(__builtin_va_list &);
namespace std {
    class ios_base;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_filebuf
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_filebuf
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_filebuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ifstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ifstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ifstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ofstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ofstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ofstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_fstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_fstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_fstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator;
    typedef basic_ios<char> ios;
    typedef basic_streambuf<char> streambuf;
    typedef basic_istream<char> istream;
    typedef basic_ostream<char> ostream;
    typedef basic_iostream<char> iostream;
    typedef basic_stringbuf<char> stringbuf;
    typedef basic_istringstream<char> istringstream;
    typedef basic_ostringstream<char> ostringstream;
    typedef basic_stringstream<char> stringstream;
    typedef basic_filebuf<char> filebuf;
    typedef basic_ifstream<char> ifstream;
    typedef basic_ofstream<char> ofstream;
    typedef basic_fstream<char> fstream;
    typedef basic_ios<wchar_t> wios;
    typedef basic_streambuf<wchar_t> wstreambuf;
    typedef basic_istream<wchar_t> wistream;
    typedef basic_ostream<wchar_t> wostream;
    typedef basic_iostream<wchar_t> wiostream;
    typedef basic_stringbuf<wchar_t> wstringbuf;
    typedef basic_istringstream<wchar_t> wistringstream;
    typedef basic_ostringstream<wchar_t> wostringstream;
    typedef basic_stringstream<wchar_t> wstringstream;
    typedef basic_filebuf<wchar_t> wfilebuf;
    typedef basic_ifstream<wchar_t> wifstream;
    typedef basic_ofstream<wchar_t> wofstream;
    typedef basic_fstream<wchar_t> wfstream;
}
extern "C" {
    enum  {
        _ISupper = (ImplicitCastExpr 0x9f085b8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f01f00 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f01ee0 <col:24, col:76> 'int'
      (BinaryOperator 0x9f01d48 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f01d18 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f01d00 <line:50:22> 'int' 0))
        (IntegerLiteral 0x9f01d30 <line:45:32> 'int' 8))
      (ParenExpr 0x9f01e08 <col:36, col:54> 'int'
        (BinaryOperator 0x9f01df0 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f01dc0 <col:37, col:48> 'int'
            (BinaryOperator 0x9f01da8 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f01d60 <col:38> 'int' 1)
              (ParenExpr 0x9f01d90 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f01d78 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9f01dd8 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f01ec8 <col:58, col:76> 'int'
        (BinaryOperator 0x9f01eb0 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f01e80 <col:59, col:70> 'int'
            (BinaryOperator 0x9f01e68 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f01e20 <col:60> 'int' 1)
              (ParenExpr 0x9f01e50 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f01e38 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x9f01e98 <line:45:75> 'int' 8))))))
,
        _ISlower = (ImplicitCastExpr 0x9f085c8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f02158 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f02138 <col:24, col:76> 'int'
      (BinaryOperator 0x9f01fa0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f01f70 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f01f58 <line:51:22> 'int' 1))
        (IntegerLiteral 0x9f01f88 <line:45:32> 'int' 8))
      (ParenExpr 0x9f02060 <col:36, col:54> 'int'
        (BinaryOperator 0x9f02048 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f02018 <col:37, col:48> 'int'
            (BinaryOperator 0x9f02000 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f01fb8 <col:38> 'int' 1)
              (ParenExpr 0x9f01fe8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f01fd0 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9f02030 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f02120 <col:58, col:76> 'int'
        (BinaryOperator 0x9f02108 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f020d8 <col:59, col:70> 'int'
            (BinaryOperator 0x9f020c0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f02078 <col:60> 'int' 1)
              (ParenExpr 0x9f020a8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f02090 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x9f020f0 <line:45:75> 'int' 8))))))
,
        _ISalpha = (ImplicitCastExpr 0x9f085d8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f023a8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f02388 <col:24, col:76> 'int'
      (BinaryOperator 0x9f021f0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f021c0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f021a8 <line:52:22> 'int' 2))
        (IntegerLiteral 0x9f021d8 <line:45:32> 'int' 8))
      (ParenExpr 0x9f022b0 <col:36, col:54> 'int'
        (BinaryOperator 0x9f02298 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f02268 <col:37, col:48> 'int'
            (BinaryOperator 0x9f02250 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f02208 <col:38> 'int' 1)
              (ParenExpr 0x9f02238 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f02220 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9f02280 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f02370 <col:58, col:76> 'int'
        (BinaryOperator 0x9f02358 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f02328 <col:59, col:70> 'int'
            (BinaryOperator 0x9f02310 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f022c8 <col:60> 'int' 1)
              (ParenExpr 0x9f022f8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f022e0 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x9f02340 <line:45:75> 'int' 8))))))
,
        _ISdigit = (ImplicitCastExpr 0x9f085e8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f025f8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f025d8 <col:24, col:76> 'int'
      (BinaryOperator 0x9f02440 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f02410 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f023f8 <line:53:22> 'int' 3))
        (IntegerLiteral 0x9f02428 <line:45:32> 'int' 8))
      (ParenExpr 0x9f02500 <col:36, col:54> 'int'
        (BinaryOperator 0x9f024e8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f024b8 <col:37, col:48> 'int'
            (BinaryOperator 0x9f024a0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f02458 <col:38> 'int' 1)
              (ParenExpr 0x9f02488 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f02470 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9f024d0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f025c0 <col:58, col:76> 'int'
        (BinaryOperator 0x9f025a8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f02578 <col:59, col:70> 'int'
            (BinaryOperator 0x9f02560 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f02518 <col:60> 'int' 1)
              (ParenExpr 0x9f02548 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f02530 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x9f02590 <line:45:75> 'int' 8))))))
,
        _ISxdigit = (ImplicitCastExpr 0x9f085f8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f02848 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f02828 <col:24, col:76> 'int'
      (BinaryOperator 0x9f02690 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f02660 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f02648 <line:54:23> 'int' 4))
        (IntegerLiteral 0x9f02678 <line:45:32> 'int' 8))
      (ParenExpr 0x9f02750 <col:36, col:54> 'int'
        (BinaryOperator 0x9f02738 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f02708 <col:37, col:48> 'int'
            (BinaryOperator 0x9f026f0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f026a8 <col:38> 'int' 1)
              (ParenExpr 0x9f026d8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f026c0 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9f02720 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f02810 <col:58, col:76> 'int'
        (BinaryOperator 0x9f027f8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f027c8 <col:59, col:70> 'int'
            (BinaryOperator 0x9f027b0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f02768 <col:60> 'int' 1)
              (ParenExpr 0x9f02798 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f02780 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x9f027e0 <line:45:75> 'int' 8))))))
,
        _ISspace = (ImplicitCastExpr 0x9f08608 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f02a98 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f02a78 <col:24, col:76> 'int'
      (BinaryOperator 0x9f028e0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f028b0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f02898 <line:55:22> 'int' 5))
        (IntegerLiteral 0x9f028c8 <line:45:32> 'int' 8))
      (ParenExpr 0x9f029a0 <col:36, col:54> 'int'
        (BinaryOperator 0x9f02988 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f02958 <col:37, col:48> 'int'
            (BinaryOperator 0x9f02940 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f028f8 <col:38> 'int' 1)
              (ParenExpr 0x9f02928 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f02910 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9f02970 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f02a60 <col:58, col:76> 'int'
        (BinaryOperator 0x9f02a48 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f02a18 <col:59, col:70> 'int'
            (BinaryOperator 0x9f02a00 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f029b8 <col:60> 'int' 1)
              (ParenExpr 0x9f029e8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f029d0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x9f02a30 <line:45:75> 'int' 8))))))
,
        _ISprint = (ImplicitCastExpr 0x9f08618 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f02ce8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f02cc8 <col:24, col:76> 'int'
      (BinaryOperator 0x9f02b30 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f02b00 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f02ae8 <line:56:22> 'int' 6))
        (IntegerLiteral 0x9f02b18 <line:45:32> 'int' 8))
      (ParenExpr 0x9f02bf0 <col:36, col:54> 'int'
        (BinaryOperator 0x9f02bd8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f02ba8 <col:37, col:48> 'int'
            (BinaryOperator 0x9f02b90 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f02b48 <col:38> 'int' 1)
              (ParenExpr 0x9f02b78 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f02b60 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9f02bc0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f02cb0 <col:58, col:76> 'int'
        (BinaryOperator 0x9f02c98 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f02c68 <col:59, col:70> 'int'
            (BinaryOperator 0x9f02c50 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f02c08 <col:60> 'int' 1)
              (ParenExpr 0x9f02c38 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f02c20 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x9f02c80 <line:45:75> 'int' 8))))))
,
        _ISgraph = (ImplicitCastExpr 0x9f08628 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f02f38 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f02f18 <col:24, col:76> 'int'
      (BinaryOperator 0x9f02d80 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f02d50 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f02d38 <line:57:22> 'int' 7))
        (IntegerLiteral 0x9f02d68 <line:45:32> 'int' 8))
      (ParenExpr 0x9f02e40 <col:36, col:54> 'int'
        (BinaryOperator 0x9f02e28 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f02df8 <col:37, col:48> 'int'
            (BinaryOperator 0x9f02de0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f02d98 <col:38> 'int' 1)
              (ParenExpr 0x9f02dc8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f02db0 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x9f02e10 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f02f00 <col:58, col:76> 'int'
        (BinaryOperator 0x9f02ee8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f02eb8 <col:59, col:70> 'int'
            (BinaryOperator 0x9f02ea0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f02e58 <col:60> 'int' 1)
              (ParenExpr 0x9f02e88 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f02e70 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x9f02ed0 <line:45:75> 'int' 8))))))
,
        _ISblank = (ImplicitCastExpr 0x9f08638 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f07e78 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f07e58 <col:24, col:76> 'int'
      (BinaryOperator 0x9f02fd0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f02fa0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f02f88 <line:58:22> 'int' 8))
        (IntegerLiteral 0x9f02fb8 <line:45:32> 'int' 8))
      (ParenExpr 0x9f07d80 <col:36, col:54> 'int'
        (BinaryOperator 0x9f07d68 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f03048 <col:37, col:48> 'int'
            (BinaryOperator 0x9f03030 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f02fe8 <col:38> 'int' 1)
              (ParenExpr 0x9f03018 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f03000 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9f03060 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f07e40 <col:58, col:76> 'int'
        (BinaryOperator 0x9f07e28 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f07df8 <col:59, col:70> 'int'
            (BinaryOperator 0x9f07de0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f07d98 <col:60> 'int' 1)
              (ParenExpr 0x9f07dc8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f07db0 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x9f07e10 <line:45:75> 'int' 8))))))
,
        _IScntrl = (ImplicitCastExpr 0x9f08648 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f080c8 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f080a8 <col:24, col:76> 'int'
      (BinaryOperator 0x9f07f10 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f07ee0 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f07ec8 <line:59:22> 'int' 9))
        (IntegerLiteral 0x9f07ef8 <line:45:32> 'int' 8))
      (ParenExpr 0x9f07fd0 <col:36, col:54> 'int'
        (BinaryOperator 0x9f07fb8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f07f88 <col:37, col:48> 'int'
            (BinaryOperator 0x9f07f70 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f07f28 <col:38> 'int' 1)
              (ParenExpr 0x9f07f58 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f07f40 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9f07fa0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f08090 <col:58, col:76> 'int'
        (BinaryOperator 0x9f08078 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f08048 <col:59, col:70> 'int'
            (BinaryOperator 0x9f08030 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f07fe8 <col:60> 'int' 1)
              (ParenExpr 0x9f08018 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f08000 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x9f08060 <line:45:75> 'int' 8))))))
,
        _ISpunct = (ImplicitCastExpr 0x9f08658 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f08318 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f082f8 <col:24, col:76> 'int'
      (BinaryOperator 0x9f08160 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f08130 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f08118 <line:60:22> 'int' 10))
        (IntegerLiteral 0x9f08148 <line:45:32> 'int' 8))
      (ParenExpr 0x9f08220 <col:36, col:54> 'int'
        (BinaryOperator 0x9f08208 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f081d8 <col:37, col:48> 'int'
            (BinaryOperator 0x9f081c0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f08178 <col:38> 'int' 1)
              (ParenExpr 0x9f081a8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f08190 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9f081f0 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f082e0 <col:58, col:76> 'int'
        (BinaryOperator 0x9f082c8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f08298 <col:59, col:70> 'int'
            (BinaryOperator 0x9f08280 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f08238 <col:60> 'int' 1)
              (ParenExpr 0x9f08268 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f08250 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x9f082b0 <line:45:75> 'int' 8))))))
,
        _ISalnum = (ImplicitCastExpr 0x9f08668 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x9f08568 <col:23, col:77> 'int'
    (ConditionalOperator 0x9f08548 <col:24, col:76> 'int'
      (BinaryOperator 0x9f083b0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x9f08380 <col:24, col:28> 'int'
          (IntegerLiteral 0x9f08368 <line:61:22> 'int' 11))
        (IntegerLiteral 0x9f08398 <line:45:32> 'int' 8))
      (ParenExpr 0x9f08470 <col:36, col:54> 'int'
        (BinaryOperator 0x9f08458 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x9f08428 <col:37, col:48> 'int'
            (BinaryOperator 0x9f08410 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x9f083c8 <col:38> 'int' 1)
              (ParenExpr 0x9f083f8 <col:43, col:47> 'int'
                (IntegerLiteral 0x9f083e0 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9f08440 <line:45:53> 'int' 8)))
      (ParenExpr 0x9f08530 <col:58, col:76> 'int'
        (BinaryOperator 0x9f08518 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x9f084e8 <col:59, col:70> 'int'
            (BinaryOperator 0x9f084d0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x9f08488 <col:60> 'int' 1)
              (ParenExpr 0x9f084b8 <col:65, col:69> 'int'
                (IntegerLiteral 0x9f084a0 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x9f08500 <line:45:75> 'int' 8))))))

    };
    extern const unsigned short **__ctype_b_loc() throw();
    extern const __int32_t **__ctype_tolower_loc() throw();
    extern const __int32_t **__ctype_toupper_loc() throw();
    extern int isalnum(int) throw();
    extern int isalpha(int) throw();
    extern int iscntrl(int) throw();
    extern int isdigit(int) throw();
    extern int islower(int) throw();
    extern int isgraph(int) throw();
    extern int isprint(int) throw();
    extern int ispunct(int) throw();
    extern int isspace(int) throw();
    extern int isupper(int) throw();
    extern int isxdigit(int) throw();
    extern int tolower(int __c) throw();
    extern int toupper(int __c) throw();
    extern int isblank(int) throw();
    extern int isctype(int __c, int __mask) throw();
    extern int isascii(int __c) throw();
    extern int toascii(int __c) throw();
    extern int _toupper(int) throw();
    extern int _tolower(int) throw();
    extern int isalnum_l(int, __locale_t) throw();
    extern int isalpha_l(int, __locale_t) throw();
    extern int iscntrl_l(int, __locale_t) throw();
    extern int isdigit_l(int, __locale_t) throw();
    extern int islower_l(int, __locale_t) throw();
    extern int isgraph_l(int, __locale_t) throw();
    extern int isprint_l(int, __locale_t) throw();
    extern int ispunct_l(int, __locale_t) throw();
    extern int isspace_l(int, __locale_t) throw();
    extern int isupper_l(int, __locale_t) throw();
    extern int isxdigit_l(int, __locale_t) throw();
    extern int isblank_l(int, __locale_t) throw();
    extern int __tolower_l(int __c, __locale_t __l) throw();
    extern int tolower_l(int __c, __locale_t __l) throw();
    extern int __toupper_l(int __c, __locale_t __l) throw();
    extern int toupper_l(int __c, __locale_t __l) throw();
}
namespace std {
    using ::isalnum;
    ;
    using ::isalpha;
    ;
    using ::iscntrl;
    ;
    using ::isdigit;
    ;
    using ::isgraph;
    ;
    using ::islower;
    ;
    using ::isprint;
    ;
    using ::ispunct;
    ;
    using ::isspace;
    ;
    using ::isupper;
    ;
    using ::isxdigit;
    ;
    using ::tolower;
    ;
    using ::toupper;
    ;
}
namespace std {
    class locale;
    template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &) throw();
    template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &);
    template <typename _CharT> bool isspace(_CharT, const std::locale &);
    template <typename _CharT> bool isprint(_CharT, const std::locale &);
    template <typename _CharT> bool iscntrl(_CharT, const std::locale &);
    template <typename _CharT> bool isupper(_CharT, const std::locale &);
    template <typename _CharT> bool islower(_CharT, const std::locale &);
    template <typename _CharT> bool isalpha(_CharT, const std::locale &);
    template <typename _CharT> bool isdigit(_CharT, const std::locale &);
    template <typename _CharT> bool ispunct(_CharT, const std::locale &);
    template <typename _CharT> bool isxdigit(_CharT, const std::locale &);
    template <typename _CharT> bool isalnum(_CharT, const std::locale &);
    template <typename _CharT> bool isgraph(_CharT, const std::locale &);
    template <typename _CharT> _CharT toupper(_CharT, const std::locale &);
    template <typename _CharT> _CharT tolower(_CharT, const std::locale &);
    class ctype_base;
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa10d700 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa10d6e8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa10d658 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa10d6d8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa10d6c0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa10d6b0 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa10d688 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa10d670 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa1106a8 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa110690 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa1106b8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa1106e0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1106c8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa110708 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa1106f0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa110718 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa110740 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa110728 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa110830 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa110820 <col:9, col:36>
    (CXXMemberCallExpr 0xa1107f0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa1107d0 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa10fa60
        (CXXThisExpr 0xa110768 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110810 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa1107b8 <col:33> 'char_type':'char' lvalue ParmVar 0xa10e1b0 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa110940 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa110930 <col:9, col:43>
    (CXXMemberCallExpr 0xa1108e8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa1108c8 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa10fb90
        (CXXThisExpr 0xa110848 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110910 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa110898 <col:33> 'char_type *' lvalue ParmVar 0xa10e2f0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa110920 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1108b0 <col:39> 'const char_type *' lvalue ParmVar 0xa10e360 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa110a20 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa110a10 <col:9, col:36>
    (CXXMemberCallExpr 0xa1109e0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa1109c0 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa10fc50
        (CXXThisExpr 0xa110958 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110a00 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa1109a8 <col:33> 'char_type':'char' lvalue ParmVar 0xa10e470 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa110b30 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa110b20 <col:9, col:43>
    (CXXMemberCallExpr 0xa110ad8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa110ab8 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa10fd80
        (CXXThisExpr 0xa110a38 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110b00 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa110a88 <col:33> 'char_type *' lvalue ParmVar 0xa10e540 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa110b10 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa110aa0 <col:39> 'const char_type *' lvalue ParmVar 0xa10e590 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa110dc8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa110c90 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa110ba8 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa110b98 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa110b74 <col:6> 'char' lvalue ->_M_widen_ok 0xa10d320
          (CXXThisExpr 0xa110b48 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa110c80 <line:868:4, col:51>
      (ImplicitCastExpr 0xa110c70 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa110c58 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa110c48 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa110bc8 <col:11> 'char [256]' lvalue ->_M_widen 0xa10d410
              (CXXThisExpr 0xa110bb8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa110c30 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa110c20 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa110c10 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa110be8 <col:47> 'char' lvalue ParmVar 0xa10e660 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa110ce0 <line:869:2, col:22> 'void'
    (MemberExpr 0xa110cc0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa1103f0
      (CXXThisExpr 0xa110cb0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa110db8 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa110d88 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa110d68 <col:9, col:15> '<bound member function type>' ->do_widen 0xa10fe40
        (CXXThisExpr 0xa110d00 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110da8 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa110d50 <col:24> 'char' lvalue ParmVar 0xa10e660 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa111208 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa110ff0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa110e50 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa110e40 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa110e30 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa110df8 <col:6> 'char' lvalue ->_M_widen_ok 0xa10d320
            (CXXThisExpr 0xa110de8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa110e18 <col:21> 'int' 1))
    (CompoundStmt 0xa110fd8 <line:895:4, line:898:4>
      (CallExpr 0xa110f28 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa110f18 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa110e68 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa110f60 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa110f50 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa110e80 <col:23> 'char_type *' lvalue ParmVar 0xa10e800 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa110f80 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa110f70 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa110e98 <col:29> 'const char *' lvalue ParmVar 0xa10e760 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa110f90 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa110f00 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa110ee0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa110eb0 <col:35> 'const char *' lvalue ParmVar 0xa10e7b0 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa110ef0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa110ec8 <col:42> 'const char *' lvalue ParmVar 0xa10e760 '__lo' 'const char *')))))
      (ReturnStmt 0xa110fc8 <line:897:6, col:13>
        (ImplicitCastExpr 0xa110fb8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa110f9c <col:13> 'const char *' lvalue ParmVar 0xa10e7b0 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa1110c8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa111060 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa111050 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa111040 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa111020 <col:7> 'char' lvalue ->_M_widen_ok 0xa10d320
            (CXXThisExpr 0xa111010 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa1110a8 <line:900:4, col:18> 'void'
      (MemberExpr 0xa111088 <col:4> '<bound member function type>' ->_M_widen_init 0xa1103f0
        (CXXThisExpr 0xa111078 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa1111f8 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa1111a0 <col:9, col:40> 'const char *'
      (MemberExpr 0xa111180 <col:9, col:15> '<bound member function type>' ->do_widen 0xa10ffc0
        (CXXThisExpr 0xa1110e8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa1111c8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa111138 <col:24> 'const char *' lvalue ParmVar 0xa10e760 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa1111d8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa111150 <col:30> 'const char *' lvalue ParmVar 0xa10e7b0 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa1111e8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111168 <col:36> 'char_type *' lvalue ParmVar 0xa10e800 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa111750 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa1113d8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1112f0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa1112e0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa1112c8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa1112b8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa111238 <col:6> 'char [256]' lvalue ->_M_narrow 0xa10d500
              (CXXThisExpr 0xa111228 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa1112a0 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa111290 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa111280 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa111258 <col:43> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa1113c8 <line:926:4, col:52>
      (ImplicitCastExpr 0xa1113b8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa1113a0 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa111390 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa111310 <col:11> 'char [256]' lvalue ->_M_narrow 0xa10d500
              (CXXThisExpr 0xa111300 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa111378 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa111368 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa111358 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa111330 <col:48> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa111530 <line:927:2, col:43>
    0xa111400 "const char __t =
      (CXXMemberCallExpr 0xa1114e8 <col:19, col:42> 'char'
        (MemberExpr 0xa1114c8 <col:19> '<bound member function type>' ->do_narrow 0xa1100e0
          (CXXThisExpr 0xa1114b8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa111510 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa111488 <col:29> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa111520 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa1114a0 <col:34> 'char' lvalue ParmVar 0xa10e980 '__dfault' 'char')))")
  (IfStmt 0xa1116f8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa1115b0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa111580 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa111570 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa111540 <col:6> 'const char' lvalue Var 0xa111400 '__t' 'const char')))
      (ImplicitCastExpr 0xa1115a0 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa111590 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa111558 <col:13> 'char' lvalue ParmVar 0xa10e980 '__dfault' 'char'))))
    (BinaryOperator 0xa1116e0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa1116a0 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa111690 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa111610 <col:4> 'char [256]' lvalue ->_M_narrow 0xa10d500
            (CXXThisExpr 0xa111600 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa111678 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa111668 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa111658 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa111630 <col:41> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa1116d0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa1116b4 <col:49> 'const char' lvalue Var 0xa111400 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa111740 <line:930:2, col:9>
    (ImplicitCastExpr 0xa111730 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa111714 <col:9> 'const char' lvalue Var 0xa111400 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa111c50 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa111a08 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa111870 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa111828 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa111818 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa111770 <col:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa111850 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa1117f0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa1117e0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa1117d0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa111798 <col:23> 'char' lvalue ->_M_narrow_ok 0xa10d540
                  (CXXThisExpr 0xa111788 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa1117b8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa111860 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa111808 <col:42> '_Bool' true))))
    (CompoundStmt 0xa1119f0 <line:960:4, line:963:4>
      (CallExpr 0xa111940 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa111930 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa11187c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa111978 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa111968 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa111894 <col:23> 'char *' lvalue ParmVar 0xa10eb80 '__to' 'char *')))
        (ImplicitCastExpr 0xa111998 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa111988 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1118ac <col:29> 'const char_type *' lvalue ParmVar 0xa10eaa0 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa1119a8 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa111918 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa1118f8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa1118c4 <col:35> 'const char_type *' lvalue ParmVar 0xa10eaf0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa111908 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa1118dc <col:42> 'const char_type *' lvalue ParmVar 0xa10eaa0 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa1119e0 <line:962:6, col:13>
        (ImplicitCastExpr 0xa1119d0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1119b4 <col:13> 'const char_type *' lvalue ParmVar 0xa10eaf0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa111ae0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa111a78 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa111a68 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa111a58 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa111a38 <col:7> 'char' lvalue ->_M_narrow_ok 0xa10d540
            (CXXThisExpr 0xa111a28 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa111ac0 <line:965:4, col:19> 'void'
      (MemberExpr 0xa111aa0 <col:4> '<bound member function type>' ->_M_narrow_init 0xa110370
        (CXXThisExpr 0xa111a90 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa111c40 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa111bd0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa111bb0 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa1102a0
        (CXXThisExpr 0xa111b00 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa111c00 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111b50 <col:25> 'const char_type *' lvalue ParmVar 0xa10eaa0 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa111c10 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111b68 <col:31> 'const char_type *' lvalue ParmVar 0xa10eaf0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa111c20 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa111b80 <col:37> 'char' lvalue ParmVar 0xa10eb30 '__dfault' 'char'))
      (ImplicitCastExpr 0xa111c30 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa111b98 <col:47> 'char *' lvalue ParmVar 0xa10eb80 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa111cc0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa111cb0 <col:9, col:16>
    (ImplicitCastExpr 0xa111ca0 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa111c80 <col:16> 'const mask *const' lvalue ->_M_table 0xa10d2e0
        (CXXThisExpr 0xa111c70 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa111d10 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa111d00 <col:9, col:16>
    (ImplicitCastExpr 0xa111cf0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa111cd4 <col:16> 'char' lvalue ParmVar 0xa10fdf0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa111e98 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa111de8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa111dd8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa111d24 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa111e20 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa111e10 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111d3c <col:19> 'char_type *' lvalue ParmVar 0xa10ff60 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa111e40 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa111e30 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa111d54 <col:27> 'const char *' lvalue ParmVar 0xa10fec0 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa111e50 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa111dc0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa111da0 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa111d6c <col:33> 'const char *' lvalue ParmVar 0xa10ff10 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa111db0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa111d84 <col:40> 'const char *' lvalue ParmVar 0xa10fec0 '__lo' 'const char *')))))
  (ReturnStmt 0xa111e88 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa111e78 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa111e5c <col:9> 'const char *' lvalue ParmVar 0xa10ff10 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa111ee8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa111ed8 <col:9, col:16>
    (ImplicitCastExpr 0xa111ec8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa111eb0 <col:16> 'char_type':'char' lvalue ParmVar 0xa110040 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa112070 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa111fc0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa111fb0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa111efc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa111ff8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa111fe8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa111f14 <col:19> 'char *' lvalue ParmVar 0xa110240 '__dest' 'char *')))
    (ImplicitCastExpr 0xa112018 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa112008 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111f2c <col:27> 'const char_type *' lvalue ParmVar 0xa110160 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa112028 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa111f98 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa111f78 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa111f44 <col:33> 'const char_type *' lvalue ParmVar 0xa1101b0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa111f88 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa111f5c <col:40> 'const char_type *' lvalue ParmVar 0xa110160 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa112060 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa112050 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa112034 <col:9> 'const char_type *' lvalue ParmVar 0xa1101b0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa1196a8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa119690 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa1196d0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1196b8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype;
    class ctype;
    class ctype;
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname;
    class codecvt_base;
    template <typename _InternT = char, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT = wchar_t, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT, typename _ExternT, typename _StateT> class codecvt;
    class codecvt;
    class codecvt;
    template <typename _InternT, typename _ExternT, typename _StateT> class codecvt_byname;
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put;
    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct;
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname;
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate;
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname;
    class time_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get_byname;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put_byname;
    class money_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class money_get;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class money_put;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x9f141b8 </usr/include/c++/4.6/bits/localefwd.h:176:42> '_Bool' false)
> class moneypunct;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x9f14408 </usr/include/c++/4.6/bits/localefwd.h:178:42> '_Bool' false)
> class moneypunct_byname;
    class messages_base;
    template <typename _CharT> class messages;
    template <typename _CharT> class messages_byname;
}
namespace __cxxabiv1 {
    class __forced_unwind {
        class __forced_unwind;
        virtual void ~__forced_unwind() throw();
        virtual void __pure_dummy() = 0;
        inline __cxxabiv1::__forced_unwind &operator=(const __cxxabiv1::__forced_unwind &) throw();
    };
}
namespace std {
    template <typename _CharT, typename _Traits> inline void __ostream_write(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x9f15740 </usr/include/c++/4.6/bits/ostream_insert.h:45:5, line:52:5>
  (DeclStmt 0x9f15390 <line:46:7, col:66>
    0x9f15360 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9f15480 <line:47:7, col:62>
    0x9f15450 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9f155d8 <line:49:7, col:62>
    0x9f154a0 "const streamsize __put =
      (CallExpr 0x9f155b0 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f15548 <col:32, col:47> '<dependent type>' lvalue
          (CallExpr 0x9f15528 <col:32, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f154f0 <col:32, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9f154d4 <col:32> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f15020 '__out' 'basic_ostream<_CharT, _Traits> &'))))
        (DeclRefExpr 0x9f1557c <col:53> 'const _CharT *' lvalue ParmVar 0x9f15090 '__s' 'const _CharT *')
        (DeclRefExpr 0x9f15594 <col:58> 'streamsize':'int' lvalue ParmVar 0x9f150f0 '__n' 'streamsize':'int'))")
  (IfStmt 0x9f15720 <line:50:7, line:51:35>
    <<<NULL>>>
    (BinaryOperator 0x9f15638 <line:50:11, col:20> '_Bool' '!='
      (ImplicitCastExpr 0x9f15618 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f155e8 <col:11> 'const streamsize':'const int' lvalue Var 0x9f154a0 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x9f15628 <col:20> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f15600 <col:20> 'streamsize':'int' lvalue ParmVar 0x9f150f0 '__n' 'streamsize':'int')))
    (CallExpr 0x9f15700 <line:51:2, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9f15668 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9f15650 <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f15020 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DependentScopeDeclRefExpr 0x9f156d8 <col:17, col:29> '<dependent type>' lvalue))
    <<<NULL>>>))

;
    template <typename _CharT, typename _Traits> inline void __ostream_fill(basic_ostream<_CharT, _Traits> &__out, streamsize __n) (CompoundStmt 0x9f18c80 </usr/include/c++/4.6/bits/ostream_insert.h:57:5, line:71:5>
  (DeclStmt 0x9f15bf0 <line:58:7, col:66>
    0x9f15bc0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9f15cb0 <line:59:7, col:62>
    0x9f15c80 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9f187e8 <line:61:7, col:38>
    0x9f18740 "const _CharT __c =
      (CallExpr 0x9f187c8 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9f18790 <col:26, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x9f18774 <col:26> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f15940 '__out' 'basic_ostream<_CharT, _Traits> &')))")
  (ForStmt 0x9f18c58 <line:62:7, line:70:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9f18838 <line:62:14, col:20> '_Bool' '>'
      (ImplicitCastExpr 0x9f18828 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9f187f8 <col:14> 'streamsize':'int' lvalue ParmVar 0x9f15980 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9f18810 <col:20> 'int' 0))
    (UnaryOperator 0x9f18868 <col:23, col:25> 'streamsize':'int' lvalue prefix '--'
      (DeclRefExpr 0x9f18850 <col:25> 'streamsize':'int' lvalue ParmVar 0x9f15980 '__n' 'streamsize':'int'))
    (CompoundStmt 0x9f18c40 <line:63:2, line:70:2>
      (DeclStmt 0x9f18a28 <line:64:4, col:70>
        0x9f18910 "const typename _Traits::int_type __put =
          (CallExpr 0x9f18a08 <col:45, col:69> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f189b8 <col:45, col:60> '<dependent type>' lvalue
              (CallExpr 0x9f18998 <col:45, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f18960 <col:45, col:51> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f18944 <col:45> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f15940 '__out' 'basic_ostream<_CharT, _Traits> &'))))
            (DeclRefExpr 0x9f189ec <col:66> 'const _CharT' lvalue Var 0x9f18740 '__c' 'const _CharT'))")
      (IfStmt 0x9f18c20 <line:65:4, line:69:6>
        <<<NULL>>>
        (CallExpr 0x9f18b08 <line:65:8, col:50> '<dependent type>'
          (DependentScopeDeclRefExpr 0x9f18a60 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x9f18a84 <col:29> 'const typename _Traits::int_type' lvalue Var 0x9f18910 '__put' 'const typename _Traits::int_type')
          (CallExpr 0x9f18ae8 <col:36, col:49> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9f18ac0 <col:36, col:45> '<dependent type>' lvalue)))
        (CompoundStmt 0x9f18c08 <line:66:6, line:69:6>
          (CallExpr 0x9f18be0 <line:67:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f18b48 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9f18b2c <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f15940 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9f18bb8 <col:23, col:35> '<dependent type>' lvalue))
          (BreakStmt 0x9f18c00 <line:68:8>))
        <<<NULL>>>))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &__ostream_insert(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s, streamsize __n)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &__ostream_insert(basic_ostream<char, std::char_traits<char> > &__out, const char *__s, streamsize __n)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &__ostream_insert(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x9f1a090 </usr/include/c++/4.6/bits/ostream_insert.h:77:5, line:112:5>
  (DeclStmt 0x9f19300 <line:78:7, col:66>
    0x9f192d0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x9f193c0 <line:79:7, col:62>
    0x9f19390 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x9f194c0 <line:81:7, col:52>
    0x9f19450 "typename __ostream_type::sentry __cerb =
      (ParenListExpr 0x9f194a0 <col:45, col:51> 'typename __ostream_type::sentry'
        (DeclRefExpr 0x9f19484 <col:46> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &'))")
  (IfStmt 0x9f1a048 <line:82:7, line:110:2>
    <<<NULL>>>
    (DeclRefExpr 0x9f194d0 <line:82:11> 'typename __ostream_type::sentry' lvalue Var 0x9f19450 '__cerb' 'typename __ostream_type::sentry')
    (CompoundStmt 0x9f1a028 <line:83:2, line:110:2>
      (IfStmt 0x9f19df8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream_insert.h:102:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f194e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9f19dd8 </usr/include/c++/4.6/bits/ostream_insert.h:85:6, line:102:6>
          (DeclStmt 0x9f195a8 <line:86:8, col:44>
            0x9f19500 "const streamsize __w =
              (CallExpr 0x9f19588 <col:31, col:43> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9f19550 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x9f19534 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &')))")
          (IfStmt 0x9f19d30 <line:87:8, line:100:34>
            <<<NULL>>>
            (BinaryOperator 0x9f19608 <line:87:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9f195e8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9f195b8 <col:12> 'const streamsize':'const int' lvalue Var 0x9f19500 '__w' 'const streamsize':'const int'))
              (ImplicitCastExpr 0x9f195f8 <col:18> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9f195d0 <col:18> 'streamsize':'int' lvalue ParmVar 0x9f19010 '__n' 'streamsize':'int')))
            (CompoundStmt 0x9f19c68 <line:88:3, line:98:3>
              (DeclStmt 0x9f19840 <line:89:5, line:91:32>
                0x9f19630 "const bool __left =
                  (ParenExpr 0x9f19828 <line:89:25, line:91:31> '<dependent type>'
                    (CXXOperatorCallExpr 0x9f19800 <line:89:26, line:91:27> '<dependent type>'
                      (UnresolvedLookupExpr 0x9f197b8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
                      (ParenExpr 0x9f19758 <line:89:26, line:90:31> '<dependent type>'
                        (BinaryOperator 0x9f19740 <line:89:27, line:90:20> '<dependent type>' '&'
                          (CallExpr 0x9f196b8 <line:89:27, col:39> '<dependent type>'
                            (CXXDependentScopeMemberExpr 0x9f19680 <col:27, col:33> '<dependent type>' lvalue
                              (DeclRefExpr 0x9f19664 <col:27> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &')))
                          (DependentScopeDeclRefExpr 0x9f19718 <line:90:8, col:20> '<dependent type>' lvalue)))
                      (DependentScopeDeclRefExpr 0x9f19790 <line:91:15, col:27> '<dependent type>' lvalue)))")
              (IfStmt 0x9f19970 <line:92:5, line:93:38>
                <<<NULL>>>
                (UnaryOperator 0x9f19878 <line:92:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9f19868 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9f19850 <col:10> 'const _Bool' lvalue Var 0x9f19630 '__left' 'const _Bool')))
                (CallExpr 0x9f19948 <line:93:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f19890 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9f15a80)
                  (DeclRefExpr 0x9f198c4 <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x9f19930 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x9f19910 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9f198dc <col:29> 'const streamsize':'const int' lvalue Var 0x9f19500 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x9f19920 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9f198f4 <col:35> 'streamsize':'int' lvalue ParmVar 0x9f19010 '__n' 'streamsize':'int'))))
                <<<NULL>>>)
              (IfStmt 0x9f19aa8 <line:94:5, line:95:38>
                <<<NULL>>>
                (CallExpr 0x9f199e0 <line:94:9, col:20> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9f199a8 <col:9, col:15> '<dependent type>' lvalue
                    (DeclRefExpr 0x9f1998c <col:9> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &')))
                (CallExpr 0x9f19a80 <line:95:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f19a00 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9f15210)
                  (DeclRefExpr 0x9f19a34 <col:23> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (DeclRefExpr 0x9f19a4c <col:30> 'const _CharT *' lvalue ParmVar 0x9f18fd0 '__s' 'const _CharT *')
                  (DeclRefExpr 0x9f19a64 <col:35> 'streamsize':'int' lvalue ParmVar 0x9f19010 '__n' 'streamsize':'int'))
                <<<NULL>>>)
              (IfStmt 0x9f19c48 <line:96:5, line:97:38>
                <<<NULL>>>
                (BinaryOperator 0x9f19b50 <line:96:9, col:30> '<dependent type>' '&&'
                  (DeclRefExpr 0x9f19ac4 <col:9> 'const _Bool' lvalue Var 0x9f19630 '__left' 'const _Bool')
                  (CallExpr 0x9f19b30 <col:19, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9f19af8 <col:19, col:25> '<dependent type>' lvalue
                      (DeclRefExpr 0x9f19adc <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &'))))
                (CallExpr 0x9f19c20 <line:97:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9f19b68 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9f15a80)
                  (DeclRefExpr 0x9f19b9c <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x9f19c08 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x9f19be8 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9f19bb4 <col:29> 'const streamsize':'const int' lvalue Var 0x9f19500 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x9f19bf8 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x9f19bcc <col:35> 'streamsize':'int' lvalue ParmVar 0x9f19010 '__n' 'streamsize':'int'))))
                <<<NULL>>>))
            (CallExpr 0x9f19d08 <line:100:3, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x9f19c88 <col:3> '<overloaded function type>' lvalue (ADL) = '1' 0x9f15210)
              (DeclRefExpr 0x9f19cbc <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &')
              (DeclRefExpr 0x9f19cd4 <col:26> 'const _CharT *' lvalue ParmVar 0x9f18fd0 '__s' 'const _CharT *')
              (DeclRefExpr 0x9f19cec <col:31> 'streamsize':'int' lvalue ParmVar 0x9f19010 '__n' 'streamsize':'int')))
          (CallExpr 0x9f19db8 <line:101:8, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f19d68 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9f19d4c <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (IntegerLiteral 0x9f19da0 <col:20> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x9f19f08 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:107:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f19e18 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f19ef0 </usr/include/c++/4.6/bits/ostream_insert.h:104:6, line:107:6>
          (CallExpr 0x9f19ec0 <line:105:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f19e40 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9f19e28 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9f19e98 <col:26, col:38> '<dependent type>' lvalue))
          (NullStmt 0x9f19ee0 <line:106:31>))
        <<<NULL>>>)
      (IfStmt 0x9f1a008 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:109:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9f19f28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9f19ff0 </usr/include/c++/4.6/bits/ostream_insert.h:109:6, col:47>
          (CallExpr 0x9f19fd0 <col:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9f19f50 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9f19f38 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x9f19fa8 <col:26, col:38> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9f1a080 <line:111:7, col:14>
    (DeclRefExpr 0x9f1a064 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9f18f60 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
}
namespace std {
    template <typename _Arg, typename _Result> struct unary_function {
        struct unary_function;
        typedef _Arg argument_type;
        typedef _Result result_type;
    };
    template <typename _Arg1, typename _Arg2, typename _Result> struct binary_function {
        struct binary_function;
        typedef _Arg1 first_argument_type;
        typedef _Arg2 second_argument_type;
        typedef _Result result_type;
    };
    template <typename _Tp> struct plus : public binary_function<_Tp, _Tp, _Tp> {
        struct plus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9f1d050 </usr/include/c++/4.6/bits/stl_function.h:145:7, col:27>
  (ReturnStmt 0x9f1d040 <col:9, col:22>
    (CXXOperatorCallExpr 0x9f1d018 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9f1cfe0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
      (DeclRefExpr 0x9f1cfb0 <col:16> 'const _Tp' lvalue ParmVar 0x9f1ce40 '__x' 'const _Tp &')
      (DeclRefExpr 0x9f1cfc8 <col:22> 'const _Tp' lvalue ParmVar 0x9f1ce90 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct minus : public binary_function<_Tp, _Tp, _Tp> {
        struct minus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9f1d630 </usr/include/c++/4.6/bits/stl_function.h:154:7, col:27>
  (ReturnStmt 0x9f1d620 <col:9, col:22>
    (CXXOperatorCallExpr 0x9f1d5f8 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9f1d5c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (DeclRefExpr 0x9f1d590 <col:16> 'const _Tp' lvalue ParmVar 0x9f1d440 '__x' 'const _Tp &')
      (DeclRefExpr 0x9f1d5a8 <col:22> 'const _Tp' lvalue ParmVar 0x9f1d490 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct multiplies : public binary_function<_Tp, _Tp, _Tp> {
        struct multiplies;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9f1dbc8 </usr/include/c++/4.6/bits/stl_function.h:163:7, col:27>
  (ReturnStmt 0x9f1dbb8 <col:9, col:22>
    (BinaryOperator 0x9f1dba0 <col:16, col:22> '<dependent type>' '*'
      (DeclRefExpr 0x9f1db70 <col:16> 'const _Tp' lvalue ParmVar 0x9f1da20 '__x' 'const _Tp &')
      (DeclRefExpr 0x9f1db88 <col:22> 'const _Tp' lvalue ParmVar 0x9f1da70 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct divides : public binary_function<_Tp, _Tp, _Tp> {
        struct divides;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9f1fda8 </usr/include/c++/4.6/bits/stl_function.h:172:7, col:27>
  (ReturnStmt 0x9f1fd98 <col:9, col:22>
    (BinaryOperator 0x9f1fd80 <col:16, col:22> '<dependent type>' '/'
      (DeclRefExpr 0x9f1fd50 <col:16> 'const _Tp' lvalue ParmVar 0x9f1fc00 '__x' 'const _Tp &')
      (DeclRefExpr 0x9f1fd68 <col:22> 'const _Tp' lvalue ParmVar 0x9f1fc50 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct modulus : public binary_function<_Tp, _Tp, _Tp> {
        struct modulus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9f20338 </usr/include/c++/4.6/bits/stl_function.h:181:7, col:27>
  (ReturnStmt 0x9f20328 <col:9, col:22>
    (BinaryOperator 0x9f20310 <col:16, col:22> '<dependent type>' '%'
      (DeclRefExpr 0x9f202e0 <col:16> 'const _Tp' lvalue ParmVar 0x9f20190 '__x' 'const _Tp &')
      (DeclRefExpr 0x9f202f8 <col:22> 'const _Tp' lvalue ParmVar 0x9f201e0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct negate : public unary_function<_Tp, _Tp> {
        struct negate;
        _Tp operator()(const _Tp &__x) const (CompoundStmt 0x9f208d0 </usr/include/c++/4.6/bits/stl_function.h:190:7, col:22>
  (ReturnStmt 0x9f208c0 <col:9, col:17>
    (CXXOperatorCallExpr 0x9f208a0 <col:16, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9f20868 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (DeclRefExpr 0x9f20850 <col:17> 'const _Tp' lvalue ParmVar 0x9f20730 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct equal_to : public binary_function<_Tp, _Tp, bool> {
        struct equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9f20f40 </usr/include/c++/4.6/bits/stl_function.h:209:7, col:28>
  (ReturnStmt 0x9f20f30 <col:9, col:23>
    (CXXOperatorCallExpr 0x9f20f08 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9f20ec0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
      (DeclRefExpr 0x9f20e90 <col:16> 'const _Tp' lvalue ParmVar 0x9f20d20 '__x' 'const _Tp &')
      (DeclRefExpr 0x9f20ea8 <col:23> 'const _Tp' lvalue ParmVar 0x9f20d70 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct not_equal_to : public binary_function<_Tp, _Tp, bool> {
        struct not_equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9f21530 </usr/include/c++/4.6/bits/stl_function.h:218:7, col:28>
  (ReturnStmt 0x9f21520 <col:9, col:23>
    (CXXOperatorCallExpr 0x9f214f8 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9f214b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70)
      (DeclRefExpr 0x9f21480 <col:16> 'const _Tp' lvalue ParmVar 0x9f21330 '__x' 'const _Tp &')
      (DeclRefExpr 0x9f21498 <col:23> 'const _Tp' lvalue ParmVar 0x9f21380 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater : public binary_function<_Tp, _Tp, bool> {
        struct greater;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e7beb8 </usr/include/c++/4.6/bits/stl_function.h:227:7, col:27>
  (ReturnStmt 0x9e7bea8 <col:9, col:22>
    (CXXOperatorCallExpr 0x9e7be80 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9e7be40 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (DeclRefExpr 0x9e7be10 <col:16> 'const _Tp' lvalue ParmVar 0x9e7bcc0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e7be28 <col:22> 'const _Tp' lvalue ParmVar 0x9e7bd10 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less : public binary_function<_Tp, _Tp, bool> {
        struct less;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e7c498 </usr/include/c++/4.6/bits/stl_function.h:236:7, col:27>
  (ReturnStmt 0x9e7c488 <col:9, col:22>
    (CXXOperatorCallExpr 0x9e7c460 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9e7c420 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
      (DeclRefExpr 0x9e7c3f0 <col:16> 'const _Tp' lvalue ParmVar 0x9e7c2a0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e7c408 <col:22> 'const _Tp' lvalue ParmVar 0x9e7c2f0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater_equal : public binary_function<_Tp, _Tp, bool> {
        struct greater_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e7ca78 </usr/include/c++/4.6/bits/stl_function.h:245:7, col:28>
  (ReturnStmt 0x9e7ca68 <col:9, col:23>
    (CXXOperatorCallExpr 0x9e7ca40 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9e7ca00 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00)
      (DeclRefExpr 0x9e7c9d0 <col:16> 'const _Tp' lvalue ParmVar 0x9e7c880 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e7c9e8 <col:23> 'const _Tp' lvalue ParmVar 0x9e7c8d0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less_equal : public binary_function<_Tp, _Tp, bool> {
        struct less_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e7d058 </usr/include/c++/4.6/bits/stl_function.h:254:7, col:28>
  (ReturnStmt 0x9e7d048 <col:9, col:23>
    (CXXOperatorCallExpr 0x9e7d020 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x9e7cfe0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780)
      (DeclRefExpr 0x9e7cfb0 <col:16> 'const _Tp' lvalue ParmVar 0x9e7ce60 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e7cfc8 <col:23> 'const _Tp' lvalue ParmVar 0x9e7ceb0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_and : public binary_function<_Tp, _Tp, bool> {
        struct logical_and;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e7d5e8 </usr/include/c++/4.6/bits/stl_function.h:273:7, col:28>
  (ReturnStmt 0x9e7d5d8 <col:9, col:23>
    (BinaryOperator 0x9e7d5c0 <col:16, col:23> '<dependent type>' '&&'
      (DeclRefExpr 0x9e7d590 <col:16> 'const _Tp' lvalue ParmVar 0x9e7d440 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e7d5a8 <col:23> 'const _Tp' lvalue ParmVar 0x9e7d490 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_or : public binary_function<_Tp, _Tp, bool> {
        struct logical_or;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9e7db78 </usr/include/c++/4.6/bits/stl_function.h:282:7, col:28>
  (ReturnStmt 0x9e7db68 <col:9, col:23>
    (BinaryOperator 0x9e7db50 <col:16, col:23> '<dependent type>' '||'
      (DeclRefExpr 0x9e7db20 <col:16> 'const _Tp' lvalue ParmVar 0x9e7d9d0 '__x' 'const _Tp &')
      (DeclRefExpr 0x9e7db38 <col:23> 'const _Tp' lvalue ParmVar 0x9e7da20 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_not : public unary_function<_Tp, bool> {
        struct logical_not;
        bool operator()(const _Tp &__x) const (CompoundStmt 0x9f2c610 </usr/include/c++/4.6/bits/stl_function.h:291:7, col:22>
  (ReturnStmt 0x9f2c600 <col:9, col:17>
    (UnaryOperator 0x9f2c5e8 <col:16, col:17> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9f2c5d0 <col:17> 'const _Tp' lvalue ParmVar 0x9f2c4b0 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_and : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_and;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9f2cba8 </usr/include/c++/4.6/bits/stl_function.h:302:7, col:27>
  (ReturnStmt 0x9f2cb98 <col:9, col:22>
    (BinaryOperator 0x9f2cb80 <col:16, col:22> '<dependent type>' '&'
      (DeclRefExpr 0x9f2cb50 <col:16> 'const _Tp' lvalue ParmVar 0x9f2ca00 '__x' 'const _Tp &')
      (DeclRefExpr 0x9f2cb68 <col:22> 'const _Tp' lvalue ParmVar 0x9f2ca50 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_or : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_or;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9f2d138 </usr/include/c++/4.6/bits/stl_function.h:310:7, col:27>
  (ReturnStmt 0x9f2d128 <col:9, col:22>
    (BinaryOperator 0x9f2d110 <col:16, col:22> '<dependent type>' '|'
      (DeclRefExpr 0x9f2d0e0 <col:16> 'const _Tp' lvalue ParmVar 0x9f2cf90 '__x' 'const _Tp &')
      (DeclRefExpr 0x9f2d0f8 <col:22> 'const _Tp' lvalue ParmVar 0x9f2cfe0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_xor : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_xor;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x9f2d6c8 </usr/include/c++/4.6/bits/stl_function.h:318:7, col:27>
  (ReturnStmt 0x9f2d6b8 <col:9, col:22>
    (BinaryOperator 0x9f2d6a0 <col:16, col:22> '<dependent type>' '^'
      (DeclRefExpr 0x9f2d670 <col:16> 'const _Tp' lvalue ParmVar 0x9f2d520 '__x' 'const _Tp &')
      (DeclRefExpr 0x9f2d688 <col:22> 'const _Tp' lvalue ParmVar 0x9f2d570 '__y' 'const _Tp &'))))


    };
    template <typename _Predicate> class unary_negate : public unary_function<typename _Predicate::argument_type, bool> {
        class unary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        unary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x9f2de84 </usr/include/c++/4.6/bits/stl_function.h:360:53> 'const _Predicate' lvalue ParmVar 0x9f2dc00 '__x' 'const _Predicate &')
) (CompoundStmt 0x9f2dee0 </usr/include/c++/4.6/bits/stl_function.h:360:58, col:60>)


        bool operator()(const typename _Predicate::argument_type &__x) const (CompoundStmt 0x9f2dfb8 </usr/include/c++/4.6/bits/stl_function.h:364:7, col:31>
  (ReturnStmt 0x9f2dfa8 <col:9, col:28>
    (UnaryOperator 0x9f2df90 <col:16, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x9f2df70 <col:17, col:28> '<dependent type>'
        (MemberExpr 0x9f2df34 <col:17> 'const _Predicate' lvalue ->_M_pred 0x9f2db60
          (CXXThisExpr 0x9f2df08 <col:17> 'const unary_negate<_Predicate> *' this))
        (DeclRefExpr 0x9f2df54 <col:25> 'const typename _Predicate::argument_type' lvalue ParmVar 0x9f2dd80 '__x' 'const typename _Predicate::argument_type &')))))


    };
    template <typename _Predicate> inline unary_negate<_Predicate> not1(const _Predicate &__pred) (CompoundStmt 0x9f30558 </usr/include/c++/4.6/bits/stl_function.h:371:5, col:48>
  (ReturnStmt 0x9f30548 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x9f30528 <col:14, col:45> 'unary_negate<_Predicate>'
      (DeclRefExpr 0x9f30510 <col:39> 'const _Predicate' lvalue ParmVar 0x9f2e0e0 '__pred' 'const _Predicate &'))))

;
    template <typename _Predicate> class binary_negate : public binary_function<typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
        class binary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        binary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x9f30e88 </usr/include/c++/4.6/bits/stl_function.h:384:54> 'const _Predicate' lvalue ParmVar 0x9f30b50 '__x' 'const _Predicate &')
) (CompoundStmt 0x9f30ee0 </usr/include/c++/4.6/bits/stl_function.h:384:59, col:61>)


        bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &__y) const (CompoundStmt 0x9f30fd8 </usr/include/c++/4.6/bits/stl_function.h:389:7, col:36>
  (ReturnStmt 0x9f30fc8 <col:9, col:33>
    (UnaryOperator 0x9f30fb0 <col:16, col:33> '<dependent type>' prefix '!'
      (CallExpr 0x9f30f88 <col:17, col:33> '<dependent type>'
        (MemberExpr 0x9f30f34 <col:17> 'const _Predicate' lvalue ->_M_pred 0x9f30ab0
          (CXXThisExpr 0x9f30f08 <col:17> 'const binary_negate<_Predicate> *' this))
        (DeclRefExpr 0x9f30f54 <col:25> 'const typename _Predicate::first_argument_type' lvalue ParmVar 0x9f30cd0 '__x' 'const typename _Predicate::first_argument_type &')
        (DeclRefExpr 0x9f30f6c <col:30> 'const typename _Predicate::second_argument_type' lvalue ParmVar 0x9f30d80 '__y' 'const typename _Predicate::second_argument_type &')))))


    };
    template <typename _Predicate> inline binary_negate<_Predicate> not2(const _Predicate &__pred) (CompoundStmt 0x9f31338 </usr/include/c++/4.6/bits/stl_function.h:396:5, col:49>
  (ReturnStmt 0x9f31328 <col:7, col:46>
    (CXXUnresolvedConstructExpr 0x9f31308 <col:14, col:46> 'binary_negate<_Predicate>'
      (DeclRefExpr 0x9f312f0 <col:40> 'const _Predicate' lvalue ParmVar 0x9f31100 '__pred' 'const _Predicate &'))))

;
    template <typename _Arg, typename _Result> class pointer_to_unary_function : public unary_function<_Arg, _Result> {
        class pointer_to_unary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg);
    public:
    public:
        pointer_to_unary_function<_Arg, _Result>() (CompoundStmt 0x9f31c28 </usr/include/c++/4.6/bits/stl_function.h:429:35, col:37>)


        pointer_to_unary_function<_Arg, _Result>(_Result (*__x)(_Arg)) : _M_ptr((DeclRefExpr 0x9f31c38 </usr/include/c++/4.6/bits/stl_function.h:433:16> '_Result (*)(_Arg)' lvalue ParmVar 0x9f31a00 '__x' '_Result (*)(_Arg)')
) (CompoundStmt 0x9f31c90 </usr/include/c++/4.6/bits/stl_function.h:433:21, col:23>)


        _Result operator()(_Arg __x) const (CompoundStmt 0x9f31d50 </usr/include/c++/4.6/bits/stl_function.h:437:7, col:29>
  (ReturnStmt 0x9f31d40 <col:9, col:26>
    (CallExpr 0x9f31d20 <col:16, col:26> '<dependent type>'
      (MemberExpr 0x9f31ce4 <col:16> '_Result (*const)(_Arg)' lvalue ->_M_ptr 0x9f31890
        (CXXThisExpr 0x9f31cb8 <col:16> 'const pointer_to_unary_function<_Arg, _Result> *' this))
      (DeclRefExpr 0x9f31d04 <col:23> '_Arg' lvalue ParmVar 0x9f31b20 '__x' '_Arg'))))


    };
    template <typename _Arg, typename _Result> inline pointer_to_unary_function<_Arg, _Result> ptr_fun(_Result (*__x)(_Arg)) (CompoundStmt 0x9f32260 </usr/include/c++/4.6/bits/stl_function.h:444:5, col:61>
  (ReturnStmt 0x9f32250 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x9f32230 <col:14, col:58> 'pointer_to_unary_function<_Arg, _Result>'
      (DeclRefExpr 0x9f32218 <col:55> '_Result (*)(_Arg)' lvalue ParmVar 0x9f31fc0 '__x' '_Result (*)(_Arg)'))))

;
    template <typename _Arg1, typename _Arg2, typename _Result> class pointer_to_binary_function : public binary_function<_Arg1, _Arg2, _Result> {
        class pointer_to_binary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
    public:
        pointer_to_binary_function<_Arg1, _Arg2, _Result>() (CompoundStmt 0x9f33c18 </usr/include/c++/4.6/bits/stl_function.h:455:36, col:38>)


        pointer_to_binary_function<_Arg1, _Arg2, _Result>(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr((DeclRefExpr 0x9f33c28 </usr/include/c++/4.6/bits/stl_function.h:459:16> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x9f339b0 '__x' '_Result (*)(_Arg1, _Arg2)')
) (CompoundStmt 0x9f33c80 </usr/include/c++/4.6/bits/stl_function.h:459:21, col:23>)


        _Result operator()(_Arg1 __x, _Arg2 __y) const (CompoundStmt 0x9f33d60 </usr/include/c++/4.6/bits/stl_function.h:463:7, col:34>
  (ReturnStmt 0x9f33d50 <col:9, col:31>
    (CallExpr 0x9f33d28 <col:16, col:31> '<dependent type>'
      (MemberExpr 0x9f33cd4 <col:16> '_Result (*const)(_Arg1, _Arg2)' lvalue ->_M_ptr 0x9f33800
        (CXXThisExpr 0x9f33ca8 <col:16> 'const pointer_to_binary_function<_Arg1, _Arg2, _Result> *' this))
      (DeclRefExpr 0x9f33cf4 <col:23> '_Arg1' lvalue ParmVar 0x9f33ad0 '__x' '_Arg1')
      (DeclRefExpr 0x9f33d0c <col:28> '_Arg2' lvalue ParmVar 0x9f33b10 '__y' '_Arg2'))))


    };
    template <typename _Arg1, typename _Arg2, typename _Result> inline pointer_to_binary_function<_Arg1, _Arg2, _Result> ptr_fun(_Result (*__x)(_Arg1, _Arg2)) (CompoundStmt 0x9f343b8 </usr/include/c++/4.6/bits/stl_function.h:470:5, col:70>
  (ReturnStmt 0x9f343a8 <col:7, col:67>
    (CXXUnresolvedConstructExpr 0x9f34388 <col:14, col:67> 'pointer_to_binary_function<_Arg1, _Arg2, _Result>'
      (DeclRefExpr 0x9f34370 <col:64> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x9f340b0 '__x' '_Result (*)(_Arg1, _Arg2)'))))

;
    template <typename _Tp> struct _Identity : public unary_function<_Tp, _Tp> {
        struct _Identity;
        _Tp &operator()(_Tp &__x) const (CompoundStmt 0x9f349e8 </usr/include/c++/4.6/bits/stl_function.h:478:7, col:21>
  (ReturnStmt 0x9f349d8 <col:9, col:16>
    (DeclRefExpr 0x9f349c0 <col:16> '_Tp' lvalue ParmVar 0x9f34760 '__x' '_Tp &')))


        const _Tp &operator()(const _Tp &__x) const (CompoundStmt 0x9f34a28 </usr/include/c++/4.6/bits/stl_function.h:482:7, col:21>
  (ReturnStmt 0x9f34a18 <col:9, col:16>
    (DeclRefExpr 0x9f349fc <col:16> 'const _Tp' lvalue ParmVar 0x9f348a0 '__x' 'const _Tp &')))


    };
    template <typename _Pair> struct _Select1st : public unary_function<_Pair, typename _Pair::first_type> {
        struct _Select1st;
        typename _Pair::first_type &operator()(_Pair &__x) const (CompoundStmt 0x9f35250 </usr/include/c++/4.6/bits/stl_function.h:491:7, col:27>
  (ReturnStmt 0x9f35240 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9f35208 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9f351f0 <col:16> '_Pair' lvalue ParmVar 0x9f34ed0 '__x' '_Pair &'))))


        const typename _Pair::first_type &operator()(const _Pair &__x) const (CompoundStmt 0x9f36328 </usr/include/c++/4.6/bits/stl_function.h:495:7, col:27>
  (ReturnStmt 0x9f352b8 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9f35280 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9f35264 <col:16> 'const _Pair' lvalue ParmVar 0x9f35080 '__x' 'const _Pair &'))))


    };
    template <typename _Pair> struct _Select2nd : public unary_function<_Pair, typename _Pair::second_type> {
        struct _Select2nd;
        typename _Pair::second_type &operator()(_Pair &__x) const (CompoundStmt 0x9f36b50 </usr/include/c++/4.6/bits/stl_function.h:516:7, col:28>
  (ReturnStmt 0x9f36b40 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9f36b08 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9f36af0 <col:16> '_Pair' lvalue ParmVar 0x9f367d0 '__x' '_Pair &'))))


        const typename _Pair::second_type &operator()(const _Pair &__x) const (CompoundStmt 0x9f36bc8 </usr/include/c++/4.6/bits/stl_function.h:520:7, col:28>
  (ReturnStmt 0x9f36bb8 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x9f36b80 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x9f36b64 <col:16> 'const _Pair' lvalue ParmVar 0x9f36980 '__x' 'const _Pair &'))))


    };
    template <typename _Ret, typename _Tp> class mem_fun_t : public unary_function<_Tp *, _Ret> {
        class mem_fun_t;
    public:
    public:
        mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x9f37460 </usr/include/c++/4.6/bits/stl_function.h:547:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9f37170 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x9f374c0 </usr/include/c++/4.6/bits/stl_function.h:547:20, col:22>)


        _Ret operator()(_Tp *__p) const (CompoundStmt 0x9f375b8 </usr/include/c++/4.6/bits/stl_function.h:551:7, col:32>
  (ReturnStmt 0x9f375a8 <col:9, col:29>
    (CallExpr 0x9f37588 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x9f37570 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9f37558 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9f374d0 <col:17> '_Tp *' lvalue ParmVar 0x9f372a0 '__p' '_Tp *')
          (MemberExpr 0x9f37534 <col:23> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x9f37430
            (CXXThisExpr 0x9f37508 <col:23> 'const mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_t : public unary_function<const _Tp *, _Ret> {
        class const_mem_fun_t;
    public:
    public:
        const_mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x9f37e30 </usr/include/c++/4.6/bits/stl_function.h:565:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9f37b40 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x9f37e90 </usr/include/c++/4.6/bits/stl_function.h:565:20, col:22>)


        _Ret operator()(const _Tp *__p) const (CompoundStmt 0x9f37f88 </usr/include/c++/4.6/bits/stl_function.h:569:7, col:32>
  (ReturnStmt 0x9f37f78 <col:9, col:29>
    (CallExpr 0x9f37f58 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x9f37f40 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9f37f28 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9f37ea0 <col:17> 'const _Tp *' lvalue ParmVar 0x9f37c70 '__p' 'const _Tp *')
          (MemberExpr 0x9f37f04 <col:23> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x9f37e00
            (CXXThisExpr 0x9f37ed8 <col:23> 'const const_mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp> class mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class mem_fun_ref_t;
    public:
    public:
        mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x9f39e30 </usr/include/c++/4.6/bits/stl_function.h:583:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9f39b40 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x9f39e90 </usr/include/c++/4.6/bits/stl_function.h:583:20, col:22>)


        _Ret operator()(_Tp &__r) const (CompoundStmt 0x9f39f88 </usr/include/c++/4.6/bits/stl_function.h:587:7, col:31>
  (ReturnStmt 0x9f39f78 <col:9, col:28>
    (CallExpr 0x9f39f58 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x9f39f40 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9f39f28 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9f39ea0 <col:17> '_Tp' lvalue ParmVar 0x9f39c70 '__r' '_Tp &')
          (MemberExpr 0x9f39f04 <col:22> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x9f39e00
            (CXXThisExpr 0x9f39ed8 <col:22> 'const mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class const_mem_fun_ref_t;
    public:
    public:
        const_mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x9f3a770 </usr/include/c++/4.6/bits/stl_function.h:601:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9f3a480 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x9f3a7d0 </usr/include/c++/4.6/bits/stl_function.h:601:20, col:22>)


        _Ret operator()(const _Tp &__r) const (CompoundStmt 0x9f3a8c8 </usr/include/c++/4.6/bits/stl_function.h:605:7, col:31>
  (ReturnStmt 0x9f3a8b8 <col:9, col:28>
    (CallExpr 0x9f3a898 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x9f3a880 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9f3a868 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9f3a7e0 <col:17> 'const _Tp' lvalue ParmVar 0x9f3a5b0 '__r' 'const _Tp &')
          (MemberExpr 0x9f3a844 <col:22> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x9f3a740
            (CXXThisExpr 0x9f3a818 <col:22> 'const const_mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_t : public binary_function<_Tp *, _Arg, _Ret> {
        class mem_fun1_t;
    public:
    public:
        mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x9f3b2f0 </usr/include/c++/4.6/bits/stl_function.h:619:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9f3af80 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x9f3b350 </usr/include/c++/4.6/bits/stl_function.h:619:20, col:22>)


        _Ret operator()(_Tp *__p, _Arg __x) const (CompoundStmt 0x9f3b460 </usr/include/c++/4.6/bits/stl_function.h:623:7, col:35>
  (ReturnStmt 0x9f3b450 <col:9, col:32>
    (CallExpr 0x9f3b430 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x9f3b400 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9f3b3e8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9f3b360 <col:17> '_Tp *' lvalue ParmVar 0x9f3b0b0 '__p' '_Tp *')
          (MemberExpr 0x9f3b3c4 <col:23> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x9f3b2c0
            (CXXThisExpr 0x9f3b398 <col:23> 'const mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9f3b414 <col:29> '_Arg' lvalue ParmVar 0x9f3b0f0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_t : public binary_function<const _Tp *, _Arg, _Ret> {
        class const_mem_fun1_t;
    public:
    public:
        const_mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x9f3cde0 </usr/include/c++/4.6/bits/stl_function.h:637:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9f3ca70 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x9f3ce40 </usr/include/c++/4.6/bits/stl_function.h:637:20, col:22>)


        _Ret operator()(const _Tp *__p, _Arg __x) const (CompoundStmt 0x9f3cf50 </usr/include/c++/4.6/bits/stl_function.h:641:7, col:35>
  (ReturnStmt 0x9f3cf40 <col:9, col:32>
    (CallExpr 0x9f3cf20 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x9f3cef0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x9f3ced8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x9f3ce50 <col:17> 'const _Tp *' lvalue ParmVar 0x9f3cba0 '__p' 'const _Tp *')
          (MemberExpr 0x9f3ceb4 <col:23> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x9f3cdb0
            (CXXThisExpr 0x9f3ce88 <col:23> 'const const_mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9f3cf04 <col:29> '_Arg' lvalue ParmVar 0x9f3cbe0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class mem_fun1_ref_t;
    public:
    public:
        mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x9f3d920 </usr/include/c++/4.6/bits/stl_function.h:655:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9f3d5b0 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x9f3d980 </usr/include/c++/4.6/bits/stl_function.h:655:20, col:22>)


        _Ret operator()(_Tp &__r, _Arg __x) const (CompoundStmt 0x9f3da90 </usr/include/c++/4.6/bits/stl_function.h:659:7, col:34>
  (ReturnStmt 0x9f3da80 <col:9, col:31>
    (CallExpr 0x9f3da60 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x9f3da30 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9f3da18 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9f3d990 <col:17> '_Tp' lvalue ParmVar 0x9f3d6e0 '__r' '_Tp &')
          (MemberExpr 0x9f3d9f4 <col:22> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x9f3d8f0
            (CXXThisExpr 0x9f3d9c8 <col:22> 'const mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9f3da44 <col:28> '_Arg' lvalue ParmVar 0x9f3d720 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class const_mem_fun1_ref_t;
    public:
    public:
        const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x9f3e400 </usr/include/c++/4.6/bits/stl_function.h:673:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9f3e090 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x9f3e460 </usr/include/c++/4.6/bits/stl_function.h:673:20, col:22>)


        _Ret operator()(const _Tp &__r, _Arg __x) const (CompoundStmt 0x9f3e570 </usr/include/c++/4.6/bits/stl_function.h:677:7, col:34>
  (ReturnStmt 0x9f3e560 <col:9, col:31>
    (CallExpr 0x9f3e540 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x9f3e510 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x9f3e4f8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x9f3e470 <col:17> 'const _Tp' lvalue ParmVar 0x9f3e1c0 '__r' 'const _Tp &')
          (MemberExpr 0x9f3e4d4 <col:22> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x9f3e3d0
            (CXXThisExpr 0x9f3e4a8 <col:22> 'const const_mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x9f3e524 <col:28> '_Arg' lvalue ParmVar 0x9f3e200 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp> inline mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)()) (CompoundStmt 0x9f3f710 </usr/include/c++/4.6/bits/stl_function.h:688:5, col:41>
  (ReturnStmt 0x9f3f700 <col:7, col:38>
    (CXXUnresolvedConstructExpr 0x9f3f6e0 <col:14, col:38> 'mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x9f3f6c8 <col:35> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9f3e7d0 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)() const) (CompoundStmt 0x9f3fc10 </usr/include/c++/4.6/bits/stl_function.h:693:5, col:47>
  (ReturnStmt 0x9f3fc00 <col:7, col:44>
    (CXXUnresolvedConstructExpr 0x9f3fbe0 <col:14, col:44> 'const_mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x9f3fbc8 <col:41> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9f3f970 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp> inline mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)()) (CompoundStmt 0x9f40110 </usr/include/c++/4.6/bits/stl_function.h:698:5, col:45>
  (ReturnStmt 0x9f40100 <col:7, col:42>
    (CXXUnresolvedConstructExpr 0x9f400e0 <col:14, col:42> 'mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x9f400c8 <col:39> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x9f3fe70 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)() const) (CompoundStmt 0x9f40610 </usr/include/c++/4.6/bits/stl_function.h:703:5, col:51>
  (ReturnStmt 0x9f40600 <col:7, col:48>
    (CXXUnresolvedConstructExpr 0x9f405e0 <col:14, col:48> 'const_mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x9f405c8 <col:45> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x9f40370 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x9f40c58 </usr/include/c++/4.6/bits/stl_function.h:708:5, col:48>
  (ReturnStmt 0x9f40c48 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x9f40c28 <col:14, col:45> 'mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9f40c10 <col:42> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9f40950 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x9f41298 </usr/include/c++/4.6/bits/stl_function.h:713:5, col:54>
  (ReturnStmt 0x9f41288 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x9f41268 <col:14, col:51> 'const_mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9f41250 <col:48> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9f40f90 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x9f425d8 </usr/include/c++/4.6/bits/stl_function.h:718:5, col:52>
  (ReturnStmt 0x9f425c8 <col:7, col:49>
    (CXXUnresolvedConstructExpr 0x9f425a8 <col:14, col:49> 'mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9f42590 <col:46> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x9f422d0 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x9f42c18 </usr/include/c++/4.6/bits/stl_function.h:723:5, col:58>
  (ReturnStmt 0x9f42c08 <col:7, col:55>
    (CXXUnresolvedConstructExpr 0x9f42be8 <col:14, col:55> 'const_mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x9f42bd0 <col:52> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x9f42910 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
}
namespace std {
    template <typename _Operation> class binder1st : public unary_function<typename _Operation::second_argument_type, typename _Operation::result_type> {
        class binder1st;
    protected:
    protected:
        _Operation op;
        typename _Operation::first_argument_type value;
    public:
    public:
        binder1st<_Operation>(const _Operation &__x, const typename _Operation::first_argument_type &__y) : op((DeclRefExpr 0x9f437f4 </usr/include/c++/4.6/backward/binders.h:111:12> 'const _Operation' lvalue ParmVar 0x9f432f0 '__x' 'const _Operation &')
), value((DeclRefExpr 0x9f43848 </usr/include/c++/4.6/backward/binders.h:111:24> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x9f43380 '__y' 'const typename _Operation::first_argument_type &')
) (CompoundStmt 0x9f438a0 </usr/include/c++/4.6/backward/binders.h:111:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const (CompoundStmt 0x9f43998 </usr/include/c++/4.6/backward/binders.h:115:7, col:32>
  (ReturnStmt 0x9f43988 <col:9, col:29>
    (CallExpr 0x9f43960 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9f438f4 <col:16> 'const _Operation' lvalue ->op 0x9f431c0
        (CXXThisExpr 0x9f438c8 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x9f43928 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x9f43250
        (CXXThisExpr 0x9f43918 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x9f43948 <col:26> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x9f43520 '__x' 'const typename _Operation::second_argument_type &'))))


        typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const (CompoundStmt 0x9f43a60 </usr/include/c++/4.6/backward/binders.h:121:7, col:32>
  (ReturnStmt 0x9f43a50 <col:9, col:29>
    (CallExpr 0x9f43a28 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9f439c0 <col:16> 'const _Operation' lvalue ->op 0x9f431c0
        (CXXThisExpr 0x9f439b0 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x9f439f0 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x9f43250
        (CXXThisExpr 0x9f439e0 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x9f43a10 <col:26> 'typename _Operation::second_argument_type' lvalue ParmVar 0x9f436e0 '__x' 'typename _Operation::second_argument_type &'))))


    };
    template <typename _Operation, typename _Tp> inline binder1st<_Operation> bind1st(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x9f43fb0 </usr/include/c++/4.6/backward/binders.h:128:5, line:131:5>
  (DeclStmt 0x9f43e50 <line:129:7, col:66>
    0x9f43e20 "typedef typename _Operation::first_argument_type _Arg1_type")
  (ReturnStmt 0x9f43fa0 <line:130:7, col:57>
    (CXXUnresolvedConstructExpr 0x9f43f80 <col:14, col:57> 'binder1st<_Operation>'
      (DeclRefExpr 0x9f43f10 <col:36> 'const _Operation' lvalue ParmVar 0x9f43bf0 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x9f43f60 <col:42, col:56> '_Arg1_type':'typename _Operation::first_argument_type'
        (DeclRefExpr 0x9f43f48 <col:53> 'const _Tp' lvalue ParmVar 0x9f43c60 '__x' 'const _Tp &')))))

;
    template <typename _Operation> class binder2nd : public unary_function<typename _Operation::first_argument_type, typename _Operation::result_type> {
        class binder2nd;
    protected:
    protected:
        _Operation op;
        typename _Operation::second_argument_type value;
    public:
    public:
        binder2nd<_Operation>(const _Operation &__x, const typename _Operation::second_argument_type &__y) : op((DeclRefExpr 0x9f47784 </usr/include/c++/4.6/backward/binders.h:146:12> 'const _Operation' lvalue ParmVar 0x9f47280 '__x' 'const _Operation &')
), value((DeclRefExpr 0x9f477d8 </usr/include/c++/4.6/backward/binders.h:146:24> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x9f47310 '__y' 'const typename _Operation::second_argument_type &')
) (CompoundStmt 0x9f47830 </usr/include/c++/4.6/backward/binders.h:146:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const (CompoundStmt 0x9f47928 </usr/include/c++/4.6/backward/binders.h:150:7, col:32>
  (ReturnStmt 0x9f47918 <col:9, col:29>
    (CallExpr 0x9f478f0 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9f47884 <col:16> 'const _Operation' lvalue ->op 0x9f47150
        (CXXThisExpr 0x9f47858 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x9f478a4 <col:19> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x9f474b0 '__x' 'const typename _Operation::first_argument_type &')
      (MemberExpr 0x9f478d0 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x9f471e0
        (CXXThisExpr 0x9f478c0 <col:24> 'const binder2nd<_Operation> *' this)))))


        typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const (CompoundStmt 0x9f479f0 </usr/include/c++/4.6/backward/binders.h:156:7, col:32>
  (ReturnStmt 0x9f479e0 <col:9, col:29>
    (CallExpr 0x9f479b8 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x9f47950 <col:16> 'const _Operation' lvalue ->op 0x9f47150
        (CXXThisExpr 0x9f47940 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x9f47970 <col:19> 'typename _Operation::first_argument_type' lvalue ParmVar 0x9f47670 '__x' 'typename _Operation::first_argument_type &')
      (MemberExpr 0x9f47998 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x9f471e0
        (CXXThisExpr 0x9f47988 <col:24> 'const binder2nd<_Operation> *' this)))))


    };
    template <typename _Operation, typename _Tp> inline binder2nd<_Operation> bind2nd(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x9f47f40 </usr/include/c++/4.6/backward/binders.h:163:5, line:166:5>
  (DeclStmt 0x9f47de0 <line:164:7, col:67>
    0x9f47db0 "typedef typename _Operation::second_argument_type _Arg2_type")
  (ReturnStmt 0x9f47f30 <line:165:7, col:57>
    (CXXUnresolvedConstructExpr 0x9f47f10 <col:14, col:57> 'binder2nd<_Operation>'
      (DeclRefExpr 0x9f47ea0 <col:36> 'const _Operation' lvalue ParmVar 0x9f47b80 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x9f47ef0 <col:42, col:56> '_Arg2_type':'typename _Operation::second_argument_type'
        (DeclRefExpr 0x9f47ed8 <col:53> 'const _Tp' lvalue ParmVar 0x9f47bf0 '__x' 'const _Tp &')))))

;
}
struct sched_param {
    struct sched_param;
    int __sched_priority;
};
extern "C" {
    extern int clone(int (*__fn)(void *), void *__child_stack, int __flags, void *__arg, ...) throw();
    extern int unshare(int __flags) throw();
    extern int sched_getcpu() throw();
    extern int setns(int __fd, int __nstype) throw();
}
struct __sched_param {
    struct __sched_param;
    int __sched_priority;
};
typedef unsigned long __cpu_mask;
struct {
    __cpu_mask __bits[32];
};
typedef struct cpu_set_t cpu_set_t;
extern "C" {
    extern int __sched_cpucount(size_t __setsize, const cpu_set_t *__setp) throw();
    extern cpu_set_t *__sched_cpualloc(size_t __count) throw();
    extern void __sched_cpufree(cpu_set_t *__set) throw();
}
extern "C" {
    extern int sched_setparam(__pid_t __pid, const struct sched_param *__param) throw();
    extern int sched_getparam(__pid_t __pid, struct sched_param *__param) throw();
    extern int sched_setscheduler(__pid_t __pid, int __policy, const struct sched_param *__param) throw();
    extern int sched_getscheduler(__pid_t __pid) throw();
    extern int sched_yield() throw();
    extern int sched_get_priority_max(int __algorithm) throw();
    extern int sched_get_priority_min(int __algorithm) throw();
    extern int sched_rr_get_interval(__pid_t __pid, struct timespec *__t) throw();
    extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
}
extern "C" {
    struct timex {
        struct timex;
        unsigned int modes;
        long offset;
        long freq;
        long maxerror;
        long esterror;
        int status;
        long constant;
        long precision;
        long tolerance;
        struct timeval time;
        long tick;
        long ppsfreq;
        long jitter;
        int shift;
        long stabil;
        long jitcnt;
        long calcnt;
        long errcnt;
        long stbcnt;
        int tai;
        int : (IntegerLiteral 0x9f5b870 </usr/include/i386-linux-gnu/bits/timex.h:50:9> 'int' 32)
;
        int : (IntegerLiteral 0x9f5b8d0 </usr/include/i386-linux-gnu/bits/timex.h:50:19> 'int' 32)
;
        int : (IntegerLiteral 0x9f5b930 </usr/include/i386-linux-gnu/bits/timex.h:50:29> 'int' 32)
;
        int : (IntegerLiteral 0x9f5b990 </usr/include/i386-linux-gnu/bits/timex.h:50:39> 'int' 32)
;
        int : (IntegerLiteral 0x9f5b9f0 </usr/include/i386-linux-gnu/bits/timex.h:51:9> 'int' 32)
;
        int : (IntegerLiteral 0x9f5ba50 </usr/include/i386-linux-gnu/bits/timex.h:51:19> 'int' 32)
;
        int : (IntegerLiteral 0x9f5bab0 </usr/include/i386-linux-gnu/bits/timex.h:51:29> 'int' 32)
;
        int : (IntegerLiteral 0x9f5bb10 </usr/include/i386-linux-gnu/bits/timex.h:51:39> 'int' 32)
;
        int : (IntegerLiteral 0x9f5bb70 </usr/include/i386-linux-gnu/bits/timex.h:52:9> 'int' 32)
;
        int : (IntegerLiteral 0x9f5bbd0 </usr/include/i386-linux-gnu/bits/timex.h:52:19> 'int' 32)
;
        int : (IntegerLiteral 0x9f5bc30 </usr/include/i386-linux-gnu/bits/timex.h:52:29> 'int' 32)
;
    };
    extern "C" {
        extern int clock_adjtime(__clockid_t __clock_id, struct timex *__utx) throw();
    }
    struct tm {
        struct tm;
        int tm_sec;
        int tm_min;
        int tm_hour;
        int tm_mday;
        int tm_mon;
        int tm_year;
        int tm_wday;
        int tm_yday;
        int tm_isdst;
        long tm_gmtoff;
        const char *tm_zone;
    };
    struct itimerspec {
        struct itimerspec;
        struct timespec it_interval;
        struct timespec it_value;
    };
    struct sigevent;
    extern clock_t clock() throw();
    extern time_t time(time_t *__timer) throw();
    extern double difftime(time_t __time1, time_t __time0) throw();
    extern time_t mktime(struct tm *__tp) throw();
    extern size_t strftime(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp) throw();
    extern char *strptime(const char *restrict __s, const char *restrict __fmt, struct tm *__tp) throw();
    extern size_t strftime_l(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
    extern char *strptime_l(const char *restrict __s, const char *restrict __fmt, struct tm *__tp, __locale_t __loc) throw();
    extern struct tm *gmtime(const time_t *__timer) throw();
    extern struct tm *localtime(const time_t *__timer) throw();
    extern struct tm *gmtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern struct tm *localtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern char *asctime(const struct tm *__tp) throw();
    extern char *ctime(const time_t *__timer) throw();
    extern char *asctime_r(const struct tm *restrict __tp, char *restrict __buf) throw();
    extern char *ctime_r(const time_t *restrict __timer, char *restrict __buf) throw();
    extern char *__tzname[2];
    extern int __daylight;
    extern long __timezone;
    extern char *tzname[2];
    extern void tzset() throw();
    extern int daylight;
    extern long timezone;
    extern int stime(const time_t *__when) throw();
    extern time_t timegm(struct tm *__tp) throw();
    extern time_t timelocal(struct tm *__tp) throw();
    extern int dysize(int __year) throw();
    extern int nanosleep(const struct timespec *__requested_time, struct timespec *__remaining);
    extern int clock_getres(clockid_t __clock_id, struct timespec *__res) throw();
    extern int clock_gettime(clockid_t __clock_id, struct timespec *__tp) throw();
    extern int clock_settime(clockid_t __clock_id, const struct timespec *__tp) throw();
    extern int clock_nanosleep(clockid_t __clock_id, int __flags, const struct timespec *__req, struct timespec *__rem);
    extern int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id) throw();
    extern int timer_create(clockid_t __clock_id, struct sigevent *restrict __evp, timer_t *restrict __timerid) throw();
    extern int timer_delete(timer_t __timerid) throw();
    extern int timer_settime(timer_t __timerid, int __flags, const struct itimerspec *restrict __value, struct itimerspec *restrict __ovalue) throw();
    extern int timer_gettime(timer_t __timerid, struct itimerspec *__value) throw();
    extern int timer_getoverrun(timer_t __timerid) throw();
    extern int getdate_err;
    extern struct tm *getdate(const char *__string);
    extern int getdate_r(const char *restrict __string, struct tm *restrict __resbufp);
}
typedef int __jmp_buf[6];
enum  {
    PTHREAD_CREATE_JOINABLE,
    PTHREAD_CREATE_DETACHED
};
enum  {
    PTHREAD_MUTEX_TIMED_NP,
    PTHREAD_MUTEX_RECURSIVE_NP,
    PTHREAD_MUTEX_ERRORCHECK_NP,
    PTHREAD_MUTEX_ADAPTIVE_NP,
    PTHREAD_MUTEX_NORMAL = (ImplicitCastExpr 0x9f69f88 </usr/include/pthread.h:52:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f69df4 <col:26> 'int' EnumConstant 0x9f69d00 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_RECURSIVE = (ImplicitCastExpr 0x9f69f98 </usr/include/pthread.h:53:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f69e44 <col:29> 'int' EnumConstant 0x9f69d40 'PTHREAD_MUTEX_RECURSIVE_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_ERRORCHECK = (ImplicitCastExpr 0x9f69fa8 </usr/include/pthread.h:54:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f69e94 <col:30> 'int' EnumConstant 0x9f69d80 'PTHREAD_MUTEX_ERRORCHECK_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_DEFAULT = (ImplicitCastExpr 0x9f69fb8 </usr/include/pthread.h:55:27> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f69ee4 <col:27> 'int' EnumConstant 0x9f69e10 'PTHREAD_MUTEX_NORMAL' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_FAST_NP = (ImplicitCastExpr 0x9f69fc8 </usr/include/pthread.h:59:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f69f34 <col:29> 'int' EnumConstant 0x9f69d00 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))

};
enum  {
    PTHREAD_MUTEX_STALLED,
    PTHREAD_MUTEX_STALLED_NP = (ImplicitCastExpr 0x9f6a158 </usr/include/pthread.h:69:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f6a074 <col:30> 'int' EnumConstant 0x9f6a040 'PTHREAD_MUTEX_STALLED' 'enum <anonymous at /usr/include/pthread.h:66:1>'))
,
    PTHREAD_MUTEX_ROBUST,
    PTHREAD_MUTEX_ROBUST_NP = (ImplicitCastExpr 0x9f6a168 </usr/include/pthread.h:71:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f6a104 <col:29> 'int' EnumConstant 0x9f6a0d0 'PTHREAD_MUTEX_ROBUST' 'enum <anonymous at /usr/include/pthread.h:66:1>'))

};
enum  {
    PTHREAD_PRIO_NONE,
    PTHREAD_PRIO_INHERIT,
    PTHREAD_PRIO_PROTECT
};
enum  {
    PTHREAD_RWLOCK_PREFER_READER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
    PTHREAD_RWLOCK_DEFAULT_NP = (ImplicitCastExpr 0x9f6a408 </usr/include/pthread.h:120:31> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x9f6a3b4 <col:31> 'int' EnumConstant 0x9f6a300 'PTHREAD_RWLOCK_PREFER_READER_NP' 'enum <anonymous at /usr/include/pthread.h:115:1>'))

};
enum  {
    PTHREAD_INHERIT_SCHED,
    PTHREAD_EXPLICIT_SCHED
};
enum  {
    PTHREAD_SCOPE_SYSTEM,
    PTHREAD_SCOPE_PROCESS
};
enum  {
    PTHREAD_PROCESS_PRIVATE,
    PTHREAD_PROCESS_SHARED
};
struct _pthread_cleanup_buffer {
    struct _pthread_cleanup_buffer;
    void (*__routine)(void *);
    void *__arg;
    int __canceltype;
    struct _pthread_cleanup_buffer *__prev;
};
enum  {
    PTHREAD_CANCEL_ENABLE,
    PTHREAD_CANCEL_DISABLE
};
enum  {
    PTHREAD_CANCEL_DEFERRED,
    PTHREAD_CANCEL_ASYNCHRONOUS
};
extern "C" {
    extern int pthread_create(pthread_t *restrict __newthread, const pthread_attr_t *restrict __attr, void *(*__start_routine)(void *), void *restrict __arg) throw();
    extern void pthread_exit(void *__retval);
    extern int pthread_join(pthread_t __th, void **__thread_return);
    extern int pthread_tryjoin_np(pthread_t __th, void **__thread_return) throw();
    extern int pthread_timedjoin_np(pthread_t __th, void **__thread_return, const struct timespec *__abstime);
    extern int pthread_detach(pthread_t __th) throw();
    extern pthread_t pthread_self() throw();
    extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw();
    extern int pthread_attr_init(pthread_attr_t *__attr) throw();
    extern int pthread_attr_destroy(pthread_attr_t *__attr) throw();
    extern int pthread_attr_getdetachstate(const pthread_attr_t *__attr, int *__detachstate) throw();
    extern int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) throw();
    extern int pthread_attr_getguardsize(const pthread_attr_t *__attr, size_t *__guardsize) throw();
    extern int pthread_attr_setguardsize(pthread_attr_t *__attr, size_t __guardsize) throw();
    extern int pthread_attr_getschedparam(const pthread_attr_t *restrict __attr, struct sched_param *restrict __param) throw();
    extern int pthread_attr_setschedparam(pthread_attr_t *restrict __attr, const struct sched_param *restrict __param) throw();
    extern int pthread_attr_getschedpolicy(const pthread_attr_t *restrict __attr, int *restrict __policy) throw();
    extern int pthread_attr_setschedpolicy(pthread_attr_t *__attr, int __policy) throw();
    extern int pthread_attr_getinheritsched(const pthread_attr_t *restrict __attr, int *restrict __inherit) throw();
    extern int pthread_attr_setinheritsched(pthread_attr_t *__attr, int __inherit) throw();
    extern int pthread_attr_getscope(const pthread_attr_t *restrict __attr, int *restrict __scope) throw();
    extern int pthread_attr_setscope(pthread_attr_t *__attr, int __scope) throw();
    extern int pthread_attr_getstackaddr(const pthread_attr_t *restrict __attr, void **restrict __stackaddr) throw();
    extern int pthread_attr_setstackaddr(pthread_attr_t *__attr, void *__stackaddr) throw();
    extern int pthread_attr_getstacksize(const pthread_attr_t *restrict __attr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstacksize(pthread_attr_t *__attr, size_t __stacksize) throw();
    extern int pthread_attr_getstack(const pthread_attr_t *restrict __attr, void **restrict __stackaddr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstack(pthread_attr_t *__attr, void *__stackaddr, size_t __stacksize) throw();
    extern int pthread_attr_setaffinity_np(pthread_attr_t *__attr, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_attr_getaffinity_np(const pthread_attr_t *__attr, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_getattr_np(pthread_t __th, pthread_attr_t *__attr) throw();
    extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const struct sched_param *__param) throw();
    extern int pthread_getschedparam(pthread_t __target_thread, int *restrict __policy, struct sched_param *restrict __param) throw();
    extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
    extern int pthread_getname_np(pthread_t __target_thread, char *__buf, size_t __buflen) throw();
    extern int pthread_setname_np(pthread_t __target_thread, const char *__name) throw();
    extern int pthread_getconcurrency() throw();
    extern int pthread_setconcurrency(int __level) throw();
    extern int pthread_yield() throw();
    extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_once(pthread_once_t *__once_control, void (*__init_routine)());
    extern int pthread_setcancelstate(int __state, int *__oldstate);
    extern int pthread_setcanceltype(int __type, int *__oldtype);
    extern int pthread_cancel(pthread_t __th);
    extern void pthread_testcancel();
    struct {
        struct {
            __jmp_buf __cancel_jmp_buf;
            int __mask_was_saved;
        };
        struct <anonymous struct at /usr/include/pthread.h:509:3> __cancel_jmp_buf[1];
        void *__pad[4];
    };
    typedef struct __pthread_unwind_buf_t __pthread_unwind_buf_t;
    struct __pthread_cleanup_frame {
        struct __pthread_cleanup_frame;
        void (*__cancel_routine)(void *);
        void *__cancel_arg;
        int __do_it;
        int __cancel_type;
    };
    extern void __pthread_register_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_register_cancel_defer(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel_restore(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unwind_next(__pthread_unwind_buf_t *__buf);
    struct __jmp_buf_tag;
    extern int __sigsetjmp(struct __jmp_buf_tag *__env, int __savemask) throw() __attribute((returns_twice));
    extern int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr) throw();
    extern int pthread_mutex_destroy(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_trylock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_lock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_timedlock(pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime) throw();
    extern int pthread_mutex_unlock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict __mutex, int *restrict __prioceiling) throw();
    extern int pthread_mutex_setprioceiling(pthread_mutex_t *restrict __mutex, int __prioceiling, int *restrict __old_ceiling) throw();
    extern int pthread_mutex_consistent(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_consistent_np(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutexattr_init(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_destroy(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *__attr, int __pshared) throw();
    extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict __attr, int *restrict __kind) throw();
    extern int pthread_mutexattr_settype(pthread_mutexattr_t *__attr, int __kind) throw();
    extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict __attr, int *restrict __protocol) throw();
    extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t *__attr, int __protocol) throw();
    extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *restrict __attr, int *restrict __prioceiling) throw();
    extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *__attr, int __prioceiling) throw();
    extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_setrobust(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_rwlock_init(pthread_rwlock_t *restrict __rwlock, const pthread_rwlockattr_t *restrict __attr) throw();
    extern int pthread_rwlock_destroy(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_trywrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_unlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlockattr_init(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *__attr, int __pshared) throw();
    extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *restrict __attr, int *restrict __pref) throw();
    extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *__attr, int __pref) throw();
    extern int pthread_cond_init(pthread_cond_t *restrict __cond, const pthread_condattr_t *restrict __cond_attr) throw();
    extern int pthread_cond_destroy(pthread_cond_t *__cond) throw();
    extern int pthread_cond_signal(pthread_cond_t *__cond) throw();
    extern int pthread_cond_broadcast(pthread_cond_t *__cond) throw();
    extern int pthread_cond_wait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex);
    extern int pthread_cond_timedwait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime);
    extern int pthread_condattr_init(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_destroy(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_getpshared(const pthread_condattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_condattr_setpshared(pthread_condattr_t *__attr, int __pshared) throw();
    extern int pthread_condattr_getclock(const pthread_condattr_t *restrict __attr, __clockid_t *restrict __clock_id) throw();
    extern int pthread_condattr_setclock(pthread_condattr_t *__attr, __clockid_t __clock_id) throw();
    extern int pthread_spin_init(pthread_spinlock_t *__lock, int __pshared) throw();
    extern int pthread_spin_destroy(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_lock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_trylock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_unlock(pthread_spinlock_t *__lock) throw();
    extern int pthread_barrier_init(pthread_barrier_t *restrict __barrier, const pthread_barrierattr_t *restrict __attr, unsigned int __count) throw();
    extern int pthread_barrier_destroy(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrier_wait(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrierattr_init(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_destroy(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *__attr, int __pshared) throw();
    extern int pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *)) throw();
    extern int pthread_key_delete(pthread_key_t __key) throw();
    extern void *pthread_getspecific(pthread_key_t __key) throw();
    extern int pthread_setspecific(pthread_key_t __key, const void *__pointer) throw();
    extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t *__clock_id) throw();
    extern int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)()) throw();
}
typedef pthread_t __gthread_t;
typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
typedef pthread_cond_t __gthread_cond_t;
typedef struct timespec __gthread_time_t;
static typeof (pthread_once) __gthrw_pthread_once;
static typeof (pthread_getspecific) __gthrw_pthread_getspecific;
static typeof (pthread_setspecific) __gthrw_pthread_setspecific;
static typeof (pthread_create) __gthrw_pthread_create;
static typeof (pthread_join) __gthrw_pthread_join;
static typeof (pthread_equal) __gthrw_pthread_equal;
static typeof (pthread_self) __gthrw_pthread_self;
static typeof (pthread_detach) __gthrw_pthread_detach;
static typeof (pthread_cancel) __gthrw_pthread_cancel;
static typeof (sched_yield) __gthrw_sched_yield;
static typeof (pthread_mutex_lock) __gthrw_pthread_mutex_lock;
static typeof (pthread_mutex_trylock) __gthrw_pthread_mutex_trylock;
static typeof (pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock;
static typeof (pthread_mutex_unlock) __gthrw_pthread_mutex_unlock;
static typeof (pthread_mutex_init) __gthrw_pthread_mutex_init;
static typeof (pthread_mutex_destroy) __gthrw_pthread_mutex_destroy;
static typeof (pthread_cond_broadcast) __gthrw_pthread_cond_broadcast;
static typeof (pthread_cond_signal) __gthrw_pthread_cond_signal;
static typeof (pthread_cond_wait) __gthrw_pthread_cond_wait;
static typeof (pthread_cond_timedwait) __gthrw_pthread_cond_timedwait;
static typeof (pthread_cond_destroy) __gthrw_pthread_cond_destroy;
static typeof (pthread_key_create) __gthrw_pthread_key_create;
static typeof (pthread_key_delete) __gthrw_pthread_key_delete;
static typeof (pthread_mutexattr_init) __gthrw_pthread_mutexattr_init;
static typeof (pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype;
static typeof (pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy;
static inline int __gthread_active_p() (CompoundStmt 0x9dfe258 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:241:1, line:253:1>
  (DeclStmt 0x9dfe1c0 <line:242:3, line:251:13>
    0x9dfe100 "static void *const __gthread_active_ptr =
      (UnaryOperator 0x9dfe1a8 <line:243:7, <scratch space>:97:1> 'void *' prefix '__extension__'
        (CStyleCastExpr 0x9dfe190 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:21, <scratch space>:97:1> 'void *' <BitCast>
          (UnaryOperator 0x9dfe168 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:30, <scratch space>:97:1> 'typeof (pthread_cancel) *' prefix '&'
            (DeclRefExpr 0x9dfe134 <col:1> 'typeof (pthread_cancel)':'int (pthread_t)' lvalue Function 0x9f82110 '__gthrw_pthread_cancel' 'typeof (pthread_cancel)':'int (pthread_t)'))))")
  (ReturnStmt 0x9dfe248 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:252:3, col:34>
    (ImplicitCastExpr 0x9dfe238 <col:10, col:34> 'int' <IntegralCast>
      (BinaryOperator 0x9dfe220 <col:10, col:34> '_Bool' '!='
        (ImplicitCastExpr 0x9dfe200 <col:10> 'void *' <LValueToRValue>
          (DeclRefExpr 0x9dfe1d0 <col:10> 'void *const' lvalue Var 0x9dfe100 '__gthread_active_ptr' 'void *const'))
        (ImplicitCastExpr 0x9dfe210 <col:34> 'void *' <NullToPointer>
          (IntegerLiteral 0x9dfe1e8 <col:34> 'int' 0))))))


static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args) (CompoundStmt 0x9dfe658 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:662:1, line:664:1>
  (ReturnStmt 0x9dfe648 <line:663:3, col:68>
    (CallExpr 0x9dfe5d8 <<scratch space>:98:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:68> 'int'
      (ImplicitCastExpr 0x9dfe5c8 <<scratch space>:98:1> 'typeof (pthread_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dfe56c <col:1> 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()' lvalue Function 0x9f817f0 '__gthrw_pthread_create' 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()'))
      (ImplicitCastExpr 0x9dfe608 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:36> '__gthread_t *' <LValueToRValue>
        (DeclRefExpr 0x9dfe514 <col:36> '__gthread_t *' lvalue ParmVar 0x9dfe2b0 '__threadid' '__gthread_t *'))
      (ImplicitCastExpr 0x9dfe618 </usr/include/clang/3.0/include/stddef.h:47:14> 'const pthread_attr_t *' <NullToPointer>
        (GNUNullExpr 0x9dfe530 <col:14> 'int'))
      (ImplicitCastExpr 0x9dfe628 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:54> 'void *(*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x9dfe53c <col:54> 'void *(*)(void *)' lvalue ParmVar 0x9dfe360 '__func' 'void *(*)(void *)'))
      (ImplicitCastExpr 0x9dfe638 <col:62> 'void *' <LValueToRValue>
        (DeclRefExpr 0x9dfe554 <col:62> 'void *' lvalue ParmVar 0x9dfe3b0 '__args' 'void *')))))


static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr) (CompoundStmt 0x9dfe8e0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:668:1, line:670:1>
  (ReturnStmt 0x9dfe8d0 <line:669:3, col:57>
    (CallExpr 0x9dfe888 <<scratch space>:99:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:57> 'int'
      (ImplicitCastExpr 0x9dfe878 <<scratch space>:99:1> 'typeof (pthread_join) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dfe81c <col:1> 'typeof (pthread_join)':'int (pthread_t, void **)' lvalue Function 0x9f81a90 '__gthrw_pthread_join' 'typeof (pthread_join)':'int (pthread_t, void **)'))
      (ImplicitCastExpr 0x9dfe8b0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:34> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9dfe7ec <col:34> '__gthread_t':'unsigned long' lvalue ParmVar 0x9dfe680 '__threadid' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x9dfe8c0 <col:46> 'void **' <LValueToRValue>
        (DeclRefExpr 0x9dfe804 <col:46> 'void **' lvalue ParmVar 0x9dfe6d0 '__value_ptr' 'void **')))))


static inline int __gthread_detach(__gthread_t __threadid) (CompoundStmt 0x9dfeab8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:674:1, line:676:1>
  (ReturnStmt 0x9dfeaa8 <line:675:3, col:46>
    (CallExpr 0x9dfea78 <<scratch space>:100:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:46> 'int'
      (ImplicitCastExpr 0x9dfea68 <<scratch space>:100:1> 'typeof (pthread_detach) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dfea34 <col:1> 'typeof (pthread_detach)':'int (pthread_t) throw()' lvalue Function 0x9f81f80 '__gthrw_pthread_detach' 'typeof (pthread_detach)':'int (pthread_t) throw()'))
      (ImplicitCastExpr 0x9dfea98 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:36> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9dfea1c <col:36> '__gthread_t':'unsigned long' lvalue ParmVar 0x9dfe900 '__threadid' '__gthread_t':'unsigned long')))))


static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2) (CompoundStmt 0x9dfed30 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:680:1, line:682:1>
  (ReturnStmt 0x9dfed20 <line:681:3, col:45>
    (CallExpr 0x9dfecd8 <<scratch space>:101:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:45> 'int'
      (ImplicitCastExpr 0x9dfecc8 <<scratch space>:101:1> 'typeof (pthread_equal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dfec6c <col:1> 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()' lvalue Function 0x9f81c70 '__gthrw_pthread_equal' 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()'))
      (ImplicitCastExpr 0x9dfed00 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:35> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9dfec3c <col:35> '__gthread_t':'unsigned long' lvalue ParmVar 0x9dfeae0 '__t1' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x9dfed10 <col:41> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x9dfec54 <col:41> '__gthread_t':'unsigned long' lvalue ParmVar 0x9dfeb20 '__t2' '__gthread_t':'unsigned long')))))


static inline __gthread_t __gthread_self() (CompoundStmt 0x9dfeee8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:686:1, line:688:1>
  (ReturnStmt 0x9dfeed8 <line:687:3, col:34>
    (CallExpr 0x9dfeeb8 <<scratch space>:102:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:687:34> 'pthread_t':'unsigned long'
      (ImplicitCastExpr 0x9dfeea8 <<scratch space>:102:1> 'typeof (pthread_self) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dfee54 <col:1> 'typeof (pthread_self)':'pthread_t (void) throw()' lvalue Function 0x9f81e40 '__gthrw_pthread_self' 'typeof (pthread_self)':'pthread_t (void) throw()')))))


static inline int __gthread_yield() (CompoundStmt 0x9dff068 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:692:1, line:694:1>
  (ReturnStmt 0x9dff058 <line:693:3, col:33>
    (CallExpr 0x9dff038 <<scratch space>:103:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:693:33> 'int'
      (ImplicitCastExpr 0x9dff028 <<scratch space>:103:1> 'typeof (sched_yield) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9dfeff4 <col:1> 'typeof (sched_yield)':'int (void) throw()' lvalue Function 0x9f822e0 '__gthrw_sched_yield' 'typeof (sched_yield)':'int (void) throw()')))))


static inline int __gthread_once(__gthread_once_t *__once, void (*__func)()) (CompoundStmt 0x9dff460 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:698:1, line:703:1>
  (IfStmt 0x9dff440 <line:699:3, line:702:13>
    <<<NULL>>>
    (ImplicitCastExpr 0x9dff2c8 <line:699:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9dff2a8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9dff298 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dff27c <col:7> 'int (void)' lvalue Function 0x9dfe090 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9dff3f0 <line:700:5, col:50>
      (CallExpr 0x9dff3a8 <<scratch space>:104:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:50> 'int'
        (ImplicitCastExpr 0x9dff398 <<scratch space>:104:1> 'typeof (pthread_once) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9dff33c <col:1> 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))' lvalue Function 0x9f7f1e0 '__gthrw_pthread_once' 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))'))
        (ImplicitCastExpr 0x9dff3d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:36> '__gthread_once_t *' <LValueToRValue>
          (DeclRefExpr 0x9dff30c <col:36> '__gthread_once_t *' lvalue ParmVar 0x9dff0c0 '__once' '__gthread_once_t *'))
        (ImplicitCastExpr 0x9dff3e0 <col:44> 'void (*)(void)' <LValueToRValue>
          (DeclRefExpr 0x9dff324 <col:44> 'void (*)(void)' lvalue ParmVar 0x9dff160 '__func' 'void (*)(void)'))))
    (ReturnStmt 0x9dff430 <line:702:5, col:13>
      (UnaryOperator 0x9dff418 <col:12, col:13> 'int' prefix '-'
        (IntegerLiteral 0x9dff400 <col:13> 'int' 1)))))


static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *)) (CompoundStmt 0x9e005e0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:707:1, line:709:1>
  (ReturnStmt 0x9e005d0 <line:708:3, col:53>
    (CallExpr 0x9e00588 <<scratch space>:105:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:53> 'int'
      (ImplicitCastExpr 0x9e00578 <<scratch space>:105:1> 'typeof (pthread_key_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e0051c <col:1> 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' lvalue Function 0x9dfd780 '__gthrw_pthread_key_create' 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()'))
      (ImplicitCastExpr 0x9e005b0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:40> '__gthread_key_t *' <LValueToRValue>
        (DeclRefExpr 0x9e004ec <col:40> '__gthread_key_t *' lvalue ParmVar 0x9dff4c0 '__key' '__gthread_key_t *'))
      (ImplicitCastExpr 0x9e005c0 <col:47> 'void (*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x9e00504 <col:47> 'void (*)(void *)' lvalue ParmVar 0x9e003d0 '__dtor' 'void (*)(void *)')))))


static inline int __gthread_key_delete(__gthread_key_t __key) (CompoundStmt 0x9e007b8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:713:1, line:715:1>
  (ReturnStmt 0x9e007a8 <line:714:3, col:45>
    (CallExpr 0x9e00778 <<scratch space>:106:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:45> 'int'
      (ImplicitCastExpr 0x9e00768 <<scratch space>:106:1> 'typeof (pthread_key_delete) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e00734 <col:1> 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()' lvalue Function 0x9dfd980 '__gthrw_pthread_key_delete' 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()'))
      (ImplicitCastExpr 0x9e00798 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:40> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9e0071c <col:40> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9e00600 '__key' '__gthread_key_t':'unsigned int')))))


static inline void *__gthread_getspecific(__gthread_key_t __key) (CompoundStmt 0x9e00998 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:719:1, line:721:1>
  (ReturnStmt 0x9e00988 <line:720:3, col:46>
    (CallExpr 0x9e00958 <<scratch space>:107:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:46> 'void *'
      (ImplicitCastExpr 0x9e00948 <<scratch space>:107:1> 'typeof (pthread_getspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e00914 <col:1> 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()' lvalue Function 0x9f7f3f0 '__gthrw_pthread_getspecific' 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()'))
      (ImplicitCastExpr 0x9e00978 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9e008fc <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9e007e0 '__key' '__gthread_key_t':'unsigned int')))))


static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr) (CompoundStmt 0x9e00c20 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:725:1, line:727:1>
  (ReturnStmt 0x9e00c10 <line:726:3, col:53>
    (CallExpr 0x9e00bc8 <<scratch space>:108:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:53> 'int'
      (ImplicitCastExpr 0x9e00bb8 <<scratch space>:108:1> 'typeof (pthread_setspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e00b5c <col:1> 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()' lvalue Function 0x9f7f590 '__gthrw_pthread_setspecific' 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()'))
      (ImplicitCastExpr 0x9e00bf0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9e00b2c <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x9e009c0 '__key' '__gthread_key_t':'unsigned int'))
      (ImplicitCastExpr 0x9e00c00 <col:48> 'const void *' <LValueToRValue>
        (DeclRefExpr 0x9e00b44 <col:48> 'const void *' lvalue ParmVar 0x9e00a10 '__ptr' 'const void *')))))


static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex) (CompoundStmt 0x9e00f30 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:731:1, line:736:1>
  (IfStmt 0x9e00f10 <line:732:3, line:735:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e00de8 <line:732:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9e00dc8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9e00db8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e00d9c <col:7> 'int (void)' lvalue Function 0x9dfe090 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9e00ed8 <line:733:5, col:52>
      (CallExpr 0x9e00ea8 <<scratch space>:109:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:52> 'int'
        (ImplicitCastExpr 0x9e00e98 <<scratch space>:109:1> 'typeof (pthread_mutex_destroy) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e00e44 <col:1> 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9f82de0 '__gthrw_pthread_mutex_destroy' 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9e00ec8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9e00e2c <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x9e00c80 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9e00f00 <line:735:5, col:12>
      (IntegerLiteral 0x9e00ee8 <col:12> 'int' 0))))


static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9e011d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:740:1, line:745:1>
  (IfStmt 0x9e011b0 <line:741:3, line:744:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e010a8 <line:741:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9e01088 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9e01078 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e0105c <col:7> 'int (void)' lvalue Function 0x9dfe090 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9e01178 <line:742:5, col:49>
      (CallExpr 0x9e01148 <<scratch space>:110:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:49> 'int'
        (ImplicitCastExpr 0x9e01138 <<scratch space>:110:1> 'typeof (pthread_mutex_lock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e01104 <col:1> 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9f82460 '__gthrw_pthread_mutex_lock' 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9e01168 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:42> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9e010ec <col:42> '__gthread_mutex_t *' lvalue ParmVar 0x9e00f60 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9e011a0 <line:744:5, col:12>
      (IntegerLiteral 0x9e01188 <col:12> 'int' 0))))


static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9e01470 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:749:1, line:754:1>
  (IfStmt 0x9e01450 <line:750:3, line:753:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e01348 <line:750:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9e01328 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9e01318 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e012fc <col:7> 'int (void)' lvalue Function 0x9dfe090 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9e01418 <line:751:5, col:52>
      (CallExpr 0x9e013e8 <<scratch space>:111:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:52> 'int'
        (ImplicitCastExpr 0x9e013d8 <<scratch space>:111:1> 'typeof (pthread_mutex_trylock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e013a4 <col:1> 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9f82650 '__gthrw_pthread_mutex_trylock' 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9e01408 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9e0138c <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x9e01200 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9e01440 <line:753:5, col:12>
      (IntegerLiteral 0x9e01428 <col:12> 'int' 0))))


static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9e01808 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:761:1, line:766:1>
  (IfStmt 0x9e017e8 <line:762:3, line:765:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e01688 <line:762:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9e01668 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9e01658 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e0163c <col:7> 'int (void)' lvalue Function 0x9dfe090 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9e017b0 <line:763:5, col:69>
      (CallExpr 0x9e01768 <<scratch space>:112:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:69> 'int'
        (ImplicitCastExpr 0x9e01758 <<scratch space>:112:1> 'typeof (pthread_mutex_timedlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e016fc <col:1> 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()' lvalue Function 0x9f82820 '__gthrw_pthread_mutex_timedlock' 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()'))
        (ImplicitCastExpr 0x9e01790 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:47> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9e016cc <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x9e014a0 '__mutex' '__gthread_mutex_t *'))
        (ImplicitCastExpr 0x9e017a0 <col:56> 'const __gthread_time_t *' <LValueToRValue>
          (DeclRefExpr 0x9e016e4 <col:56> 'const __gthread_time_t *' lvalue ParmVar 0x9e01520 '__abs_timeout' 'const __gthread_time_t *'))))
    (ReturnStmt 0x9e017d8 <line:765:5, col:12>
      (IntegerLiteral 0x9e017c0 <col:12> 'int' 0))))


static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex) (CompoundStmt 0x9e01aa0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:772:1, line:777:1>
  (IfStmt 0x9e01a80 <line:773:3, line:776:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9e01978 <line:773:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9e01958 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x9e01948 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e0192c <col:7> 'int (void)' lvalue Function 0x9dfe090 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9e01a48 <line:774:5, col:51>
      (CallExpr 0x9e01a18 <<scratch space>:113:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:51> 'int'
        (ImplicitCastExpr 0x9e01a08 <<scratch space>:113:1> 'typeof (pthread_mutex_unlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x9e019d4 <col:1> 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x9f82a50 '__gthrw_pthread_mutex_unlock' 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x9e01a38 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:44> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x9e019bc <col:44> '__gthread_mutex_t *' lvalue ParmVar 0x9e01830 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x9e01a70 <line:776:5, col:12>
      (IntegerLiteral 0x9e01a58 <col:12> 'int' 0))))


static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9e01cb8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:804:1, line:806:1>
  (ReturnStmt 0x9e01ca8 <line:805:3, col:39>
    (CallExpr 0x9e01c78 <col:10, col:39> 'int'
      (ImplicitCastExpr 0x9e01c68 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e01c34 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9e00fc0 '__gthread_mutex_lock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9e01c98 <col:32> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9e01c1c <col:32> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9e01b00 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9e01e60 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:810:1, line:812:1>
  (ReturnStmt 0x9e01e50 <line:811:3, col:42>
    (CallExpr 0x9e01e20 <col:10, col:42> 'int'
      (ImplicitCastExpr 0x9e01e10 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e01df4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9e01260 '__gthread_mutex_trylock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9e01e40 <col:35> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9e01ddc <col:35> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9e01ce0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9e020d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:819:1, line:821:1>
  (ReturnStmt 0x9e020c0 <line:820:3, col:59>
    (CallExpr 0x9e02078 <col:10, col:59> 'int'
      (ImplicitCastExpr 0x9e02068 <col:10> 'int (*)(__gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e0202c <col:10> 'int (__gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x9e015a0 '__gthread_mutex_timedlock' 'int (__gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x9e020a0 <col:37> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9e01ffc <col:37> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9e01e90 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x9e020b0 <col:46> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9e02014 <col:46> 'const __gthread_time_t *' lvalue ParmVar 0x9e01ee0 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9e02280 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:827:1, line:829:1>
  (ReturnStmt 0x9e02270 <line:828:3, col:41>
    (CallExpr 0x9e02240 <col:10, col:41> 'int'
      (ImplicitCastExpr 0x9e02230 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9e02214 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x9e01890 '__gthread_mutex_unlock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9e02260 <col:34> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9e021fc <col:34> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9e02100 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond) (CompoundStmt 0x9f93858 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:833:1, line:835:1>
  (ReturnStmt 0x9f93848 <line:834:3, col:50>
    (CallExpr 0x9f93818 <<scratch space>:114:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:50> 'int'
      (ImplicitCastExpr 0x9f93808 <<scratch space>:114:1> 'typeof (pthread_cond_broadcast) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f937b4 <col:1> 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()' lvalue Function 0x9f82fd0 '__gthrw_pthread_cond_broadcast' 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9f93838 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9f9379c <col:44> '__gthread_cond_t *' lvalue ParmVar 0x9e022e0 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_signal(__gthread_cond_t *__cond) (CompoundStmt 0x9f93a18 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:839:1, line:841:1>
  (ReturnStmt 0x9f93a08 <line:840:3, col:47>
    (CallExpr 0x9f939d8 <<scratch space>:115:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:47> 'int'
      (ImplicitCastExpr 0x9f939c8 <<scratch space>:115:1> 'typeof (pthread_cond_signal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f93994 <col:1> 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()' lvalue Function 0x9f83170 '__gthrw_pthread_cond_signal' 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9f939f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:41> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9f9397c <col:41> '__gthread_cond_t *' lvalue ParmVar 0x9f93880 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex) (CompoundStmt 0x9f93ca0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:845:1, line:847:1>
  (ReturnStmt 0x9f93c90 <line:846:3, col:54>
    (CallExpr 0x9f93c48 <<scratch space>:116:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:54> 'int'
      (ImplicitCastExpr 0x9f93c38 <<scratch space>:116:1> 'typeof (pthread_cond_wait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f93bdc <col:1> 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' lvalue Function 0x9f83350 '__gthrw_pthread_cond_wait' 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)'))
      (ImplicitCastExpr 0x9f93c70 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:39> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9f93bac <col:39> '__gthread_cond_t *' lvalue ParmVar 0x9f93a40 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9f93c80 <col:47> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9f93bc4 <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x9f93a90 '__mutex' '__gthread_mutex_t *')))))


static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9f93fc0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:852:1, line:854:1>
  (ReturnStmt 0x9f93fb0 <line:853:3, col:74>
    (CallExpr 0x9f93f58 <<scratch space>:117:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:74> 'int'
      (ImplicitCastExpr 0x9f93f48 <<scratch space>:117:1> 'typeof (pthread_cond_timedwait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f93eec <col:1> 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' lvalue Function 0x9f83540 '__gthrw_pthread_cond_timedwait' 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)'))
      (ImplicitCastExpr 0x9f93f80 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9f93ea4 <col:44> '__gthread_cond_t *' lvalue ParmVar 0x9f93cd0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9f93f90 <col:52> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9f93ebc <col:52> '__gthread_mutex_t *' lvalue ParmVar 0x9f93d20 '__mutex' '__gthread_mutex_t *'))
      (ImplicitCastExpr 0x9f93fa0 <col:61> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9f93ed4 <col:61> 'const __gthread_time_t *' lvalue ParmVar 0x9f93d70 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x9f94230 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:859:1, line:861:1>
  (ReturnStmt 0x9f94220 <line:860:3, col:46>
    (CallExpr 0x9f941d8 <col:10, col:46> 'int'
      (ImplicitCastExpr 0x9f941c8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f9418c <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *)' lvalue Function 0x9f93b10 '__gthread_cond_wait' 'int (__gthread_cond_t *, __gthread_mutex_t *)'))
      (ImplicitCastExpr 0x9f94200 <col:31> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9f9415c <col:31> '__gthread_cond_t *' lvalue ParmVar 0x9f93ff0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9f94210 <col:39> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9f94174 <col:39> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9f94040 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x9f94530 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:867:1, line:869:1>
  (ReturnStmt 0x9f94520 <line:868:3, col:66>
    (CallExpr 0x9f944c8 <col:10, col:66> 'int'
      (ImplicitCastExpr 0x9f944b8 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f9447c <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x9f93e00 '__gthread_cond_timedwait' 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x9f944f0 <col:36> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9f94434 <col:36> '__gthread_cond_t *' lvalue ParmVar 0x9f94260 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x9f94500 <col:44> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x9f9444c <col:44> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x9f942b0 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x9f94510 <col:53> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x9f94464 <col:53> 'const __gthread_time_t *' lvalue ParmVar 0x9f94300 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_destroy(__gthread_cond_t *__cond) (CompoundStmt 0x9f946f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:873:1, line:875:1>
  (ReturnStmt 0x9f946e8 <line:874:3, col:48>
    (CallExpr 0x9f946b8 <<scratch space>:118:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:48> 'int'
      (ImplicitCastExpr 0x9f946a8 <<scratch space>:118:1> 'typeof (pthread_cond_destroy) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f94674 <col:1> 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()' lvalue Function 0x9dfd5e0 '__gthrw_pthread_cond_destroy' 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x9f946d8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:42> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x9f9465c <col:42> '__gthread_cond_t *' lvalue ParmVar 0x9f94560 '__cond' '__gthread_cond_t *')))))


typedef int _Atomic_word;
namespace __gnu_cxx {
    static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x9f94c58 </usr/include/c++/4.6/ext/atomicity.h:48:3, col:48>
  (ReturnStmt 0x9f94c48 <col:5, col:45>
    (CallExpr 0x9f94a78 <col:12, col:45> '_Atomic_word':'int'
      (ImplicitCastExpr 0x9f94c38 <col:12> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f94c04 <col:12> 'int (volatile int *, int, ...)' lvalue Function 0x9f94ae0 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
      (ImplicitCastExpr 0x9f94aa0 <col:33> 'volatile _Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9f94a14 <col:33> 'volatile _Atomic_word *' lvalue ParmVar 0x9f94840 '__mem' 'volatile _Atomic_word *'))
      (ImplicitCastExpr 0x9f94bf8 <col:40> 'int' <LValueToRValue>
        (DeclRefExpr 0x9f94a2c <col:40> 'int' lvalue ParmVar 0x9f94890 '__val' 'int')))))


    static inline void __atomic_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x9f94fd0 </usr/include/c++/4.6/ext/atomicity.h:52:3, col:41>
  (CallExpr 0x9f94e30 <col:5, col:38> '_Atomic_word':'int'
    (ImplicitCastExpr 0x9f94fc0 <col:5> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9f94fa4 <col:5> 'int (volatile int *, int, ...)' lvalue Function 0x9f94e80 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
    (ImplicitCastExpr 0x9f94e58 <col:26> 'volatile _Atomic_word *' <LValueToRValue>
      (DeclRefExpr 0x9f94df0 <col:26> 'volatile _Atomic_word *' lvalue ParmVar 0x9f94c80 '__mem' 'volatile _Atomic_word *'))
    (ImplicitCastExpr 0x9f94f98 <col:33> 'int' <LValueToRValue>
      (DeclRefExpr 0x9f94e08 <col:33> 'int' lvalue ParmVar 0x9f94cd0 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x9f952b8 </usr/include/c++/4.6/ext/atomicity.h:65:3, line:69:3>
  (DeclStmt 0x9f951e8 <line:66:5, col:35>
    0x9f95160 "_Atomic_word __result =
      (ImplicitCastExpr 0x9f951d8 <col:29, col:30> '_Atomic_word':'int' <LValueToRValue>
        (UnaryOperator 0x9f951c0 <col:29, col:30> '_Atomic_word':'int' lvalue prefix '*'
          (ImplicitCastExpr 0x9f951b0 <col:30> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x9f95194 <col:30> '_Atomic_word *' lvalue ParmVar 0x9f95020 '__mem' '_Atomic_word *'))))")
  (CompoundAssignOperator 0x9f95260 <line:67:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x9f95220 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x9f95210 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9f951f8 <col:6> '_Atomic_word *' lvalue ParmVar 0x9f95020 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x9f95250 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9f95234 <col:15> 'int' lvalue ParmVar 0x9f95070 '__val' 'int')))
  (ReturnStmt 0x9f952a8 <line:68:5, col:12>
    (ImplicitCastExpr 0x9f95298 <col:12> '_Atomic_word':'int' <LValueToRValue>
      (DeclRefExpr 0x9f95280 <col:12> '_Atomic_word':'int' lvalue Var 0x9f95160 '__result' '_Atomic_word':'int'))))


    static inline void __atomic_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x9f954d0 </usr/include/c++/4.6/ext/atomicity.h:73:3, col:22>
  (CompoundAssignOperator 0x9f954b0 <col:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x9f95470 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x9f95460 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9f95448 <col:6> '_Atomic_word *' lvalue ParmVar 0x9f952f0 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x9f954a0 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x9f95484 <col:15> 'int' lvalue ParmVar 0x9f95340 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x9f961a0 </usr/include/c++/4.6/ext/atomicity.h:78:3, line:87:3>
  (IfStmt 0x9f96180 <line:80:5, line:83:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f956d8 <line:80:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9f956b8 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x9f956a8 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f9568c <col:9> 'int (void)' lvalue Function 0x9dfe090 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x9f96050 <line:81:7, col:45>
      (CallExpr 0x9f95ff8 <col:14, col:45> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9f95fe8 <col:14> '_Atomic_word (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f95f90 <col:14> '_Atomic_word (volatile _Atomic_word *, int)' lvalue Function 0x9f94910 '__exchange_and_add' '_Atomic_word (volatile _Atomic_word *, int)'))
        (ImplicitCastExpr 0x9f96030 <col:33> 'volatile _Atomic_word *' <NoOp>
          (ImplicitCastExpr 0x9f96020 <col:33> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x9f9571c <col:33> '_Atomic_word *' lvalue ParmVar 0x9f95500 '__mem' '_Atomic_word *')))
        (ImplicitCastExpr 0x9f96040 <col:40> 'int' <LValueToRValue>
          (DeclRefExpr 0x9f95734 <col:40> 'int' lvalue ParmVar 0x9f95550 '__val' 'int'))))
    (ReturnStmt 0x9f96170 <line:83:7, col:52>
      (CallExpr 0x9f96128 <col:14, col:52> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9f96118 <col:14> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f960c4 <col:14> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9f950f0 '__exchange_and_add_single' '_Atomic_word (_Atomic_word *, int)'))
        (ImplicitCastExpr 0x9f96150 <col:40> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x9f96094 <col:40> '_Atomic_word *' lvalue ParmVar 0x9f95500 '__mem' '_Atomic_word *'))
        (ImplicitCastExpr 0x9f96160 <col:47> 'int' <LValueToRValue>
          (DeclRefExpr 0x9f960ac <col:47> 'int' lvalue ParmVar 0x9f95550 '__val' 'int'))))))


    static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x9f96610 </usr/include/c++/4.6/ext/atomicity.h:92:3, line:101:3>
  (IfStmt 0x9f965f0 <line:94:5, line:97:39>
    <<<NULL>>>
    (ImplicitCastExpr 0x9f963a8 <line:94:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9f96388 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x9f96378 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9f9635c <col:9> 'int (void)' lvalue Function 0x9dfe090 '__gthread_active_p' 'int (void)'))))
    (CallExpr 0x9f96488 <line:95:7, col:32> 'void'
      (ImplicitCastExpr 0x9f96478 <col:7> 'void (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f9641c <col:7> 'void (volatile _Atomic_word *, int)' lvalue Function 0x9f94d70 '__atomic_add' 'void (volatile _Atomic_word *, int)'))
      (ImplicitCastExpr 0x9f964c0 <col:20> 'volatile _Atomic_word *' <NoOp>
        (ImplicitCastExpr 0x9f964b0 <col:20> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x9f963ec <col:20> '_Atomic_word *' lvalue ParmVar 0x9f961d0 '__mem' '_Atomic_word *')))
      (ImplicitCastExpr 0x9f964d0 <col:27> 'int' <LValueToRValue>
        (DeclRefExpr 0x9f96404 <col:27> 'int' lvalue ParmVar 0x9f96220 '__val' 'int')))
    (CallExpr 0x9f965a8 <line:97:7, col:39> 'void'
      (ImplicitCastExpr 0x9f96598 <col:7> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9f96544 <col:7> 'void (_Atomic_word *, int)' lvalue Function 0x9f953e0 '__atomic_add_single' 'void (_Atomic_word *, int)'))
      (ImplicitCastExpr 0x9f965d0 <col:27> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x9f96514 <col:27> '_Atomic_word *' lvalue ParmVar 0x9f961d0 '__mem' '_Atomic_word *'))
      (ImplicitCastExpr 0x9f965e0 <col:34> 'int' <LValueToRValue>
        (DeclRefExpr 0x9f9652c <col:34> 'int' lvalue ParmVar 0x9f96220 '__val' 'int')))))


}
extern void __sync_fetch_and_add();
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa3497d8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa349638 <line:180:4, col:62>
    0xa349460 "void *__p =
      (CXXReinterpretCastExpr 0xa349620 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa349608 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa3495b0 <col:41> 'size_type []' lvalue Var 0xa059250 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa3497c8 <line:181:4, col:39>
    (UnaryOperator 0xa3497b0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa349798 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa349788 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa34976c <col:36> 'void *' lvalue Var 0xa349460 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa349448 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa349428 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa349150 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa349108 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa3490f8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fbd044 <col:8> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa349130 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa3490e0 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa348f40 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa3490c8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa3490a8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa349098 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa349060 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa0593e0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa349140 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9fbd130 <col:50> '_Bool' false))))
    (CompoundStmt 0xa349410 <line:236:6, line:245:6>
      (NullStmt 0x9fbd168 <line:238:67>)
      (IfStmt 0xa3493f0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa349248 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa349220 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa349210 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fbd198 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9f955b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa3491f8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa3491d8 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa058a20
                (ImplicitCastExpr 0xa3491c8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa3491a0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9fbd230 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9fbd218 <col:10> 'int' 1)))
          (IntegerLiteral 0x9fbd270 <col:16> 'int' 0))
        (CompoundStmt 0xa3493d8 <line:241:3, line:244:3>
          (NullStmt 0x9fbd2f0 <line:242:63>)
          (CXXMemberCallExpr 0xa3493b8 <line:243:5, col:19> 'void'
            (MemberExpr 0xa349380 <col:5> '<bound member function type>' ->_M_destroy 0xa05a090
              (CXXThisExpr 0xa349260 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa3493a0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa059f70 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa3486a0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa0363b8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa0363a8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9f9ad40 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9f9ad28 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa348ee0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa348ed0 <col:9, col:29>
    (ImplicitCastExpr 0xa348ec0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa348ea0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa036940
        (MemberExpr 0xa348e80 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa036970
          (CXXThisExpr 0xa348d60 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa348d48 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa348d38 <col:9, col:59>
    (UnaryOperator 0xa348d20 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa348d08 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa348cf0 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa348cd8 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa348cc0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa348ca0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa348c80 <col:44> '<bound member function type>' ->_M_data 0xa0369f0
                  (CXXThisExpr 0xa348c70 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9fbd9b8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9fbd9a0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa3485f0 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa3485d0 <col:9, col:51> 'void'
    (CXXTemporary 0xa348550)
    (CXXMemberCallExpr 0xa348568 <col:9, col:51> 'void'
      (MemberExpr 0xa3484cc <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa059fc0
        (CXXMemberCallExpr 0xa3484a0 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa348480 <col:9> '<bound member function type>' ->_M_rep 0xa036ce0
            (ImplicitCastExpr 0xa3484c0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa348360 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa3485c0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa3485b0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa348558 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa348550)
            (CXXMemberCallExpr 0xa348520 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa348500 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa050810
                (ImplicitCastExpr 0xa348540 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa3484f0 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa34b120 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa34b110 <col:9, col:26>
    (ImplicitCastExpr 0xa34b100 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa34b0e0 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa0588a0
        (ImplicitCastExpr 0xa34b0d0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa34b0b0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa34b090 <col:16> '<bound member function type>' ->_M_rep 0xa036ce0
              (CXXThisExpr 0xa34af70 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa34af58 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa34af48 <col:9, col:32>
    (BinaryOperator 0xa34af30 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa34af00 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa34aee0 <col:16, col:22> '<bound member function type>' ->size 0xa03dc20
          (CXXThisExpr 0xa34aed0 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa34af20 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9fc4a58 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa34b7c0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa34b248 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa34b1f0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa34b1e0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa34b174 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa03f180 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa34b1c0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa34b1a0 <col:13, col:19> '<bound member function type>' ->size 0xa03dc20
          (CXXThisExpr 0xa34b190 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa34b218 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa34b208 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc4ec4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa34b238 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fc4eb0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9fc4e80 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa34b7b0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa34b7a0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa34b788 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa34b740 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa34b720 <col:9> '<bound member function type>' ->_M_data 0xa0369f0
            (CXXThisExpr 0xa34b710 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa34b778 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa34b75c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa03f180 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa34e610 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa34e600 <col:9, col:24>
    (ImplicitCastExpr 0xa34e5f0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa34e5d0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa34e5b0 <col:16> '<bound member function type>' ->_M_data 0xa0369f0
          (CXXThisExpr 0xa34e5a0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa3499b0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa3499a0 <col:9, col:16>
    (CXXConstructExpr 0xa349978 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa349968 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa349958 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa349910 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa036970
            (CXXThisExpr 0xa3497f0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa010e98 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa010e88 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9f9ad40 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9f9ad28 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa34a7d0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa34a7c0 <col:9, col:29>
    (ImplicitCastExpr 0xa34a7b0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa34a790 <col:17, col:29> 'char *' lvalue ._M_p 0xa011420
        (MemberExpr 0xa34a770 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa011450
          (CXXThisExpr 0xa34a650 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa34a638 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa34a628 <col:9, col:59>
    (UnaryOperator 0xa34a610 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa34a5f8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa34a5e0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa34a5c8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa34a5b0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa34a590 <col:44, col:52> 'char *'
                (MemberExpr 0xa34a570 <col:44> '<bound member function type>' ->_M_data 0xa0114d0
                  (CXXThisExpr 0xa34a560 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9fbd9b8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9fbd9a0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa349f88 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa349f78 <col:9, col:26>
    (ImplicitCastExpr 0xa349f68 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa349f48 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa031350
        (ImplicitCastExpr 0xa349f38 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa349f00 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa349ee0 <col:16> '<bound member function type>' ->_M_rep 0xa0117a0
              (CXXThisExpr 0xa349db8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa349da0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa349d90 <col:9, col:32>
    (BinaryOperator 0xa349d78 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa349d48 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa349d28 <col:16, col:22> '<bound member function type>' ->size 0xa018710
          (CXXThisExpr 0xa349d18 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa349d68 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9fc4a58 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa34ae70 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa34a8f8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa34a8a0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa34a890 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa34a824 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa019c70 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa34a870 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa34a850 <col:13, col:19> '<bound member function type>' ->size 0xa018710
          (CXXThisExpr 0xa34a840 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa34a8c8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa34a8b8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc4ec4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa34a8e8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fc4eb0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9fc4e80 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa34ae60 <line:859:2, col:22>
    (ImplicitCastExpr 0xa34ae50 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa34ae38 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa34adf0 <col:9, col:17> 'char *'
          (MemberExpr 0xa34add0 <col:9> '<bound member function type>' ->_M_data 0xa0114d0
            (CXXThisExpr 0xa34adc0 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa34ae28 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa34ae0c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa019c70 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string {
        class basic_string;
        typedef typename _Alloc::_Alloc::rebind<_CharT>::other _CharT_alloc_type;
    public:
    public:
        typedef _Traits traits_type;
        typedef typename _Traits::char_type value_type;
        typedef _Alloc allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string::_Rep_base {
            struct _Rep;
            typedef typename _Alloc::_Alloc::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const _CharT _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x9fba0e8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x9fba070 <line:180:4, col:62>
    0x9fb9fe0 "void *__p =
      (CXXReinterpretCastExpr 0x9fba058 <col:16, col:61> 'void *' reinterpret_cast<void *> <Dependent>
        (UnaryOperator 0x9fba030 <col:40, col:41> '<dependent type>' prefix '&'
          (DeclRefExpr 0x9fba014 <col:41> 'size_type []' lvalue Var 0x9f97d80 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x9fba0d8 <line:181:4, col:39>
    (UnaryOperator 0x9fba0c0 <col:11, col:39> '<dependent type>' prefix '*'
      (CXXReinterpretCastExpr 0x9fba0a8 <col:12, col:39> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
        (DeclRefExpr 0x9fba080 <col:36> 'void *' lvalue Var 0x9fb9fe0 '__p' 'void *')))))


            bool _M_is_leaked() const (CompoundStmt 0x9fba1f0 </usr/include/c++/4.6/bits/basic_string.h:186:9, col:41>
  (ReturnStmt 0x9fba1e0 <col:11, col:38>
    (CXXOperatorCallExpr 0x9fba1b8 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fba178 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
      (CXXDependentScopeMemberExpr 0x9fba128 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9fba118 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x9fba160 <col:38> 'int' 0))))


            bool _M_is_shared() const (CompoundStmt 0x9fba2e0 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0x9fba2d0 <col:11, col:38>
    (CXXOperatorCallExpr 0x9fba2a8 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fba268 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (CXXDependentScopeMemberExpr 0x9fba218 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9fba208 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x9fba250 <col:38> 'int' 0))))


            void _M_set_leaked() (CompoundStmt 0x9fba388 </usr/include/c++/4.6/bits/basic_string.h:194:9, col:35>
  (BinaryOperator 0x9fba370 <col:11, col:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fba308 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9fba2f8 <col:11> 'struct std::basic_string::_Rep *' this))
    (UnaryOperator 0x9fba358 <col:31, col:32> 'int' prefix '-'
      (IntegerLiteral 0x9fba340 <col:32> 'int' 1))))


            void _M_set_sharable() (CompoundStmt 0x9fba418 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0x9fba400 <col:11, col:31> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9fba3b0 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9fba3a0 <col:11> 'struct std::basic_string::_Rep *' this))
    (IntegerLiteral 0x9fba3e8 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0x9fbcd20 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0x9fbcd00 <line:204:4, line:212:6>
    <<<NULL>>>
    (CallExpr 0x9fba678 <line:204:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9fba580 <col:8> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9fba640 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9fba5f8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70)
        (CXXThisExpr 0x9fba598 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9fba5e0 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9fba5c0 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9fba5a8 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9f97e10 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9fba668 <col:50> '_Bool' false))
    (CompoundStmt 0x9fbcce0 <line:206:6, line:212:6>
      (CallExpr 0x9fba6e8 <line:207:8, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fba6b0 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x9fba6a0 <col:8> 'struct std::basic_string::_Rep *' this)))
      (BinaryOperator 0x9fba768 <line:208:8, col:26> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9fba718 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x9fba708 <col:8> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9fba74c <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9a040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9fbccb8 <line:209:8, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fba7c8 <col:8, col:21> '<dependent type>' lvalue)
        (ArraySubscriptExpr 0x9fba880 <col:28, col:50> '<dependent type>' lvalue
          (CallExpr 0x9fba848 <col:28, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fba810 <col:28, col:34> '<dependent type>' lvalue
              (CXXThisExpr 0x9fba800 <col:28> 'struct std::basic_string::_Rep *' this)))
          (DeclRefExpr 0x9fba864 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9a040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9fbcca0 <col:53> 'const _CharT' lvalue Var 0x9f97cf0 '_S_terminal' 'const _CharT')))
    <<<NULL>>>))


            _CharT *_M_refdata() throw() (CompoundStmt 0x9fbcdf8 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0x9fbcde8 <col:4, col:45>
    (CXXReinterpretCastExpr 0x9fbcdd0 <col:11, col:45> '_CharT *' reinterpret_cast<_CharT *> <Dependent>
      (CXXOperatorCallExpr 0x9fbcd98 <col:37, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbcd60 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (CXXThisExpr 0x9fbcd38 <col:37> 'struct std::basic_string::_Rep *' this)
        (IntegerLiteral 0x9fbcd48 <col:44> 'int' 1)))))


            _CharT *_M_grab(const _Alloc &__alloc1, const _Alloc &__alloc2) (CompoundStmt 0x9fbd030 </usr/include/c++/4.6/bits/basic_string.h:221:2, line:224:2>
  (ReturnStmt 0x9fbd020 <line:222:4, line:223:46>
    (ConditionalOperator 0x9fbd000 <line:222:11, line:223:46> '<dependent type>'
      (ParenExpr 0x9fbcf30 <line:222:11, col:51> '<dependent type>'
        (BinaryOperator 0x9fbcf18 <col:12, col:43> '<dependent type>' '&&'
          (UnaryOperator 0x9fbce60 <col:12, col:26> '<dependent type>' prefix '!'
            (CallExpr 0x9fbce40 <col:13, col:26> '<dependent type>'
              (MemberExpr 0x9fbce20 <col:13> '<bound member function type>' ->_M_is_leaked 0x9f97ea0
                (CXXThisExpr 0x9fbce10 <col:13> 'struct std::basic_string::_Rep *' this))))
          (CXXOperatorCallExpr 0x9fbcef0 <col:31, col:43> '<dependent type>'
            (UnresolvedLookupExpr 0x9fbcea8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
            (DeclRefExpr 0x9fbce74 <col:31> 'const _Alloc' lvalue ParmVar 0x9f9a250 '__alloc1' 'const _Alloc &')
            (DeclRefExpr 0x9fbce8c <col:43> 'const _Alloc' lvalue ParmVar 0x9f9a2a0 '__alloc2' 'const _Alloc &'))))
      (CallExpr 0x9fbcf78 <line:223:14, col:25> '<dependent type>'
        (MemberExpr 0x9fbcf58 <col:14> '<bound member function type>' ->_M_refcopy 0x9f9a7c0
          (CXXThisExpr 0x9fbcf48 <col:14> 'struct std::basic_string::_Rep *' this)))
      (CallExpr 0x9fbcfe0 <col:29, col:46> '<dependent type>'
        (MemberExpr 0x9fbcfa8 <col:29> '<bound member function type>' ->_M_clone 0x9f9a910
          (CXXThisExpr 0x9fbcf98 <col:29> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9fbcfc8 <col:38> 'const _Alloc' lvalue ParmVar 0x9f9a250 '__alloc1' 'const _Alloc &')))))


            static std::basic_string::_Rep *_S_create(size_type, size_type, const _Alloc &);
            void _M_dispose(const _Alloc &__a) (CompoundStmt 0x9fbd3d8 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x9fbd3b8 <line:234:4, line:245:6>
    <<<NULL>>>
    (CallExpr 0x9fbd140 <line:234:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9fbd044 <col:8> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9fbd108 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbd0c0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70)
        (CXXThisExpr 0x9fbd060 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9fbd0a8 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9fbd088 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9fbd070 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9f97e10 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9fbd130 <col:50> '_Bool' false))
    (CompoundStmt 0x9fbd3a0 <line:236:6, line:245:6>
      (NullStmt 0x9fbd168 <line:238:67>)
      (IfStmt 0x9fbd380 <line:239:8, line:244:3>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fbd2c8 <line:239:12, line:240:16> '<dependent type>'
          (UnresolvedLookupExpr 0x9fbd288 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780)
          (CallExpr 0x9fbd248 <line:239:12, line:240:11> '<dependent type>'
            (DeclRefExpr 0x9fbd198 <line:239:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9f955b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
            (UnaryOperator 0x9fbd200 <col:51, col:58> '<dependent type>' prefix '&'
              (CXXDependentScopeMemberExpr 0x9fbd1c8 <col:52, col:58> '<dependent type>' lvalue
                (CXXThisExpr 0x9fbd1b8 <col:52> 'struct std::basic_string::_Rep *' this)))
            (UnaryOperator 0x9fbd230 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9fbd218 <col:10> 'int' 1)))
          (IntegerLiteral 0x9fbd270 <col:16> 'int' 0))
        (CompoundStmt 0x9fbd368 <line:241:3, line:244:3>
          (NullStmt 0x9fbd2f0 <line:242:63>)
          (CallExpr 0x9fbd348 <line:243:5, col:19> '<dependent type>'
            (MemberExpr 0x9fbd310 <col:5> '<bound member function type>' ->_M_destroy 0x9f9a740
              (CXXThisExpr 0x9fbd300 <col:5> 'struct std::basic_string::_Rep *' this))
            (DeclRefExpr 0x9fbd330 <col:16> 'const _Alloc' lvalue ParmVar 0x9f9a5a0 '__a' 'const _Alloc &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const _Alloc &) throw();
            _CharT *_M_refcopy() throw() (CompoundStmt 0x9fbd670 </usr/include/c++/4.6/bits/basic_string.h:253:2, line:259:2>
  (IfStmt 0x9fbd5f0 <line:255:4, line:257:67>
    <<<NULL>>>
    (CallExpr 0x9fbd4e8 <line:255:8, col:55> '<dependent type>'
      (DeclRefExpr 0x9fbd3ec <col:8> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x9fbd4b0 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbd468 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70)
        (CXXThisExpr 0x9fbd408 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x9fbd450 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x9fbd430 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x9fbd418 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9f97e10 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x9fbd4d8 <col:50> '_Bool' false))
    (CallExpr 0x9fbd5c8 <line:257:13, col:67> '<dependent type>'
      (DeclRefExpr 0x9fbd530 <col:13, col:24> 'void (_Atomic_word *, int)' lvalue Function 0x9f96280 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
      (UnaryOperator 0x9fbd598 <col:46, col:53> '<dependent type>' prefix '&'
        (CXXDependentScopeMemberExpr 0x9fbd560 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0x9fbd550 <col:47> 'struct std::basic_string::_Rep *' this)))
      (IntegerLiteral 0x9fbd5b0 <col:66> 'int' 1))
    <<<NULL>>>)
  (ReturnStmt 0x9fbd660 <line:258:4, col:22>
    (CallExpr 0x9fbd640 <col:11, col:22> '<dependent type>'
      (MemberExpr 0x9fbd620 <col:11> '<bound member function type>' ->_M_refdata 0x9f9a1c0
        (CXXThisExpr 0x9fbd610 <col:11> 'struct std::basic_string::_Rep *' this)))))


            _CharT *_M_clone(const _Alloc &, size_type __res = (IntegerLiteral 0x9fb9cd0 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
);
        };
        struct _Alloc_hider :  _Alloc {
            struct _Alloc_hider;
            _Alloc_hider(_CharT *__dat, const _Alloc &__a) : _Alloc((DeclRefExpr 0x9fbd688 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const _Alloc' lvalue ParmVar 0x9f9ab40 '__a' 'const _Alloc &')
), _M_p((DeclRefExpr 0x9fbd6e8 </usr/include/c++/4.6/bits/basic_string.h:269:22> '_CharT *' lvalue ParmVar 0x9f9aaf0 '__dat' '_CharT *')
) (CompoundStmt 0x9fbd740 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            _CharT *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9f9ad60 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
  (UnaryOperator 0x9f9ad40 <col:60, col:61> 'int' prefix '-'
    (IntegerLiteral 0x9f9ad28 <col:61> 'int' 1)))
;
    private:
    private:
        mutable std::basic_string::_Alloc_hider _M_dataplus;
        _CharT *_M_data() const (CompoundStmt 0x9fbd800 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x9fbd7f0 <col:9, col:29>
    (CXXDependentScopeMemberExpr 0x9fbd7b8 <col:17, col:29> '<dependent type>' lvalue
      (MemberExpr 0x9fbd794 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9f9add0
        (CXXThisExpr 0x9fbd768 <col:17> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))


        _CharT *_M_data(_CharT *__p) (CompoundStmt 0x9fbd8d8 </usr/include/c++/4.6/bits/basic_string.h:291:7, col:42>
  (ReturnStmt 0x9fbd8c8 <col:9, col:39>
    (ParenExpr 0x9fbd8b0 <col:16, col:39> '<dependent type>'
      (BinaryOperator 0x9fbd898 <col:17, col:36> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x9fbd848 <col:17, col:29> '<dependent type>' lvalue
          (MemberExpr 0x9fbd828 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9f9add0
            (CXXThisExpr 0x9fbd818 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9fbd87c <col:36> '_CharT *' lvalue ParmVar 0x9f9aec0 '__p' '_CharT *')))))


        std::basic_string::_Rep *_M_rep() const (CompoundStmt 0x9fbda28 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x9fbda18 <col:9, col:59>
    (UnaryOperator 0x9fbda00 <col:16, col:59> '<dependent type>' prefix '&'
      (ParenExpr 0x9fbd9e8 <col:17, col:59> '<dependent type>' lvalue
        (ArraySubscriptExpr 0x9fbd9d0 <col:18, col:58> '<dependent type>' lvalue
          (ParenExpr 0x9fbd988 <col:18, col:54> 'struct std::basic_string::_Rep *'
            (CXXReinterpretCastExpr 0x9fbd970 <col:19, col:53> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
              (CallExpr 0x9fbd940 <col:44, col:52> '<dependent type>'
                (UnresolvedMemberExpr 0x9fbd900 <col:44> '<bound member function type>' lvalue))))
          (UnaryOperator 0x9fbd9b8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9fbd9a0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const (CompoundStmt 0x9fbdae8 </usr/include/c++/4.6/bits/basic_string.h:301:7, col:37>
  (ReturnStmt 0x9fbdad8 <col:9, col:34>
    (CXXUnresolvedConstructExpr 0x9fbdab8 <col:16, col:34> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9fbda98 <col:25, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x9fbda58 <col:25> '<bound member function type>' lvalue)))))


        iterator _M_iend() const (CompoundStmt 0x9fbdc70 </usr/include/c++/4.6/bits/basic_string.h:305:7, col:52>
  (ReturnStmt 0x9fbdc60 <col:9, col:49>
    (CXXUnresolvedConstructExpr 0x9fbdc40 <col:16, col:49> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9fbdc18 <col:25, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbdbe0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (CallExpr 0x9fbdb58 <col:25, col:33> '<dependent type>'
          (UnresolvedMemberExpr 0x9fbdb18 <col:25> '<bound member function type>' lvalue))
        (CallExpr 0x9fbdbc0 <col:37, col:48> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fbdb88 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0x9fbdb78 <col:37> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        void _M_leak() (CompoundStmt 0x9fbddb8 </usr/include/c++/4.6/bits/basic_string.h:309:7, line:312:7>
  (IfStmt 0x9fbdd98 <line:310:2, line:311:17>
    <<<NULL>>>
    (UnaryOperator 0x9fbdd30 <line:310:6, col:30> '<dependent type>' prefix '!'
      (CallExpr 0x9fbdd10 <col:7, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fbdcd8 <col:7, col:17> '<dependent type>' lvalue
          (CallExpr 0x9fbdcb8 <col:7, col:14> '<dependent type>'
            (MemberExpr 0x9fbdc98 <col:7> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9fbdc88 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x9fbdd78 <line:311:4, col:17> '<dependent type>'
      (MemberExpr 0x9fbdd58 <col:4> '<bound member function type>' ->_M_leak_hard 0x9fa1950
        (CXXThisExpr 0x9fbdd48 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    <<<NULL>>>))


        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0x9fbdfe0 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0x9fbdf98 <line:317:2, line:318:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fbde90 <line:317:6, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbde50 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (DeclRefExpr 0x9fbddcc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9b220 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fbde30 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fbddf8 <col:14, col:20> '<dependent type>' lvalue
          (CXXThisExpr 0x9fbdde8 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9fbdf68 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0x9fbdf58 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fbdf1c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fbdf88 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9fbdf08 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9fbdeec </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0x9f9b270 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0x9fbdfd0 <line:319:2, col:9>
    (DeclRefExpr 0x9fbdfb4 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9b220 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const (CompoundStmt 0x9fbe318 </usr/include/c++/4.6/bits/basic_string.h:324:7, line:327:7>
  (IfStmt 0x9fbe2f8 <line:325:2, line:326:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fbe210 <line:325:6, col:49> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbe1d0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
      (CXXOperatorCallExpr 0x9fbe190 <col:6, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbe158 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (CallExpr 0x9fbe040 <col:6, col:21> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fbe008 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9fbdff8 <col:6> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (ParenExpr 0x9fbe140 <col:25, col:45> '<dependent type>'
          (CXXOperatorCallExpr 0x9fbe118 <col:26, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x9fbe0e0 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (CallExpr 0x9fbe0a8 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fbe070 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9fbe060 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9fbe0c4 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9b380 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (DeclRefExpr 0x9fbe1b4 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9b3c0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9fbe2c8 <line:326:4, col:33> 'void'
      (ImplicitCastExpr 0x9fbe2b8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fbe29c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e22e80 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fbe2e8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9fbe288 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9fbe26c </usr/include/c++/4.6/bits/basic_string.h:326:29> 'const char *' lvalue ParmVar 0x9f9b410 '__s' 'const char *'))))
    <<<NULL>>>))


        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0x9fbe638 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0x9fbe4d8 <line:333:2, col:54>
    0x9fbe340 "const bool __testoff =
      (CXXOperatorCallExpr 0x9fbe4b0 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbe470 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
        (DeclRefExpr 0x9fbe374 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9b590 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9fbe448 <col:34, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9fbe410 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (CallExpr 0x9fbe3d8 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fbe3a0 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x9fbe390 <col:34> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
          (DeclRefExpr 0x9fbe3f4 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9b550 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (ReturnStmt 0x9fbe628 <line:334:2, col:44>
    (ConditionalOperator 0x9fbe608 <col:9, col:44> '<dependent type>'
      (ImplicitCastExpr 0x9fbe5f8 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9fbe4e8 <col:9> 'const _Bool' lvalue Var 0x9fbe340 '__testoff' 'const _Bool'))
      (DeclRefExpr 0x9fbe500 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9b590 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9fbe5d0 <col:29, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9fbe598 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (CallExpr 0x9fbe560 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fbe528 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x9fbe518 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9fbe57c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9b550 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))


        bool _M_disjunct(const _CharT *__s) const (CompoundStmt 0x9fbea80 </usr/include/c++/4.6/bits/basic_string.h:340:7, line:343:7>
  (ReturnStmt 0x9fbea70 <line:341:2, line:342:58>
    (ParenExpr 0x9fbea58 <line:341:9, line:342:58> '<dependent type>'
      (BinaryOperator 0x9fbea40 <line:341:10, line:342:57> '<dependent type>' '||'
        (CallExpr 0x9fbe7d0 <line:341:10, col:46> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x9fbe730 <col:10, col:30> 'less<const _CharT *>')
          (DeclRefExpr 0x9fbe748 <col:32> 'const _CharT *' lvalue ParmVar 0x9f9b6d0 '__s' 'const _CharT *')
          (CallExpr 0x9fbe7b0 <col:37, col:45> '<dependent type>'
            (UnresolvedMemberExpr 0x9fbe770 <col:37> '<bound member function type>' lvalue)))
        (CallExpr 0x9fbea18 <line:342:6, col:57> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x9fbe8b0 <col:6, col:26> 'less<const _CharT *>')
          (CXXOperatorCallExpr 0x9fbe9d8 <col:28, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0x9fbe9a0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
            (CallExpr 0x9fbe918 <col:28, col:36> '<dependent type>'
              (UnresolvedMemberExpr 0x9fbe8d8 <col:28> '<bound member function type>' lvalue))
            (CallExpr 0x9fbe980 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fbe948 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x9fbe938 <col:40> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
          (DeclRefExpr 0x9fbe9fc <col:54> 'const _CharT *' lvalue ParmVar 0x9f9b6d0 '__s' 'const _CharT *'))))))


        static void _M_copy(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x9fbfd48 </usr/include/c++/4.6/bits/basic_string.h:349:7, line:354:7>
  (IfStmt 0x9fbfd28 <line:350:2, line:353:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fbeb10 <line:350:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbeac8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
      (DeclRefExpr 0x9fbea94 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9b880 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9fbeab0 <col:13> 'int' 1))
    (CallExpr 0x9fbebe8 <line:351:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fbeb60 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9fbeba0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fbeb84 <col:25> '_CharT *' lvalue ParmVar 0x9f9b7f0 '__d' '_CharT *'))
      (UnaryOperator 0x9fbebd0 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fbebb4 <col:31> 'const _CharT *' lvalue ParmVar 0x9f9b840 '__s' 'const _CharT *')))
    (CallExpr 0x9fbfd00 <line:353:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fbec38 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fbec5c <col:22> '_CharT *' lvalue ParmVar 0x9f9b7f0 '__d' '_CharT *')
      (DeclRefExpr 0x9fbec74 <col:27> 'const _CharT *' lvalue ParmVar 0x9f9b840 '__s' 'const _CharT *')
      (DeclRefExpr 0x9fbfce8 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9b880 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_move(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x9fbffb8 </usr/include/c++/4.6/bits/basic_string.h:358:7, line:363:7>
  (IfStmt 0x9fbff98 <line:359:2, line:362:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fbfdd8 <line:359:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9fbfd90 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
      (DeclRefExpr 0x9fbfd5c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9ba50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9fbfd78 <col:13> 'int' 1))
    (CallExpr 0x9fbfeb0 <line:360:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fbfe28 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9fbfe68 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fbfe4c <col:25> '_CharT *' lvalue ParmVar 0x9f9b9c0 '__d' '_CharT *'))
      (UnaryOperator 0x9fbfe98 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fbfe7c <col:31> 'const _CharT *' lvalue ParmVar 0x9f9ba10 '__s' 'const _CharT *')))
    (CallExpr 0x9fbff70 <line:362:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fbff00 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fbff24 <col:22> '_CharT *' lvalue ParmVar 0x9f9b9c0 '__d' '_CharT *')
      (DeclRefExpr 0x9fbff3c <col:27> 'const _CharT *' lvalue ParmVar 0x9f9ba10 '__s' 'const _CharT *')
      (DeclRefExpr 0x9fbff54 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9ba50 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_assign(_CharT *__d, size_type __n, _CharT __c) (CompoundStmt 0x9fc0210 </usr/include/c++/4.6/bits/basic_string.h:367:7, line:372:7>
  (IfStmt 0x9fc01f0 <line:368:2, line:371:37>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc0048 <line:368:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc0000 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
      (DeclRefExpr 0x9fbffcc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9bb70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9fbffe8 <col:13> 'int' 1))
    (CallExpr 0x9fc0108 <line:369:4, col:33> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fc0098 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x9fc00d8 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fc00bc <col:25> '_CharT *' lvalue ParmVar 0x9f9bb30 '__d' '_CharT *'))
      (DeclRefExpr 0x9fc00ec <col:30> '_CharT' lvalue ParmVar 0x9f9bbb0 '__c' '_CharT'))
    (CallExpr 0x9fc01c8 <line:371:4, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fc0158 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x9fc017c <col:24> '_CharT *' lvalue ParmVar 0x9f9bb30 '__d' '_CharT *')
      (DeclRefExpr 0x9fc0194 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9f9bb70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fc01ac <col:34> '_CharT' lvalue ParmVar 0x9f9bbb0 '__c' '_CharT'))))


        template <class _Iterator> static void _S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2) (CompoundStmt 0x9fc0440 </usr/include/c++/4.6/bits/basic_string.h:379:9, line:382:2>
  (ForStmt 0x9fc0418 <line:380:4, line:381:37>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc02a0 <line:380:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc0258 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70)
      (DeclRefExpr 0x9fc0224 <col:11> '_Iterator' lvalue ParmVar 0x9f9bd90 '__k1' '_Iterator')
      (DeclRefExpr 0x9fc023c <col:19> '_Iterator' lvalue ParmVar 0x9f9bdd0 '__k2' '_Iterator'))
    (BinaryOperator 0x9fc0328 <col:25, col:35> '<dependent type>' ','
      (UnaryOperator 0x9fc02e0 <col:25, col:27> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fc02c4 <col:27> '_Iterator' lvalue ParmVar 0x9f9bd90 '__k1' '_Iterator'))
      (UnaryOperator 0x9fc0310 <col:33, col:35> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fc02f4 <col:35> '_CharT *' lvalue ParmVar 0x9f9bd50 '__p' '_CharT *')))
    (CallExpr 0x9fc03f0 <line:381:6, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fc0368 <col:6, col:19> '<dependent type>' lvalue)
      (UnaryOperator 0x9fc03a8 <col:26, col:27> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fc038c <col:27> '_CharT *' lvalue ParmVar 0x9f9bd50 '__p' '_CharT *'))
      (UnaryOperator 0x9fc03d8 <col:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9fc03bc <col:33> '_Iterator' lvalue ParmVar 0x9f9bd90 '__k1' '_Iterator')))))

;
        static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) (CompoundStmt 0x9fc05c0 </usr/include/c++/4.6/bits/basic_string.h:386:7, col:55>
  (CallExpr 0x9fc0598 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x9fc0458 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x9fa15b0 0x9fa13d0 0x9fa11f0 0x9fa1030 0x9f9bef0)
    (DeclRefExpr 0x9fc049c <col:23> '_CharT *' lvalue ParmVar 0x9fa0ef0 '__p' '_CharT *')
    (CallExpr 0x9fc0508 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc04d0 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9fc04b4 <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fa0f30 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x9fc0578 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc0540 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x9fc0524 <col:41> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fa0f70 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x9fc0740 </usr/include/c++/4.6/bits/basic_string.h:390:7, col:55>
  (CallExpr 0x9fc0718 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x9fc05d8 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x9fa15b0 0x9fa13d0 0x9fa11f0 0x9fa1030 0x9f9bef0)
    (DeclRefExpr 0x9fc061c <col:23> '_CharT *' lvalue ParmVar 0x9fa10b0 '__p' '_CharT *')
    (CallExpr 0x9fc0688 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc0650 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x9fc0634 <col:28> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fa10f0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x9fc06f8 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc06c0 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x9fc06a4 <col:41> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fa1130 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x9fc0858 </usr/include/c++/4.6/bits/basic_string.h:394:7, col:42>
  (CallExpr 0x9fc0830 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x9fc0754 <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x9fc076c <col:17> '_CharT *' lvalue ParmVar 0x9fa1270 '__p' '_CharT *')
    (DeclRefExpr 0x9fc0784 <col:22> '_CharT *' lvalue ParmVar 0x9fa12c0 '__k1' '_CharT *')
    (CXXOperatorCallExpr 0x9fc0808 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc07d0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (DeclRefExpr 0x9fc079c <col:28> '_CharT *' lvalue ParmVar 0x9fa1310 '__k2' '_CharT *')
      (DeclRefExpr 0x9fc07b4 <col:35> '_CharT *' lvalue ParmVar 0x9fa12c0 '__k1' '_CharT *'))))


        static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x9fc0970 </usr/include/c++/4.6/bits/basic_string.h:398:7, col:42>
  (CallExpr 0x9fc0948 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x9fc086c <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x9fc0884 <col:17> '_CharT *' lvalue ParmVar 0x9fa1450 '__p' '_CharT *')
    (DeclRefExpr 0x9fc089c <col:22> 'const _CharT *' lvalue ParmVar 0x9fa14a0 '__k1' 'const _CharT *')
    (CXXOperatorCallExpr 0x9fc0920 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc08e8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (DeclRefExpr 0x9fc08b4 <col:28> 'const _CharT *' lvalue ParmVar 0x9fa14f0 '__k2' 'const _CharT *')
      (DeclRefExpr 0x9fc08cc <col:35> 'const _CharT *' lvalue ParmVar 0x9fa14a0 '__k1' 'const _CharT *'))))


        static int _S_compare(size_type __n1, size_type __n2) (CompoundStmt 0x9fc3868 </usr/include/c++/4.6/bits/basic_string.h:402:7, line:411:7>
  (DeclStmt 0x9fc0aa0 <line:403:2, col:58>
    0x9fc09b0 "const difference_type __d =
      (CXXUnresolvedConstructExpr 0x9fc0a80 <col:30, col:57> 'difference_type':'typename _CharT_alloc_type::difference_type'
        (CXXOperatorCallExpr 0x9fc0a58 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9fc0a20 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (DeclRefExpr 0x9fc09f0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa1630 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9fc0a08 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa1670 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (IfStmt 0x9fc3848 <line:405:2, line:410:18>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc1b08 <line:405:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc1ac8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (DeclRefExpr 0x9fc0ab0 <col:6> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9fc09b0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
      (DeclRefExpr 0x9fc1aa8 <col:12, col:46> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int'))
    (ReturnStmt 0x9fc1bf0 <line:406:4, col:45>
      (ImplicitCastExpr 0x9fc1be0 <col:11, col:45> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0x9fc1bc0 <col:11, col:45> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int')))
    (IfStmt 0x9fc3828 <line:407:7, line:410:18>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9fc36d8 <line:407:11, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc3698 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370)
        (DeclRefExpr 0x9fc1c00 <col:11> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9fc09b0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
        (DeclRefExpr 0x9fc1cb0 <col:17, col:51> 'const int':'const int' lvalue Var 0x9fc1320 '__min' 'const int':'const int'))
      (ReturnStmt 0x9fc37c0 <line:408:4, col:45>
        (ImplicitCastExpr 0x9fc37b0 <col:11, col:45> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0x9fc3790 <col:11, col:45> 'const int':'const int' lvalue Var 0x9fc1320 '__min' 'const int':'const int')))
      (ReturnStmt 0x9fc3818 <line:410:4, col:18>
        (CXXUnresolvedConstructExpr 0x9fc37f8 <col:11, col:18> 'int'
          (DeclRefExpr 0x9fc37dc <col:15> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x9fc09b0 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type'))))))


        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x9fc3900 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0x9fc38f0 <col:9, col:35>
    (CallExpr 0x9fc38d0 <col:16, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9fc38a8 <col:16, col:22> '<dependent type>' lvalue))))


    public:
    public:
        basic_string<_CharT, _Traits, _Alloc>() : _M_dataplus((CallExpr 0x9fc3988 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9fc3950 <col:21, col:36> '<dependent type>' lvalue
    (CallExpr 0x9fc3930 <col:21, col:34> '<dependent type>'
      (DeclRefExpr 0x9fc3914 <col:21> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9fa19d0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
, (CXXUnresolvedConstructExpr 0x9fc39b0 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> '_Alloc')
) (CompoundStmt 0x9fc3a10 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x9fb9ce8 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9fb9d08 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9fb9d28 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9fb9d48 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9fb9d68 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
);
        void ~basic_string<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9fc3b30 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (CallExpr 0x9fc3b10 <col:9, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fc3a70 <col:9, col:19> '<dependent type>' lvalue
      (CallExpr 0x9fc3a50 <col:9, col:16> '<dependent type>'
        (MemberExpr 0x9fc3a30 <col:9> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9fc3a20 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9fc3af0 <col:30, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc3ab8 <col:30, col:36> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc3aa8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9fc3bd8 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0x9fc3bc8 <col:9, col:34>
    (CallExpr 0x9fc3ba8 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc3b58 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc3b48 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc3b8c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fa2930 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const _CharT *__s) (CompoundStmt 0x9fc3c80 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0x9fc3c70 <col:9, col:32>
    (CallExpr 0x9fc3c50 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc3c00 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc3bf0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc3c34 <col:29> 'const _CharT *' lvalue ParmVar 0x9fa2a50 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(_CharT __c) (CompoundStmt 0x9fc3d70 </usr/include/c++/4.6/bits/basic_string.h:560:7, line:563:7>
  (CallExpr 0x9fc3d10 <line:561:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fc3ca8 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9fc3c98 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9fc3ce0 <col:15> 'int' 1)
    (DeclRefExpr 0x9fc3cf8 <col:18> '_CharT' lvalue ParmVar 0x9fa2b60 '__c' '_CharT'))
  (ReturnStmt 0x9fc3d60 <line:562:2, col:10>
    (UnaryOperator 0x9fc3d48 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fc3d38 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator begin() (CompoundStmt 0x9fc3e80 </usr/include/c++/4.6/bits/basic_string.h:600:7, line:603:7>
  (CallExpr 0x9fc3db8 <line:601:2, col:10> '<dependent type>'
    (MemberExpr 0x9fc3d98 <col:2> '<bound member function type>' ->_M_leak 0x9f9b1b0
      (CXXThisExpr 0x9fc3d88 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9fc3e70 <line:602:2, col:27>
    (CXXUnresolvedConstructExpr 0x9fc3e50 <col:9, col:27> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9fc3e30 <col:18, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0x9fc3df0 <col:18> '<bound member function type>' lvalue)))))


        const_iterator begin() const (CompoundStmt 0x9fc3f40 </usr/include/c++/4.6/bits/basic_string.h:611:7, col:43>
  (ReturnStmt 0x9fc3f30 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0x9fc3f10 <col:16, col:40> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x9fc3ef0 <col:31, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9fc3eb0 <col:31> '<bound member function type>' lvalue)))))


        iterator end() (CompoundStmt 0x9fc4118 </usr/include/c++/4.6/bits/basic_string.h:619:7, line:622:7>
  (CallExpr 0x9fc3f88 <line:620:2, col:10> '<dependent type>'
    (MemberExpr 0x9fc3f68 <col:2> '<bound member function type>' ->_M_leak 0x9f9b1b0
      (CXXThisExpr 0x9fc3f58 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9fc4108 <line:621:2, col:42>
    (CXXUnresolvedConstructExpr 0x9fc40e8 <col:9, col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9fc40c0 <col:18, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc4088 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (CallExpr 0x9fc4000 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9fc3fc0 <col:18> '<bound member function type>' lvalue))
        (CallExpr 0x9fc4068 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fc4030 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9fc4020 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        const_iterator end() const (CompoundStmt 0x9fc42a0 </usr/include/c++/4.6/bits/basic_string.h:630:7, col:58>
  (ReturnStmt 0x9fc4290 <col:9, col:55>
    (CXXUnresolvedConstructExpr 0x9fc4270 <col:16, col:55> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9fc4248 <col:31, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc4210 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (CallExpr 0x9fc4188 <col:31, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0x9fc4148 <col:31> '<bound member function type>' lvalue))
        (CallExpr 0x9fc41f0 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fc41b8 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x9fc41a8 <col:43> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        reverse_iterator rbegin() (CompoundStmt 0x9fc4358 </usr/include/c++/4.6/bits/basic_string.h:639:7, col:47>
  (ReturnStmt 0x9fc4348 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0x9fc4328 <col:16, col:44> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9fc4308 <col:33, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc42d0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9fc42c0 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9fc4410 </usr/include/c++/4.6/bits/basic_string.h:648:7, col:53>
  (ReturnStmt 0x9fc4400 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x9fc43e0 <col:16, col:50> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9fc43c0 <col:39, col:49> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc4388 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x9fc4378 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        reverse_iterator rend() (CompoundStmt 0x9fc44c8 </usr/include/c++/4.6/bits/basic_string.h:657:7, col:49>
  (ReturnStmt 0x9fc44b8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x9fc4498 <col:16, col:46> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9fc4478 <col:33, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc4440 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9fc4430 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rend() const (CompoundStmt 0x9fc4580 </usr/include/c++/4.6/bits/basic_string.h:666:7, col:55>
  (ReturnStmt 0x9fc4570 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0x9fc4550 <col:16, col:52> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9fc4530 <col:39, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc44f8 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x9fc44e8 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


    public:
    public:
        size_type size() const (CompoundStmt 0x9fc4630 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9fc4620 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9fc45e8 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9fc45c8 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9fc45a8 <col:16> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9fc4598 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type length() const (CompoundStmt 0x9fc46e0 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0x9fc46d0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9fc4698 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9fc4678 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9fc4658 <col:16> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9fc4648 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type max_size() const (CompoundStmt 0x9fc4760 </usr/include/c++/4.6/bits/basic_string.h:721:7, col:35>
  (ReturnStmt 0x9fc4750 <col:9, col:22>
    (CXXDependentScopeMemberExpr 0x9fc4718 <col:16, col:22> '<dependent type>' lvalue)))


        void resize(size_type __n, _CharT __c);
        void resize(size_type __n) (CompoundStmt 0x9fc4820 </usr/include/c++/4.6/bits/basic_string.h:748:7, col:38>
  (CallExpr 0x9fc47f8 <col:9, col:35> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fc4788 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9fc4778 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9fc47bc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa5900 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9fc47e0 <col:27, col:34> '_CharT')))


        size_type capacity() const (CompoundStmt 0x9fc48d0 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0x9fc48c0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x9fc4888 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x9fc4868 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x9fc4848 <col:16> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9fc4838 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        void reserve(size_type __res_arg = (IntegerLiteral 0x9fb9d80 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
);
        void clear() (CompoundStmt 0x9fc49d8 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CallExpr 0x9fc49b0 <col:9, col:37> '<dependent type>'
    (MemberExpr 0x9fc48f8 <col:9> '<bound member function type>' ->_M_mutate 0x9fa18c0
      (CXXThisExpr 0x9fc48e8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9fc4918 <col:19> 'int' 0)
    (CallExpr 0x9fc4978 <col:22, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc4940 <col:22, col:28> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc4930 <col:22> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (IntegerLiteral 0x9fc4998 <col:36> 'int' 0)))


        bool empty() const (CompoundStmt 0x9fc4af0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9fc4ae0 <col:9, col:32>
    (CXXOperatorCallExpr 0x9fc4ab8 <col:16, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc4a70 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
      (CallExpr 0x9fc4a38 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc4a00 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x9fc49f0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
      (IntegerLiteral 0x9fc4a58 <col:32> 'int' 0))))


        const_reference operator[](size_type __pos) const (CompoundStmt 0x9fc4bc8 </usr/include/c++/4.6/bits/basic_string.h:818:7, line:821:7>
  (NullStmt 0x9fc4b08 <line:819:40>)
  (ReturnStmt 0x9fc4bb8 <line:820:2, col:24>
    (ArraySubscriptExpr 0x9fc4ba0 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x9fc4b68 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9fc4b28 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9fc4b84 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa5c10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference operator[](size_type __pos) (CompoundStmt 0x9fc4d00 </usr/include/c++/4.6/bits/basic_string.h:835:7, line:842:7>
  (NullStmt 0x9fc4be0 <line:837:40>)
  (NullStmt 0x9fc4bf0 <line:839:42>)
  (CallExpr 0x9fc4c30 <line:840:2, col:10> '<dependent type>'
    (MemberExpr 0x9fc4c10 <col:2> '<bound member function type>' ->_M_leak 0x9f9b1b0
      (CXXThisExpr 0x9fc4c00 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9fc4cf0 <line:841:2, col:24>
    (ArraySubscriptExpr 0x9fc4cd8 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x9fc4ca0 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9fc4c60 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9fc4cbc <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa5d40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        const_reference at(size_type __n) const (CompoundStmt 0x9fc4ff0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9fc4f20 <line:857:2, line:858:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc4de0 <line:857:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc4da0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00)
      (DeclRefExpr 0x9fc4d20 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa5e50 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fc4d80 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc4d48 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0x9fc4d38 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9fc4ef0 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9fc4ee0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc4ec4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fc4f10 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fc4eb0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9fc4e80 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x9fc4fe0 <line:859:2, col:22>
    (ArraySubscriptExpr 0x9fc4fc8 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x9fc4f90 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9fc4f50 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9fc4fac <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa5e50 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference at(size_type __n) (CompoundStmt 0x9fc52c8 </usr/include/c++/4.6/bits/basic_string.h:909:7, line:914:7>
  (IfStmt 0x9fc51a8 <line:910:2, line:911:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fc50b0 <line:910:6, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9fc5070 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00)
      (DeclRefExpr 0x9fc5008 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa5f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fc5050 <col:13, col:18> '<dependent type>'
        (MemberExpr 0x9fc5030 <col:13> '<bound member function type>' ->size 0x9fa5640
          (CXXThisExpr 0x9fc5020 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x9fc5178 <line:911:4, col:48> 'void'
      (ImplicitCastExpr 0x9fc5168 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc514c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fc5198 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fc5138 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9fc510c </usr/include/c++/4.6/bits/basic_string.h:911:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (CallExpr 0x9fc51f8 <line:912:2, col:10> '<dependent type>'
    (MemberExpr 0x9fc51d8 <col:2> '<bound member function type>' ->_M_leak 0x9f9b1b0
      (CXXThisExpr 0x9fc51c8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x9fc52b8 <line:913:2, col:22>
    (ArraySubscriptExpr 0x9fc52a0 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x9fc5268 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9fc5228 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x9fc5284 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa5f10 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9fc5378 </usr/include/c++/4.6/bits/basic_string.h:924:7, col:37>
  (ReturnStmt 0x9fc5368 <col:9, col:34>
    (CallExpr 0x9fc5348 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc52f8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc52e8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc532c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fa5fe0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const _CharT *__s) (CompoundStmt 0x9fc5420 </usr/include/c++/4.6/bits/basic_string.h:933:7, col:35>
  (ReturnStmt 0x9fc5410 <col:9, col:32>
    (CallExpr 0x9fc53f0 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc53a0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc5390 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc53d4 <col:29> 'const _CharT *' lvalue ParmVar 0x9fa60c0 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(_CharT __c) (CompoundStmt 0x9fc54f0 </usr/include/c++/4.6/bits/basic_string.h:942:7, line:945:7>
  (CallExpr 0x9fc5498 <line:943:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fc5448 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x9fc5438 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9fc547c <col:18> '_CharT' lvalue ParmVar 0x9fa6190 '__c' '_CharT'))
  (ReturnStmt 0x9fc54e0 <line:944:2, col:10>
    (UnaryOperator 0x9fc54c8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fc54b8 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s) (CompoundStmt 0x9fc5640 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0x9fc5508 <line:998:32>)
  (ReturnStmt 0x9fc5630 <line:999:2, col:51>
    (CallExpr 0x9fc5608 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc5528 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc5518 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc555c <col:22> 'const _CharT *' lvalue ParmVar 0x9fa6670 '__s' 'const _CharT *')
      (CallExpr 0x9fc55e8 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc5598 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fc55cc <col:47> 'const _CharT *' lvalue ParmVar 0x9fa6670 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &append(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9fc7010 </usr/include/c++/4.6/bits/basic_string.h:1035:9, col:72>
  (ReturnStmt 0x9fc7000 <col:11, col:69>
    (CallExpr 0x9fc6fd0 <col:18, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc6ec8 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc5658 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fc6f30 <col:32, col:40> '<dependent type>'
        (MemberExpr 0x9fc6f10 <col:32> '<bound member function type>' ->_M_iend 0x9f9b130
          (CXXThisExpr 0x9fc6f00 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9fc6f80 <col:43, col:51> '<dependent type>'
        (MemberExpr 0x9fc6f60 <col:43> '<bound member function type>' ->_M_iend 0x9f9b130
          (CXXThisExpr 0x9fc6f50 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9fc6f9c <col:54> '_InputIterator' lvalue ParmVar 0x9fa68f0 '__first' '_InputIterator')
      (DeclRefExpr 0x9fc6fb4 <col:63> '_InputIterator' lvalue ParmVar 0x9fa6930 '__last' '_InputIterator'))))

;
        void push_back(_CharT __c) (CompoundStmt 0x9fc75f0 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0x9fc7148 <line:1044:2, col:42>
    0x9fc7030 "const size_type __len =
      (CXXOperatorCallExpr 0x9fc7120 <col:26, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc70e8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (IntegerLiteral 0x9fc7068 <col:26> 'int' 1)
        (CallExpr 0x9fc70c8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fc7090 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9fc7080 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x9fc7380 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0x9fc72e8 <line:1045:6, col:57> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9fc7218 <col:6, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc71d8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
        (DeclRefExpr 0x9fc7158 <col:6> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fc7030 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9fc71b8 <col:14, col:29> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fc7180 <col:14, col:20> '<dependent type>' lvalue
            (CXXThisExpr 0x9fc7170 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9fc72c8 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc7290 <col:34, col:44> '<dependent type>' lvalue
          (CallExpr 0x9fc7270 <col:34, col:41> '<dependent type>'
            (MemberExpr 0x9fc7250 <col:34> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9fc7240 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x9fc7360 <line:1046:4, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc7310 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc7300 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc7344 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fc7030 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (CallExpr 0x9fc7508 <line:1047:2, col:50> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fc73c8 <col:2, col:15> '<dependent type>' lvalue)
    (ArraySubscriptExpr 0x9fc74d8 <col:22, col:44> '<dependent type>' lvalue
      (CallExpr 0x9fc7450 <col:22, col:30> '<dependent type>'
        (UnresolvedMemberExpr 0x9fc7410 <col:22> '<bound member function type>' lvalue))
      (CallExpr 0x9fc74b8 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc7480 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9fc7470 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9fc74ec <col:47> '_CharT' lvalue ParmVar 0x9fa6a70 '__c' '_CharT'))
  (CallExpr 0x9fc75d0 <line:1048:2, col:44> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fc7580 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9fc7560 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9fc7540 <col:2> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9fc7530 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9fc75b4 <col:39> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fc7030 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))


        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x9fc78c8 </usr/include/c++/4.6/bits/basic_string.h:1090:7, line:1092:37>
  (ReturnStmt 0x9fc78b8 <line:1090:9, line:1092:34>
    (CallExpr 0x9fc7890 <line:1090:16, line:1092:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc7620 <line:1090:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc7610 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9fc77c0 <col:29, line:1091:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc7788 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (CallExpr 0x9fc76a8 <line:1090:29, col:43> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fc7670 <col:29, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9fc7654 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fa6c50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9fc7760 <line:1091:10, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fc76e0 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9fc76c4 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fa6c50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9fc7714 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa6c90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9fc772c <col:32> 'const char [21]' lvalue "basic_string::assign")))
      (CallExpr 0x9fc7868 <line:1092:8, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc7800 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9fc77e4 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fa6c50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fc7834 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa6c90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9fc784c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa6cd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s) (CompoundStmt 0x9fc7a18 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0x9fc78e0 <line:1119:32>)
  (ReturnStmt 0x9fc7a08 <line:1120:2, col:51>
    (CallExpr 0x9fc79e0 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc7900 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc78f0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc7934 <col:22> 'const _CharT *' lvalue ParmVar 0x9fa6ed0 '__s' 'const _CharT *')
      (CallExpr 0x9fc79c0 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc7970 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fc79a4 <col:47> 'const _CharT *' lvalue ParmVar 0x9fa6ed0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(size_type __n, _CharT __c) (CompoundStmt 0x9fc7b78 </usr/include/c++/4.6/bits/basic_string.h:1134:7, col:70>
  (ReturnStmt 0x9fc7b68 <col:9, col:67>
    (CallExpr 0x9fc7b38 <col:16, col:67> '<dependent type>'
      (MemberExpr 0x9fc7a40 <col:16> '<bound member function type>' ->_M_replace_aux 0x9fb1220
        (CXXThisExpr 0x9fc7a30 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXUnresolvedConstructExpr 0x9fc7a80 <col:31, col:42> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9fc7a68 <col:41> 'int' 0))
      (CallExpr 0x9fc7ae8 <col:45, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc7ab0 <col:45, col:51> '<dependent type>' lvalue
          (CXXThisExpr 0x9fc7aa0 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9fc7b04 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa6fa0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fc7b1c <col:64> '_CharT' lvalue ParmVar 0x9fa6fe0 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9fc7ce8 </usr/include/c++/4.6/bits/basic_string.h:1147:9, col:74>
  (ReturnStmt 0x9fc7cd8 <col:11, col:71>
    (CallExpr 0x9fc7ca8 <col:18, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc7ba0 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc7b90 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fc7c08 <col:32, col:42> '<dependent type>'
        (MemberExpr 0x9fc7be8 <col:32> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
          (CXXThisExpr 0x9fc7bd8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9fc7c58 <col:45, col:53> '<dependent type>'
        (MemberExpr 0x9fc7c38 <col:45> '<bound member function type>' ->_M_iend 0x9f9b130
          (CXXThisExpr 0x9fc7c28 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x9fc7c74 <col:56> '_InputIterator' lvalue ParmVar 0x9fa7110 '__first' '_InputIterator')
      (DeclRefExpr 0x9fc7c8c <col:65> '_InputIterator' lvalue ParmVar 0x9fa7150 '__last' '_InputIterator'))))

;
        void insert(iterator __p, size_type __n, _CharT __c) (CompoundStmt 0x9fc7dd8 </usr/include/c++/4.6/bits/basic_string.h:1174:7, col:45>
  (CallExpr 0x9fc7da8 <col:9, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fc7d10 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9fc7d00 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9fc7d44 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fa7270 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9fc7d5c <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fa7270 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9fc7d74 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fa72b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9fc7d8c <col:38> '_CharT' lvalue ParmVar 0x9faa9e0 '__c' '_CharT')))


        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end) (CompoundStmt 0x9fc7ec8 </usr/include/c++/4.6/bits/basic_string.h:1190:9, col:50>
  (CallExpr 0x9fc7e98 <col:11, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fc7e00 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9fc7df0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9fc7e34 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9faab70 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9fc7e4c <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9faab70 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x9fc7e64 <col:35> '_InputIterator' lvalue ParmVar 0x9faabb0 '__beg' '_InputIterator')
    (DeclRefExpr 0x9fc7e7c <col:42> '_InputIterator' lvalue ParmVar 0x9faabf0 '__end' '_InputIterator')))

;
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9fc8048 </usr/include/c++/4.6/bits/basic_string.h:1220:7, col:73>
  (ReturnStmt 0x9fc8038 <col:9, col:70>
    (CallExpr 0x9fc8008 <col:16, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc7ef0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc7ee0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc7f24 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9faad50 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fc7f3c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9faada0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')
      (CXXUnresolvedConstructExpr 0x9fc7f78 <col:44, col:55> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9fc7f60 <col:54> 'int' 0))
      (CallExpr 0x9fc7fe8 <col:58, col:69> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc7fb0 <col:58, col:64> '<dependent type>' lvalue
          (DeclRefExpr 0x9fc7f94 <col:58> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9faada0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n) (CompoundStmt 0x9fc8330 </usr/include/c++/4.6/bits/basic_string.h:1243:7, line:1245:38>
  (ReturnStmt 0x9fc8320 <line:1243:9, line:1245:35>
    (CallExpr 0x9fc82f8 <line:1243:16, line:1245:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc8070 <line:1243:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc8060 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc80a4 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9faaeb0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9fc8228 <col:37, line:1244:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc81f0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (CallExpr 0x9fc8110 <line:1243:37, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fc80d8 <col:37, col:43> '<dependent type>' lvalue
            (DeclRefExpr 0x9fc80bc <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9faaf00 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9fc81c8 <line:1244:10, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fc8148 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9fc812c <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9faaf00 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9fc817c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9faaf40 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9fc8194 <col:33> 'const char [21]' lvalue "basic_string::insert")))
      (CallExpr 0x9fc82d0 <line:1245:8, col:34> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc8268 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9fc824c <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9faaf00 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fc829c <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9faaf40 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9fc82b4 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9faaf80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s) (CompoundStmt 0x9fc8498 </usr/include/c++/4.6/bits/basic_string.h:1283:7, line:1286:7>
  (NullStmt 0x9fc8348 <line:1284:32>)
  (ReturnStmt 0x9fc8488 <line:1285:2, col:58>
    (CallExpr 0x9fc8460 <col:9, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fc8368 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc8358 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc839c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fab290 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fc83b4 <col:29> 'const _CharT *' lvalue ParmVar 0x9fab2e0 '__s' 'const _CharT *')
      (CallExpr 0x9fc8440 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fc83f0 <col:34, col:47> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fc8424 <col:54> 'const _CharT *' lvalue ParmVar 0x9fab2e0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, size_type __n, _CharT __c) (CompoundStmt 0x9fc8630 </usr/include/c++/4.6/bits/basic_string.h:1306:7, line:1307:35>
  (ReturnStmt 0x9fc8620 <line:1306:9, line:1307:32>
    (CallExpr 0x9fc85f0 <line:1306:16, line:1307:32> '<dependent type>'
      (MemberExpr 0x9fc84c0 <line:1306:16> '<bound member function type>' ->_M_replace_aux 0x9fb1220
        (CXXThisExpr 0x9fc84b0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fc8558 <col:31, col:69> '<dependent type>'
        (MemberExpr 0x9fc84f0 <col:31> '<bound member function type>' ->_M_check 0x9f9b310
          (CXXThisExpr 0x9fc84e0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fc8510 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fab3f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9fc8528 <col:47> 'const char [21]' lvalue "basic_string::insert"))
      (CXXUnresolvedConstructExpr 0x9fc85a0 <line:1307:10, col:21> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x9fc8588 <col:20> 'int' 0))
      (DeclRefExpr 0x9fc85bc <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fab430 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fc85d4 <col:29> '_CharT' lvalue ParmVar 0x9fab470 '__c' '_CharT'))))


        iterator insert(iterator __p, _CharT __c) (CompoundStmt 0x9fc8a48 </usr/include/c++/4.6/bits/basic_string.h:1323:7, line:1329:7>
  (NullStmt 0x9fc8648 <line:1324:66>)
  (DeclStmt 0x9fc8760 <line:1325:2, col:43>
    0x9fc8660 "const size_type __pos =
      (CXXOperatorCallExpr 0x9fc8738 <col:26, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc8700 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fc8694 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fab5b0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9fc86e0 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x9fc86c0 <col:32> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
            (CXXThisExpr 0x9fc86b0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x9fc8850 <line:1326:2, col:55> '<dependent type>'
    (MemberExpr 0x9fc8780 <col:2> '<bound member function type>' ->_M_replace_aux 0x9fb1220
      (CXXThisExpr 0x9fc8770 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9fc87a0 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fc8660 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9fc87d8 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9fc87c0 <col:34> 'int' 0))
    (CXXUnresolvedConstructExpr 0x9fc8818 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9fc8800 <col:48> 'int' 1))
    (DeclRefExpr 0x9fc8834 <col:52> '_CharT' lvalue ParmVar 0x9fab5f0 '__c' '_CharT'))
  (CallExpr 0x9fc8908 <line:1327:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fc88d0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9fc88b0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9fc8890 <col:2> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9fc8880 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x9fc8a38 <line:1328:2, col:35>
    (CXXUnresolvedConstructExpr 0x9fc8a18 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9fc89f0 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc89b8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (CallExpr 0x9fc8980 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9fc8940 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9fc899c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fc8660 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &erase(size_type __pos = (IntegerLiteral 0x9fb9d98 </usr/include/c++/4.6/bits/basic_string.h:1346:31> 'int' 0)
, size_type __n = (DeclRefExpr 0x9fb9db0 </usr/include/c++/4.6/bits/basic_string.h:1346:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) (CompoundStmt 0x9fc8c68 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CallExpr 0x9fc8c08 <line:1348:2, line:1349:39> '<dependent type>'
    (MemberExpr 0x9fc8a80 <line:1348:2> '<bound member function type>' ->_M_mutate 0x9fa18c0
      (CXXThisExpr 0x9fc8a70 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x9fc8b18 <col:12, col:49> '<dependent type>'
      (MemberExpr 0x9fc8ab0 <col:12> '<bound member function type>' ->_M_check 0x9f9b310
        (CXXThisExpr 0x9fc8aa0 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc8ad0 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fab700 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9fc8ae8 <col:28> 'const char [20]' lvalue "basic_string::erase"))
    (CallExpr 0x9fc8ba0 <line:1349:5, col:24> '<dependent type>'
      (MemberExpr 0x9fc8b50 <col:5> '<bound member function type>' ->_M_limit 0x9f9b630
        (CXXThisExpr 0x9fc8b40 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fc8b70 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fab700 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fc8b88 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fab740 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CXXUnresolvedConstructExpr 0x9fc8be8 <col:27, col:38> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9fc8bd0 <col:37> 'int' 0)))
  (ReturnStmt 0x9fc8c58 <line:1350:2, col:10>
    (UnaryOperator 0x9fc8c40 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fc8c30 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator erase(iterator __position) (CompoundStmt 0x9fc9fc8 </usr/include/c++/4.6/bits/basic_string.h:1363:7, line:1370:7>
  (NullStmt 0x9fc8c80 <line:1365:32>)
  (DeclStmt 0x9fc8da0 <line:1366:2, col:50>
    0x9fc8ca0 "const size_type __pos =
      (CXXOperatorCallExpr 0x9fc8d78 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc8d40 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fc8cd4 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fab850 '__position' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9fc8d20 <col:39, col:49> '<dependent type>'
          (MemberExpr 0x9fc8d00 <col:39> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
            (CXXThisExpr 0x9fc8cf0 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x9fc8e78 <line:1367:2, col:45> '<dependent type>'
    (MemberExpr 0x9fc8dc0 <col:2> '<bound member function type>' ->_M_mutate 0x9fa18c0
      (CXXThisExpr 0x9fc8db0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9fc8de0 <col:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fc8ca0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x9fc8e18 <col:19, col:30> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9fc8e00 <col:29> 'int' 1))
    (CXXUnresolvedConstructExpr 0x9fc8e58 <col:33, col:44> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9fc8e40 <col:43> 'int' 0)))
  (CallExpr 0x9fc9e88 <line:1368:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fc9e50 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x9fc9e30 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x9fc9e10 <col:2> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9fc8ea0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x9fc9fb8 <line:1369:2, col:35>
    (CXXUnresolvedConstructExpr 0x9fc9f98 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x9fc9f70 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x9fc9f38 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (CallExpr 0x9fc9f00 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x9fc9ec0 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9fc9f1c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fc8ca0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        iterator erase(iterator __first, iterator __last);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9fca188 </usr/include/c++/4.6/bits/basic_string.h:1402:7, col:74>
  (ReturnStmt 0x9fca178 <col:9, col:71>
    (CallExpr 0x9fca148 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fca000 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fc9ff0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fca034 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fabab0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fca04c <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fabaf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fca0b8 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fca080 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9fca064 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fabb40 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9fca128 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fca0f0 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x9fca0d4 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fabb40 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) (CompoundStmt 0x9fca490 </usr/include/c++/4.6/bits/basic_string.h:1425:7, line:1427:40>
  (ReturnStmt 0x9fca480 <line:1425:9, line:1427:37>
    (CallExpr 0x9fca450 <line:1425:16, line:1427:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fca1b0 <line:1425:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fca1a0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fca1e4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fabc80 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fca1fc <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fabcc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9fca380 <col:44, line:1426:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9fca348 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870)
        (CallExpr 0x9fca268 <line:1425:44, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fca230 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x9fca214 <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fabd10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x9fca320 <line:1426:11, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fca2a0 <col:11, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9fca284 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fabd10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x9fca2d4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fabd50 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x9fca2ec <col:34> 'const char [22]' lvalue "basic_string::replace")))
      (CallExpr 0x9fca428 <line:1427:9, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fca3c0 <col:9, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9fca3a4 <col:9> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fabd10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fca3f4 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fabd50 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9fca40c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fabd90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s) (CompoundStmt 0x9fca618 </usr/include/c++/4.6/bits/basic_string.h:1467:7, line:1470:7>
  (NullStmt 0x9fca4a8 <line:1468:32>)
  (ReturnStmt 0x9fca608 <line:1469:2, col:65>
    (CallExpr 0x9fca5d8 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fca4c8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fca4b8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fca4fc <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fac0f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fca514 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fac130 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fca52c <col:36> 'const _CharT *' lvalue ParmVar 0x9fac180 '__s' 'const _CharT *')
      (CallExpr 0x9fca5b8 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fca568 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fca59c <col:61> 'const _CharT *' lvalue ParmVar 0x9fac180 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x9fca800 </usr/include/c++/4.6/bits/basic_string.h:1490:7, line:1491:45>
  (ReturnStmt 0x9fca7f0 <line:1490:9, line:1491:42>
    (CallExpr 0x9fca7c0 <line:1490:16, line:1491:42> '<dependent type>'
      (MemberExpr 0x9fca640 <line:1490:16> '<bound member function type>' ->_M_replace_aux 0x9fb1220
        (CXXThisExpr 0x9fca630 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fca6e0 <col:31, col:70> '<dependent type>'
        (MemberExpr 0x9fca670 <col:31> '<bound member function type>' ->_M_check 0x9f9b310
          (CXXThisExpr 0x9fca660 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fca690 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fac2c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9fca6a8 <col:47> 'const char [22]' lvalue "basic_string::replace"))
      (CallExpr 0x9fca768 <line:1491:10, col:30> '<dependent type>'
        (MemberExpr 0x9fca718 <col:10> '<bound member function type>' ->_M_limit 0x9f9b630
          (CXXThisExpr 0x9fca708 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fca738 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fac2c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9fca750 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fac300 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9fca78c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fac340 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fca7a4 <col:39> '_CharT' lvalue ParmVar 0x9fac380 '__c' '_CharT'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9fca9b0 </usr/include/c++/4.6/bits/basic_string.h:1508:7, col:74>
  (ReturnStmt 0x9fca9a0 <col:9, col:71>
    (CallExpr 0x9fca970 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fca828 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fca818 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fca85c <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fac4c0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9fca874 <col:36> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fac500 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (CallExpr 0x9fca8e0 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fca8a8 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x9fca88c <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fac550 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9fca950 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fca918 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x9fca8fc <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fac550 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s, size_type __n) (CompoundStmt 0x9fcabe8 </usr/include/c++/4.6/bits/basic_string.h:1526:7, line:1530:7>
  (NullStmt 0x9fca9c8 <line:1528:27>)
  (ReturnStmt 0x9fcabd8 <line:1529:2, col:64>
    (CallExpr 0x9fcaba8 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fca9e8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fca9d8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9fcaac0 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcaa88 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcaa1c <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fac690 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9fcaa68 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9fcaa48 <col:30> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
            (CXXThisExpr 0x9fcaa38 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9fcab50 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcab18 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcaae4 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fac6d0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9fcaafc <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fac690 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9fcab74 <col:56> 'const _CharT *' lvalue ParmVar 0x9fac720 '__s' 'const _CharT *')
      (DeclRefExpr 0x9fcab8c <col:61> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fac760 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s) (CompoundStmt 0x9fcad70 </usr/include/c++/4.6/bits/basic_string.h:1547:7, line:1550:7>
  (NullStmt 0x9fcac00 <line:1548:32>)
  (ReturnStmt 0x9fcad60 <line:1549:2, col:64>
    (CallExpr 0x9fcad30 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcac20 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcac10 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fcac54 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fac8a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9fcac6c <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fac8e0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9fcac84 <col:35> 'const _CharT *' lvalue ParmVar 0x9fac930 '__s' 'const _CharT *')
      (CallExpr 0x9fcad10 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcacc0 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fcacf4 <col:60> 'const _CharT *' lvalue ParmVar 0x9fac930 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, size_type __n, _CharT __c) (CompoundStmt 0x9fcaf90 </usr/include/c++/4.6/bits/basic_string.h:1568:7, line:1572:7>
  (NullStmt 0x9fcad88 <line:1570:27>)
  (ReturnStmt 0x9fcaf80 <line:1571:2, col:65>
    (CallExpr 0x9fcaf50 <col:9, col:65> '<dependent type>'
      (MemberExpr 0x9fcada8 <col:9> '<bound member function type>' ->_M_replace_aux 0x9fb1220
        (CXXThisExpr 0x9fcad98 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9fcae68 <col:24, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcae30 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcadc8 <col:24> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fafe70 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9fcae10 <col:31, col:41> '<dependent type>'
          (MemberExpr 0x9fcadf0 <col:31> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
            (CXXThisExpr 0x9fcade0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9fcaef8 <col:44, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcaec0 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcae8c <col:44> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fafeb0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9fcaea4 <col:51> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fafe70 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9fcaf1c <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fafef0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fcaf34 <col:62> '_CharT' lvalue ParmVar 0x9faff30 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2) (CompoundStmt 0x9fcb290 </usr/include/c++/4.6/bits/basic_string.h:1592:9, line:1598:2>
  (NullStmt 0x9fcafa8 <line:1594:29>)
  (NullStmt 0x9fcafb8 <line:1595:46>)
  (DeclStmt 0x9fcb160 <line:1596:4, col:72>
    0x9fcb130 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (ReturnStmt 0x9fcb280 <line:1597:4, col:66>
    (CallExpr 0x9fcb250 <col:11, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0x9fcb180 <col:11> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9fcb1c0 <col:31> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb00c0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9fcb1d8 <col:37> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0100 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x9fcb1f0 <col:43> '_InputIterator' lvalue ParmVar 0x9fb0140 '__k1' '_InputIterator')
      (DeclRefExpr 0x9fcb208 <col:49> '_InputIterator' lvalue ParmVar 0x9fb0180 '__k2' '_InputIterator')
      (CXXUnresolvedConstructExpr 0x9fcb238 <col:55, col:65> '_Integral':'typename std::__is_integer<_InputIterator>::__type'))))

;
        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x9fcb558 </usr/include/c++/4.6/bits/basic_string.h:1604:7, line:1610:7>
  (NullStmt 0x9fcb2b0 <line:1606:27>)
  (NullStmt 0x9fcb2c0 <line:1607:44>)
  (ReturnStmt 0x9fcb548 <line:1608:2, line:1609:26>
    (CallExpr 0x9fcb518 <line:1608:9, line:1609:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcb2e0 <line:1608:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcb2d0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9fcb3b8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcb380 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcb314 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb02e0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9fcb360 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9fcb340 <col:30> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
            (CXXThisExpr 0x9fcb330 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9fcb448 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcb410 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcb3dc <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0320 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9fcb3f4 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb02e0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9fcb46c <line:1609:9> '_CharT *' lvalue ParmVar 0x9fb0370 '__k1' '_CharT *')
      (CXXOperatorCallExpr 0x9fcb4f0 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcb4b8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcb484 <col:15> '_CharT *' lvalue ParmVar 0x9fb03c0 '__k2' '_CharT *')
        (DeclRefExpr 0x9fcb49c <col:22> '_CharT *' lvalue ParmVar 0x9fb0370 '__k1' '_CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x9fcb820 </usr/include/c++/4.6/bits/basic_string.h:1615:7, line:1621:7>
  (NullStmt 0x9fcb578 <line:1617:27>)
  (NullStmt 0x9fcb588 <line:1618:44>)
  (ReturnStmt 0x9fcb810 <line:1619:2, line:1620:26>
    (CallExpr 0x9fcb7e0 <line:1619:9, line:1620:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcb5a8 <line:1619:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcb598 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9fcb680 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcb648 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcb5dc <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0500 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9fcb628 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9fcb608 <col:30> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
            (CXXThisExpr 0x9fcb5f8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9fcb710 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcb6d8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcb6a4 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0540 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9fcb6bc <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0500 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9fcb734 <line:1620:9> 'const _CharT *' lvalue ParmVar 0x9fb0590 '__k1' 'const _CharT *')
      (CXXOperatorCallExpr 0x9fcb7b8 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcb780 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcb74c <col:15> 'const _CharT *' lvalue ParmVar 0x9fb05e0 '__k2' 'const _CharT *')
        (DeclRefExpr 0x9fcb764 <col:22> 'const _CharT *' lvalue ParmVar 0x9fb0590 '__k1' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2) (CompoundStmt 0x9fcbb40 </usr/include/c++/4.6/bits/basic_string.h:1625:7, line:1631:7>
  (NullStmt 0x9fcb840 <line:1627:27>)
  (NullStmt 0x9fcb850 <line:1628:44>)
  (ReturnStmt 0x9fcbb30 <line:1629:2, line:1630:33>
    (CallExpr 0x9fcbb00 <line:1629:9, line:1630:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcb870 <line:1629:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcb860 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9fcb948 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcb910 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcb8a4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0720 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9fcb8f0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9fcb8d0 <col:30> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
            (CXXThisExpr 0x9fcb8c0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9fcb9d8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcb9a0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcb96c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0760 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9fcb984 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0720 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x9fcba50 <line:1630:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcba18 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9fcb9fc <col:9> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb07a0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x9fcbad8 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcbaa0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcba6c <col:22> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb07e0 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9fcba84 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb07a0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x9fcd200 </usr/include/c++/4.6/bits/basic_string.h:1636:7, line:1642:7>
  (NullStmt 0x9fcbb60 <line:1638:27>)
  (NullStmt 0x9fcbb70 <line:1639:44>)
  (ReturnStmt 0x9fcd1f0 <line:1640:2, line:1641:33>
    (CallExpr 0x9fcd1c0 <line:1640:9, line:1641:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcbb90 <line:1640:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcbb80 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9fcbc68 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcbc30 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcbbc4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0920 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9fcbc10 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x9fcbbf0 <col:30> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
            (CXXThisExpr 0x9fcbbe0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9fcbcf8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcbcc0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcbc8c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0960 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9fcbca4 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0920 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x9fcbd70 <line:1641:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcbd38 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x9fcbd1c <col:9> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb09a0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x9fcd198 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcbdc0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcbd8c <col:22> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb09e0 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9fcbda4 <col:29> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb09a0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


    private:
    private:
        template <class _Integer> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x9fcd418 </usr/include/c++/4.6/bits/basic_string.h:1668:9, col:79>
  (ReturnStmt 0x9fcd408 <col:11, col:76>
    (CallExpr 0x9fcd3d8 <col:18, col:76> '<dependent type>'
      (MemberExpr 0x9fcd230 <col:18> '<bound member function type>' ->_M_replace_aux 0x9fb1220
        (CXXThisExpr 0x9fcd220 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9fcd2f0 <col:33, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcd2b8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcd250 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0bb0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9fcd298 <col:40, col:50> '<dependent type>'
          (MemberExpr 0x9fcd278 <col:40> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
            (CXXThisExpr 0x9fcd268 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x9fcd380 <col:53, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0x9fcd348 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9fcd314 <col:53> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0bf0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9fcd32c <col:60> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9fb0bb0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x9fcd3a4 <col:66> '_Integer' lvalue ParmVar 0x9fb0c30 '__n' '_Integer')
      (DeclRefExpr 0x9fcd3bc <col:71> '_Integer' lvalue ParmVar 0x9fb0c70 '__val' '_Integer'))))

;
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2);
        template <class _InIterator> static _CharT *_S_construct_aux(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::__false_type) (CompoundStmt 0x9fcd660 </usr/include/c++/4.6/bits/basic_string.h:1689:2, line:1692:2>
  (DeclStmt 0x9fcd550 <line:1690:11, col:80>
    0x9fcd520 "typedef typename iterator_traits<_InIterator>::iterator_category _Tag")
  (ReturnStmt 0x9fcd650 <line:1691:11, col:56>
    (CallExpr 0x9fcd620 <col:18, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0x9fcd560 <col:18> '<dependent type>' lvalue (no ADL) = '1' 0x9fb44d0 0x9fb43a0 0x9fb4110 0x9fb1d30)
      (DeclRefExpr 0x9fcd5a0 <col:31> '_InIterator' lvalue ParmVar 0x9fb14a0 '__beg' '_InIterator')
      (DeclRefExpr 0x9fcd5b8 <col:38> '_InIterator' lvalue ParmVar 0x9fb14e0 '__end' '_InIterator')
      (DeclRefExpr 0x9fcd5d0 <col:45> 'const _Alloc' lvalue ParmVar 0x9fb1530 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x9fcd608 <col:50, col:55> '_Tag':'typename iterator_traits<_InIterator>::iterator_category'))))

;
        template <class _Integer> static _CharT *_S_construct_aux(_Integer __beg, _Integer __end, const _Alloc &__a, std::__true_type) (CompoundStmt 0x9fcd730 </usr/include/c++/4.6/bits/basic_string.h:1700:9, line:1701:22>
  (ReturnStmt 0x9fcd720 <line:1700:11, line:1701:19>
    (CallExpr 0x9fcd6f8 <line:1700:18, line:1701:19> '<dependent type>'
      (DeclRefExpr 0x9fcd678 <line:1700:18> '_CharT *(size_type, _CharT, const _Alloc &)' lvalue CXXMethod 0x9fb1ab0 '_S_construct_aux_2' '_CharT *(size_type, _CharT, const _Alloc &)')
      (CXXStaticCastExpr 0x9fcd6b0 <col:37, col:65> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x9fcd690 <col:60> '_Integer' lvalue ParmVar 0x9fb1730 '__beg' '_Integer'))
      (DeclRefExpr 0x9fcd6c8 <line:1701:9> '_Integer' lvalue ParmVar 0x9fb1770 '__end' '_Integer')
      (DeclRefExpr 0x9fcd6e0 <col:16> 'const _Alloc' lvalue ParmVar 0x9fb17c0 '__a' 'const _Alloc &'))))

;
        static _CharT *_S_construct_aux_2(size_type __req, _CharT __c, const _Alloc &__a) (CompoundStmt 0x9fcd808 </usr/include/c++/4.6/bits/basic_string.h:1705:7, col:47>
  (ReturnStmt 0x9fcd7f8 <col:9, col:44>
    (CallExpr 0x9fcd7d0 <col:16, col:44> '<dependent type>'
      (UnresolvedLookupExpr 0x9fcd748 <col:16> '<dependent type>' lvalue (no ADL) = '1' 0x9fb44d0 0x9fb43a0 0x9fb4110 0x9fb1d30)
      (DeclRefExpr 0x9fcd788 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb1960 '__req' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fcd7a0 <col:36> '_CharT' lvalue ParmVar 0x9fb19a0 '__c' '_CharT')
      (DeclRefExpr 0x9fcd7b8 <col:41> 'const _Alloc' lvalue ParmVar 0x9fb19f0 '__a' 'const _Alloc &'))))


        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a) (CompoundStmt 0x9fcda50 </usr/include/c++/4.6/bits/basic_string.h:1710:2, line:1713:9>
  (DeclStmt 0x9fcd950 <line:1711:4, col:69>
    0x9fcd920 "typedef typename std::__is_integer<_InIterator>::__type _Integral")
  (ReturnStmt 0x9fcda40 <line:1712:4, col:58>
    (CallExpr 0x9fcda10 <col:11, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x9fcd960 <col:11> '<dependent type>' lvalue (no ADL) = '1' 0x9fb1920 0x9fb1690)
      (DeclRefExpr 0x9fcd998 <col:28> '_InIterator' lvalue ParmVar 0x9fb1b80 '__beg' '_InIterator')
      (DeclRefExpr 0x9fcd9b0 <col:35> '_InIterator' lvalue ParmVar 0x9fb1bc0 '__end' '_InIterator')
      (DeclRefExpr 0x9fcd9c8 <col:42> 'const _Alloc' lvalue ParmVar 0x9fb1c10 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x9fcd9f8 <col:47, col:57> '_Integral':'typename std::__is_integer<_InIterator>::__type'))))

;
        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag);
        template <class _FwdIterator> static _CharT *_S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc &__a, std::forward_iterator_tag);
        static _CharT *_S_construct(size_type __req, _CharT __c, const _Alloc &__a);
    public:
    public:
        size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x9fb9dc8 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const;
        void swap(basic_string<_CharT, _Traits, _Alloc> &__s);
        const _CharT *c_str() const (CompoundStmt 0x9fcdae8 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9fcdad8 <col:9, col:24>
    (CallExpr 0x9fcdab8 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x9fcda78 <col:16> '<bound member function type>' lvalue))))


        const _CharT *data() const (CompoundStmt 0x9fcdb80 </usr/include/c++/4.6/bits/basic_string.h:1776:7, col:27>
  (ReturnStmt 0x9fcdb70 <col:9, col:24>
    (CallExpr 0x9fcdb50 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x9fcdb10 <col:16> '<bound member function type>' lvalue))))


        allocator_type get_allocator() const (CompoundStmt 0x9fcdbd8 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x9fcdbc8 <col:9, col:16>
    (MemberExpr 0x9fcdba8 <col:16> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x9f9add0
      (CXXThisExpr 0x9fcdb98 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))


        size_type find(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9fb9de0 </usr/include/c++/4.6/bits/basic_string.h:1810:57> 'int' 0)
) const (CompoundStmt 0x9fcdd68 </usr/include/c++/4.6/bits/basic_string.h:1811:7, col:63>
  (ReturnStmt 0x9fcdd58 <col:9, col:60>
    (CallExpr 0x9fcdd30 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcdc00 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcdbf0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fcdc88 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcdc50 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x9fcdc34 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb4c00 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9fcdca4 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb4c40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fcdd10 <col:48, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcdcd8 <col:48, col:54> '<dependent type>' lvalue
          (DeclRefExpr 0x9fcdcbc <col:48> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb4c00 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9fb9df8 </usr/include/c++/4.6/bits/basic_string.h:1824:49> 'int' 0)
) const (CompoundStmt 0x9fcded0 </usr/include/c++/4.6/bits/basic_string.h:1825:7, line:1828:7>
  (NullStmt 0x9fcdd80 <line:1826:32>)
  (ReturnStmt 0x9fcdec0 <line:1827:2, col:56>
    (CallExpr 0x9fcde98 <col:9, col:56> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcdda0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcdd90 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fcddd4 <col:20> 'const _CharT *' lvalue ParmVar 0x9fb4d60 '__s' 'const _CharT *')
      (DeclRefExpr 0x9fcddec <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb4da0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fcde78 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcde28 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fcde5c <col:52> 'const _CharT *' lvalue ParmVar 0x9fb4d60 '__s' 'const _CharT *')))))


        size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x9fb9e10 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const;
        size_type rfind(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9fb9e28 </usr/include/c++/4.6/bits/basic_string.h:1854:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9fce060 </usr/include/c++/4.6/bits/basic_string.h:1855:7, col:64>
  (ReturnStmt 0x9fce050 <col:9, col:61>
    (CallExpr 0x9fce028 <col:16, col:61> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcdef8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcdee8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fcdf80 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcdf48 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9fcdf2c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb5010 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9fcdf9c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb5050 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fce008 <col:49, col:60> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcdfd0 <col:49, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x9fcdfb4 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb5010 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type rfind(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9fb9e40 </usr/include/c++/4.6/bits/basic_string.h:1882:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9fce1c8 </usr/include/c++/4.6/bits/basic_string.h:1883:7, line:1886:7>
  (NullStmt 0x9fce078 <line:1884:32>)
  (ReturnStmt 0x9fce1b8 <line:1885:2, col:57>
    (CallExpr 0x9fce190 <col:9, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fce098 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fce088 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fce0cc <col:21> 'const _CharT *' lvalue ParmVar 0x9fb5290 '__s' 'const _CharT *')
      (DeclRefExpr 0x9fce0e4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb52d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fce170 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fce120 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fce154 <col:53> 'const _CharT *' lvalue ParmVar 0x9fb5290 '__s' 'const _CharT *')))))


        size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x9fb9e58 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        size_type find_first_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9fb9e70 </usr/include/c++/4.6/bits/basic_string.h:1912:66> 'int' 0)
) const (CompoundStmt 0x9fce358 </usr/include/c++/4.6/bits/basic_string.h:1913:7, col:72>
  (ReturnStmt 0x9fce348 <col:9, col:69>
    (CallExpr 0x9fce320 <col:16, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fce1f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fce1e0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fce278 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fce240 <col:36, col:42> '<dependent type>' lvalue
          (DeclRefExpr 0x9fce224 <col:36> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb54c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9fce294 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb5500 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fce300 <col:57, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fce2c8 <col:57, col:63> '<dependent type>' lvalue
          (DeclRefExpr 0x9fce2ac <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb54c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9fb9e88 </usr/include/c++/4.6/bits/basic_string.h:1940:58> 'int' 0)
) const (CompoundStmt 0x9fce4c0 </usr/include/c++/4.6/bits/basic_string.h:1941:7, line:1944:7>
  (NullStmt 0x9fce370 <line:1942:32>)
  (ReturnStmt 0x9fce4b0 <line:1943:2, col:65>
    (CallExpr 0x9fce488 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fce390 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fce380 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fce3c4 <col:29> 'const _CharT *' lvalue ParmVar 0x9fb5740 '__s' 'const _CharT *')
      (DeclRefExpr 0x9fce3dc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb5780 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fce468 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fce418 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fce44c <col:61> 'const _CharT *' lvalue ParmVar 0x9fb5740 '__s' 'const _CharT *')))))


        size_type find_first_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9fb9ea0 </usr/include/c++/4.6/bits/basic_string.h:1959:51> 'int' 0)
) const (CompoundStmt 0x9fce588 </usr/include/c++/4.6/bits/basic_string.h:1960:7, col:40>
  (ReturnStmt 0x9fce578 <col:9, col:37>
    (CallExpr 0x9fce550 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fce4e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fce4d8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fce51c <col:27> '_CharT' lvalue ParmVar 0x9fb5850 '__c' '_CharT')
      (DeclRefExpr 0x9fce534 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb5890 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_last_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9fb9eb8 </usr/include/c++/4.6/bits/basic_string.h:1973:65> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9fce718 </usr/include/c++/4.6/bits/basic_string.h:1974:7, col:71>
  (ReturnStmt 0x9fce708 <col:9, col:68>
    (CallExpr 0x9fce6e0 <col:16, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fce5b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fce5a0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fce638 <col:35, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fce600 <col:35, col:41> '<dependent type>' lvalue
          (DeclRefExpr 0x9fce5e4 <col:35> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb5970 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9fce654 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb59b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fce6c0 <col:56, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fce688 <col:56, col:62> '<dependent type>' lvalue
          (DeclRefExpr 0x9fce66c <col:56> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb5970 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9fb9ed0 </usr/include/c++/4.6/bits/basic_string.h:2001:57> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9fce880 </usr/include/c++/4.6/bits/basic_string.h:2002:7, line:2005:7>
  (NullStmt 0x9fce730 <line:2003:32>)
  (ReturnStmt 0x9fce870 <line:2004:2, col:64>
    (CallExpr 0x9fce848 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fce750 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fce740 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fce784 <col:28> 'const _CharT *' lvalue ParmVar 0x9fb5bf0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9fce79c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb5c30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fce828 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fce7d8 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fce80c <col:60> 'const _CharT *' lvalue ParmVar 0x9fb5bf0 '__s' 'const _CharT *')))))


        size_type find_last_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9fb9ee8 </usr/include/c++/4.6/bits/basic_string.h:2020:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9fce948 </usr/include/c++/4.6/bits/basic_string.h:2021:7, col:41>
  (ReturnStmt 0x9fce938 <col:9, col:38>
    (CallExpr 0x9fce910 <col:16, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fce8a8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fce898 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fce8dc <col:28> '_CharT' lvalue ParmVar 0x9fb5d00 '__c' '_CharT')
      (DeclRefExpr 0x9fce8f4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb5d40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_first_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x9fb9f00 </usr/include/c++/4.6/bits/basic_string.h:2034:70> 'int' 0)
) const (CompoundStmt 0x9fcead8 </usr/include/c++/4.6/bits/basic_string.h:2035:7, col:76>
  (ReturnStmt 0x9fceac8 <col:9, col:73>
    (CallExpr 0x9fceaa0 <col:16, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fce970 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fce960 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fce9f8 <col:40, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fce9c0 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x9fce9a4 <col:40> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb5e20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9fcea14 <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb5e60 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fcea80 <col:61, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcea48 <col:61, col:67> '<dependent type>' lvalue
          (DeclRefExpr 0x9fcea2c <col:61> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb5e20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x9fb9f18 </usr/include/c++/4.6/bits/basic_string.h:2063:62> 'int' 0)
) const (CompoundStmt 0x9fcec40 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0x9fceaf0 <line:2065:32>)
  (ReturnStmt 0x9fcec30 <line:2066:2, col:69>
    (CallExpr 0x9fcec08 <col:9, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fceb10 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fceb00 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fceb44 <col:33> 'const _CharT *' lvalue ParmVar 0x9fb8a90 '__s' 'const _CharT *')
      (DeclRefExpr 0x9fceb5c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb8ad0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fcebe8 <col:45, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fceb98 <col:45, col:58> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fcebcc <col:65> 'const _CharT *' lvalue ParmVar 0x9fb8a90 '__s' 'const _CharT *')))))


        size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9fb9f30 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const;
        size_type find_last_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x9fb9f48 </usr/include/c++/4.6/bits/basic_string.h:2093:69> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9fcedd0 </usr/include/c++/4.6/bits/basic_string.h:2094:7, col:75>
  (ReturnStmt 0x9fcedc0 <col:9, col:72>
    (CallExpr 0x9fced98 <col:16, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcec68 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcec58 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fcecf0 <col:39, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcecb8 <col:39, col:45> '<dependent type>' lvalue
          (DeclRefExpr 0x9fcec9c <col:39> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb8cc0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x9fced0c <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb8d00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fced78 <col:60, col:71> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fced40 <col:60, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0x9fced24 <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb8cc0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x9fb9f60 </usr/include/c++/4.6/bits/basic_string.h:2122:61> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9fcef38 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0x9fcede8 <line:2124:32>)
  (ReturnStmt 0x9fcef28 <line:2125:2, col:68>
    (CallExpr 0x9fcef00 <col:9, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fcee08 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9fcedf8 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9fcee3c <col:32> 'const _CharT *' lvalue ParmVar 0x9fb8f40 '__s' 'const _CharT *')
      (DeclRefExpr 0x9fcee54 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb8f80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9fceee0 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcee90 <col:44, col:57> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fceec4 <col:64> 'const _CharT *' lvalue ParmVar 0x9fb8f40 '__s' 'const _CharT *')))))


        size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9fb9f78 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        basic_string<_CharT, _Traits, _Alloc> substr(size_type __pos = (IntegerLiteral 0x9fb9f90 </usr/include/c++/4.6/bits/basic_string.h:2154:32> 'int' 0)
, size_type __n = (DeclRefExpr 0x9fb9fa8 </usr/include/c++/4.6/bits/basic_string.h:2154:51> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9fcf070 </usr/include/c++/4.6/bits/basic_string.h:2155:7, line:2156:55>
  (ReturnStmt 0x9fcf060 <line:2155:9, line:2156:52>
    (CXXUnresolvedConstructExpr 0x9fcf038 <line:2155:16, line:2156:52> 'basic_string<_CharT, _Traits, _Alloc>'
      (UnaryOperator 0x9fcef68 <line:2155:29, col:30> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9fcef58 <col:30> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x9fceff8 <line:2156:8, col:46> '<dependent type>'
        (MemberExpr 0x9fcef90 <col:8> '<bound member function type>' ->_M_check 0x9f9b310
          (CXXThisExpr 0x9fcef80 <col:8> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fcefb0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb9160 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9fcefc8 <col:24> 'const char [21]' lvalue "basic_string::substr"))
      (DeclRefExpr 0x9fcf01c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fb91a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        int compare(const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x9fd1748 </usr/include/c++/4.6/bits/basic_string.h:2173:7, line:2182:7>
  (DeclStmt 0x9fcf130 <line:2174:2, col:39>
    0x9fcf090 "const size_type __size =
      (CallExpr 0x9fcf110 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fcf0d8 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0x9fcf0c8 <col:27> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9fd1320 <line:2175:2, col:40>
    0x9fcf150 "const size_type __osize =
      (CallExpr 0x9fd1300 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd12c8 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd12b0 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb92c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9fd1420 <line:2176:2, col:51>
    0x9fd1340 "const size_type __len =
      (CallExpr 0x9fd13f8 <col:26, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9fd1390 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8ec70 0x9e8f780)
        (DeclRefExpr 0x9fd13c8 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fcf090 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9fd13e0 <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fcf150 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9fd15f0 <line:2178:2, col:64>
    0x9fd1440 "int __r =
      (CallExpr 0x9fd15c8 <col:12, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd1498 <col:12, col:25> '<dependent type>' lvalue)
        (CallExpr 0x9fd1520 <col:33, col:41> '<dependent type>'
          (UnresolvedMemberExpr 0x9fd14e0 <col:33> '<bound member function type>' lvalue))
        (CallExpr 0x9fd1590 <col:44, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fd1558 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x9fd153c <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fb92c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9fd15ac <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fd1340 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9fd16f0 <line:2179:2, line:2180:36>
    <<<NULL>>>
    (UnaryOperator 0x9fd1638 <line:2179:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9fd1628 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9fd1618 <col:7> 'int' <LValueToRValue>
          (DeclRefExpr 0x9fd1600 <col:7> 'int' lvalue Var 0x9fd1440 '__r' 'int'))))
    (BinaryOperator 0x9fd16d8 <line:2180:4, col:36> '<dependent type>' '='
      (DeclRefExpr 0x9fd164c <col:4> 'int' lvalue Var 0x9fd1440 '__r' 'int')
      (CallExpr 0x9fd16b0 <col:10, col:36> '<dependent type>'
        (DeclRefExpr 0x9fd1664 <col:10> 'int (size_type, size_type)' lvalue CXXMethod 0x9fa1710 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9fd167c <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fcf090 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9fd1694 <col:29> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fcf150 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9fd1738 <line:2181:2, col:9>
    (ImplicitCastExpr 0x9fd1728 <col:9> 'int' <LValueToRValue>
      (DeclRefExpr 0x9fd170c <col:9> 'int' lvalue Var 0x9fd1440 '__r' 'int'))))


        int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const;
        int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const;
        int compare(const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const;
    };
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd20e0 </usr/include/c++/4.6/bits/basic_string.h:2307:5, line:2311:5>
  (DeclStmt 0x9fd2020 <line:2308:7, col:57>
    0x9fd1fb0 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x9fd2000 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9fd1fe4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd1b30 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9fd2098 <line:2309:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fd2048 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9fd2030 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9fd1fb0 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9fd207c <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd1ce0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9fd20d0 <line:2310:7, col:14>
    (DeclRefExpr 0x9fd20b8 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9fd1fb0 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9fd33f0 </usr/include/c++/4.6/bits/basic_string.h:2344:5, line:2348:5>
  (DeclStmt 0x9fd3330 <line:2345:7, col:57>
    0x9fd32c0 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x9fd3310 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9fd32f4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd2f60 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9fd33a8 <line:2346:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fd3358 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9fd3340 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9fd32c0 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9fd338c <col:20> 'const _CharT *' lvalue ParmVar 0x9fd2fd0 '__rhs' 'const _CharT *'))
  (ReturnStmt 0x9fd33e0 <line:2347:7, col:14>
    (DeclRefExpr 0x9fd33c8 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9fd32c0 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, _CharT __rhs) (CompoundStmt 0x9fd3d88 </usr/include/c++/4.6/bits/basic_string.h:2359:5, line:2365:5>
  (DeclStmt 0x9fd3af0 <line:2360:7, col:66>
    0x9fd3ac0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9fd3be0 <line:2361:7, col:61>
    0x9fd3bb0 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9fd3c70 <line:2362:7, col:33>
    0x9fd3c00 "__string_type __str =
      (ParenListExpr 0x9fd3c50 <col:26, col:32> '__string_type':'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9fd3c34 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd37b0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x9fd3d38 <line:2363:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fd3c98 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9fd3c80 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9fd3c00 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x9fd3d00 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x9fd3ce8 <col:32> 'int' 1))
    (DeclRefExpr 0x9fd3d1c <col:36> '_CharT' lvalue ParmVar 0x9fd37f0 '__rhs' '_CharT'))
  (ReturnStmt 0x9fd3d78 <line:2364:7, col:14>
    (DeclRefExpr 0x9fd3d5c <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9fd3c00 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd4438 </usr/include/c++/4.6/bits/basic_string.h:2428:5, col:41>
  (ReturnStmt 0x9fd4428 <col:7, col:38>
    (CXXOperatorCallExpr 0x9fd4400 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd43b0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd42e0 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
      (CallExpr 0x9fd4378 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd4328 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd4310 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd4030 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd435c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd41e0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9fd4398 <col:38> 'int' 0))))

;
    template <typename _CharT> inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) (CompoundStmt 0x9fd5198 </usr/include/c++/4.6/bits/basic_string.h:2435:5, line:2437:27>
  (ReturnStmt 0x9fd5188 <line:2435:7, line:2437:24>
    (ParenExpr 0x9fd5170 <line:2435:14, line:2437:24> '<dependent type>'
      (BinaryOperator 0x9fd5158 <line:2435:15, line:2437:23> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9fd4eb0 <line:2435:15, col:42> '<dependent type>'
          (UnresolvedLookupExpr 0x9fd4e60 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd4d50 0x9fd42e0 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
          (CallExpr 0x9fd4dd0 <col:15, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fd4d98 <col:15, col:21> '<dependent type>' lvalue
              (DeclRefExpr 0x9fd4d80 <col:15> 'const basic_string<_CharT>' lvalue ParmVar 0x9fd49f0 '__lhs' 'const basic_string<_CharT> &')))
          (CallExpr 0x9fd4e40 <col:31, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fd4e08 <col:31, col:37> '<dependent type>' lvalue
              (DeclRefExpr 0x9fd4dec <col:31> 'const basic_string<_CharT>' lvalue ParmVar 0x9fd4c40 '__rhs' 'const basic_string<_CharT> &'))))
        (UnaryOperator 0x9fd5140 <line:2436:11, line:2437:23> '<dependent type>' prefix '!'
          (CallExpr 0x9fd5118 <line:2436:12, line:2437:23> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9fd4fa0 <line:2436:12, col:38> '<dependent type>' lvalue)
            (CallExpr 0x9fd5018 <col:46, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fd4fe0 <col:46, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x9fd4fc4 <col:46> 'const basic_string<_CharT>' lvalue ParmVar 0x9fd49f0 '__lhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x9fd5088 <col:60, col:71> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fd5050 <col:60, col:66> '<dependent type>' lvalue
                (DeclRefExpr 0x9fd5034 <col:60> 'const basic_string<_CharT>' lvalue ParmVar 0x9fd4c40 '__rhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x9fd50f8 <line:2437:11, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fd50c0 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x9fd50a4 <col:11> 'const basic_string<_CharT>' lvalue ParmVar 0x9fd49f0 '__lhs' 'const basic_string<_CharT> &')))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd5700 </usr/include/c++/4.6/bits/basic_string.h:2449:5, col:41>
  (ReturnStmt 0x9fd56f0 <col:7, col:38>
    (CXXOperatorCallExpr 0x9fd56c8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd5670 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd55a0 0x9fd4d50 0x9fd42e0 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
      (CallExpr 0x9fd5638 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd55e8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd55d0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd54a0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd561c <col:28> 'const _CharT *' lvalue ParmVar 0x9fd52f0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9fd5658 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9fd5c70 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0x9fd5c60 <col:7, col:38>
    (CXXOperatorCallExpr 0x9fd5c38 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd5be0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd5b10 0x9fd55a0 0x9fd4d50 0x9fd42e0 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
      (CallExpr 0x9fd5ba8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd5b58 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd5b40 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd59a0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd5b8c <col:28> 'const _CharT *' lvalue ParmVar 0x9fd5a10 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9fd5bc8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd62c0 </usr/include/c++/4.6/bits/basic_string.h:2474:5, col:33>
  (ReturnStmt 0x9fd62b0 <col:7, col:30>
    (UnaryOperator 0x9fd6298 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9fd6280 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9fd6258 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9fd6200 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd5b10 0x9fd55a0 0x9fd4d50 0x9fd42e0 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
          (DeclRefExpr 0x9fd61d0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd5f10 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x9fd61e8 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd60c0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd67c0 </usr/include/c++/4.6/bits/basic_string.h:2486:5, col:33>
  (ReturnStmt 0x9fd67b0 <col:7, col:30>
    (UnaryOperator 0x9fd6798 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9fd6780 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9fd6758 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9fd6700 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd5b10 0x9fd55a0 0x9fd4d50 0x9fd42e0 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
          (DeclRefExpr 0x9fd66d0 <col:16> 'const _CharT *' lvalue ParmVar 0x9fd6410 '__lhs' 'const _CharT *')
          (DeclRefExpr 0x9fd66e8 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd65c0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9fd6cd0 </usr/include/c++/4.6/bits/basic_string.h:2498:5, col:33>
  (ReturnStmt 0x9fd6cc0 <col:7, col:30>
    (UnaryOperator 0x9fd6ca8 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x9fd6c90 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x9fd6c68 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9fd6c10 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd5b10 0x9fd55a0 0x9fd4d50 0x9fd42e0 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0)
          (DeclRefExpr 0x9fd6be0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd6a60 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x9fd6bf8 <col:25> 'const _CharT *' lvalue ParmVar 0x9fd6ad0 '__rhs' 'const _CharT *'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd7358 </usr/include/c++/4.6/bits/basic_string.h:2511:5, col:40>
  (ReturnStmt 0x9fd7348 <col:7, col:37>
    (CXXOperatorCallExpr 0x9fd7320 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd72e0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd7200 0x9e58c60 0x9e6ed20 0x9e72370)
      (CallExpr 0x9fd7298 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd7248 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd7230 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd6f70 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd727c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd7120 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9fd72c8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9fd7890 </usr/include/c++/4.6/bits/basic_string.h:2523:5, col:40>
  (ReturnStmt 0x9fd7880 <col:7, col:37>
    (CXXOperatorCallExpr 0x9fd7858 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd7810 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd7740 0x9fd7200 0x9e58c60 0x9e6ed20 0x9e72370)
      (CallExpr 0x9fd77d8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd7788 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd7770 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd75f0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd77bc <col:28> 'const _CharT *' lvalue ParmVar 0x9fd7660 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9fd77f8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd7db8 </usr/include/c++/4.6/bits/basic_string.h:2535:5, col:40>
  (ReturnStmt 0x9fd7da8 <col:7, col:37>
    (CXXOperatorCallExpr 0x9fd7d80 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd7d40 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0)
      (CallExpr 0x9fd7d08 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd7cb8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd7ca0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd7b90 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd7cec <col:28> 'const _CharT *' lvalue ParmVar 0x9fd79e0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9fd7d28 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd8428 </usr/include/c++/4.6/bits/basic_string.h:2548:5, col:40>
  (ReturnStmt 0x9fd8418 <col:7, col:37>
    (CXXOperatorCallExpr 0x9fd83f0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd83b0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd82e0 0x9e59dd0 0x9e70570 0x9e72cf0)
      (CallExpr 0x9fd8378 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd8328 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd8310 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd8050 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd835c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd8200 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9fd8398 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9fd8960 </usr/include/c++/4.6/bits/basic_string.h:2560:5, col:40>
  (ReturnStmt 0x9fd8950 <col:7, col:37>
    (CXXOperatorCallExpr 0x9fd8928 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd88e0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd8810 0x9fd82e0 0x9e59dd0 0x9e70570 0x9e72cf0)
      (CallExpr 0x9fd88a8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd8858 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd8840 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd86c0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd888c <col:28> 'const _CharT *' lvalue ParmVar 0x9fd8730 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9fd88c8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd8e90 </usr/include/c++/4.6/bits/basic_string.h:2572:5, col:40>
  (ReturnStmt 0x9fd8e80 <col:7, col:37>
    (CXXOperatorCallExpr 0x9fd8e58 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd8e10 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd7c70 0x9fd7740 0x9fd7200 0x9e58c60 0x9e6ed20 0x9e72370)
      (CallExpr 0x9fd8dd8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd8d88 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd8d70 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd8c60 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd8dbc <col:28> 'const _CharT *' lvalue ParmVar 0x9fd8ab0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9fd8df8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd9548 </usr/include/c++/4.6/bits/basic_string.h:2585:5, col:41>
  (ReturnStmt 0x9fd9538 <col:7, col:38>
    (CXXOperatorCallExpr 0x9fd9510 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd94d0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd9400 0x9e5a2f0 0x9e70960 0x9e73780)
      (CallExpr 0x9fd9498 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd9448 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd9430 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd9130 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd947c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd9320 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9fd94b8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9fd9a80 </usr/include/c++/4.6/bits/basic_string.h:2597:5, col:41>
  (ReturnStmt 0x9fd9a70 <col:7, col:38>
    (CXXOperatorCallExpr 0x9fd9a48 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd9a00 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd9930 0x9fd9400 0x9e5a2f0 0x9e70960 0x9e73780)
      (CallExpr 0x9fd99c8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd9978 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd9960 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd97e0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd99ac <col:28> 'const _CharT *' lvalue ParmVar 0x9fd9850 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9fd99e8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fd9fa8 </usr/include/c++/4.6/bits/basic_string.h:2609:5, col:41>
  (ReturnStmt 0x9fd9f98 <col:7, col:38>
    (CXXOperatorCallExpr 0x9fd9f70 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fd9f30 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00)
      (CallExpr 0x9fd9ef8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fd9ea8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fd9e90 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fd9d80 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fd9edc <col:28> 'const _CharT *' lvalue ParmVar 0x9fd9bd0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9fd9f18 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fda618 </usr/include/c++/4.6/bits/basic_string.h:2622:5, col:41>
  (ReturnStmt 0x9fda608 <col:7, col:38>
    (CXXOperatorCallExpr 0x9fda5e0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fda5a0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fda4d0 0x9e5a840 0x9e70d80 0x9e73c00)
      (CallExpr 0x9fda568 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fda518 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fda500 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fda240 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fda54c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fda3f0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x9fda588 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x9fdab50 </usr/include/c++/4.6/bits/basic_string.h:2634:5, col:41>
  (ReturnStmt 0x9fdab40 <col:7, col:38>
    (CXXOperatorCallExpr 0x9fdab18 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fdaad0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fdaa00 0x9fda4d0 0x9e5a840 0x9e70d80 0x9e73c00)
      (CallExpr 0x9fdaa98 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fdaa48 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fdaa30 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fda8b0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fdaa7c <col:28> 'const _CharT *' lvalue ParmVar 0x9fda920 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x9fdaab8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fdb080 </usr/include/c++/4.6/bits/basic_string.h:2646:5, col:41>
  (ReturnStmt 0x9fdb070 <col:7, col:38>
    (CXXOperatorCallExpr 0x9fdb048 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9fdb000 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9fd9e60 0x9fd9930 0x9fd9400 0x9e5a2f0 0x9e70960 0x9e73780)
      (CallExpr 0x9fdafc8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fdaf78 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x9fdaf60 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fdae50 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fdafac <col:28> 'const _CharT *' lvalue ParmVar 0x9fdaca0 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x9fdafe8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline void swap(basic_string<_CharT, _Traits, _Alloc> &__lhs, basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9fdb6c8 </usr/include/c++/4.6/bits/basic_string.h:2659:5, col:26>
  (CallExpr 0x9fdb6a8 <col:7, col:23> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fdb658 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9fdb640 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fdb360 '__lhs' 'basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9fdb68c <col:18> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fdb510 '__rhs' 'basic_string<_CharT, _Traits, _Alloc> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str);
    basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os, const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__os, const basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__os, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9fdcea8 </usr/include/c++/4.6/bits/basic_string.h:2694:5, line:2698:5>
  (ReturnStmt 0x9fdce98 <line:2697:7, col:63>
    (CallExpr 0x9fdce70 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x9fdcd40 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9f19180)
      (DeclRefExpr 0x9fdcd74 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9fdca10 '__os' 'basic_ostream<_CharT, _Traits> &')
      (CallExpr 0x9fdcde0 <col:37, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fdcda8 <col:37, col:43> '<dependent type>' lvalue
          (DeclRefExpr 0x9fdcd8c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fdcbc0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9fdce50 <col:51, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fdce18 <col:51, col:57> '<dependent type>' lvalue
          (DeclRefExpr 0x9fdcdfc <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fdcbc0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_istream<wchar_t, std::char_traits<wchar_t> > &getline(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_istream<char, std::char_traits<char> > &getline(basic_istream<char, std::char_traits<char> > &__is, basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9fddcb8 </usr/include/c++/4.6/bits/basic_string.h:2735:5, col:54>
  (ReturnStmt 0x9fddca8 <col:7, col:51>
    (CallExpr 0x9fddc80 <col:14, col:51> '<dependent type>'
      (UnresolvedLookupExpr 0x9fddb90 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9fddb60 0x9fdd530)
      (DeclRefExpr 0x9fddbc8 <col:22> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9fdd880 '__is' 'basic_istream<_CharT, _Traits> &')
      (DeclRefExpr 0x9fddbe0 <col:28> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fdda30 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
      (CallExpr 0x9fddc60 <col:35, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fddc10 <col:35, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x9fddbf8 <col:35> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9fdd880 '__is' 'basic_istream<_CharT, _Traits> &'))
        (CharacterLiteral 0x9fddc48 <col:46> 'char'10)))))

;
    basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim);
    basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim);
}
extern long __builtin_expect(long, long);
namespace std {
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_max_size = (BinaryOperator 0x9fdfad0 </usr/include/c++/4.6/bits/basic_string.tcc:52:25, col:77> '<dependent type>' '/'
  (ParenExpr 0x9fdfaa0 <col:25, col:73> '<dependent type>'
    (CXXOperatorCallExpr 0x9fdfa78 <col:26, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x9fdfa40 <col:70, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (ParenExpr 0x9fdfa10 <col:26, col:68> '<dependent type>'
        (BinaryOperator 0x9fdf9f8 <col:27, col:67> '<dependent type>' '/'
          (ParenExpr 0x9fdf9c0 <col:27, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0x9fdf998 <col:28, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9fdf960 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (DeclRefExpr 0x9fdf928 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (UnaryExprOrTypeTraitExpr 0x9fdf948 <col:35, col:51> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')))
          (UnaryExprOrTypeTraitExpr 0x9fdf9e0 <col:54, col:67> 'unsigned int' sizeof '_CharT')))
      (IntegerLiteral 0x9fdfa28 <col:72> 'int' 1)))
  (IntegerLiteral 0x9fdfab8 <col:77> 'int' 4))
;
    static const _CharT _S_terminal = (CXXUnresolvedConstructExpr 0x9fdff20 </usr/include/c++/4.6/bits/basic_string.tcc:57:25, col:32> '_CharT')
;
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type npos;
    static typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_empty_rep_storage[(sizeof(std::basic_string::_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) / sizeof(size_type)];
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag) (CompoundStmt 0x9fe2680 </usr/include/c++/4.6/bits/basic_string.tcc:81:7, line:119:7>
  (IfStmt 0x9fe1700 <line:83:2, line:84:37>
    <<<NULL>>>
    (BinaryOperator 0x9fe1648 <line:83:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9fe1568 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe1510 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
        (DeclRefExpr 0x9fe14dc <col:6> '_InIterator' lvalue ParmVar 0x9fe1230 '__beg' '_InIterator')
        (DeclRefExpr 0x9fe14f4 <col:15> '_InIterator' lvalue ParmVar 0x9fe1270 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9fe1620 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe15c8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
        (DeclRefExpr 0x9fe158c <col:24> 'const _Alloc' lvalue ParmVar 0x9fe12e0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9fe15b0 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x9fe16f0 <line:84:4, col:37>
      (CallExpr 0x9fe16d0 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe1698 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9fe1678 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9fe1660 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9fa19d0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9fe17d8 <line:87:2, col:19>
    0x9fe17a0 "_CharT __buf[128]")
  (DeclStmt 0x9fe1840 <line:88:2, col:21>
    0x9fe17f0 "size_type __len =
      (IntegerLiteral 0x9fe1828 <col:20> 'int' 0)")
  (WhileStmt 0x9fe1b28 <line:89:2, line:93:4>
    <<<NULL>>>
    (BinaryOperator 0x9fe1a08 <line:89:9, col:64> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9fe18d8 <col:9, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe1880 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0)
        (DeclRefExpr 0x9fe1850 <col:9> '_InIterator' lvalue ParmVar 0x9fe1230 '__beg' '_InIterator')
        (DeclRefExpr 0x9fe1868 <col:18> '_InIterator' lvalue ParmVar 0x9fe1270 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9fe19e0 <col:27, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe1998 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (DeclRefExpr 0x9fe18fc <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9fe17f0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9fe1980 <col:35, col:64> 'unsigned int' '/'
          (UnaryExprOrTypeTraitExpr 0x9fe1948 <col:35, col:47> 'unsigned int' sizeof 
            (ParenExpr 0x9fe1930 <col:41, col:47> '_CharT [128]' lvalue
              (DeclRefExpr 0x9fe1914 <col:42> '_CharT [128]' lvalue Var 0x9fe17a0 '__buf' '_CharT [128]')))
          (UnaryExprOrTypeTraitExpr 0x9fe1968 <col:51, col:64> 'unsigned int' sizeof '_CharT'))))
    (CompoundStmt 0x9fe1b10 <line:90:4, line:93:4>
      (BinaryOperator 0x9fe1ac8 <line:91:6, col:24> '<dependent type>' '='
        (ArraySubscriptExpr 0x9fe1a80 <col:6, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe1a20 <col:6> '_CharT [128]' lvalue Var 0x9fe17a0 '__buf' '_CharT [128]')
          (UnaryOperator 0x9fe1a68 <col:12, col:17> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9fe1a38 <col:12> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9fe17f0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9fe1ab0 <col:23, col:24> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9fe1a94 <col:24> '_InIterator' lvalue ParmVar 0x9fe1230 '__beg' '_InIterator')))
      (UnaryOperator 0x9fe1af8 <line:92:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9fe1ae0 <col:8> '_InIterator' lvalue ParmVar 0x9fe1230 '__beg' '_InIterator'))))
  (DeclStmt 0x9fe1c68 <line:94:2, col:55>
    0x9fe1b50 "std::basic_string::_Rep *__r =
      (CallExpr 0x9fe1c40 <col:14, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9fe1ba8 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fe1bcc <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9fe17f0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9fe1c08 <col:37, col:48> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9fe1bf0 <col:47> 'int' 0))
        (DeclRefExpr 0x9fe1c24 <col:51> 'const _Alloc' lvalue ParmVar 0x9fe12e0 '__a' 'const _Alloc &'))")
  (CallExpr 0x9fe1d30 <line:95:2, col:41> '<dependent type>'
    (DeclRefExpr 0x9fe1c78 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (CallExpr 0x9fe1ce0 <col:10, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe1ca8 <col:10, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe1c90 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1b50 '__r' 'struct std::basic_string::_Rep *')))
    (DeclRefExpr 0x9fe1cfc <col:29> '_CharT [128]' lvalue Var 0x9fe17a0 '__buf' '_CharT [128]')
    (DeclRefExpr 0x9fe1d14 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9fe17f0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9fe2478 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:111:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe1d58 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fe2460 </usr/include/c++/4.6/bits/basic_string.tcc:97:4, line:111:4>
      (WhileStmt 0x9fe2448 <line:98:6, line:110:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fe1df0 <line:98:13, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9fe1d98 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0)
          (DeclRefExpr 0x9fe1d68 <col:13> '_InIterator' lvalue ParmVar 0x9fe1230 '__beg' '_InIterator')
          (DeclRefExpr 0x9fe1d80 <col:22> '_InIterator' lvalue ParmVar 0x9fe1270 '__end' '_InIterator'))
        (CompoundStmt 0x9fe2428 <line:99:8, line:110:8>
          (IfStmt 0x9fe22c0 <line:100:3, line:107:5>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9fe1ed8 <line:100:7, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9fe1e80 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
              (DeclRefExpr 0x9fe1e14 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9fe17f0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXDependentScopeMemberExpr 0x9fe1e48 <col:16, col:21> '<dependent type>' lvalue
                (DeclRefExpr 0x9fe1e2c <col:16> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1b50 '__r' 'struct std::basic_string::_Rep *')))
            (CompoundStmt 0x9fe22a0 <line:101:5, line:107:5>
              (DeclStmt 0x9fe2088 <line:103:7, col:63>
                0x9fe1f10 "std::basic_string::_Rep *__another =
                  (CallExpr 0x9fe2060 <col:25, col:62> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9fe1f68 <col:25, col:31> '<dependent type>' lvalue)
                    (CXXOperatorCallExpr 0x9fe2008 <col:41, col:49> '<dependent type>'
                      (UnresolvedLookupExpr 0x9fe1fc0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
                      (DeclRefExpr 0x9fe1f8c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9fe17f0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                      (IntegerLiteral 0x9fe1fa8 <col:49> 'int' 1))
                    (DeclRefExpr 0x9fe202c <col:52> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9fe17f0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                    (DeclRefExpr 0x9fe2044 <col:59> 'const _Alloc' lvalue ParmVar 0x9fe12e0 '__a' 'const _Alloc &'))")
              (CallExpr 0x9fe21a8 <line:104:7, col:64> '<dependent type>'
                (DeclRefExpr 0x9fe2098 <col:7> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
                (CallExpr 0x9fe2100 <col:15, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9fe20c8 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9fe20b0 <col:15> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1f10 '__another' 'struct std::basic_string::_Rep *')))
                (CallExpr 0x9fe2170 <col:40, col:56> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9fe2138 <col:40, col:45> '<dependent type>' lvalue
                    (DeclRefExpr 0x9fe211c <col:40> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1b50 '__r' 'struct std::basic_string::_Rep *')))
                (DeclRefExpr 0x9fe218c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9fe17f0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CallExpr 0x9fe2238 <line:105:7, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fe21e8 <col:7, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0x9fe21d0 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1b50 '__r' 'struct std::basic_string::_Rep *'))
                (DeclRefExpr 0x9fe221c <col:23> 'const _Alloc' lvalue ParmVar 0x9fe12e0 '__a' 'const _Alloc &'))
              (BinaryOperator 0x9fe2288 <line:106:7, col:13> '<dependent type>' '='
                (DeclRefExpr 0x9fe2258 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1b50 '__r' 'struct std::basic_string::_Rep *')
                (DeclRefExpr 0x9fe2270 <col:13> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1f10 '__another' 'struct std::basic_string::_Rep *')))
            <<<NULL>>>)
          (BinaryOperator 0x9fe23e0 <line:108:3, col:33> '<dependent type>' '='
            (ArraySubscriptExpr 0x9fe2398 <col:3, col:28> '<dependent type>' lvalue
              (CallExpr 0x9fe2330 <col:3, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fe22f8 <col:3, col:8> '<dependent type>' lvalue
                  (DeclRefExpr 0x9fe22dc <col:3> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1b50 '__r' 'struct std::basic_string::_Rep *')))
              (UnaryOperator 0x9fe2380 <col:21, col:26> '<dependent type>' postfix '++'
                (DeclRefExpr 0x9fe234c <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9fe17f0 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
            (UnaryOperator 0x9fe23c8 <col:32, col:33> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9fe23ac <col:33> '_InIterator' lvalue ParmVar 0x9fe1230 '__beg' '_InIterator')))
          (UnaryOperator 0x9fe2410 <line:109:3, col:5> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9fe23f8 <col:5> '_InIterator' lvalue ParmVar 0x9fe1230 '__beg' '_InIterator')))))
    <<<NULL>>>)
  (IfStmt 0x9fe2558 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:116:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe2498 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fe2540 </usr/include/c++/4.6/bits/basic_string.tcc:113:4, line:116:4>
      (CallExpr 0x9fe2510 <line:114:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe24c0 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe24a8 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1b50 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x9fe24f4 <col:22> 'const _Alloc' lvalue ParmVar 0x9fe12e0 '__a' 'const _Alloc &'))
      (NullStmt 0x9fe2530 <line:115:29>))
    <<<NULL>>>)
  (CallExpr 0x9fe25e0 <line:117:2, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fe2590 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x9fe2574 <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1b50 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9fe25c4 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9fe17f0 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9fe2670 <line:118:2, col:25>
    (CallExpr 0x9fe2650 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe2618 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe2600 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe1b50 '__r' 'struct std::basic_string::_Rep *')))))

;
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::forward_iterator_tag) (CompoundStmt 0x9fe37d8 </usr/include/c++/4.6/bits/basic_string.tcc:127:7, line:149:7>
  (IfStmt 0x9fe2f50 <line:129:2, line:130:37>
    <<<NULL>>>
    (BinaryOperator 0x9fe2e98 <line:129:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9fe2db8 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe2d60 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
        (DeclRefExpr 0x9fe2d2c <col:6> '_InIterator' lvalue ParmVar 0x9fe2a80 '__beg' '_InIterator')
        (DeclRefExpr 0x9fe2d44 <col:15> '_InIterator' lvalue ParmVar 0x9fe2ac0 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9fe2e70 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe2e18 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
        (DeclRefExpr 0x9fe2ddc <col:24> 'const _Alloc' lvalue ParmVar 0x9fe2b30 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9fe2e00 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x9fe2f40 <line:130:4, col:37>
      (CallExpr 0x9fe2f20 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe2ee8 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9fe2ec8 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9fe2eb0 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9fa19d0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (IfStmt 0x9fe31f8 <line:133:2, line:134:72>
    <<<NULL>>>
    (BinaryOperator 0x9fe30b0 <line:133:6, col:54> '<dependent type>' '&&'
      (CallExpr 0x9fe2fe0 <col:6, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe2f90 <col:6, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e43230 0x9e43430)
        (DeclRefExpr 0x9fe2fc8 <col:35> '_InIterator' lvalue ParmVar 0x9fe2a80 '__beg' '_InIterator'))
      (CXXOperatorCallExpr 0x9fe3088 <col:45, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe3030 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0)
        (DeclRefExpr 0x9fe3000 <col:45> '_InIterator' lvalue ParmVar 0x9fe2a80 '__beg' '_InIterator')
        (DeclRefExpr 0x9fe3018 <col:54> '_InIterator' lvalue ParmVar 0x9fe2ac0 '__end' '_InIterator')))
    (CallExpr 0x9fe31c8 <line:134:4, col:72> 'void'
      (ImplicitCastExpr 0x9fe31b8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fe319c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e22c10 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9fe31e8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fe3188 <col:24, col:30> 'const char [42]' lvalue
          (StringLiteral 0x9fe3140 </usr/include/c++/4.6/bits/basic_string.tcc:134:28> 'const char [42]' lvalue "basic_string::_S_construct null not valid"))))
    <<<NULL>>>)
  (DeclStmt 0x9fe3348 <line:136:2, line:137:22>
    0x9fe3220 "const size_type __dnew =
      (CXXStaticCastExpr 0x9fe3330 <line:136:27, line:137:21> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (CallExpr 0x9fe3300 <line:136:50, line:137:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9fe3278 <line:136:50, col:55> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e66090)
          (DeclRefExpr 0x9fe32ac <col:64> '_InIterator' lvalue ParmVar 0x9fe2a80 '__beg' '_InIterator')
          (DeclRefExpr 0x9fe32e8 <line:137:15> '_InIterator' lvalue ParmVar 0x9fe2ac0 '__end' '_InIterator')))")
  (DeclStmt 0x9fe3488 <line:139:2, col:56>
    0x9fe3370 "std::basic_string::_Rep *__r =
      (CallExpr 0x9fe3460 <col:14, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9fe33c8 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fe33ec <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe3220 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9fe3428 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9fe3410 <col:48> 'int' 0))
        (DeclRefExpr 0x9fe3444 <col:52> 'const _Alloc' lvalue ParmVar 0x9fe2b30 '__a' 'const _Alloc &'))")
  (IfStmt 0x9fe35d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:141:54>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe3498 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9fe35b8 </usr/include/c++/4.6/bits/basic_string.tcc:141:4, col:54>
      (CallExpr 0x9fe3590 <col:6, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe34a8 <col:6> '<dependent type>' lvalue (no ADL) = '1' 0x9f9bef0 0x9fa1030 0x9fa11f0 0x9fa13d0 0x9fa15b0)
        (CallExpr 0x9fe3540 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fe3508 <col:20, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x9fe34ec <col:20> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe3370 '__r' 'struct std::basic_string::_Rep *')))
        (DeclRefExpr 0x9fe355c <col:39> '_InIterator' lvalue ParmVar 0x9fe2a80 '__beg' '_InIterator')
        (DeclRefExpr 0x9fe3574 <col:46> '_InIterator' lvalue ParmVar 0x9fe2ac0 '__end' '_InIterator')))
    <<<NULL>>>)
  (IfStmt 0x9fe36b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:146:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9fe35f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9fe3698 </usr/include/c++/4.6/bits/basic_string.tcc:143:4, line:146:4>
      (CallExpr 0x9fe3668 <line:144:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe3618 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe3600 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe3370 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x9fe364c <col:22> 'const _Alloc' lvalue ParmVar 0x9fe2b30 '__a' 'const _Alloc &'))
      (NullStmt 0x9fe3688 <line:145:29>))
    <<<NULL>>>)
  (CallExpr 0x9fe3738 <line:147:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fe36e8 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x9fe36cc <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe3370 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9fe371c <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe3220 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9fe37c8 <line:148:2, col:25>
    (CallExpr 0x9fe37a8 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe3770 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe3758 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe3370 '__r' 'struct std::basic_string::_Rep *')))))

;
    static _CharT *_S_construct(size_type __n, _CharT __c, const _Alloc &__a) (CompoundStmt 0x9fe4328 </usr/include/c++/4.6/bits/basic_string.tcc:155:5, line:167:5>
  (IfStmt 0x9fe3fb0 <line:157:7, line:158:35>
    <<<NULL>>>
    (BinaryOperator 0x9fe3ef8 <line:157:11, col:37> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9fe3e18 <col:11, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe3dc0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
        (DeclRefExpr 0x9fe3d8c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe3b80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x9fe3da8 <col:18> 'int' 0))
      (CXXOperatorCallExpr 0x9fe3ed0 <col:23, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0x9fe3e78 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
        (DeclRefExpr 0x9fe3e3c <col:23> 'const _Alloc' lvalue ParmVar 0x9fe3c30 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9fe3e60 <col:30, col:37> '_Alloc')))
    (ReturnStmt 0x9fe3fa0 <line:158:2, col:35>
      (CallExpr 0x9fe3f80 <col:9, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe3f48 <col:9, col:24> '<dependent type>' lvalue
          (CallExpr 0x9fe3f28 <col:9, col:22> '<dependent type>'
            (DeclRefExpr 0x9fe3f10 <col:9> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9fa19d0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9fe40f8 <line:161:7, col:58>
    0x9fe3fe0 "std::basic_string::_Rep *__r =
      (CallExpr 0x9fe40d0 <col:19, col:57> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9fe4038 <col:19, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fe405c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe3b80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9fe4098 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9fe4080 <col:50> 'int' 0))
        (DeclRefExpr 0x9fe40b4 <col:54> 'const _Alloc' lvalue ParmVar 0x9fe3c30 '__a' 'const _Alloc &'))")
  (IfStmt 0x9fe4200 <line:162:7, line:163:39>
    <<<NULL>>>
    (DeclRefExpr 0x9fe4108 <line:162:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe3b80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9fe41d8 <line:163:2, col:39> '<dependent type>'
      (DeclRefExpr 0x9fe4120 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9f9bc70 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CallExpr 0x9fe4188 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe4150 <col:12, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe4138 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe3fe0 '__r' 'struct std::basic_string::_Rep *')))
      (DeclRefExpr 0x9fe41a4 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe3b80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fe41bc <col:36> '_CharT' lvalue ParmVar 0x9fe3bc0 '__c' '_CharT'))
    <<<NULL>>>)
  (CallExpr 0x9fe4288 <line:165:7, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fe4238 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9fe421c <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe3fe0 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9fe426c <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe3b80 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9fe4318 <line:166:7, col:30>
    (CallExpr 0x9fe42f8 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe42c0 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe42a8 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9fe3fe0 '__r' 'struct std::basic_string::_Rep *')))))


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str) : _M_dataplus((CallExpr 0x9fe4ad8 </usr/include/c++/4.6/bits/basic_string.tcc:172:19, line:173:29> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9fe4998 <line:172:19, col:35> '<dependent type>' lvalue
    (CallExpr 0x9fe4978 <col:19, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe4940 <col:19, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe4924 <col:19> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe4830 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CXXUnresolvedConstructExpr 0x9fe4a48 <col:43, col:71> '_Alloc'
    (CallExpr 0x9fe4a28 <col:50, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe49f0 <col:50, col:56> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe49d8 <col:50> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe4830 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CallExpr 0x9fe4ab8 <line:173:8, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fe4a80 <col:8, col:14> '<dependent type>' lvalue
      (DeclRefExpr 0x9fe4a64 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe4830 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
, (CallExpr 0x9fe4b50 </usr/include/c++/4.6/bits/basic_string.tcc:174:5, col:25> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9fe4b18 <col:5, col:11> '<dependent type>' lvalue
    (DeclRefExpr 0x9fe4afc <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe4830 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
) (CompoundStmt 0x9fe4bb0 </usr/include/c++/4.6/bits/basic_string.tcc:175:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a) : _M_dataplus((CallExpr 0x9fe5280 </usr/include/c++/4.6/bits/basic_string.tcc:180:19, col:58> '<dependent type>'
  (UnresolvedLookupExpr 0x9fe51e8 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9fb1d30 0x9fe1470 0x9fe2cc0 0x9fe3cf0)
  (CXXUnresolvedConstructExpr 0x9fe5230 <col:32, col:42> 'size_type':'typename _CharT_alloc_type::size_type')
  (CXXUnresolvedConstructExpr 0x9fe5250 <col:45, col:52> '_CharT')
  (DeclRefExpr 0x9fe5268 <col:55> 'const _Alloc' lvalue ParmVar 0x9fe50c0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9fe52a8 </usr/include/c++/4.6/bits/basic_string.tcc:180:61> 'const _Alloc' lvalue ParmVar 0x9fe50c0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9fe5300 </usr/include/c++/4.6/bits/basic_string.tcc:181:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x9fb9ce8 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) : _M_dataplus((CallExpr 0x9fe5de0 </usr/include/c++/4.6/bits/basic_string.tcc:186:19, line:190:28> '<dependent type>'
  (UnresolvedLookupExpr 0x9fe5980 <line:186:19> '<dependent type>' lvalue (no ADL) = '1' 0x9fb1d30 0x9fe1470 0x9fe2cc0 0x9fe3cf0)
  (CXXOperatorCallExpr 0x9fe5b88 <col:32, line:188:35> '<dependent type>'
    (UnresolvedLookupExpr 0x9fe5b40 <line:187:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
    (CallExpr 0x9fe5a10 <line:186:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe59d8 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe59c0 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe57f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x9fe5b18 <line:187:13, line:188:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe5a48 <line:187:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe5a2c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe57f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9fe5a7c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe5830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9fe5ae0 <line:188:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x9fe5d98 <line:189:11, line:190:13> '<dependent type>'
    (UnresolvedLookupExpr 0x9fe5d50 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
    (CXXOperatorCallExpr 0x9fe5d10 <line:189:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe5cc8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
      (CallExpr 0x9fe5c00 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe5bc8 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe5bac <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe57f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9fe5ca0 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe5c38 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe5c1c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe57f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fe5c6c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe5830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9fe5c84 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe5870 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x9fe5d34 <line:190:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe5830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CXXUnresolvedConstructExpr 0x9fe5dc8 <col:20, col:27> '_Alloc'))
, (CXXUnresolvedConstructExpr 0x9fe5e10 </usr/include/c++/4.6/bits/basic_string.tcc:190:31, col:38> '_Alloc')
) (CompoundStmt 0x9fe5e70 </usr/include/c++/4.6/bits/basic_string.tcc:191:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a) : _M_dataplus((CallExpr 0x9fe69a0 </usr/include/c++/4.6/bits/basic_string.tcc:197:19, line:201:23> '<dependent type>'
  (UnresolvedLookupExpr 0x9fe6590 <line:197:19> '<dependent type>' lvalue (no ADL) = '1' 0x9fb1d30 0x9fe1470 0x9fe2cc0 0x9fe3cf0)
  (CXXOperatorCallExpr 0x9fe6750 <col:32, line:199:35> '<dependent type>'
    (UnresolvedLookupExpr 0x9fe6708 <line:198:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
    (CallExpr 0x9fe6620 <line:197:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe65e8 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe65d0 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe6360 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x9fe66e0 <line:198:13, line:199:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fe6658 <line:198:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9fe663c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe6360 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9fe668c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe63a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9fe66a4 <line:199:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x9fe6960 <line:200:11, line:201:13> '<dependent type>'
    (UnresolvedLookupExpr 0x9fe6918 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
    (CXXOperatorCallExpr 0x9fe68d8 <line:200:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe6890 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
      (CallExpr 0x9fe67c8 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe6790 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe6774 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe6360 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9fe6868 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe6800 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe67e4 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe6360 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9fe6834 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe63a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9fe684c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe63e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x9fe68fc <line:201:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe63a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x9fe6984 <col:20> 'const _Alloc' lvalue ParmVar 0x9fe6450 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9fe69c8 </usr/include/c++/4.6/bits/basic_string.tcc:201:26> 'const _Alloc' lvalue ParmVar 0x9fe6450 '__a' 'const _Alloc &')
) (CompoundStmt 0x9fe6a20 </usr/include/c++/4.6/bits/basic_string.tcc:202:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9fb9d08 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
) : _M_dataplus((CallExpr 0x9fe7230 </usr/include/c++/4.6/bits/basic_string.tcc:208:19, col:51> '<dependent type>'
  (UnresolvedLookupExpr 0x9fe7120 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9fb1d30 0x9fe1470 0x9fe2cc0 0x9fe3cf0)
  (DeclRefExpr 0x9fe7160 <col:32> 'const _CharT *' lvalue ParmVar 0x9fe6f30 '__s' 'const _CharT *')
  (CXXOperatorCallExpr 0x9fe71f0 <col:37, col:43> '<dependent type>'
    (UnresolvedLookupExpr 0x9fe71a8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
    (DeclRefExpr 0x9fe7178 <col:37> 'const _CharT *' lvalue ParmVar 0x9fe6f30 '__s' 'const _CharT *')
    (DeclRefExpr 0x9fe7190 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe6f70 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x9fe7214 <col:48> 'const _Alloc' lvalue ParmVar 0x9fe6fe0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9fe7258 </usr/include/c++/4.6/bits/basic_string.tcc:208:54> 'const _Alloc' lvalue ParmVar 0x9fe6fe0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9fe72b0 </usr/include/c++/4.6/bits/basic_string.tcc:209:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9fb9d28 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
) : _M_dataplus((CallExpr 0x9fe7be8 </usr/include/c++/4.6/bits/basic_string.tcc:215:19, line:216:26> '<dependent type>'
  (UnresolvedLookupExpr 0x9fe7988 <line:215:19> '<dependent type>' lvalue (no ADL) = '1' 0x9fb1d30 0x9fe1470 0x9fe2cc0 0x9fe3cf0)
  (DeclRefExpr 0x9fe79c8 <col:32> 'const _CharT *' lvalue ParmVar 0x9fe77f0 '__s' 'const _CharT *')
  (ConditionalOperator 0x9fe7bb0 <col:37, line:216:17> '<dependent type>'
    (DeclRefExpr 0x9fe79e0 <line:215:37> 'const _CharT *' lvalue ParmVar 0x9fe77f0 '__s' 'const _CharT *')
    (CXXOperatorCallExpr 0x9fe7ae8 <col:43, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe7aa0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
      (DeclRefExpr 0x9fe79f8 <col:43> 'const _CharT *' lvalue ParmVar 0x9fe77f0 '__s' 'const _CharT *')
      (CallExpr 0x9fe7a80 <col:49, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe7a30 <col:49, col:62> '<dependent type>' lvalue)
        (DeclRefExpr 0x9fe7a64 <col:69> 'const _CharT *' lvalue ParmVar 0x9fe77f0 '__s' 'const _CharT *')))
    (CXXOperatorCallExpr 0x9fe7b88 <line:216:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe7b40 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
      (DeclRefExpr 0x9fe7b0c <col:11> 'const _CharT *' lvalue ParmVar 0x9fe77f0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9fe7b24 <col:17> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
  (DeclRefExpr 0x9fe7bcc <col:23> 'const _Alloc' lvalue ParmVar 0x9fe7860 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9fe7c10 </usr/include/c++/4.6/bits/basic_string.tcc:216:29> 'const _Alloc' lvalue ParmVar 0x9fe7860 '__a' 'const _Alloc &')
) (CompoundStmt 0x9fe7c70 </usr/include/c++/4.6/bits/basic_string.tcc:217:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9fb9d48 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
) : _M_dataplus((CallExpr 0x9fe83c8 </usr/include/c++/4.6/bits/basic_string.tcc:222:19, col:45> '<dependent type>'
  (UnresolvedLookupExpr 0x9fe8340 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9fb1d30 0x9fe1470 0x9fe2cc0 0x9fe3cf0)
  (DeclRefExpr 0x9fe8380 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe8150 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
  (DeclRefExpr 0x9fe8398 <col:37> '_CharT' lvalue ParmVar 0x9fe8190 '__c' '_CharT')
  (DeclRefExpr 0x9fe83b0 <col:42> 'const _Alloc' lvalue ParmVar 0x9fe8200 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9fe83f0 </usr/include/c++/4.6/bits/basic_string.tcc:222:48> 'const _Alloc' lvalue ParmVar 0x9fe8200 '__a' 'const _Alloc &')
) (CompoundStmt 0x9fe8450 </usr/include/c++/4.6/bits/basic_string.tcc:223:5, col:7>)


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x9fb9d68 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
) : _M_dataplus((CallExpr 0x9fe8c58 </usr/include/c++/4.6/bits/basic_string.tcc:230:19, col:49> '<dependent type>'
  (UnresolvedLookupExpr 0x9fe8bd0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x9fb1d30 0x9fe1470 0x9fe2cc0 0x9fe3cf0)
  (DeclRefExpr 0x9fe8c10 <col:32> '_InputIterator' lvalue ParmVar 0x9fe8980 '__beg' '_InputIterator')
  (DeclRefExpr 0x9fe8c28 <col:39> '_InputIterator' lvalue ParmVar 0x9fe89c0 '__end' '_InputIterator')
  (DeclRefExpr 0x9fe8c40 <col:46> 'const _Alloc' lvalue ParmVar 0x9fe8a30 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9fe8c80 </usr/include/c++/4.6/bits/basic_string.tcc:230:52> 'const _Alloc' lvalue ParmVar 0x9fe8a30 '__a' 'const _Alloc &')
) (CompoundStmt 0x9fe8ce0 </usr/include/c++/4.6/bits/basic_string.tcc:231:5, col:7>)

;
    basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9fe99a0 </usr/include/c++/4.6/bits/basic_string.tcc:245:5, line:255:5>
  (IfStmt 0x9fe9948 <line:246:7, line:253:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fe9530 <line:246:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9fe94d8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0)
      (CallExpr 0x9fe9448 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x9fe9428 <col:11> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9fe9418 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9fe94b8 <col:23, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe9480 <col:23, col:29> '<dependent type>' lvalue
          (DeclRefExpr 0x9fe9464 <col:23> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe9190 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9fe9928 <line:247:2, line:253:2>
      (DeclStmt 0x9fe9600 <line:249:4, col:52>
        0x9fe9560 "const allocator_type __a =
          (CallExpr 0x9fe95e0 <col:31, col:51> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fe95a8 <col:31, col:37> '<dependent type>' lvalue
              (CXXThisExpr 0x9fe9598 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9fe97d0 <line:250:4, col:71>
        0x9fe9640 "_CharT *__tmp =
          (CallExpr 0x9fe97a8 <col:20, col:70> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fe96e8 <col:20, col:36> '<dependent type>' lvalue
              (CallExpr 0x9fe96c8 <col:20, col:33> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fe9690 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x9fe9674 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe9190 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
            (DeclRefExpr 0x9fe971c <col:44> 'const allocator_type':'const _Alloc' lvalue Var 0x9fe9560 '__a' 'const allocator_type':'const _Alloc')
            (CallExpr 0x9fe9788 <col:49, col:69> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fe9750 <col:49, col:55> '<dependent type>' lvalue
                (DeclRefExpr 0x9fe9734 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fe9190 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))")
      (CallExpr 0x9fe9880 <line:251:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fe9830 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9fe9810 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9fe97f0 <col:4> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9fe97e0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9fe9864 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9fe9560 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9fe9908 <line:252:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9fe98b0 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9fe98f0 <col:12> '_CharT *' lvalue Var 0x9fe9640 '__tmp' '_CharT *')))
    <<<NULL>>>)
  (ReturnStmt 0x9fe9990 <line:254:7, col:15>
    (UnaryOperator 0x9fe9978 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fe9968 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n) (CompoundStmt 0x9feaa00 </usr/include/c++/4.6/bits/basic_string.tcc:261:5, line:277:6>
  (NullStmt 0x9fea148 <line:262:46>)
  (CallExpr 0x9fea238 <line:263:7, col:64> '<dependent type>'
    (MemberExpr 0x9fea168 <col:7> '<bound member function type>' ->_M_check_length 0x9f9b4d0
      (CXXThisExpr 0x9fea158 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x9fea1d0 <col:23, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fea198 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9fea188 <col:23> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9fea1ec <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe9ec0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9fea204 <col:42> 'const char [21]' lvalue "basic_string::assign"))
  (IfStmt 0x9fea9e0 <line:264:7, line:276:2>
    <<<NULL>>>
    (BinaryOperator 0x9fea370 <line:264:11, col:54> '<dependent type>' '||'
      (CallExpr 0x9fea2a8 <col:11, col:26> '<dependent type>'
        (MemberExpr 0x9fea270 <col:11> '<bound member function type>' ->_M_disjunct 0x9f9b770
          (CXXThisExpr 0x9fea260 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fea290 <col:23> 'const _CharT *' lvalue ParmVar 0x9fe9e80 '__s' 'const _CharT *'))
      (CallExpr 0x9fea350 <col:31, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fea318 <col:31, col:41> '<dependent type>' lvalue
          (CallExpr 0x9fea2f8 <col:31, col:38> '<dependent type>'
            (MemberExpr 0x9fea2d8 <col:31> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9fea2c8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9fea4c0 <line:265:2, col:61>
      (CallExpr 0x9fea490 <col:9, col:61> '<dependent type>'
        (MemberExpr 0x9fea398 <col:9> '<bound member function type>' ->_M_replace_safe 0x9fb13d0
          (CXXThisExpr 0x9fea388 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9fea3d8 <col:25, col:36> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9fea3c0 <col:35> 'int' 0))
        (CallExpr 0x9fea440 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fea408 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x9fea3f8 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x9fea45c <col:53> 'const _CharT *' lvalue ParmVar 0x9fe9e80 '__s' 'const _CharT *')
        (DeclRefExpr 0x9fea474 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe9ec0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9fea9c0 <line:267:2, line:276:2>
      (DeclStmt 0x9fea600 <line:269:4, col:43>
        0x9fea4e0 "const size_type __pos =
          (CXXOperatorCallExpr 0x9fea5d8 <col:28, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9fea5a0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0x9fea514 <col:28> 'const _CharT *' lvalue ParmVar 0x9fe9e80 '__s' 'const _CharT *')
            (CallExpr 0x9fea580 <col:34, col:42> '<dependent type>'
              (UnresolvedMemberExpr 0x9fea540 <col:34> '<bound member function type>' lvalue)))")
      (IfStmt 0x9fea8a8 <line:270:4, line:273:33>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fea688 <line:270:8, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9fea640 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
          (DeclRefExpr 0x9fea610 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fea4e0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9fea628 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe9ec0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9fea768 <line:271:6, col:33> '<dependent type>'
          (DeclRefExpr 0x9fea6ac <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x9fea718 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9fea6d8 <col:14> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9fea734 <col:25> 'const _CharT *' lvalue ParmVar 0x9fe9e80 '__s' 'const _CharT *')
          (DeclRefExpr 0x9fea74c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe9ec0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9fea888 <line:272:9, line:273:33>
          <<<NULL>>>
          (DeclRefExpr 0x9fea790 <line:272:13> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fea4e0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (CallExpr 0x9fea860 <line:273:6, col:33> '<dependent type>'
            (DeclRefExpr 0x9fea7a8 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9bab0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
            (CallExpr 0x9fea810 <col:14, col:22> '<dependent type>'
              (UnresolvedMemberExpr 0x9fea7d0 <col:14> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9fea82c <col:25> 'const _CharT *' lvalue ParmVar 0x9fe9e80 '__s' 'const _CharT *')
            (DeclRefExpr 0x9fea844 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe9ec0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>))
      (CallExpr 0x9fea968 <line:274:4, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fea918 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9fea8f8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9fea8d8 <col:4> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9fea8c8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9fea94c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fe9ec0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (ReturnStmt 0x9fea9b0 <line:275:4, col:12>
        (UnaryOperator 0x9fea998 <col:11, col:12> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9fea988 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c) (CompoundStmt 0x9feb918 </usr/include/c++/4.6/bits/basic_string.tcc:283:5, line:294:5>
  (IfStmt 0x9feb8c0 <line:284:7, line:292:2>
    <<<NULL>>>
    (DeclRefExpr 0x9feb178 <line:284:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9feaeb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9feb898 <line:285:2, line:292:2>
      (CallExpr 0x9feb248 <line:286:4, col:61> '<dependent type>'
        (MemberExpr 0x9feb1a0 <col:4> '<bound member function type>' ->_M_check_length 0x9f9b4d0
          (CXXThisExpr 0x9feb190 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9feb1e0 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9feb1c8 <col:30> 'int' 0))
        (DeclRefExpr 0x9feb1fc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9feaeb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9feb214 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x9feb3c0 <line:287:4, col:46>
        0x9feb280 "const size_type __len =
          (CXXOperatorCallExpr 0x9feb398 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9feb350 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (DeclRefExpr 0x9feb2b4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9feaeb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9feb330 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9feb2f8 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9feb2d0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9feb600 <line:288:4, line:289:25>
        <<<NULL>>>
        (BinaryOperator 0x9feb568 <line:288:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9feb498 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9feb450 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
            (DeclRefExpr 0x9feb3d0 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9feb280 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9feb430 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9feb3f8 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9feb3e8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9feb548 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9feb510 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9feb4f0 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9feb4d0 <col:36> '<bound member function type>' ->_M_rep 0x9f9b000
                  (CXXThisExpr 0x9feb4c0 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9feb5e0 <line:289:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9feb590 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9feb580 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9feb5c4 <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9feb280 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9feb7b0 <line:290:4, col:48> '<dependent type>'
        (DeclRefExpr 0x9feb61c <col:4> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9f9bc70 '_M_assign' 'void (_CharT *, size_type, _CharT)')
        (CXXOperatorCallExpr 0x9feb758 <col:14, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9feb710 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
          (CallExpr 0x9feb688 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9feb648 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0x9feb6f0 <col:26, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9feb6b8 <col:26, col:32> '<dependent type>' lvalue
              (CXXThisExpr 0x9feb6a8 <col:26> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9feb77c <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9feaeb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9feb794 <col:45> '_CharT' lvalue ParmVar 0x9feaef0 '__c' '_CharT'))
      (CallExpr 0x9feb878 <line:291:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9feb828 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9feb808 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9feb7e8 <col:4> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9feb7d8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9feb85c <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9feb280 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9feb908 <line:293:7, col:15>
    (UnaryOperator 0x9feb8f0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9feb8e0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n) (CompoundStmt 0x9fecbf8 </usr/include/c++/4.6/bits/basic_string.tcc:300:5, line:321:5>
  (NullStmt 0x9fec0b8 <line:301:46>)
  (IfStmt 0x9fecba0 <line:302:7, line:319:2>
    <<<NULL>>>
    (DeclRefExpr 0x9fec0c4 <line:302:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9febe30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9fecb78 <line:303:2, line:319:2>
      (CallExpr 0x9fec198 <line:304:4, col:61> '<dependent type>'
        (MemberExpr 0x9fec0f0 <col:4> '<bound member function type>' ->_M_check_length 0x9f9b4d0
          (CXXThisExpr 0x9fec0e0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x9fec130 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9fec118 <col:30> 'int' 0))
        (DeclRefExpr 0x9fec14c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9febe30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x9fec164 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x9fec2f8 <line:305:4, col:46>
        0x9fec1d0 "const size_type __len =
          (CXXOperatorCallExpr 0x9fec2d0 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9fec288 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (DeclRefExpr 0x9fec204 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9febe30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9fec268 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fec230 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9fec220 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9fec8e0 <line:306:4, line:316:6>
        <<<NULL>>>
        (BinaryOperator 0x9fec4a0 <line:306:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9fec3d0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9fec388 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
            (DeclRefExpr 0x9fec308 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fec1d0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9fec368 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fec330 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9fec320 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9fec480 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fec448 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9fec428 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9fec408 <col:36> '<bound member function type>' ->_M_rep 0x9f9b000
                  (CXXThisExpr 0x9fec3f8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CompoundStmt 0x9fec8c8 <line:307:6, line:316:6>
          (IfStmt 0x9fec8a8 <line:308:8, line:315:3>
            <<<NULL>>>
            (CallExpr 0x9fec500 <line:308:12, col:27> '<dependent type>'
              (MemberExpr 0x9fec4c8 <col:12> '<bound member function type>' ->_M_disjunct 0x9f9b770
                (CXXThisExpr 0x9fec4b8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x9fec4e8 <col:24> 'const _CharT *' lvalue ParmVar 0x9febdf0 '__s' 'const _CharT *'))
            (CallExpr 0x9fec580 <line:309:3, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fec530 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x9fec520 <col:3> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x9fec564 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fec1d0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CompoundStmt 0x9fec888 <line:311:3, line:315:3>
              (DeclStmt 0x9fec6d0 <line:312:5, col:44>
                0x9fec5b0 "const size_type __off =
                  (CXXOperatorCallExpr 0x9fec6a8 <col:29, col:43> '<dependent type>'
                    (UnresolvedLookupExpr 0x9fec670 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                    (DeclRefExpr 0x9fec5e4 <col:29> 'const _CharT *' lvalue ParmVar 0x9febdf0 '__s' 'const _CharT *')
                    (CallExpr 0x9fec650 <col:35, col:43> '<dependent type>'
                      (UnresolvedMemberExpr 0x9fec610 <col:35> '<bound member function type>' lvalue)))")
              (CallExpr 0x9fec740 <line:313:5, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fec6f0 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0x9fec6e0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0x9fec724 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fec1d0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (BinaryOperator 0x9fec870 <line:314:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x9fec760 <col:5> 'const _CharT *' lvalue ParmVar 0x9febdf0 '__s' 'const _CharT *')
                (CXXOperatorCallExpr 0x9fec848 <col:11, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0x9fec800 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
                  (CallExpr 0x9fec7c8 <col:11, col:19> '<dependent type>'
                    (UnresolvedMemberExpr 0x9fec788 <col:11> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9fec7e4 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fec5b0 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
        <<<NULL>>>)
      (CallExpr 0x9feca90 <line:317:4, col:46> '<dependent type>'
        (DeclRefExpr 0x9fec8fc <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9feca38 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9fec9f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
          (CallExpr 0x9fec968 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9fec928 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9fec9d0 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fec998 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9fec988 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9feca5c <col:38> 'const _CharT *' lvalue ParmVar 0x9febdf0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9feca74 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9febe30 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9fecb58 <line:318:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fecb08 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9fecae8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9fecac8 <col:4> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9fecab8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9fecb3c <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fec1d0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9fecbe8 <line:320:7, col:15>
    (UnaryOperator 0x9fecbd0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fecbc0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9fedb00 </usr/include/c++/4.6/bits/basic_string.tcc:327:5, line:338:5>
  (DeclStmt 0x9fed3f8 <line:328:7, col:44>
    0x9fed350 "const size_type __size =
      (CallExpr 0x9fed3d8 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fed3a0 <col:32, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x9fed384 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fed0c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (IfStmt 0x9fedaa8 <line:329:7, line:336:2>
    <<<NULL>>>
    (DeclRefExpr 0x9fed408 <line:329:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fed350 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9feda88 <line:330:2, line:336:2>
      (DeclStmt 0x9fed558 <line:331:4, col:49>
        0x9fed430 "const size_type __len =
          (CXXOperatorCallExpr 0x9fed530 <col:28, col:48> '<dependent type>'
            (UnresolvedLookupExpr 0x9fed4e8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (DeclRefExpr 0x9fed464 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fed350 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9fed4c8 <col:37, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fed490 <col:37, col:43> '<dependent type>' lvalue
                (CXXThisExpr 0x9fed480 <col:37> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9fed798 <line:332:4, line:333:25>
        <<<NULL>>>
        (BinaryOperator 0x9fed700 <line:332:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9fed630 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9fed5e8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
            (DeclRefExpr 0x9fed568 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fed430 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9fed5c8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fed590 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9fed580 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9fed6e0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fed6a8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9fed688 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9fed668 <col:36> '<bound member function type>' ->_M_rep 0x9f9b000
                  (CXXThisExpr 0x9fed658 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9fed778 <line:333:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fed728 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9fed718 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9fed75c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fed430 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9fed9a0 <line:334:4, col:61> '<dependent type>'
        (DeclRefExpr 0x9fed7b4 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9fed8f0 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9fed8a8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
          (CallExpr 0x9fed820 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9fed7e0 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9fed888 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fed850 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9fed840 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0x9fed968 <col:38, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fed930 <col:38, col:44> '<dependent type>' lvalue
            (DeclRefExpr 0x9fed914 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fed0c0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9fed984 <col:55> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fed350 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9feda68 <line:335:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9feda18 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9fed9f8 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9fed9d8 <col:4> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9fed9c8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9feda4c <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fed430 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9fedaf0 <line:337:7, col:15>
    (UnaryOperator 0x9fedad8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9fedac8 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x9feebf8 </usr/include/c++/4.6/bits/basic_string.tcc:344:5, line:356:5>
  (CallExpr 0x9fee378 <line:345:7, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9fee2f8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9fee2dc <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fedfc0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9fee32c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fee000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9fee344 <col:29> 'const char [21]' lvalue "basic_string::append"))
  (BinaryOperator 0x9fee460 <line:346:7, col:38> '<dependent type>' '='
    (DeclRefExpr 0x9fee39c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fee040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9fee438 <col:13, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9fee3d0 <col:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9fee3b4 <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fedfc0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9fee404 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fee000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fee41c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fee040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (IfStmt 0x9feeba0 <line:347:7, line:354:2>
    <<<NULL>>>
    (DeclRefExpr 0x9fee478 <line:347:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fee040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9feeb80 <line:348:2, line:354:2>
      (DeclStmt 0x9fee5c8 <line:349:4, col:46>
        0x9fee4a0 "const size_type __len =
          (CXXOperatorCallExpr 0x9fee5a0 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x9fee558 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (DeclRefExpr 0x9fee4d4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fee040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9fee538 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fee500 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9fee4f0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x9fee808 <line:350:4, line:351:25>
        <<<NULL>>>
        (BinaryOperator 0x9fee770 <line:350:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9fee6a0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x9fee658 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
            (DeclRefExpr 0x9fee5d8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fee4a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9fee638 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fee600 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x9fee5f0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x9fee750 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fee718 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x9fee6f8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x9fee6d8 <col:36> '<bound member function type>' ->_M_rep 0x9f9b000
                  (CXXThisExpr 0x9fee6c8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x9fee7e8 <line:351:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9fee798 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9fee788 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9fee7cc <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fee4a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9feea98 <line:352:4, col:66> '<dependent type>'
        (DeclRefExpr 0x9fee824 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x9fee960 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9fee918 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
          (CallExpr 0x9fee890 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x9fee850 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x9fee8f8 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fee8c0 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x9fee8b0 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0x9feea58 <col:38, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0x9feea10 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
          (CallExpr 0x9fee9d8 <col:38, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9fee9a0 <col:38, col:44> '<dependent type>' lvalue
              (DeclRefExpr 0x9fee984 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9fedfc0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x9fee9f4 <col:56> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fee000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9feea7c <col:63> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fee040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9feeb60 <line:353:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9feeb10 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9feeaf0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9feead0 <col:4> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9feeac0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9feeb44 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fee4a0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9feebe8 <line:355:7, col:15>
    (UnaryOperator 0x9feebd0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9feebc0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n) (CompoundStmt 0x9ff0420 </usr/include/c++/4.6/bits/basic_string.tcc:362:6, line:387:6>
  (NullStmt 0x9fef430 <line:363:47>)
  (CallExpr 0x9fef4b8 <line:364:8, col:46> '<dependent type>'
    (MemberExpr 0x9fef450 <col:8> '<bound member function type>' ->_M_check 0x9f9b310
      (CXXThisExpr 0x9fef440 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9fef470 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef0b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9fef488 <col:24> 'const char [21]' lvalue "basic_string::insert"))
  (CallExpr 0x9fef598 <line:365:8, col:65> '<dependent type>'
    (MemberExpr 0x9fef4f0 <col:8> '<bound member function type>' ->_M_check_length 0x9f9b4d0
      (CXXThisExpr 0x9fef4e0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CXXUnresolvedConstructExpr 0x9fef530 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x9fef518 <col:34> 'int' 0))
    (DeclRefExpr 0x9fef54c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef160 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9fef564 <col:43> 'const char [21]' lvalue "basic_string::insert"))
  (IfStmt 0x9ff0400 <line:366:8, line:386:10>
    <<<NULL>>>
    (BinaryOperator 0x9fef6d0 <line:366:12, col:55> '<dependent type>' '||'
      (CallExpr 0x9fef608 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x9fef5d0 <col:12> '<bound member function type>' ->_M_disjunct 0x9f9b770
          (CXXThisExpr 0x9fef5c0 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fef5f0 <col:24> 'const _CharT *' lvalue ParmVar 0x9fef120 '__s' 'const _CharT *'))
      (CallExpr 0x9fef6b0 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9fef678 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x9fef658 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x9fef638 <col:32> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9fef628 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9fef7d0 <line:367:10, col:62>
      (CallExpr 0x9fef7a0 <col:17, col:62> '<dependent type>'
        (MemberExpr 0x9fef6f8 <col:17> '<bound member function type>' ->_M_replace_safe 0x9fb13d0
          (CXXThisExpr 0x9fef6e8 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fef718 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef0b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9fef750 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9fef738 <col:50> 'int' 0))
        (DeclRefExpr 0x9fef76c <col:54> 'const _CharT *' lvalue ParmVar 0x9fef120 '__s' 'const _CharT *')
        (DeclRefExpr 0x9fef784 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef160 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9ff03d8 <line:369:10, line:386:10>
      (DeclStmt 0x9fef910 <line:371:12, col:51>
        0x9fef7f0 "const size_type __off =
          (CXXOperatorCallExpr 0x9fef8e8 <col:36, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0x9fef8b0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0x9fef824 <col:36> 'const _CharT *' lvalue ParmVar 0x9fef120 '__s' 'const _CharT *')
            (CallExpr 0x9fef890 <col:42, col:50> '<dependent type>'
              (UnresolvedMemberExpr 0x9fef850 <col:42> '<bound member function type>' lvalue)))")
      (CallExpr 0x9fef998 <line:372:12, col:35> '<dependent type>'
        (MemberExpr 0x9fef930 <col:12> '<bound member function type>' ->_M_mutate 0x9fa18c0
          (CXXThisExpr 0x9fef920 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9fef950 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef0b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x9fef968 <col:29> 'int' 0)
        (DeclRefExpr 0x9fef980 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef160 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (BinaryOperator 0x9fefad0 <line:373:12, col:30> '<dependent type>' '='
        (DeclRefExpr 0x9fef9c0 <col:12> 'const _CharT *' lvalue ParmVar 0x9fef120 '__s' 'const _CharT *')
        (CXXOperatorCallExpr 0x9fefaa8 <col:18, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9fefa60 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
          (CallExpr 0x9fefa28 <col:18, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x9fef9e8 <col:18> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9fefa44 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fef7f0 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x9fefc50 <line:374:12, col:43>
        0x9fefb20 "_CharT *__p =
          (CXXOperatorCallExpr 0x9fefc28 <col:26, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x9fefbe0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (CallExpr 0x9fefba8 <col:26, col:34> '<dependent type>'
              (UnresolvedMemberExpr 0x9fefb68 <col:26> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9fefbc4 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef0b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (IfStmt 0x9ff0380 <line:375:12, line:384:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fefd60 <line:375:16, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9fefd18 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
          (CXXOperatorCallExpr 0x9fefcd8 <col:16, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9fefc90 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (DeclRefExpr 0x9fefc60 <col:16> 'const _CharT *' lvalue ParmVar 0x9fef120 '__s' 'const _CharT *')
            (DeclRefExpr 0x9fefc78 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef160 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9fefcfc <col:30> '_CharT *' lvalue Var 0x9fefb20 '__p' '_CharT *'))
        (CallExpr 0x9fefde8 <line:376:14, col:35> '<dependent type>'
          (DeclRefExpr 0x9fefd84 <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (DeclRefExpr 0x9fefd9c <col:22> '_CharT *' lvalue Var 0x9fefb20 '__p' '_CharT *')
          (DeclRefExpr 0x9fefdb4 <col:27> 'const _CharT *' lvalue ParmVar 0x9fef120 '__s' 'const _CharT *')
          (DeclRefExpr 0x9fefdcc <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef160 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9ff0360 <line:377:17, line:384:14>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9fefe88 <line:377:21, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9fefe40 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
            (DeclRefExpr 0x9fefe10 <col:21> 'const _CharT *' lvalue ParmVar 0x9fef120 '__s' 'const _CharT *')
            (DeclRefExpr 0x9fefe28 <col:28> '_CharT *' lvalue Var 0x9fefb20 '__p' '_CharT *'))
          (CallExpr 0x9feff98 <line:378:14, col:41> '<dependent type>'
            (DeclRefExpr 0x9fefeac <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
            (DeclRefExpr 0x9fefec4 <col:22> '_CharT *' lvalue Var 0x9fefb20 '__p' '_CharT *')
            (CXXOperatorCallExpr 0x9feff58 <col:27, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9feff10 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
              (DeclRefExpr 0x9fefedc <col:27> 'const _CharT *' lvalue ParmVar 0x9fef120 '__s' 'const _CharT *')
              (DeclRefExpr 0x9fefef4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef160 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9feff7c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef160 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CompoundStmt 0x9ff0340 <line:380:14, line:384:14>
            (DeclStmt 0x9ff0098 <line:381:9, col:44>
              0x9feffd0 "const size_type __nleft =
                (CXXOperatorCallExpr 0x9ff0070 <col:35, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x9ff0038 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                  (DeclRefExpr 0x9ff0004 <col:35> '_CharT *' lvalue Var 0x9fefb20 '__p' '_CharT *')
                  (DeclRefExpr 0x9ff001c <col:41> 'const _CharT *' lvalue ParmVar 0x9fef120 '__s' 'const _CharT *'))")
            (CallExpr 0x9ff0108 <line:382:16, col:41> '<dependent type>'
              (DeclRefExpr 0x9ff00a8 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (DeclRefExpr 0x9ff00c0 <col:24> '_CharT *' lvalue Var 0x9fefb20 '__p' '_CharT *')
              (DeclRefExpr 0x9ff00d8 <col:29> 'const _CharT *' lvalue ParmVar 0x9fef120 '__s' 'const _CharT *')
              (DeclRefExpr 0x9ff00f0 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9feffd0 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CallExpr 0x9ff0318 <line:383:16, col:63> '<dependent type>'
              (DeclRefExpr 0x9ff0130 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (CXXOperatorCallExpr 0x9ff01c0 <col:24, col:30> '<dependent type>'
                (UnresolvedLookupExpr 0x9ff0178 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
                (DeclRefExpr 0x9ff0148 <col:24> '_CharT *' lvalue Var 0x9fefb20 '__p' '_CharT *')
                (DeclRefExpr 0x9ff0160 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9feffd0 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9ff0260 <col:39, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9ff0218 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
                (DeclRefExpr 0x9ff01e4 <col:39> '_CharT *' lvalue Var 0x9fefb20 '__p' '_CharT *')
                (DeclRefExpr 0x9ff01fc <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef160 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9ff02f0 <col:50, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0x9ff02b8 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                (DeclRefExpr 0x9ff0284 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fef160 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x9ff029c <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9feffd0 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
      (ReturnStmt 0x9ff03c8 <line:385:12, col:20>
        (UnaryOperator 0x9ff03b0 <col:19, col:20> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ff03a0 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    typename basic_string<_CharT, _Traits, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0x9ff1128 </usr/include/c++/4.6/bits/basic_string.tcc:393:6, line:410:6>
  (NullStmt 0x9ff0bf8 <line:395:28>)
  (DeclStmt 0x9ff0cd8 <line:400:8, col:49>
    0x9ff0c10 "const size_type __size =
      (CXXOperatorCallExpr 0x9ff0cb0 <col:33, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff0c78 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ff0c44 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9ff0970 '__last' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9ff0c5c <col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9ff0930 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (IfStmt 0x9ff1108 <line:401:8, line:409:10>
    <<<NULL>>>
    (DeclRefExpr 0x9ff0ce8 <line:401:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff0c10 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9ff10c0 <line:402:3, line:407:3>
      (DeclStmt 0x9ff0e10 <line:403:5, col:50>
        0x9ff0d10 "const size_type __pos =
          (CXXOperatorCallExpr 0x9ff0de8 <col:29, col:49> '<dependent type>'
            (UnresolvedLookupExpr 0x9ff0db0 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0x9ff0d44 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9ff0930 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
            (CallExpr 0x9ff0d90 <col:39, col:49> '<dependent type>'
              (MemberExpr 0x9ff0d70 <col:39> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
                (CXXThisExpr 0x9ff0d60 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (CallExpr 0x9ff0ec0 <line:404:5, col:42> '<dependent type>'
        (MemberExpr 0x9ff0e30 <col:5> '<bound member function type>' ->_M_mutate 0x9fa18c0
          (CXXThisExpr 0x9ff0e20 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ff0e50 <col:15> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff0d10 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ff0e68 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff0c10 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9ff0ea0 <col:30, col:41> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9ff0e88 <col:40> 'int' 0)))
      (CallExpr 0x9ff0f70 <line:405:5, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff0f38 <col:5, col:15> '<dependent type>' lvalue
          (CallExpr 0x9ff0f18 <col:5, col:12> '<dependent type>'
            (MemberExpr 0x9ff0ef8 <col:5> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9ff0ee8 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
      (ReturnStmt 0x9ff10b0 <line:406:5, col:38>
        (CXXUnresolvedConstructExpr 0x9ff1090 <col:12, col:38> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
          (CXXOperatorCallExpr 0x9ff1068 <col:21, col:33> '<dependent type>'
            (UnresolvedLookupExpr 0x9ff1020 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (CallExpr 0x9ff0fe8 <col:21, col:29> '<dependent type>'
              (UnresolvedMemberExpr 0x9ff0fa8 <col:21> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9ff1004 <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff0d10 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))
    (ReturnStmt 0x9ff10f8 <line:409:3, col:10>
      (DeclRefExpr 0x9ff10e0 <col:10> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9ff0930 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))))


    basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x9ff2a48 </usr/include/c++/4.6/bits/basic_string.tcc:417:6, line:441:6>
  (NullStmt 0x9ff1970 <line:418:48>)
  (CallExpr 0x9ff1a00 <line:419:8, col:47> '<dependent type>'
    (MemberExpr 0x9ff1990 <col:8> '<bound member function type>' ->_M_check 0x9f9b310
      (CXXThisExpr 0x9ff1980 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ff19b0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff15e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9ff19c8 <col:24> 'const char [22]' lvalue "basic_string::replace"))
  (BinaryOperator 0x9ff1ac8 <line:420:8, col:35> '<dependent type>' '='
    (DeclRefExpr 0x9ff1a24 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff1620 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ff1aa0 <col:15, col:35> '<dependent type>'
      (MemberExpr 0x9ff1a50 <col:15> '<bound member function type>' ->_M_limit 0x9f9b630
        (CXXThisExpr 0x9ff1a40 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9ff1a70 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff15e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ff1a88 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff1620 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (CallExpr 0x9ff1b78 <line:421:8, col:59> '<dependent type>'
    (MemberExpr 0x9ff1af0 <col:8> '<bound member function type>' ->_M_check_length 0x9f9b4d0
      (CXXThisExpr 0x9ff1ae0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ff1b10 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff1620 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ff1b28 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff16d0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9ff1b40 <col:36> 'const char [22]' lvalue "basic_string::replace"))
  (DeclStmt 0x9ff1be8 <line:422:8, col:19>
    0x9ff1bb0 "bool __left")
  (IfStmt 0x9ff2a28 <line:423:8, line:440:3>
    <<<NULL>>>
    (BinaryOperator 0x9ff1d08 <line:423:12, col:55> '<dependent type>' '||'
      (CallExpr 0x9ff1c40 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x9ff1c08 <col:12> '<bound member function type>' ->_M_disjunct 0x9f9b770
          (CXXThisExpr 0x9ff1bf8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ff1c28 <col:24> 'const _CharT *' lvalue ParmVar 0x9ff1690 '__s' 'const _CharT *'))
      (CallExpr 0x9ff1ce8 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff1cb0 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x9ff1c90 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x9ff1c70 <col:32> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9ff1c60 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9ff1de0 <line:424:10, col:55>
      (CallExpr 0x9ff1db0 <col:17, col:55> '<dependent type>'
        (MemberExpr 0x9ff1d30 <col:17> '<bound member function type>' ->_M_replace_safe 0x9fb13d0
          (CXXThisExpr 0x9ff1d20 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ff1d50 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff15e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ff1d68 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff1620 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ff1d80 <col:46> 'const _CharT *' lvalue ParmVar 0x9ff1690 '__s' 'const _CharT *')
        (DeclRefExpr 0x9ff1d98 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff16d0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    (IfStmt 0x9ff2a08 <line:425:13, line:440:3>
      <<<NULL>>>
      (BinaryOperator 0x9ff2248 <line:425:17, line:426:34> '<dependent type>' '||'
        (ParenExpr 0x9ff2028 <line:425:17, col:58> '<dependent type>'
          (BinaryOperator 0x9ff2010 <col:18, col:53> '<dependent type>' '='
            (DeclRefExpr 0x9ff1df0 <col:18> '_Bool' lvalue Var 0x9ff1bb0 '__left' '_Bool')
            (CXXOperatorCallExpr 0x9ff1fe8 <col:27, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0x9ff1fa0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
              (CXXOperatorCallExpr 0x9ff1e80 <col:27, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0x9ff1e38 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
                (DeclRefExpr 0x9ff1e08 <col:27> 'const _CharT *' lvalue ParmVar 0x9ff1690 '__s' 'const _CharT *')
                (DeclRefExpr 0x9ff1e20 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff16d0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9ff1f78 <col:41, col:53> '<dependent type>'
                (UnresolvedLookupExpr 0x9ff1f30 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
                (CallExpr 0x9ff1ef8 <col:41, col:49> '<dependent type>'
                  (UnresolvedMemberExpr 0x9ff1eb8 <col:41> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9ff1f14 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff15e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CXXOperatorCallExpr 0x9ff2220 <line:426:6, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9ff21d8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
          (CXXOperatorCallExpr 0x9ff2198 <col:6, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x9ff2150 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (CXXOperatorCallExpr 0x9ff2110 <col:6, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x9ff20c8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
              (CallExpr 0x9ff2090 <col:6, col:14> '<dependent type>'
                (UnresolvedMemberExpr 0x9ff2050 <col:6> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9ff20ac <col:18> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff15e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9ff2134 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff1620 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9ff21bc <col:34> 'const _CharT *' lvalue ParmVar 0x9ff1690 '__s' 'const _CharT *')))
      (CompoundStmt 0x9ff2800 <line:427:3, line:434:3>
        (DeclStmt 0x9ff2390 <line:429:5, col:38>
          0x9ff2270 "size_type __off =
            (CXXOperatorCallExpr 0x9ff2368 <col:23, col:37> '<dependent type>'
              (UnresolvedLookupExpr 0x9ff2330 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (DeclRefExpr 0x9ff22a4 <col:23> 'const _CharT *' lvalue ParmVar 0x9ff1690 '__s' 'const _CharT *')
              (CallExpr 0x9ff2310 <col:29, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0x9ff22d0 <col:29> '<bound member function type>' lvalue)))")
        (ConditionalOperator 0x9ff24c0 <line:430:5, col:43> '<dependent type>'
          (ImplicitCastExpr 0x9ff24b0 <col:5> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9ff23a0 <col:5> '_Bool' lvalue Var 0x9ff1bb0 '__left' '_Bool'))
          (DeclRefExpr 0x9ff23b8 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ff2270 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
          (ParenExpr 0x9ff2498 <col:22, col:43> '<dependent type>' lvalue
            (CompoundAssignOperator 0x9ff2478 <col:23, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9ff23d0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ff2270 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXOperatorCallExpr 0x9ff2450 <col:32, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0x9ff2418 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                (DeclRefExpr 0x9ff23e8 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff16d0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x9ff2400 <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff1620 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CallExpr 0x9ff2558 <line:431:5, col:32> '<dependent type>'
          (MemberExpr 0x9ff24f0 <col:5> '<bound member function type>' ->_M_mutate 0x9fa18c0
            (CXXThisExpr 0x9ff24e0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x9ff2510 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff15e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ff2528 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff1620 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ff2540 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff16d0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9ff27a0 <line:432:5, col:55> '<dependent type>'
          (DeclRefExpr 0x9ff2580 <col:5> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9ff2668 <col:13, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x9ff2620 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (CallExpr 0x9ff25e8 <col:13, col:21> '<dependent type>'
              (UnresolvedMemberExpr 0x9ff25a8 <col:13> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9ff2604 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff15e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9ff2760 <col:32, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9ff2718 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (CallExpr 0x9ff26e0 <col:32, col:40> '<dependent type>'
              (UnresolvedMemberExpr 0x9ff26a0 <col:32> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9ff26fc <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ff2270 '__off' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9ff2784 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff16d0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (ReturnStmt 0x9ff27f0 <line:433:5, col:13>
          (UnaryOperator 0x9ff27d8 <col:12, col:13> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9ff27c8 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CompoundStmt 0x9ff29f0 <line:436:3, line:440:3>
        (DeclStmt 0x9ff28b8 <line:438:5, col:40>
          0x9ff2830 "const basic_string<_CharT, _Traits, _Alloc> __tmp =
            (ParenListExpr 0x9ff2898 <col:29, col:39> 'const basic_string<_CharT, _Traits, _Alloc>'
              (DeclRefExpr 0x9ff2864 <col:30> 'const _CharT *' lvalue ParmVar 0x9ff1690 '__s' 'const _CharT *')
              (DeclRefExpr 0x9ff287c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff16d0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
        (ReturnStmt 0x9ff29e0 <line:439:5, col:62>
          (CallExpr 0x9ff29b0 <col:12, col:62> '<dependent type>'
            (MemberExpr 0x9ff28d8 <col:12> '<bound member function type>' ->_M_replace_safe 0x9fb13d0
              (CXXThisExpr 0x9ff28c8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
            (DeclRefExpr 0x9ff28f8 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff15e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9ff2910 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff1620 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9ff2978 <col:41, col:55> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ff2940 <col:41, col:47> '<dependent type>' lvalue
                (DeclRefExpr 0x9ff2928 <col:41> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ff2830 '__tmp' 'const basic_string<_CharT, _Traits, _Alloc>')))
            (DeclRefExpr 0x9ff2994 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff16d0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))))


    void _M_destroy(const _Alloc &__a) throw() (CompoundStmt 0x9ff3270 </usr/include/c++/4.6/bits/basic_string.tcc:447:5, line:451:5>
  (DeclStmt 0x9ff3158 <line:448:7, line:449:65>
    0x9ff2f70 "const size_type __size =
      (CXXOperatorCallExpr 0x9ff3130 <line:448:32, line:449:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff30e8 <line:448:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
        (UnaryExprOrTypeTraitExpr 0x9ff2fb0 <col:32, col:48> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')
        (BinaryOperator 0x9ff30d0 <line:449:25, col:64> '<dependent type>' '*'
          (ParenExpr 0x9ff3098 <col:25, col:47> '<dependent type>'
            (CXXOperatorCallExpr 0x9ff3070 <col:26, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x9ff3028 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
              (CXXDependentScopeMemberExpr 0x9ff2fd8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9ff2fc8 <col:26> 'struct std::basic_string::_Rep *' this))
              (IntegerLiteral 0x9ff3010 <col:46> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x9ff30b8 <col:51, col:64> 'unsigned int' sizeof '_CharT')))")
  (CallExpr 0x9ff3248 <line:450:7, col:77> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ff31c0 <col:7, col:29> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x9ff31a0 <col:7, col:27> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
        (DeclRefExpr 0x9ff3188 <col:24> 'const _Alloc' lvalue ParmVar 0x9ff2e50 '__a' 'const _Alloc &')))
    (CXXReinterpretCastExpr 0x9ff3218 <col:40, col:68> 'char *' reinterpret_cast<char *> <Dependent>
      (CXXThisExpr 0x9ff31f8 <col:64> 'struct std::basic_string::_Rep *' this))
    (DeclRefExpr 0x9ff3230 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff2f70 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void _M_leak_hard() (CompoundStmt 0x9ff3a30 </usr/include/c++/4.6/bits/basic_string.tcc:457:5, line:465:5>
  (IfStmt 0x9ff3800 <line:459:7, line:460:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ff37c8 <line:459:11, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x9ff3770 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
      (CallExpr 0x9ff3700 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x9ff36e0 <col:11> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9ff36d0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (UnaryOperator 0x9ff3758 <col:23, col:37> '<dependent type>' prefix '&'
        (CallExpr 0x9ff3738 <col:24, col:37> '<dependent type>'
          (DeclRefExpr 0x9ff371c <col:24> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x9fa19d0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
    (ReturnStmt 0x9ff37f0 <line:460:2>)
    <<<NULL>>>)
  (IfStmt 0x9ff3968 <line:462:7, line:463:19>
    <<<NULL>>>
    (CallExpr 0x9ff38a8 <line:462:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ff3870 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x9ff3850 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x9ff3830 <col:11> '<bound member function type>' ->_M_rep 0x9f9b000
            (CXXThisExpr 0x9ff3820 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x9ff3940 <line:463:2, col:19> '<dependent type>'
      (MemberExpr 0x9ff38d8 <col:2> '<bound member function type>' ->_M_mutate 0x9fa18c0
        (CXXThisExpr 0x9ff38c8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (IntegerLiteral 0x9ff38f8 <col:12> 'int' 0)
      (IntegerLiteral 0x9ff3910 <col:15> 'int' 0)
      (IntegerLiteral 0x9ff3928 <col:18> 'int' 0))
    <<<NULL>>>)
  (CallExpr 0x9ff3a10 <line:464:7, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ff39d8 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x9ff39b8 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x9ff3998 <col:7> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9ff3988 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    void _M_mutate(size_type __pos, size_type __len1, size_type __len2) (CompoundStmt 0x9ff52b8 </usr/include/c++/4.6/bits/basic_string.tcc:471:5, line:498:5>
  (DeclStmt 0x9ff3ff0 <line:472:7, col:48>
    0x9ff3f50 "const size_type __old_size =
      (CallExpr 0x9ff3fd0 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff3f98 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9ff3f88 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9ff4160 <line:473:7, col:64>
    0x9ff4010 "const size_type __new_size =
      (CXXOperatorCallExpr 0x9ff4138 <col:36, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff4100 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (CXXOperatorCallExpr 0x9ff40c0 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9ff4078 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
          (DeclRefExpr 0x9ff4044 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff3f50 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ff405c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3e40 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9ff40e4 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3e00 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9ff42c0 <line:474:7, col:63>
    0x9ff4180 "const size_type __how_much =
      (CXXOperatorCallExpr 0x9ff4298 <col:36, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff4260 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (CXXOperatorCallExpr 0x9ff4220 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9ff41e8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (DeclRefExpr 0x9ff41b4 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff3f50 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ff41cc <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3dc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9ff4244 <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3e00 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9ff51d8 <line:476:7, line:496:2>
    <<<NULL>>>
    (BinaryOperator 0x9ff4468 <line:476:11, col:67> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9ff4398 <col:11, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff4350 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
        (DeclRefExpr 0x9ff42d0 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff4010 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9ff4330 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ff42f8 <col:24, col:30> '<dependent type>' lvalue
            (CXXThisExpr 0x9ff42e8 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9ff4448 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff4410 <col:44, col:54> '<dependent type>' lvalue
          (CallExpr 0x9ff43f0 <col:44, col:51> '<dependent type>'
            (MemberExpr 0x9ff43d0 <col:44> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9ff43c0 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x9ff4d40 <line:477:2, line:490:2>
      (DeclStmt 0x9ff4518 <line:479:4, col:46>
        0x9ff4490 "const allocator_type __a =
          (CallExpr 0x9ff44f8 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x9ff44d8 <col:31> '<bound member function type>' ->get_allocator 0x9fb49d0
              (CXXThisExpr 0x9ff44c8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9ff4690 <line:480:4, col:66>
        0x9ff4540 "std::basic_string::_Rep *__r =
          (CallExpr 0x9ff4668 <col:16, col:65> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ff4598 <col:16, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x9ff45cc <col:32> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff4010 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x9ff4630 <col:44, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ff45f8 <col:44, col:50> '<dependent type>' lvalue
                (CXXThisExpr 0x9ff45e8 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x9ff464c <col:62> 'const allocator_type':'const _Alloc' lvalue Var 0x9ff4490 '__a' 'const allocator_type':'const _Alloc'))")
      (IfStmt 0x9ff47f0 <line:482:4, line:483:49>
        <<<NULL>>>
        (DeclRefExpr 0x9ff46a0 <line:482:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3dc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9ff47c8 <line:483:6, col:49> '<dependent type>'
          (DeclRefExpr 0x9ff46b8 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x9ff4720 <col:14, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ff46e8 <col:14, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9ff46d0 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9ff4540 '__r' 'struct std::basic_string::_Rep *')))
          (CallExpr 0x9ff4790 <col:33, col:41> '<dependent type>'
            (UnresolvedMemberExpr 0x9ff4750 <col:33> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9ff47ac <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3dc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (IfStmt 0x9ff4b80 <line:484:4, line:486:45>
        <<<NULL>>>
        (DeclRefExpr 0x9ff480c <line:484:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff4180 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9ff4b58 <line:485:6, line:486:45> '<dependent type>'
          (DeclRefExpr 0x9ff4824 <line:485:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9ff4998 <col:14, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9ff4950 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (CXXOperatorCallExpr 0x9ff4910 <col:14, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x9ff48c8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
              (CallExpr 0x9ff4890 <col:14, col:30> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ff4858 <col:14, col:19> '<dependent type>' lvalue
                  (DeclRefExpr 0x9ff483c <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9ff4540 '__r' 'struct std::basic_string::_Rep *')))
              (DeclRefExpr 0x9ff48ac <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3dc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9ff4934 <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3e40 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9ff4b18 <line:486:7, col:27> '<dependent type>'
            (UnresolvedLookupExpr 0x9ff4ad0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (CXXOperatorCallExpr 0x9ff4a90 <col:7, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x9ff4a48 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
              (CallExpr 0x9ff4a10 <col:7, col:15> '<dependent type>'
                (UnresolvedMemberExpr 0x9ff49d0 <col:7> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9ff4a2c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3dc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9ff4ab4 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3e00 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9ff4b3c <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff4180 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9ff4c40 <line:488:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff4bf0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9ff4bd0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9ff4bb0 <col:4> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9ff4ba0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9ff4c24 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9ff4490 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9ff4d20 <line:489:4, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0x9ff4c70 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9ff4d00 <col:12, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ff4cc8 <col:12, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9ff4cb0 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x9ff4540 '__r' 'struct std::basic_string::_Rep *')))))
    (IfStmt 0x9ff51b8 <line:491:12, line:496:2>
      <<<NULL>>>
      (BinaryOperator 0x9ff4e30 <line:491:16, col:40> '<dependent type>' '&&'
        (DeclRefExpr 0x9ff4d68 <col:16> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff4180 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9ff4e08 <col:30, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x9ff4db0 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0)
          (DeclRefExpr 0x9ff4d80 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3e00 '__len1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ff4d98 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3e40 '__len2' 'size_type':'typename _CharT_alloc_type::size_type')))
      (CompoundStmt 0x9ff51a0 <line:492:2, line:496:2>
        (CallExpr 0x9ff5178 <line:494:4, line:495:43> '<dependent type>'
          (DeclRefExpr 0x9ff4e48 <line:494:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9bab0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9ff4fb8 <col:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x9ff4f70 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (CXXOperatorCallExpr 0x9ff4f30 <col:12, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9ff4ee8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
              (CallExpr 0x9ff4eb0 <col:12, col:20> '<dependent type>'
                (UnresolvedMemberExpr 0x9ff4e70 <col:12> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9ff4ecc <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3dc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9ff4f54 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3e40 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9ff5138 <line:495:5, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x9ff50f0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
            (CXXOperatorCallExpr 0x9ff50b0 <col:5, col:17> '<dependent type>'
              (UnresolvedLookupExpr 0x9ff5068 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
              (CallExpr 0x9ff5030 <col:5, col:13> '<dependent type>'
                (UnresolvedMemberExpr 0x9ff4ff0 <col:5> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9ff504c <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3dc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9ff50d4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff3e00 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9ff515c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff4180 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      <<<NULL>>>))
  (CallExpr 0x9ff5298 <line:497:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ff5248 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x9ff5228 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x9ff5208 <col:7> '<bound member function type>' ->_M_rep 0x9f9b000
          (CXXThisExpr 0x9ff51f8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x9ff527c <col:44> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff4010 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void reserve(size_type __res = (IntegerLiteral 0x9fb9d80 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
) (CompoundStmt 0x9ff5f00 </usr/include/c++/4.6/bits/basic_string.tcc:504:5, line:515:5>
  (IfStmt 0x9ff5ee0 <line:505:7, line:514:9>
    <<<NULL>>>
    (BinaryOperator 0x9ff58e0 <line:505:11, col:63> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9ff5810 <col:11, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff57b8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0)
        (DeclRefExpr 0x9ff5734 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff5650 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9ff5798 <col:20, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ff5760 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x9ff5750 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9ff58c0 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff5888 <col:40, col:50> '<dependent type>' lvalue
          (CallExpr 0x9ff5868 <col:40, col:47> '<dependent type>'
            (MemberExpr 0x9ff5848 <col:40> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9ff5838 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x9ff5eb8 <line:506:9, line:514:9>
      (IfStmt 0x9ff5a80 <line:508:4, line:509:25>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ff59c0 <line:508:8, col:27> '<dependent type>'
          (UnresolvedLookupExpr 0x9ff5978 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
          (DeclRefExpr 0x9ff58f8 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff5650 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x9ff5958 <col:16, col:27> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ff5920 <col:16, col:22> '<dependent type>' lvalue
              (CXXThisExpr 0x9ff5910 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9ff5a68 <line:509:6, col:25> '<dependent type>' '='
          (DeclRefExpr 0x9ff59e4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff5650 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x9ff5a48 <col:14, col:25> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ff5a10 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x9ff5a00 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        <<<NULL>>>)
      (DeclStmt 0x9ff5b38 <line:510:4, col:46>
        0x9ff5ab0 "const allocator_type __a =
          (CallExpr 0x9ff5b18 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x9ff5af8 <col:31> '<bound member function type>' ->get_allocator 0x9fb49d0
              (CXXThisExpr 0x9ff5ae8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9ff5d60 <line:511:4, col:65>
        0x9ff5b80 "_CharT *__tmp =
          (CallExpr 0x9ff5d38 <col:20, col:64> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9ff5c08 <col:20, col:30> '<dependent type>' lvalue
              (CallExpr 0x9ff5be8 <col:20, col:27> '<dependent type>'
                (MemberExpr 0x9ff5bc8 <col:20> '<bound member function type>' ->_M_rep 0x9f9b000
                  (CXXThisExpr 0x9ff5bb8 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
            (DeclRefExpr 0x9ff5c3c <col:39> 'const allocator_type':'const _Alloc' lvalue Var 0x9ff5ab0 '__a' 'const allocator_type':'const _Alloc')
            (CXXOperatorCallExpr 0x9ff5d10 <col:44, col:63> '<dependent type>'
              (UnresolvedLookupExpr 0x9ff5cd8 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (DeclRefExpr 0x9ff5c54 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff5650 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
              (CallExpr 0x9ff5cb8 <col:52, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9ff5c80 <col:52, col:58> '<dependent type>' lvalue
                  (CXXThisExpr 0x9ff5c70 <col:52> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))")
      (CallExpr 0x9ff5e10 <line:512:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff5dc0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9ff5da0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9ff5d80 <col:4> '<bound member function type>' ->_M_rep 0x9f9b000
              (CXXThisExpr 0x9ff5d70 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9ff5df4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9ff5ab0 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9ff5e98 <line:513:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9ff5e40 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9ff5e80 <col:12> '_CharT *' lvalue Var 0x9ff5b80 '__tmp' '_CharT *')))
    <<<NULL>>>))


    void swap(basic_string<_CharT, _Traits, _Alloc> &__s) (CompoundStmt 0x9ff6ea8 </usr/include/c++/4.6/bits/basic_string.tcc:521:5, line:542:5>
  (IfStmt 0x9ff64d8 <line:522:7, line:523:28>
    <<<NULL>>>
    (CallExpr 0x9ff6410 <line:522:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ff63d8 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x9ff63b8 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x9ff6398 <col:11> '<bound member function type>' ->_M_rep 0x9f9b000
            (CXXThisExpr 0x9ff6388 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x9ff64b8 <line:523:2, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ff6480 <col:2, col:12> '<dependent type>' lvalue
        (CallExpr 0x9ff6460 <col:2, col:9> '<dependent type>'
          (MemberExpr 0x9ff6440 <col:2> '<bound member function type>' ->_M_rep 0x9f9b000
            (CXXThisExpr 0x9ff6430 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (IfStmt 0x9ff6688 <line:524:7, line:525:32>
    <<<NULL>>>
    (CallExpr 0x9ff65a0 <line:524:11, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ff6568 <col:11, col:25> '<dependent type>' lvalue
        (CallExpr 0x9ff6548 <col:11, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ff6510 <col:11, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x9ff64f4 <col:11> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ff62a0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    (CallExpr 0x9ff6668 <line:525:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ff6630 <col:2, col:16> '<dependent type>' lvalue
        (CallExpr 0x9ff6610 <col:2, col:13> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ff65d8 <col:2, col:6> '<dependent type>' lvalue
            (DeclRefExpr 0x9ff65bc <col:2> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ff62a0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    <<<NULL>>>)
  (IfStmt 0x9ff6e88 <line:526:7, line:541:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ff67d8 <line:526:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9ff6780 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
      (CallExpr 0x9ff66f0 <col:11, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff66b8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9ff66a8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9ff6760 <col:36, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff6728 <col:36, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x9ff670c <col:36> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ff62a0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9ff6a50 <line:527:2, line:531:2>
      (DeclStmt 0x9ff68d8 <line:528:4, col:29>
        0x9ff6830 "_CharT *__tmp =
          (CallExpr 0x9ff68b8 <col:20, col:28> '<dependent type>'
            (UnresolvedMemberExpr 0x9ff6878 <col:20> '<bound member function type>' lvalue))")
      (CallExpr 0x9ff69a8 <line:529:4, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0x9ff68f8 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9ff6988 <col:12, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9ff6950 <col:12, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9ff6938 <col:12> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ff62a0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
      (CallExpr 0x9ff6a30 <line:530:4, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff69e0 <col:4, col:8> '<dependent type>' lvalue
          (DeclRefExpr 0x9ff69c8 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ff62a0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9ff6a14 <col:16> '_CharT *' lvalue Var 0x9ff6830 '__tmp' '_CharT *')))
    (CompoundStmt 0x9ff6e68 <line:534:2, line:541:2>
      (DeclStmt 0x9ff6bf0 <line:535:4, line:536:29>
        0x9ff6a80 "const basic_string<_CharT, _Traits, _Alloc> __tmp1 =
          (ParenListExpr 0x9ff6bc8 <line:535:29, line:536:28> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x9ff6ae8 <line:535:30, col:40> '<dependent type>'
              (MemberExpr 0x9ff6ac8 <col:30> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
                (CXXThisExpr 0x9ff6ab8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9ff6b38 <col:43, col:51> '<dependent type>'
              (MemberExpr 0x9ff6b18 <col:43> '<bound member function type>' ->_M_iend 0x9f9b130
                (CXXThisExpr 0x9ff6b08 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9ff6ba8 <line:536:9, col:27> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ff6b70 <col:9, col:13> '<dependent type>' lvalue
                (DeclRefExpr 0x9ff6b54 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ff62a0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
      (DeclStmt 0x9ff6db8 <line:537:4, line:538:31>
        0x9ff6c10 "const basic_string<_CharT, _Traits, _Alloc> __tmp2 =
          (ParenListExpr 0x9ff6d90 <line:537:29, line:538:30> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x9ff6c98 <line:537:30, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ff6c60 <col:30, col:34> '<dependent type>' lvalue
                (DeclRefExpr 0x9ff6c44 <col:30> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ff62a0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9ff6d08 <col:47, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ff6cd0 <col:47, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x9ff6cb4 <col:47> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ff62a0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9ff6d70 <line:538:9, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9ff6d38 <col:9, col:15> '<dependent type>' lvalue
                (CXXThisExpr 0x9ff6d28 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (BinaryOperator 0x9ff6e08 <line:539:4, col:12> '<dependent type>' '='
        (UnaryOperator 0x9ff6dd8 <col:4, col:5> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9ff6dc8 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ff6dec <col:12> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ff6c10 '__tmp2' 'const basic_string<_CharT, _Traits, _Alloc>'))
      (BinaryOperator 0x9ff6e50 <line:540:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0x9ff6e20 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ff62a0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')
        (DeclRefExpr 0x9ff6e38 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ff6a80 '__tmp1' 'const basic_string<_CharT, _Traits, _Alloc>')))))


    static typename basic_string<_CharT, _Traits, _Alloc>::_Rep *_S_create(size_type __capacity, size_type __old_capacity, const _Alloc &__alloc) (CompoundStmt 0x9ff8840 </usr/include/c++/4.6/bits/basic_string.tcc:549:5, line:620:5>
  (IfStmt 0x9ff7938 <line:552:7, line:553:53>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ff7838 <line:552:11, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9ff77f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
      (DeclRefExpr 0x9ff77bc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ff77d4 <col:24> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fdf8c0 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9ff7908 <line:553:2, col:53> 'void'
      (ImplicitCastExpr 0x9ff78f8 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9ff78dc <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e22e80 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9ff7928 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9ff78c8 <col:24, col:30> 'const char [24]' lvalue
          (StringLiteral 0x9ff7894 </usr/include/c++/4.6/bits/basic_string.tcc:553:27> 'const char [24]' lvalue "basic_string::_S_create"))))
    <<<NULL>>>)
  (DeclStmt 0x9ff79b0 <line:578:7, col:40>
    0x9ff7960 "const size_type __pagesize =
      (IntegerLiteral 0x9ff7998 <col:36> 'int' 4096)")
  (DeclStmt 0x9ff7a70 <line:579:7, col:63>
    0x9ff79d0 "const size_type __malloc_header_size =
      (BinaryOperator 0x9ff7a58 <col:46, col:62> 'unsigned int' '*'
        (ImplicitCastExpr 0x9ff7a48 <col:46> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9ff7a08 <col:46> 'int' 4))
        (UnaryExprOrTypeTraitExpr 0x9ff7a30 <col:50, col:62> 'unsigned int' sizeof 'void *'))")
  (IfStmt 0x9ff7c80 <line:587:7, line:588:19>
    <<<NULL>>>
    (BinaryOperator 0x9ff7bf0 <line:587:11, col:59> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9ff7af8 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff7ab0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
        (DeclRefExpr 0x9ff7a80 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ff7a98 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7490 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x9ff7bc8 <col:42, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff7b80 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (DeclRefExpr 0x9ff7b1c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9ff7b68 <col:55, col:59> '<dependent type>' '*'
          (IntegerLiteral 0x9ff7b38 <col:55> 'int' 2)
          (DeclRefExpr 0x9ff7b50 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7490 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))))
    (BinaryOperator 0x9ff7c68 <line:588:2, col:19> '<dependent type>' '='
      (DeclRefExpr 0x9ff7c08 <col:2> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (BinaryOperator 0x9ff7c50 <col:15, col:19> '<dependent type>' '*'
        (IntegerLiteral 0x9ff7c20 <col:15> 'int' 2)
        (DeclRefExpr 0x9ff7c38 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7490 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (DeclStmt 0x9ff7e68 <line:593:7, col:74>
    0x9ff7cb0 "size_type __size =
      (CXXOperatorCallExpr 0x9ff7e40 <col:26, col:73> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff7df8 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
        (BinaryOperator 0x9ff7dc0 <col:26, col:58> '<dependent type>' '*'
          (ParenExpr 0x9ff7d88 <col:26, col:41> '<dependent type>'
            (CXXOperatorCallExpr 0x9ff7d60 <col:27, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9ff7d18 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
              (DeclRefExpr 0x9ff7ce4 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
              (IntegerLiteral 0x9ff7d00 <col:40> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x9ff7da8 <col:45, col:58> 'unsigned int' sizeof '_CharT'))
        (UnaryExprOrTypeTraitExpr 0x9ff7de0 <col:62, col:73> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))")
  (DeclStmt 0x9ff7f58 <line:595:7, col:65>
    0x9ff7e80 "const size_type __adj_size =
      (CXXOperatorCallExpr 0x9ff7f30 <col:36, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff7ee8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
        (DeclRefExpr 0x9ff7eb4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ff7cb0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ff7ecc <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff79d0 '__malloc_header_size' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9ff8538 <line:596:7, line:604:2>
    <<<NULL>>>
    (BinaryOperator 0x9ff80a8 <line:596:11, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9ff7fe0 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff7f98 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
        (DeclRefExpr 0x9ff7f68 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff7e80 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ff7f80 <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff7960 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x9ff8080 <col:38, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff8038 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
        (DeclRefExpr 0x9ff8004 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ff801c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7490 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9ff8518 <line:597:2, line:604:2>
      (DeclStmt 0x9ff81c8 <line:598:4, col:66>
        0x9ff80d0 "const size_type __extra =
          (CXXOperatorCallExpr 0x9ff81a0 <col:30, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9ff8168 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0x9ff8104 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff7960 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (BinaryOperator 0x9ff8150 <col:43, col:56> '<dependent type>' '%'
              (DeclRefExpr 0x9ff811c <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff7e80 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9ff8134 <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff7960 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')))")
      (CompoundAssignOperator 0x9ff8240 <line:599:4, col:41> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9ff81d8 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9ff8228 <col:18, col:41> '<dependent type>' '/'
          (DeclRefExpr 0x9ff81f0 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff80d0 '__extra' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (UnaryExprOrTypeTraitExpr 0x9ff8210 <col:28, col:41> 'unsigned int' sizeof '_CharT')))
      (IfStmt 0x9ff8348 <line:601:4, line:602:19>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9ff82d8 <line:601:8, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9ff8290 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (DeclRefExpr 0x9ff8260 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ff8278 <col:21> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fdf8c0 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9ff8330 <line:602:6, col:19> '<dependent type>' '='
          (DeclRefExpr 0x9ff82fc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ff8314 <col:19> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fdf8c0 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (BinaryOperator 0x9ff8500 <line:603:4, col:60> '<dependent type>' '='
        (DeclRefExpr 0x9ff8364 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ff7cb0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9ff84d8 <col:13, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x9ff8490 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
          (BinaryOperator 0x9ff8458 <col:13, col:45> '<dependent type>' '*'
            (ParenExpr 0x9ff8420 <col:13, col:28> '<dependent type>'
              (CXXOperatorCallExpr 0x9ff83f8 <col:14, col:27> '<dependent type>'
                (UnresolvedLookupExpr 0x9ff83b0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
                (DeclRefExpr 0x9ff837c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
                (IntegerLiteral 0x9ff8398 <col:27> 'int' 1)))
            (UnaryExprOrTypeTraitExpr 0x9ff8440 <col:32, col:45> 'unsigned int' sizeof '_CharT'))
          (UnaryExprOrTypeTraitExpr 0x9ff8478 <col:49, col:60> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))))
    <<<NULL>>>)
  (DeclStmt 0x9ff8658 <line:608:7, col:65>
    0x9ff8570 "void *__place =
      (CallExpr 0x9ff8638 <col:23, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff85e8 <col:23, col:49> '<dependent type>' lvalue
          (CXXUnresolvedConstructExpr 0x9ff85c8 <col:23, col:47> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
            (DeclRefExpr 0x9ff85b0 <col:40> 'const _Alloc' lvalue ParmVar 0x9ff7500 '__alloc' 'const _Alloc &')))
        (DeclRefExpr 0x9ff861c <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ff7cb0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9ff8718 <line:609:7, col:37>
    0x9ff8680 "std::basic_string::_Rep *__p =
      (CXXNewExpr 0x9ff86d8 <col:19, col:33> 'struct std::basic_string::_Rep *'
        (DeclRefExpr 0x9ff86b4 <col:24> 'void *' lvalue Var 0x9ff8570 '__place' 'void *'))")
  (BinaryOperator 0x9ff8790 <line:610:7, col:26> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9ff8740 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9ff8728 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9ff8680 '__p' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x9ff8774 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff7450 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CallExpr 0x9ff87f8 <line:618:7, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ff87c0 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9ff87a8 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9ff8680 '__p' 'struct std::basic_string::_Rep *')))
  (ReturnStmt 0x9ff8830 <line:619:7, col:14>
    (DeclRefExpr 0x9ff8814 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9ff8680 '__p' 'struct std::basic_string::_Rep *')))


    _CharT *_M_clone(const _Alloc &__alloc, size_type __res = (IntegerLiteral 0x9fb9cd0 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
) (CompoundStmt 0x9ff9320 </usr/include/c++/4.6/bits/basic_string.tcc:626:5, line:636:5>
  (DeclStmt 0x9ff8ee8 <line:628:7, col:64>
    0x9ff8de0 "const size_type __requested_cap =
      (CXXOperatorCallExpr 0x9ff8ec0 <col:41, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff8e78 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
        (CXXDependentScopeMemberExpr 0x9ff8e28 <col:41, col:47> '<dependent type>' lvalue
          (CXXThisExpr 0x9ff8e18 <col:41> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9ff8e5c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff8c90 '__res' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9ff9028 <line:629:7, line:630:15>
    0x9ff8f10 "std::basic_string::_Rep *__r =
      (CallExpr 0x9ff9000 <line:629:19, line:630:14> '<dependent type>'
        (DeclRefExpr 0x9ff8f64 <line:629:19, col:25> 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)' lvalue CXXMethod 0x9ff7720 '_S_create' 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)')
        (DeclRefExpr 0x9ff8f84 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff8de0 '__requested_cap' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXDependentScopeMemberExpr 0x9ff8fb0 <col:52, col:58> '<dependent type>' lvalue
          (CXXThisExpr 0x9ff8fa0 <col:52> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9ff8fe4 <line:630:7> 'const _Alloc' lvalue ParmVar 0x9ff8c50 '__alloc' 'const _Alloc &'))")
  (IfStmt 0x9ff91c8 <line:631:7, line:632:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9ff9048 <line:631:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9ff9038 <col:11> 'struct std::basic_string::_Rep *' this))
    (CallExpr 0x9ff91a0 <line:632:2, col:58> '<dependent type>'
      (DeclRefExpr 0x9ff907c <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CallExpr 0x9ff90e8 <col:10, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff90b0 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9ff9094 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9ff8f10 '__r' 'struct std::basic_string::_Rep *')))
      (CallExpr 0x9ff9138 <col:29, col:40> '<dependent type>'
        (MemberExpr 0x9ff9118 <col:29> '<bound member function type>' ->_M_refdata 0x9f9a1c0
          (CXXThisExpr 0x9ff9108 <col:29> 'struct std::basic_string::_Rep *' this)))
      (CXXDependentScopeMemberExpr 0x9ff9168 <col:43, col:49> '<dependent type>' lvalue
        (CXXThisExpr 0x9ff9158 <col:43> 'struct std::basic_string::_Rep *' this)))
    <<<NULL>>>)
  (CallExpr 0x9ff9280 <line:634:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ff9200 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9ff91e4 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9ff8f10 '__r' 'struct std::basic_string::_Rep *'))
    (CXXDependentScopeMemberExpr 0x9ff9248 <col:39, col:45> '<dependent type>' lvalue
      (CXXThisExpr 0x9ff9238 <col:39> 'struct std::basic_string::_Rep *' this)))
  (ReturnStmt 0x9ff9310 <line:635:7, col:30>
    (CallExpr 0x9ff92f0 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ff92b8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9ff92a0 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9ff8f10 '__r' 'struct std::basic_string::_Rep *')))))


    void resize(size_type __n, _CharT __c) (CompoundStmt 0x9ff9ca0 </usr/include/c++/4.6/bits/basic_string.tcc:642:5, line:650:5>
  (DeclStmt 0x9ff98c0 <line:643:7, col:44>
    0x9ff9820 "const size_type __size =
      (CallExpr 0x9ff98a0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff9868 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9ff9858 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (CallExpr 0x9ff9960 <line:644:7, col:58> '<dependent type>'
    (MemberExpr 0x9ff98e0 <col:7> '<bound member function type>' ->_M_check_length 0x9f9b4d0
      (CXXThisExpr 0x9ff98d0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ff9900 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff9820 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ff9918 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff96c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9ff9930 <col:36> 'const char [21]' lvalue "basic_string::resize"))
  (IfStmt 0x9ff9c80 <line:645:7, line:648:17>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ff9a00 <line:645:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9ff99b8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
      (DeclRefExpr 0x9ff9988 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff9820 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ff99a0 <col:20> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff96c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9ff9b18 <line:646:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ff9a38 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9ff9a28 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9ff9ad8 <col:15, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff9aa0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ff9a6c <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff96c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ff9a84 <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff9820 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9ff9afc <col:29> '_CharT' lvalue ParmVar 0x9ff9700 '__c' '_CharT'))
    (IfStmt 0x9ff9c60 <line:647:12, line:648:17>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9ff9bb8 <line:647:16, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9ff9b70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (DeclRefExpr 0x9ff9b3c <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff96c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ff9b54 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ff9820 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9ff9c40 <line:648:2, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ff9bf0 <col:2, col:8> '<dependent type>' lvalue
          (CXXThisExpr 0x9ff9be0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9ff9c24 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ff96c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>)))


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type) (CompoundStmt 0x9ffaad8 </usr/include/c++/4.6/bits/basic_string.tcc:658:7, line:664:7>
  (DeclStmt 0x9ffa658 <line:659:2, col:36>
    0x9ffa5d0 "const basic_string<_CharT, _Traits, _Alloc> __s =
      (ParenListExpr 0x9ffa638 <col:24, col:35> 'const basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x9ffa604 <col:25> '_InputIterator' lvalue ParmVar 0x9ffa220 '__k1' '_InputIterator')
        (DeclRefExpr 0x9ffa61c <col:31> '_InputIterator' lvalue ParmVar 0x9ffa260 '__k2' '_InputIterator'))")
  (DeclStmt 0x9ffa738 <line:660:2, col:36>
    0x9ffa670 "const size_type __n1 =
      (CXXOperatorCallExpr 0x9ffa710 <col:25, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x9ffa6d8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ffa6a4 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9ffa1e0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9ffa6bc <col:32> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9ffa1a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (CallExpr 0x9ffa880 <line:661:2, col:71> '<dependent type>'
    (MemberExpr 0x9ffa758 <col:2> '<bound member function type>' ->_M_check_length 0x9f9b4d0
      (CXXThisExpr 0x9ffa748 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ffa778 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ffa670 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ffa7e0 <col:24, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9ffa7a8 <col:24, col:28> '<dependent type>' lvalue
        (DeclRefExpr 0x9ffa790 <col:24> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffa5d0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
    (StringLiteral 0x9ffa840 <col:36> 'const char [34]' lvalue "basic_string::_M_replace_dispatch"))
  (ReturnStmt 0x9ffaac8 <line:662:2, line:663:21>
    (CallExpr 0x9ffaa98 <line:662:9, line:663:21> '<dependent type>'
      (MemberExpr 0x9ffa8b8 <line:662:9> '<bound member function type>' ->_M_replace_safe 0x9fb13d0
        (CXXThisExpr 0x9ffa8a8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9ffa978 <col:25, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9ffa940 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0x9ffa8d8 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9ffa1a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x9ffa920 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x9ffa900 <col:32> '<bound member function type>' ->_M_ibegin 0x9f9b0b0
            (CXXThisExpr 0x9ffa8f0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0x9ffa99c <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ffa670 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (CallExpr 0x9ffaa08 <col:51, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ffa9d0 <col:51, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x9ffa9b4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffa5d0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
      (CallExpr 0x9ffaa78 <line:663:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ffaa40 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x9ffaa24 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffa5d0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>'))))))

;
    basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x9ffb688 </usr/include/c++/4.6/bits/basic_string.tcc:671:5, line:677:5>
  (CallExpr 0x9ffb3e8 <line:672:7, col:65> '<dependent type>'
    (MemberExpr 0x9ffb318 <col:7> '<bound member function type>' ->_M_check_length 0x9f9b4d0
      (CXXThisExpr 0x9ffb2f0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ffb338 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffafd0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ffb350 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffb010 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9ffb3b0 <col:35> 'const char [29]' lvalue "basic_string::_M_replace_aux"))
  (CallExpr 0x9ffb488 <line:673:7, col:35> '<dependent type>'
    (MemberExpr 0x9ffb420 <col:7> '<bound member function type>' ->_M_mutate 0x9ff3ea0
      (CXXThisExpr 0x9ffb410 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ffb440 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffaf90 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ffb458 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffafd0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ffb470 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffb010 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9ffb630 <line:674:7, line:675:41>
    <<<NULL>>>
    (DeclRefExpr 0x9ffb4b0 <line:674:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffb010 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ffb608 <line:675:2, col:41> '<dependent type>'
      (DeclRefExpr 0x9ffb4c8 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x9f9bc70 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CXXOperatorCallExpr 0x9ffb5b0 <col:12, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9ffb568 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
        (CallExpr 0x9ffb530 <col:12, col:20> '<dependent type>'
          (UnresolvedMemberExpr 0x9ffb4f0 <col:12> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9ffb54c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffaf90 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9ffb5d4 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffb010 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ffb5ec <col:38> '_CharT' lvalue ParmVar 0x9ffb050 '__c' '_CharT'))
    <<<NULL>>>)
  (ReturnStmt 0x9ffb678 <line:676:7, col:15>
    (UnaryOperator 0x9ffb660 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ffb650 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x9ffc148 </usr/include/c++/4.6/bits/basic_string.tcc:684:5, line:689:5>
  (CallExpr 0x9ffbf48 <line:685:7, col:35> '<dependent type>'
    (MemberExpr 0x9ffbee0 <col:7> '<bound member function type>' ->_M_mutate 0x9ff3ea0
      (CXXThisExpr 0x9ffbed0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ffbf00 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffbb40 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ffbf18 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffbb80 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9ffbf30 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffbc30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9ffc0f0 <line:686:7, line:687:39>
    <<<NULL>>>
    (DeclRefExpr 0x9ffbf70 <line:686:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffbc30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ffc0c8 <line:687:2, col:39> '<dependent type>'
      (DeclRefExpr 0x9ffbf88 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CXXOperatorCallExpr 0x9ffc070 <col:10, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9ffc028 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9fd2640 0x9fd2b90 0x9fd3110 0x9fd3930)
        (CallExpr 0x9ffbff0 <col:10, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0x9ffbfb0 <col:10> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9ffc00c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffbb40 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9ffc094 <col:30> 'const _CharT *' lvalue ParmVar 0x9ffbbf0 '__s' 'const _CharT *')
      (DeclRefExpr 0x9ffc0ac <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffbc30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x9ffc138 <line:688:7, col:15>
    (UnaryOperator 0x9ffc120 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9ffc110 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9ffcd58 </usr/include/c++/4.6/bits/basic_string.tcc:695:5, line:705:5>
  (NullStmt 0x9ffc6e0 <line:696:39>)
  (DeclStmt 0x9ffc880 <line:697:7, col:66>
    0x9ffc850 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9ffc940 <line:698:7, col:62>
    0x9ffc910 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9ffca30 <line:699:7, col:55>
    0x9ffc970 "const __size_type __len =
      (CallExpr 0x9ffca10 <col:33, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9ffc9d0 <col:33, col:42> '<dependent type>' lvalue)
        (DeclRefExpr 0x9ffc9f4 <col:49> 'const _CharT *' lvalue ParmVar 0x9ffc3c0 '__lhs' 'const _CharT *'))")
  (DeclStmt 0x9ffca88 <line:700:7, col:26>
    0x9ffca50 "__string_type __str")
  (CallExpr 0x9ffcbe0 <line:701:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ffcab0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ffca98 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffca50 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x9ffcbb8 <col:21, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9ffcb70 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd2b90 0x9fd3110)
      (DeclRefExpr 0x9ffcae4 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ffc970 '__len' 'const __size_type':'const typename __string_type::size_type')
      (CallExpr 0x9ffcb50 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ffcb18 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9ffcafc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ffc570 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
  (CallExpr 0x9ffcc80 <line:702:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ffcc18 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ffcc00 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffca50 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9ffcc4c <col:20> 'const _CharT *' lvalue ParmVar 0x9ffc3c0 '__lhs' 'const _CharT *')
    (DeclRefExpr 0x9ffcc64 <col:27> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ffc970 '__len' 'const __size_type':'const typename __string_type::size_type'))
  (CallExpr 0x9ffcd10 <line:703:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ffccc0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ffcca4 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffca50 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9ffccf4 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ffc570 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9ffcd48 <line:704:7, col:14>
    (DeclRefExpr 0x9ffcd30 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffca50 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x9ffd908 </usr/include/c++/4.6/bits/basic_string.tcc:710:5, line:719:5>
  (DeclStmt 0x9ffd470 <line:711:7, col:66>
    0x9ffd440 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x9ffd530 <line:712:7, col:62>
    0x9ffd500 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x9ffd588 <line:713:7, col:26>
    0x9ffd550 "__string_type __str")
  (DeclStmt 0x9ffd668 <line:714:7, col:45>
    0x9ffd5c0 "const __size_type __len =
      (CallExpr 0x9ffd648 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ffd610 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x9ffd5f4 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ffd170 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (CallExpr 0x9ffd768 <line:715:7, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ffd690 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ffd678 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffd550 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x9ffd740 <col:21, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x9ffd6f8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
      (DeclRefExpr 0x9ffd6c4 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9ffd5c0 '__len' 'const __size_type':'const typename __string_type::size_type')
      (IntegerLiteral 0x9ffd6e0 <col:29> 'int' 1)))
  (CallExpr 0x9ffd830 <line:716:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ffd7a0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ffd788 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffd550 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x9ffd7f8 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x9ffd7e0 <col:32> 'int' 1))
    (DeclRefExpr 0x9ffd814 <col:36> '_CharT' lvalue ParmVar 0x9ffcfc0 '__lhs' '_CharT'))
  (CallExpr 0x9ffd8c0 <line:717:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9ffd870 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9ffd854 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffd550 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x9ffd8a4 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9ffd170 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x9ffd8f8 <line:718:7, col:14>
    (DeclRefExpr 0x9ffd8e0 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9ffd550 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    typename basic_string<_CharT, _Traits, _Alloc>::size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x9fb9dc8 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const (CompoundStmt 0x9ffe480 </usr/include/c++/4.6/bits/basic_string.tcc:725:5, line:733:5>
  (CallExpr 0x9ffe1c8 <line:726:7, col:43> '<dependent type>'
    (MemberExpr 0x9ffe160 <col:7> '<bound member function type>' ->_M_check 0x9f9b310
      (CXXThisExpr 0x9ffe150 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9ffe180 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffdec0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9ffe198 <col:23> 'const char [19]' lvalue "basic_string::copy"))
  (BinaryOperator 0x9ffe290 <line:727:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x9ffe1ec <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffde80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ffe268 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x9ffe218 <col:13> '<bound member function type>' ->_M_limit 0x9f9b630
        (CXXThisExpr 0x9ffe208 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9ffe238 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffdec0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9ffe250 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffde80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (NullStmt 0x9ffe2a8 <line:728:46>)
  (IfStmt 0x9ffe438 <line:729:7, line:730:37>
    <<<NULL>>>
    (DeclRefExpr 0x9ffe2b4 <line:729:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffde80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9ffe410 <line:730:2, col:37> '<dependent type>'
      (DeclRefExpr 0x9ffe2cc <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x9f9b940 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (DeclRefExpr 0x9ffe2e4 <col:10> '_CharT *' lvalue ParmVar 0x9ffde40 '__s' '_CharT *')
      (CXXOperatorCallExpr 0x9ffe3d0 <col:15, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0x9ffe388 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
        (CallExpr 0x9ffe350 <col:15, col:23> '<dependent type>'
          (UnresolvedMemberExpr 0x9ffe310 <col:15> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9ffe36c <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffdec0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9ffe3f4 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffde80 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x9ffe470 <line:732:7, col:14>
    (DeclRefExpr 0x9ffe454 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffde80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9fff7a0 </usr/include/c++/4.6/bits/basic_string.tcc:739:5, line:756:5>
  (NullStmt 0x9ffecc0 <line:740:46>)
  (DeclStmt 0x9ffed80 <line:741:7, col:44>
    0x9ffece0 "const size_type __size =
      (CallExpr 0x9ffed60 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9ffed28 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9ffed18 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9ffee48 <line:742:7, col:39>
    0x9ffeda0 "const _CharT *__data =
      (CallExpr 0x9ffee28 <col:30, col:38> '<dependent type>'
        (UnresolvedMemberExpr 0x9ffede8 <col:30> '<bound member function type>' lvalue))")
  (IfStmt 0x9fff008 <line:744:7, line:745:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9ffeee0 <line:744:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9ffee88 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
      (DeclRefExpr 0x9ffee58 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffea30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x9ffee70 <col:18> 'int' 0))
    (ReturnStmt 0x9ffeff8 <line:745:2, col:35>
      (ConditionalOperator 0x9ffefd8 <col:9, col:35> '<dependent type>'
        (CXXOperatorCallExpr 0x9ffef80 <col:9, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x9ffef38 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
          (DeclRefExpr 0x9ffef04 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffe9f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9ffef1c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ffece0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9ffefa4 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffe9f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9ffefbc <col:35> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (IfStmt 0x9fff758 <line:747:7, line:754:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9fff0a0 <line:747:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9fff058 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
      (DeclRefExpr 0x9fff024 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffea30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9fff03c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ffece0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9fff740 <line:748:2, line:754:2>
      (ForStmt 0x9fff718 <line:749:4, line:753:15>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9fff1b8 <line:749:11, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x9fff170 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
          (DeclRefExpr 0x9fff0c4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffe9f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x9fff148 <col:20, col:29> '<dependent type>'
            (UnresolvedLookupExpr 0x9fff110 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0x9fff0dc <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ffece0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9fff0f4 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffea30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9fff1f8 <col:34, col:36> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9fff1dc <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffe9f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x9fff6f8 <line:750:6, line:753:15>
          <<<NULL>>>
          (BinaryOperator 0x9fff6b8 <line:750:10, line:752:27> '<dependent type>' '&&'
            (CallExpr 0x9fff320 <line:750:10, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9fff238 <col:10, col:23> '<dependent type>' lvalue)
              (ArraySubscriptExpr 0x9fff2a0 <col:26, col:38> '<dependent type>' lvalue
                (DeclRefExpr 0x9fff26c <col:26> 'const _CharT *' lvalue Var 0x9ffeda0 '__data' 'const _CharT *')
                (DeclRefExpr 0x9fff284 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffe9f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
              (ArraySubscriptExpr 0x9fff2e8 <col:41, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x9fff2b4 <col:41> 'const _CharT *' lvalue ParmVar 0x9ffe9b0 '__s' 'const _CharT *')
                (IntegerLiteral 0x9fff2d0 <col:45> 'int' 0)))
            (CXXOperatorCallExpr 0x9fff690 <line:751:6, line:752:27> '<dependent type>'
              (UnresolvedLookupExpr 0x9fff638 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
              (CallExpr 0x9fff5f8 <line:751:6, line:752:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9fff368 <line:751:6, col:19> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x9fff4a0 <col:27, col:44> '<dependent type>'
                  (UnresolvedLookupExpr 0x9fff458 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
                  (CXXOperatorCallExpr 0x9fff418 <col:27, col:36> '<dependent type>'
                    (UnresolvedLookupExpr 0x9fff3d0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
                    (DeclRefExpr 0x9fff39c <col:27> 'const _CharT *' lvalue Var 0x9ffeda0 '__data' 'const _CharT *')
                    (DeclRefExpr 0x9fff3b4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffe9f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                  (IntegerLiteral 0x9fff440 <col:44> 'int' 1))
                (CXXOperatorCallExpr 0x9fff540 <line:752:6, col:12> '<dependent type>'
                  (UnresolvedLookupExpr 0x9fff4f8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
                  (DeclRefExpr 0x9fff4c4 <col:6> 'const _CharT *' lvalue ParmVar 0x9ffe9b0 '__s' 'const _CharT *')
                  (IntegerLiteral 0x9fff4e0 <col:12> 'int' 1))
                (CXXOperatorCallExpr 0x9fff5d0 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x9fff598 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                  (DeclRefExpr 0x9fff564 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffea30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                  (IntegerLiteral 0x9fff580 <col:21> 'int' 1)))
              (IntegerLiteral 0x9fff620 <col:27> 'int' 0)))
          (ReturnStmt 0x9fff6e8 <line:753:8, col:15>
            (DeclRefExpr 0x9fff6d0 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9ffe9f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x9fff790 <line:755:7, col:14>
    (DeclRefExpr 0x9fff774 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x9fb9e10 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const (CompoundStmt 0xa000608 </usr/include/c++/4.6/bits/basic_string.tcc:762:5, line:774:5>
  (DeclStmt 0x9ffffc0 <line:763:7, col:29>
    0x9ffff70 "size_type __ret =
      (DeclRefExpr 0x9ffffa4 <col:25> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')")
  (DeclStmt 0xa000080 <line:764:7, col:44>
    0x9ffffe0 "const size_type __size =
      (CallExpr 0xa000060 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa000028 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa000018 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa0005c0 <line:765:7, line:772:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa000108 <line:765:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa0000c0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
      (DeclRefExpr 0xa000090 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fffce0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa0000a8 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ffffe0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa0005a0 <line:766:2, line:772:2>
      (DeclStmt 0xa000208 <line:767:4, col:36>
        0xa000160 "const _CharT *__data =
          (CallExpr 0xa0001e8 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0xa0001a8 <col:27> '<bound member function type>' lvalue))")
      (DeclStmt 0xa0002e8 <line:768:4, col:40>
        0xa000220 "const size_type __n =
          (CXXOperatorCallExpr 0xa0002c0 <col:26, col:35> '<dependent type>'
            (UnresolvedLookupExpr 0xa000288 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0xa000254 <col:26> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9ffffe0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa00026c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fffce0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (DeclStmt 0xa000498 <line:769:4, col:67>
        0xa000310 "const _CharT *__p =
          (CallExpr 0xa000470 <col:24, col:66> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa000368 <col:24, col:37> '<dependent type>' lvalue)
            (CXXOperatorCallExpr 0xa000418 <col:42, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa0003d0 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
              (DeclRefExpr 0xa00039c <col:42> 'const _CharT *' lvalue Var 0xa000160 '__data' 'const _CharT *')
              (DeclRefExpr 0xa0003b4 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9fffce0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa00043c <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa000220 '__n' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa000454 <col:63> '_CharT' lvalue ParmVar 0x9fffca0 '__c' '_CharT'))")
      (IfStmt 0xa000580 <line:770:4, line:771:20>
        <<<NULL>>>
        (DeclRefExpr 0xa0004a8 <line:770:8> 'const _CharT *' lvalue Var 0xa000310 '__p' 'const _CharT *')
        (BinaryOperator 0xa000568 <line:771:6, col:20> '<dependent type>' '='
          (DeclRefExpr 0xa0004c0 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ffff70 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0xa000540 <col:14, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0xa000508 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0xa0004d8 <col:14> 'const _CharT *' lvalue Var 0xa000310 '__p' 'const _CharT *')
            (DeclRefExpr 0xa0004f0 <col:20> 'const _CharT *' lvalue Var 0xa000160 '__data' 'const _CharT *')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa0005f8 <line:773:7, col:14>
    (DeclRefExpr 0xa0005dc <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9ffff70 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa001598 </usr/include/c++/4.6/bits/basic_string.tcc:780:5, line:795:5>
  (NullStmt 0xa000e40 <line:781:46>)
  (DeclStmt 0xa000f00 <line:782:7, col:44>
    0xa000e60 "const size_type __size =
      (CallExpr 0xa000ee0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa000ea8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa000e98 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa001550 <line:783:7, line:793:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa000f88 <line:783:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa000f40 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
      (DeclRefExpr 0xa000f10 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa000bb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa000f28 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa000e60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa001530 <line:784:2, line:793:2>
      (BinaryOperator 0xa001110 <line:785:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0xa000fac <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa000b70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa0010e8 <col:12, col:51> '<dependent type>'
          (UnresolvedLookupExpr 0xa000fe0 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8ec70 0x9e8f780)
          (CXXUnresolvedConstructExpr 0xa0010b0 <col:21, col:43> 'size_type':'typename _CharT_alloc_type::size_type'
            (CXXOperatorCallExpr 0xa001088 <col:31, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa001050 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (DeclRefExpr 0xa001020 <col:31> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa000e60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0xa001038 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa000bb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
          (DeclRefExpr 0xa0010cc <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa000b70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))
      (DeclStmt 0xa0011e8 <line:786:4, col:36>
        0xa001140 "const _CharT *__data =
          (CallExpr 0xa0011c8 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0xa001188 <col:27> '<bound member function type>' lvalue))")
      (DoStmt 0xa001518 <line:787:4, line:792:22>
        (CompoundStmt 0xa001430 <line:788:6, line:791:6>
          (IfStmt 0xa001410 <line:789:8, line:790:10>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa0013c0 <line:789:12, col:62> '<dependent type>'
              (UnresolvedLookupExpr 0xa001368 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
              (CallExpr 0xa001328 <col:12, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa001220 <col:12, col:25> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0xa0012d0 <col:33, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa001288 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
                  (DeclRefExpr 0xa001254 <col:33> 'const _CharT *' lvalue Var 0xa001140 '__data' 'const _CharT *')
                  (DeclRefExpr 0xa00126c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa000b70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0xa0012f4 <col:49> 'const _CharT *' lvalue ParmVar 0xa000b30 '__s' 'const _CharT *')
                (DeclRefExpr 0xa00130c <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa000bb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (IntegerLiteral 0xa001350 <col:62> 'int' 0))
            (ReturnStmt 0xa001400 <line:790:3, col:10>
              (DeclRefExpr 0xa0013e4 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa000b70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0xa0014f0 <line:792:11, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa0014a8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (UnaryOperator 0xa001478 <col:11, col:16> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa001444 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa000b70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa001490 <col:21> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa001588 <line:794:7, col:14>
    (DeclRefExpr 0xa00156c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x9fb9e58 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa002258 </usr/include/c++/4.6/bits/basic_string.tcc:801:5, line:812:5>
  (DeclStmt 0xa001e00 <line:802:7, col:38>
    0xa001d60 "size_type __size =
      (CallExpr 0xa001de0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa001da8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa001d98 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa002210 <line:803:7, line:810:2>
    <<<NULL>>>
    (DeclRefExpr 0xa001e10 <line:803:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa001d60 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa0021f8 <line:804:2, line:810:2>
      (IfStmt 0xa001f28 <line:805:4, line:806:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa001eb8 <line:805:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa001e70 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (UnaryOperator 0xa001e40 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa001e28 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa001d60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa001e54 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa001ad0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa001f10 <line:806:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa001edc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa001d60 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa001ef4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa001ad0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (ForStmt 0xa0021d0 <line:807:4, line:809:15>
        (UnaryOperator 0xa001f60 <line:807:9, col:11> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa001f44 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa001d60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa002020 <col:19, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa001fd8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (UnaryOperator 0xa001fa8 <col:19, col:25> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa001f74 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa001d60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa001fc0 <col:30> 'int' 0))
        <<<NULL>>>
        (IfStmt 0xa0021b0 <line:808:6, line:809:15>
          <<<NULL>>>
          (CallExpr 0xa002160 <line:808:10, col:48> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa002070 <col:10, col:23> '<dependent type>' lvalue)
            (ArraySubscriptExpr 0xa002130 <col:26, col:42> '<dependent type>' lvalue
              (CallExpr 0xa0020f8 <col:26, col:34> '<dependent type>'
                (UnresolvedMemberExpr 0xa0020b8 <col:26> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa002114 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa001d60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa002144 <col:45> '_CharT' lvalue ParmVar 0xa001a90 '__c' '_CharT'))
          (ReturnStmt 0xa0021a0 <line:809:8, col:15>
            (DeclRefExpr 0xa002184 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa001d60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0xa002248 <line:811:7, col:14>
    (DeclRefExpr 0xa00222c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa002e60 </usr/include/c++/4.6/bits/basic_string.tcc:818:5, line:827:5>
  (NullStmt 0xa002a90 <line:819:46>)
  (ForStmt 0xa002e10 <line:820:7, line:825:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa002ba8 <line:820:14, col:40> '<dependent type>' '&&'
      (DeclRefExpr 0xa002a9c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa002800 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa002b80 <col:21, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa002b38 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (DeclRefExpr 0xa002ab4 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0027c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa002b18 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa002ae0 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0xa002ad0 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (UnaryOperator 0xa002bd8 <col:43, col:45> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa002bc0 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0027c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa002df8 <line:821:2, line:825:2>
      (DeclStmt 0xa002d88 <line:822:4, col:69>
        0xa002c00 "const _CharT *__p =
          (CallExpr 0xa002d60 <col:24, col:68> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa002c58 <col:24, col:37> '<dependent type>' lvalue)
            (DeclRefExpr 0xa002c8c <col:42> 'const _CharT *' lvalue ParmVar 0xa002780 '__s' 'const _CharT *')
            (DeclRefExpr 0xa002ca4 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa002800 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (ArraySubscriptExpr 0xa002d48 <col:52, col:67> '<dependent type>' lvalue
              (CallExpr 0xa002d10 <col:52, col:60> '<dependent type>'
                (UnresolvedMemberExpr 0xa002cd0 <col:52> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa002d2c <col:62> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0027c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
      (IfStmt 0xa002dd8 <line:823:4, line:824:13>
        <<<NULL>>>
        (DeclRefExpr 0xa002d98 <line:823:8> 'const _CharT *' lvalue Var 0xa002c00 '__p' 'const _CharT *')
        (ReturnStmt 0xa002dc8 <line:824:6, col:13>
          (DeclRefExpr 0xa002db0 <col:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0027c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)))
  (ReturnStmt 0xa002e50 <line:826:7, col:14>
    (DeclRefExpr 0xa002e34 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa003c08 </usr/include/c++/4.6/bits/basic_string.tcc:833:5, line:848:5>
  (NullStmt 0xa0036c0 <line:834:46>)
  (DeclStmt 0xa003780 <line:835:7, col:38>
    0xa0036e0 "size_type __size =
      (CallExpr 0xa003760 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa003728 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa003718 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa003bc0 <line:836:7, line:846:2>
    <<<NULL>>>
    (BinaryOperator 0xa0037c0 <line:836:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa003790 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0036e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa0037a8 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa003430 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa003ba8 <line:837:2, line:846:2>
      (IfStmt 0xa0038d8 <line:838:4, line:839:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa003868 <line:838:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa003820 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (UnaryOperator 0xa0037f0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa0037d8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0036e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa003804 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0033f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa0038c0 <line:839:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa00388c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0036e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa0038a4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0033f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa003b90 <line:840:4, line:845:24>
        (CompoundStmt 0xa003a98 <line:841:6, line:844:6>
          (IfStmt 0xa003a78 <line:842:8, line:843:10>
            <<<NULL>>>
            (CallExpr 0xa003a28 <line:842:12, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa003920 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa003954 <col:30> 'const _CharT *' lvalue ParmVar 0xa0033b0 '__s' 'const _CharT *')
              (DeclRefExpr 0xa00396c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa003430 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
              (ArraySubscriptExpr 0xa003a10 <col:40, col:56> '<dependent type>' lvalue
                (CallExpr 0xa0039d8 <col:40, col:48> '<dependent type>'
                  (UnresolvedMemberExpr 0xa003998 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa0039f4 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0036e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')))
            (ReturnStmt 0xa003a68 <line:843:3, col:10>
              (DeclRefExpr 0xa003a50 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0036e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0xa003b68 <line:845:11, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa003b10 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0)
          (UnaryOperator 0xa003ae0 <col:11, col:17> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa003aac <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0036e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa003af8 <col:23> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa003bf8 <line:847:7, col:14>
    (DeclRefExpr 0xa003bdc <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa004770 </usr/include/c++/4.6/bits/basic_string.tcc:854:5, line:860:5>
  (NullStmt 0xa004440 <line:855:46>)
  (ForStmt 0xa004720 <line:856:7, line:858:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa004518 <line:856:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa0044d0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
      (DeclRefExpr 0xa00444c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa004170 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa0044b0 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa004478 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0xa004468 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0xa004558 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa00453c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa004170 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0xa004700 <line:857:2, line:858:11>
      <<<NULL>>>
      (UnaryOperator 0xa0046c0 <line:857:6, col:51> '<dependent type>' prefix '!'
        (CallExpr 0xa004698 <col:7, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa004590 <col:7, col:20> '<dependent type>' lvalue)
          (DeclRefExpr 0xa0045c4 <col:25> 'const _CharT *' lvalue ParmVar 0xa004130 '__s' 'const _CharT *')
          (DeclRefExpr 0xa0045dc <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0041b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
          (ArraySubscriptExpr 0xa004680 <col:35, col:50> '<dependent type>' lvalue
            (CallExpr 0xa004648 <col:35, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0xa004608 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa004664 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa004170 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (ReturnStmt 0xa0046f0 <line:858:4, col:11>
        (DeclRefExpr 0xa0046d4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa004170 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0xa004760 <line:859:7, col:14>
    (DeclRefExpr 0xa004744 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x9fb9f30 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const (CompoundStmt 0xa005230 </usr/include/c++/4.6/bits/basic_string.tcc:866:5, line:871:5>
  (ForStmt 0xa0051e0 <line:867:7, line:869:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa004ff0 <line:867:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa004fa8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
      (DeclRefExpr 0xa004f28 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa004ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa004f88 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa004f50 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0xa004f40 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0xa005030 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa005014 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa004ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0xa0051c0 <line:868:2, line:869:11>
      <<<NULL>>>
      (UnaryOperator 0xa005180 <line:868:6, col:44> '<dependent type>' prefix '!'
        (CallExpr 0xa005158 <col:7, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa005068 <col:7, col:20> '<dependent type>' lvalue)
          (ArraySubscriptExpr 0xa005128 <col:23, col:38> '<dependent type>' lvalue
            (CallExpr 0xa0050f0 <col:23, col:31> '<dependent type>'
              (UnresolvedMemberExpr 0xa0050b0 <col:23> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa00510c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa004ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa00513c <col:41> '_CharT' lvalue ParmVar 0xa004c60 '__c' '_CharT')))
      (ReturnStmt 0xa0051b0 <line:869:4, col:11>
        (DeclRefExpr 0xa005194 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa004ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0xa005220 <line:870:7, col:14>
    (DeclRefExpr 0xa005204 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa005ef0 </usr/include/c++/4.6/bits/basic_string.tcc:877:5, line:892:5>
  (NullStmt 0xa005a60 <line:878:46>)
  (DeclStmt 0xa005b20 <line:879:7, col:38>
    0xa005a80 "size_type __size =
      (CallExpr 0xa005b00 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa005ac8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa005ab8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa005ea8 <line:880:7, line:890:2>
    <<<NULL>>>
    (DeclRefExpr 0xa005b30 <line:880:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa005a80 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa005e90 <line:881:2, line:890:2>
      (IfStmt 0xa005c48 <line:882:4, line:883:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa005bd8 <line:882:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa005b90 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (UnaryOperator 0xa005b60 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa005b48 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa005a80 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa005b74 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa005790 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa005c30 <line:883:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa005bfc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa005a80 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa005c14 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa005790 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa005e78 <line:884:4, line:889:19>
        (CompoundStmt 0xa005e18 <line:885:6, line:888:6>
          (IfStmt 0xa005df8 <line:886:8, line:887:10>
            <<<NULL>>>
            (UnaryOperator 0xa005db8 <line:886:12, col:58> '<dependent type>' prefix '!'
              (CallExpr 0xa005d90 <col:13, col:58> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa005c88 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa005cbc <col:31> 'const _CharT *' lvalue ParmVar 0xa005750 '__s' 'const _CharT *')
                (DeclRefExpr 0xa005cd4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0057d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (ArraySubscriptExpr 0xa005d78 <col:41, col:57> '<dependent type>' lvalue
                  (CallExpr 0xa005d40 <col:41, col:49> '<dependent type>'
                    (UnresolvedMemberExpr 0xa005d00 <col:41> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa005d5c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa005a80 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
            (ReturnStmt 0xa005de8 <line:887:3, col:10>
              (DeclRefExpr 0xa005dcc <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa005a80 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0xa005e60 <line:889:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0xa005e2c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa005a80 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0xa005ee0 <line:891:7, col:14>
    (DeclRefExpr 0xa005ec4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x9fb9f78 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9f9acf0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa006b08 </usr/include/c++/4.6/bits/basic_string.tcc:898:5, line:912:5>
  (DeclStmt 0xa006750 <line:899:7, col:38>
    0xa0066b0 "size_type __size =
      (CallExpr 0xa006730 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0066f8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa0066e8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa006ac0 <line:900:7, line:910:2>
    <<<NULL>>>
    (DeclRefExpr 0xa006760 <line:900:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0066b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa006aa8 <line:901:2, line:910:2>
      (IfStmt 0xa006878 <line:902:4, line:903:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa006808 <line:902:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa0067c0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (UnaryOperator 0xa006790 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa006778 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0066b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa0067a4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa006420 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa006860 <line:903:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa00682c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0066b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa006844 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa006420 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa006a90 <line:904:4, line:909:19>
        (CompoundStmt 0xa006a30 <line:905:6, line:908:6>
          (IfStmt 0xa006a10 <line:906:8, line:907:10>
            <<<NULL>>>
            (UnaryOperator 0xa0069d0 <line:906:12, col:51> '<dependent type>' prefix '!'
              (CallExpr 0xa0069a8 <col:13, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0068b8 <col:13, col:26> '<dependent type>' lvalue)
                (ArraySubscriptExpr 0xa006978 <col:29, col:45> '<dependent type>' lvalue
                  (CallExpr 0xa006940 <col:29, col:37> '<dependent type>'
                    (UnresolvedMemberExpr 0xa006900 <col:29> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa00695c <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0066b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0xa00698c <col:48> '_CharT' lvalue ParmVar 0xa0063e0 '__c' '_CharT')))
            (ReturnStmt 0xa006a00 <line:907:3, col:10>
              (DeclRefExpr 0xa0069e4 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0066b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0xa006a78 <line:909:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0xa006a44 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa0066b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0xa006af8 <line:911:7, col:14>
    (DeclRefExpr 0xa006adc <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9fe0580 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0xa007710 </usr/include/c++/4.6/bits/basic_string.tcc:918:5, line:927:5>
  (CallExpr 0xa0070b0 <line:919:7, col:46> '<dependent type>'
    (MemberExpr 0xa007040 <col:7> '<bound member function type>' ->_M_check 0x9f9b310
      (CXXThisExpr 0xa007030 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa007060 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa006ea0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa007078 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa007178 <line:920:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0xa0070d4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa006ee0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa007150 <col:13, col:32> '<dependent type>'
      (MemberExpr 0xa007100 <col:13> '<bound member function type>' ->_M_limit 0x9f9b630
        (CXXThisExpr 0xa0070f0 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa007120 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa006ea0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa007138 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa006ee0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa007248 <line:921:7, col:45>
    0xa0071a0 "const size_type __osize =
      (CallExpr 0xa007228 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0071f0 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0xa0071d4 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa006f30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa007358 <line:922:7, col:53>
    0xa007260 "const size_type __len =
      (CallExpr 0xa007330 <col:31, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa0072b0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8ec70 0x9e8f780)
        (DeclRefExpr 0xa0072e8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa006ee0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa007300 <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0071a0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa0075b8 <line:923:7, col:77>
    0xa007380 "int __r =
      (CallExpr 0xa007590 <col:17, col:76> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0073d8 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa0074e0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa007498 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
          (CallExpr 0xa007460 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa007420 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa00747c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa006ea0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0xa007558 <col:57, col:68> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa007520 <col:57, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0xa007504 <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa006f30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0xa007574 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa007260 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa0076b8 <line:924:7, line:925:31>
    <<<NULL>>>
    (UnaryOperator 0xa007600 <line:924:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa0075f0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa0075e0 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa0075c8 <col:12> 'int' lvalue Var 0xa007380 '__r' 'int'))))
    (BinaryOperator 0xa0076a0 <line:925:2, col:31> '<dependent type>' '='
      (DeclRefExpr 0xa007614 <col:2> 'int' lvalue Var 0xa007380 '__r' 'int')
      (CallExpr 0xa007678 <col:8, col:31> '<dependent type>'
        (DeclRefExpr 0xa00762c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9fa1710 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa007644 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa006ee0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa00765c <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa0071a0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa007700 <line:926:7, col:14>
    (ImplicitCastExpr 0xa0076f0 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa0076d4 <col:14> 'int' lvalue Var 0xa007380 '__r' 'int'))))


    int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const (CompoundStmt 0xa0084f8 </usr/include/c++/4.6/bits/basic_string.tcc:934:5, line:945:5>
  (CallExpr 0xa007d58 <line:935:7, col:47> '<dependent type>'
    (MemberExpr 0xa007ce8 <col:7> '<bound member function type>' ->_M_check 0x9f9b310
      (CXXThisExpr 0xa007cd8 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa007d08 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007ab0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa007d20 <col:24> 'const char [22]' lvalue "basic_string::compare"))
  (CallExpr 0xa007e18 <line:936:7, col:53> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa007d98 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa007d7c <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa007b40 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0xa007dcc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007b80 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa007de4 <col:30> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa007ee0 <line:937:7, col:35> '<dependent type>' '='
    (DeclRefExpr 0xa007e3c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007af0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa007eb8 <col:14, col:35> '<dependent type>'
      (MemberExpr 0xa007e68 <col:14> '<bound member function type>' ->_M_limit 0x9f9b630
        (CXXThisExpr 0xa007e58 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa007e88 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007ab0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa007ea0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007af0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (BinaryOperator 0xa007fb8 <line:938:7, col:41> '<dependent type>' '='
    (DeclRefExpr 0xa007ef8 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007bc0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa007f90 <col:14, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa007f28 <col:14, col:20> '<dependent type>' lvalue
        (DeclRefExpr 0xa007f10 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa007b40 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa007f5c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007b80 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa007f74 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007bc0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa0080c0 <line:939:7, col:51>
    0xa007fe0 "const size_type __len =
      (CallExpr 0xa008098 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa008030 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8ec70 0x9e8f780)
        (DeclRefExpr 0xa008068 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007af0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa008080 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007bc0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa0083a0 <line:940:7, line:941:39>
    0xa0080e0 "int __r =
      (CallExpr 0xa008378 <line:940:17, line:941:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa008138 <line:940:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa008240 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa0081f8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
          (CallExpr 0xa0081c0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa008180 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa0081dc <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007ab0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CXXOperatorCallExpr 0xa008338 <line:941:10, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa0082f0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
          (CallExpr 0xa0082b8 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa008280 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa008264 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa007b40 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0xa0082d4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007b80 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa00835c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa007fe0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa0084a0 <line:942:7, line:943:29>
    <<<NULL>>>
    (UnaryOperator 0xa0083e8 <line:942:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa0083d8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa0083c8 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa0083b0 <col:12> 'int' lvalue Var 0xa0080e0 '__r' 'int'))))
    (BinaryOperator 0xa008488 <line:943:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0xa0083fc <col:2> 'int' lvalue Var 0xa0080e0 '__r' 'int')
      (CallExpr 0xa008460 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0xa008414 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9fa1710 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa00842c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007af0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa008444 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa007bc0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa0084e8 <line:944:7, col:14>
    (ImplicitCastExpr 0xa0084d8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa0084bc <col:14> 'int' lvalue Var 0xa0080e0 '__r' 'int'))))


    int compare(const _CharT *__s) const (CompoundStmt 0xa008f50 </usr/include/c++/4.6/bits/basic_string.tcc:951:5, line:960:5>
  (NullStmt 0xa0089e8 <line:952:37>)
  (DeclStmt 0xa008aa0 <line:953:7, col:44>
    0xa008a00 "const size_type __size =
      (CallExpr 0xa008a80 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa008a48 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa008a38 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa008b88 <line:954:7, col:57>
    0xa008ac0 "const size_type __osize =
      (CallExpr 0xa008b68 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa008b18 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa008b4c <col:53> 'const _CharT *' lvalue ParmVar 0xa0088d0 '__s' 'const _CharT *'))")
  (DeclStmt 0xa008c80 <line:955:7, col:56>
    0xa008ba0 "const size_type __len =
      (CallExpr 0xa008c58 <col:31, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa008bf0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8ec70 0x9e8f780)
        (DeclRefExpr 0xa008c28 <col:40> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa008a00 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa008c40 <col:48> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa008ac0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa008df8 <line:956:7, col:60>
    0xa008ca0 "int __r =
      (CallExpr 0xa008dd0 <col:17, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa008cf8 <col:17, col:30> '<dependent type>' lvalue)
        (CallExpr 0xa008d80 <col:38, col:46> '<dependent type>'
          (UnresolvedMemberExpr 0xa008d40 <col:38> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa008d9c <col:49> 'const _CharT *' lvalue ParmVar 0xa0088d0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa008db4 <col:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa008ba0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa008ef8 <line:957:7, line:958:34>
    <<<NULL>>>
    (UnaryOperator 0xa008e40 <line:957:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa008e30 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa008e20 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa008e08 <col:12> 'int' lvalue Var 0xa008ca0 '__r' 'int'))))
    (BinaryOperator 0xa008ee0 <line:958:2, col:34> '<dependent type>' '='
      (DeclRefExpr 0xa008e54 <col:2> 'int' lvalue Var 0xa008ca0 '__r' 'int')
      (CallExpr 0xa008eb8 <col:8, col:34> '<dependent type>'
        (DeclRefExpr 0xa008e6c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9fa1710 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa008e84 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa008a00 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa008e9c <col:27> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa008ac0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa008f40 <line:959:7, col:14>
    (ImplicitCastExpr 0xa008f30 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa008f14 <col:14> 'int' lvalue Var 0xa008ca0 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s) const (CompoundStmt 0xa009b68 </usr/include/c++/4.6/bits/basic_string.tcc:966:5, line:976:5>
  (NullStmt 0xa0094d0 <line:967:37>)
  (CallExpr 0xa009560 <line:968:7, col:46> '<dependent type>'
    (MemberExpr 0xa0094f0 <col:7> '<bound member function type>' ->_M_check 0x9f9b310
      (CXXThisExpr 0xa0094e0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa009510 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0092f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa009528 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa009628 <line:969:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0xa009584 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009330 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa009600 <col:14, col:34> '<dependent type>'
      (MemberExpr 0xa0095b0 <col:14> '<bound member function type>' ->_M_limit 0x9f9b630
        (CXXThisExpr 0xa0095a0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa0095d0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0092f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa0095e8 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009330 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa009718 <line:970:7, col:57>
    0xa009650 "const size_type __osize =
      (CallExpr 0xa0096f8 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0096a8 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa0096dc <col:53> 'const _CharT *' lvalue ParmVar 0xa0093a0 '__s' 'const _CharT *'))")
  (DeclStmt 0xa009810 <line:971:7, col:54>
    0xa009730 "const size_type __len =
      (CallExpr 0xa0097e8 <col:31, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa009780 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8ec70 0x9e8f780)
        (DeclRefExpr 0xa0097b8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009330 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa0097d0 <col:46> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa009650 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa009a10 <line:972:7, col:68>
    0xa009830 "int __r =
      (CallExpr 0xa0099e8 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa009888 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa009990 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa009948 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
          (CallExpr 0xa009910 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa0098d0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa00992c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa0092f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa0099b4 <col:57> 'const _CharT *' lvalue ParmVar 0xa0093a0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa0099cc <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa009730 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa009b10 <line:973:7, line:974:32>
    <<<NULL>>>
    (UnaryOperator 0xa009a58 <line:973:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa009a48 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa009a38 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa009a20 <col:12> 'int' lvalue Var 0xa009830 '__r' 'int'))))
    (BinaryOperator 0xa009af8 <line:974:2, col:32> '<dependent type>' '='
      (DeclRefExpr 0xa009a6c <col:2> 'int' lvalue Var 0xa009830 '__r' 'int')
      (CallExpr 0xa009ad0 <col:8, col:32> '<dependent type>'
        (DeclRefExpr 0xa009a84 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9fa1710 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa009a9c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009330 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa009ab4 <col:25> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa009650 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa009b58 <line:975:7, col:14>
    (ImplicitCastExpr 0xa009b48 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa009b2c <col:14> 'int' lvalue Var 0xa009830 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const (CompoundStmt 0xa00a6e8 </usr/include/c++/4.6/bits/basic_string.tcc:983:5, line:992:5>
  (NullStmt 0xa00a130 <line:984:47>)
  (CallExpr 0xa00a1c0 <line:985:7, col:46> '<dependent type>'
    (MemberExpr 0xa00a150 <col:7> '<bound member function type>' ->_M_check 0x9f9b310
      (CXXThisExpr 0xa00a140 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa00a170 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009f10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa00a188 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa00a288 <line:986:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0xa00a1e4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009f50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa00a260 <col:14, col:34> '<dependent type>'
      (MemberExpr 0xa00a210 <col:14> '<bound member function type>' ->_M_limit 0x9f9b630
        (CXXThisExpr 0xa00a200 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa00a230 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009f10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa00a248 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009f50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa00a390 <line:987:7, col:51>
    0xa00a2b0 "const size_type __len =
      (CallExpr 0xa00a368 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa00a300 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8ec70 0x9e8f780)
        (DeclRefExpr 0xa00a338 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009f50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa00a350 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa00a000 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa00a590 <line:988:7, col:68>
    0xa00a3b0 "int __r =
      (CallExpr 0xa00a568 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa00a408 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa00a510 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa00a4c8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9ffd290 0x9ffc690 0x9e71870 0x9fd1e20 0x9fd3930 0x9fd3110)
          (CallExpr 0xa00a490 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa00a450 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa00a4ac <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009f10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa00a534 <col:57> 'const _CharT *' lvalue ParmVar 0xa009fc0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa00a54c <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa00a2b0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa00a690 <line:989:7, line:990:29>
    <<<NULL>>>
    (UnaryOperator 0xa00a5d8 <line:989:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa00a5c8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa00a5b8 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa00a5a0 <col:12> 'int' lvalue Var 0xa00a3b0 '__r' 'int'))))
    (BinaryOperator 0xa00a678 <line:990:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0xa00a5ec <col:2> 'int' lvalue Var 0xa00a3b0 '__r' 'int')
      (CallExpr 0xa00a650 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0xa00a604 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x9fa1710 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa00a61c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa009f50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa00a634 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa00a000 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa00a6d8 <line:991:7, col:14>
    (ImplicitCastExpr 0xa00a6c8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa00a6ac <col:14> 'int' lvalue Var 0xa00a3b0 '__r' 'int'))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa00cde0 </usr/include/c++/4.6/bits/basic_string.tcc:999:5, line:1065:5>
  (DeclStmt 0xa00ae80 <line:1000:7, col:61>
    0xa00ae50 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa00b020 <line:1001:7, col:66>
    0xa00aff0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa00b110 <line:1002:7, col:67>
    0xa00b0e0 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0xa00b1d0 <line:1003:7, col:60>
    0xa00b1a0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa00b290 <line:1004:7, col:61>
    0xa00b260 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa00b3b0 <line:1005:7, col:44>
    0xa00b380 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa00b4a0 <line:1006:7, col:69>
    0xa00b470 "typedef typename __ctype_type::ctype_base __ctype_base")
  (DeclStmt 0xa00b520 <line:1008:7, col:34>
    0xa00b4d0 "__size_type __extracted =
      (IntegerLiteral 0xa00b508 <col:33> 'int' 0)")
  (DeclStmt 0xa00b660 <line:1009:7, col:63>
    0xa00b5e0 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0xa00b638 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0xa00b770 <line:1010:7, col:58>
    0xa00b6f0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa00b750 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa00b724 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00aa30 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa00b740 <col:52> '_Bool' false))")
  (IfStmt 0xa00cc08 <line:1011:7, line:1058:2>
    <<<NULL>>>
    (DeclRefExpr 0xa00b780 <line:1011:11> 'typename __istream_type::sentry' lvalue Var 0xa00b6f0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa00cbe8 <line:1012:2, line:1058:2>
      (IfStmt 0xa00c9b8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1045:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa00b798 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa00c978 </usr/include/c++/4.6/bits/basic_string.tcc:1014:6, line:1045:6>
          (CallExpr 0xa00b7f8 <line:1016:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa00b7c0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa00b7a8 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa00abe0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0xa00b8a8 <line:1017:8, col:25>
            0xa00b870 "_CharT __buf[128]")
          (DeclStmt 0xa00b910 <line:1018:8, col:29>
            0xa00b8c0 "__size_type __len =
              (IntegerLiteral 0xa00b8f8 <col:28> 'int' 0)")
          (DeclStmt 0xa00b9d8 <line:1019:8, col:43>
            0xa00b930 "const streamsize __w =
              (CallExpr 0xa00b9b8 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa00b980 <col:31, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa00b964 <col:31> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00aa30 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa00bb48 <line:1020:8, line:1021:51>
            0xa00b9f0 "const __size_type __n =
              (ConditionalOperator 0xa00bb28 <line:1020:32, line:1021:50> '<dependent type>'
                (BinaryOperator 0xa00ba68 <line:1020:32, col:38> '_Bool' '>'
                  (ImplicitCastExpr 0xa00ba58 <col:32> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa00ba24 <col:32> 'const streamsize':'const int' lvalue Var 0xa00b930 '__w' 'const streamsize':'const int'))
                  (IntegerLiteral 0xa00ba40 <col:38> 'int' 0))
                (CXXStaticCastExpr 0xa00baa0 <col:42, col:70> '__size_type':'typename __string_type::size_type' static_cast<__size_type> <Dependent>
                  (DeclRefExpr 0xa00ba80 <col:67> 'const streamsize':'const int' lvalue Var 0xa00b930 '__w' 'const streamsize':'const int'))
                (CallExpr 0xa00bb08 <line:1021:35, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa00bad0 <col:35, col:41> '<dependent type>' lvalue
                    (DeclRefExpr 0xa00bab8 <col:35> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa00abe0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
          (DeclStmt 0xa00bce8 <line:1022:8, col:73>
            0xa00bbb0 "const __ctype_type &__ct =
              (CallExpr 0xa00bcc8 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0xa00bbf0 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9f0c7d0)
                (CallExpr 0xa00bca8 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa00bc70 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0xa00bc58 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00aa30 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0xa00bdc8 <line:1023:8, col:47>
            0xa00bd20 "const __int_type __eof =
              (CallExpr 0xa00bda8 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa00bd80 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0xa00bee0 <line:1024:8, col:46>
            0xa00bde0 "__int_type __c =
              (CallExpr 0xa00bec0 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa00be88 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0xa00be68 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa00be30 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0xa00be14 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00aa30 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0xa00c6e8 <line:1026:8, line:1039:3>
            <<<NULL>>>
            (BinaryOperator 0xa00c1d0 <line:1026:15, line:1029:32> '<dependent type>' '&&'
              (BinaryOperator 0xa00c048 <line:1026:15, line:1027:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa00bf68 <line:1026:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa00bf20 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
                  (DeclRefExpr 0xa00bef0 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00b4d0 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0xa00bf08 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa00b9f0 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0xa00c030 <line:1027:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa00c008 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa00bfb0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa00bfd4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00bde0 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0xa00bfec <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa00bd20 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0xa00c1b8 <line:1028:11, line:1029:32> '<dependent type>' prefix '!'
                (CallExpr 0xa00c190 <line:1028:12, line:1029:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa00c078 <line:1028:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa00c060 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa00bbb0 '__ct' 'const __ctype_type &'))
                  (DependentScopeDeclRefExpr 0xa00c0e8 <col:20, col:34> '<dependent type>' lvalue)
                  (CallExpr 0xa00c170 <line:1029:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa00c130 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa00c154 <col:28> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00bde0 '__c' '__int_type':'typename __istream_type::int_type')))))
            (CompoundStmt 0xa00c6c8 <line:1030:3, line:1039:3>
              (IfStmt 0xa00c470 <line:1031:5, line:1035:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa00c2d8 <line:1031:9, col:47> '<dependent type>'
                  (UnresolvedLookupExpr 0xa00c280 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
                  (DeclRefExpr 0xa00c1e8 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00b8c0 '__len' '__size_type':'typename __string_type::size_type')
                  (BinaryOperator 0xa00c268 <col:18, col:47> 'unsigned int' '/'
                    (UnaryExprOrTypeTraitExpr 0xa00c230 <col:18, col:30> 'unsigned int' sizeof 
                      (ParenExpr 0xa00c218 <col:24, col:30> '_CharT [128]' lvalue
                        (DeclRefExpr 0xa00c200 <col:25> '_CharT [128]' lvalue Var 0xa00b870 '__buf' '_CharT [128]')))
                    (UnaryExprOrTypeTraitExpr 0xa00c250 <col:34, col:47> 'unsigned int' sizeof '_CharT')))
                (CompoundStmt 0xa00c458 <line:1032:7, line:1035:7>
                  (CallExpr 0xa00c3e8 <line:1033:9, col:59> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa00c318 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0xa00c2fc <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa00abe0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
                    (DeclRefExpr 0xa00c34c <col:22> '_CharT [128]' lvalue Var 0xa00b870 '__buf' '_CharT [128]')
                    (BinaryOperator 0xa00c3d0 <col:29, col:58> 'unsigned int' '/'
                      (UnaryExprOrTypeTraitExpr 0xa00c398 <col:29, col:41> 'unsigned int' sizeof 
                        (ParenExpr 0xa00c380 <col:35, col:41> '_CharT [128]' lvalue
                          (DeclRefExpr 0xa00c364 <col:36> '_CharT [128]' lvalue Var 0xa00b870 '__buf' '_CharT [128]')))
                      (UnaryExprOrTypeTraitExpr 0xa00c3b8 <col:45, col:58> 'unsigned int' sizeof '_CharT')))
                  (BinaryOperator 0xa00c440 <line:1034:9, col:17> '<dependent type>' '='
                    (DeclRefExpr 0xa00c40c <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00b8c0 '__len' '__size_type':'typename __string_type::size_type')
                    (IntegerLiteral 0xa00c428 <col:17> 'int' 0)))
                <<<NULL>>>)
              (BinaryOperator 0xa00c588 <line:1036:5, col:47> '<dependent type>' '='
                (ArraySubscriptExpr 0xa00c4f0 <col:5, col:18> '<dependent type>' lvalue
                  (DeclRefExpr 0xa00c48c <col:5> '_CharT [128]' lvalue Var 0xa00b870 '__buf' '_CharT [128]')
                  (UnaryOperator 0xa00c4d8 <col:11, col:16> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa00c4a4 <col:11> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00b8c0 '__len' '__size_type':'typename __string_type::size_type')))
                (CallExpr 0xa00c568 <col:22, col:47> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa00c528 <col:22, col:31> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa00c54c <col:44> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00bde0 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0xa00c5b8 <line:1037:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa00c5a0 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00b4d0 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0xa00c6b0 <line:1038:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0xa00c5cc <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00bde0 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0xa00c690 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa00c658 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0xa00c638 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa00c600 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0xa00c5e4 <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00aa30 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (CallExpr 0xa00c780 <line:1040:8, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa00c718 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa00c6fc <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa00abe0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
            (DeclRefExpr 0xa00c74c <col:21> '_CharT [128]' lvalue Var 0xa00b870 '__buf' '_CharT [128]')
            (DeclRefExpr 0xa00c764 <col:28> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00b8c0 '__len' '__size_type':'typename __string_type::size_type'))
          (IfStmt 0xa00c8d0 <line:1042:8, line:1043:24>
            <<<NULL>>>
            (CallExpr 0xa00c828 <line:1042:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa00c7d0 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa00c7f4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00bde0 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0xa00c80c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa00bd20 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0xa00c8b0 <line:1043:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa00c84c <col:3> 'typename __ios_base::iostate' lvalue Var 0xa00b5e0 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0xa00c888 <col:12, col:24> '<dependent type>' lvalue))
            <<<NULL>>>)
          (CallExpr 0xa00c958 <line:1044:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa00c908 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa00c8ec <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00aa30 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa00c940 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa00cac8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1050:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa00c9d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa00cab0 </usr/include/c++/4.6/bits/basic_string.tcc:1047:6, line:1050:6>
          (CallExpr 0xa00ca80 <line:1048:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa00ca00 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa00c9e8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00aa30 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa00ca58 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0xa00caa0 <line:1049:31>))
        <<<NULL>>>)
      (IfStmt 0xa00cbc8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1057:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa00cae8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa00cbb0 </usr/include/c++/4.6/bits/basic_string.tcc:1052:6, line:1057:6>
          (CallExpr 0xa00cb90 <line:1056:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa00cb10 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa00caf8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00aa30 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa00cb68 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa00ccd8 <line:1060:7, line:1061:23>
    <<<NULL>>>
    (UnaryOperator 0xa00cc40 <line:1060:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa00cc24 <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00b4d0 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0xa00ccb8 <line:1061:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0xa00cc54 <col:2> 'typename __ios_base::iostate' lvalue Var 0xa00b5e0 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0xa00cc90 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0xa00cd98 <line:1062:7, line:1063:21>
    <<<NULL>>>
    (DeclRefExpr 0xa00ccf4 <line:1062:11> 'typename __ios_base::iostate' lvalue Var 0xa00b5e0 '__err' 'typename __ios_base::iostate')
    (CallExpr 0xa00cd78 <line:1063:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa00cd28 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa00cd0c <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00aa30 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa00cd5c <col:16> 'typename __ios_base::iostate' lvalue Var 0xa00b5e0 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa00cdd0 <line:1064:7, col:14>
    (DeclRefExpr 0xa00cdb4 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00aa30 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim) (CompoundStmt 0xa00ecc8 </usr/include/c++/4.6/bits/basic_string.tcc:1071:5, line:1128:5>
  (DeclStmt 0xa00d5f0 <line:1072:7, col:61>
    0xa00d5c0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa00d790 <line:1073:7, col:66>
    0xa00d760 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa00d850 <line:1074:7, col:67>
    0xa00d820 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0xa00d8f0 <line:1075:7, col:60>
    0xa00d8c0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa00d9b0 <line:1076:7, col:61>
    0xa00d980 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa00da30 <line:1078:7, col:34>
    0xa00d9e0 "__size_type __extracted =
      (IntegerLiteral 0xa00da18 <col:33> 'int' 0)")
  (DeclStmt 0xa00daf8 <line:1079:7, col:47>
    0xa00da50 "const __size_type __n =
      (CallExpr 0xa00dad8 <col:31, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa00daa0 <col:31, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0xa00da84 <col:31> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa00d2f0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa00dc10 <line:1080:7, col:63>
    0xa00db90 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0xa00dbe8 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0xa00dd00 <line:1081:7, col:57>
    0xa00dc80 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa00dce0 <col:45, col:56> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa00dcb4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00d140 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa00dcd0 <col:52> '_Bool' true))")
  (IfStmt 0xa00eaf0 <line:1082:7, line:1122:2>
    <<<NULL>>>
    (DeclRefExpr 0xa00dd10 <line:1082:11> 'typename __istream_type::sentry' lvalue Var 0xa00dc80 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa00ead0 <line:1083:2, line:1122:2>
      (IfStmt 0xa00e8a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1109:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa00dd28 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa00e878 </usr/include/c++/4.6/bits/basic_string.tcc:1085:6, line:1109:6>
          (CallExpr 0xa00dd88 <line:1086:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa00dd50 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa00dd38 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa00d2f0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0xa00de90 <line:1087:8, col:65>
            0xa00ddd0 "const __int_type __idelim =
              (CallExpr 0xa00de70 <col:36, col:64> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa00de30 <col:36, col:45> '<dependent type>' lvalue)
                (DeclRefExpr 0xa00de54 <col:57> '_CharT' lvalue ParmVar 0xa00d330 '__delim' '_CharT'))")
          (DeclStmt 0xa00df50 <line:1088:8, col:47>
            0xa00deb0 "const __int_type __eof =
              (CallExpr 0xa00df30 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa00df08 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0xa00e070 <line:1089:8, col:46>
            0xa00df70 "__int_type __c =
              (CallExpr 0xa00e050 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa00e018 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0xa00dff8 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa00dfc0 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0xa00dfa4 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00d140 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0xa00e4c0 <line:1091:8, line:1098:3>
            <<<NULL>>>
            (BinaryOperator 0xa00e2a8 <line:1091:15, line:1093:46> '<dependent type>' '&&'
              (BinaryOperator 0xa00e1d8 <line:1091:15, line:1092:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa00e0f8 <line:1091:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa00e0b0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
                  (DeclRefExpr 0xa00e080 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00d9e0 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0xa00e098 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa00da50 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0xa00e1c0 <line:1092:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa00e198 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa00e140 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa00e164 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00df70 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0xa00e17c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa00deb0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0xa00e290 <line:1093:11, col:46> '<dependent type>' prefix '!'
                (CallExpr 0xa00e268 <col:12, col:46> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa00e210 <col:12, col:21> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa00e234 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00df70 '__c' '__int_type':'typename __istream_type::int_type')
                  (DeclRefExpr 0xa00e24c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa00ddd0 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))))
            (CompoundStmt 0xa00e4a0 <line:1094:3, line:1098:3>
              (CompoundAssignOperator 0xa00e358 <line:1095:5, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa00e2c0 <col:5> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa00d2f0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
                (CallExpr 0xa00e338 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa00e2f8 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa00e31c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00df70 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0xa00e390 <line:1096:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa00e378 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00d9e0 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0xa00e488 <line:1097:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0xa00e3a4 <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00df70 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0xa00e468 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa00e430 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0xa00e410 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa00e3d8 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0xa00e3bc <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00d140 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (IfStmt 0xa00e858 <line:1100:8, line:1108:24>
            <<<NULL>>>
            (CallExpr 0xa00e558 <line:1100:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa00e500 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa00e524 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00df70 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0xa00e53c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa00deb0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0xa00e5e0 <line:1101:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa00e57c <col:3> 'typename __ios_base::iostate' lvalue Var 0xa00db90 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0xa00e5b8 <col:12, col:24> '<dependent type>' lvalue))
            (IfStmt 0xa00e838 <line:1102:13, line:1108:24>
              <<<NULL>>>
              (CallExpr 0xa00e680 <line:1102:17, col:51> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa00e628 <col:17, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa00e64c <col:38> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa00df70 '__c' '__int_type':'typename __istream_type::int_type')
                (DeclRefExpr 0xa00e664 <col:43> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa00ddd0 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))
              (CompoundStmt 0xa00e7a0 <line:1103:3, line:1106:3>
                (UnaryOperator 0xa00e6c0 <line:1104:5, col:7> '<dependent type>' prefix '++'
                  (DeclRefExpr 0xa00e6a4 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00d9e0 '__extracted' '__size_type':'typename __string_type::size_type'))
                (CallExpr 0xa00e780 <line:1105:5, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa00e748 <col:5, col:19> '<dependent type>' lvalue
                    (CallExpr 0xa00e728 <col:5, col:16> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa00e6f0 <col:5, col:10> '<dependent type>' lvalue
                        (DeclRefExpr 0xa00e6d4 <col:5> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00d140 '__in' 'basic_istream<_CharT, _Traits> &'))))))
              (CompoundAssignOperator 0xa00e818 <line:1108:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa00e7b8 <col:3> 'typename __ios_base::iostate' lvalue Var 0xa00db90 '__err' 'typename __ios_base::iostate')
                (DependentScopeDeclRefExpr 0xa00e7f0 <col:12, col:24> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0xa00e9b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1114:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa00e8c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa00e998 </usr/include/c++/4.6/bits/basic_string.tcc:1111:6, line:1114:6>
          (CallExpr 0xa00e968 <line:1112:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa00e8e8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa00e8d0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00d140 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa00e940 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0xa00e988 <line:1113:31>))
        <<<NULL>>>)
      (IfStmt 0xa00eab0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1121:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa00e9d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa00ea98 </usr/include/c++/4.6/bits/basic_string.tcc:1116:6, line:1121:6>
          (CallExpr 0xa00ea78 <line:1120:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa00e9f8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa00e9e0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00d140 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa00ea50 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa00ebc0 <line:1123:7, line:1124:23>
    <<<NULL>>>
    (UnaryOperator 0xa00eb28 <line:1123:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa00eb0c <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0xa00d9e0 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0xa00eba0 <line:1124:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0xa00eb3c <col:2> 'typename __ios_base::iostate' lvalue Var 0xa00db90 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0xa00eb78 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0xa00ec80 <line:1125:7, line:1126:21>
    <<<NULL>>>
    (DeclRefExpr 0xa00ebdc <line:1125:11> 'typename __ios_base::iostate' lvalue Var 0xa00db90 '__err' 'typename __ios_base::iostate')
    (CallExpr 0xa00ec60 <line:1126:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa00ec10 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa00ebf4 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00d140 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa00ec44 <col:16> 'typename __ios_base::iostate' lvalue Var 0xa00db90 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa00ecb8 <line:1127:7, col:14>
    (DeclRefExpr 0xa00ec9c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa00d140 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa010e98 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa010e88 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9f9ad40 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9f9ad28 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa34a7d0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa34a7c0 <col:9, col:29>
    (ImplicitCastExpr 0xa34a7b0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa34a790 <col:17, col:29> 'char *' lvalue ._M_p 0xa011420
        (MemberExpr 0xa34a770 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa011450
          (CXXThisExpr 0xa34a650 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa34a638 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa34a628 <col:9, col:59>
    (UnaryOperator 0xa34a610 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa34a5f8 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa34a5e0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa34a5c8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa34a5b0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa34a590 <col:44, col:52> 'char *'
                (MemberExpr 0xa34a570 <col:44> '<bound member function type>' ->_M_data 0xa0114d0
                  (CXXThisExpr 0xa34a560 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x9fbd9b8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9fbd9a0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa349f88 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa349f78 <col:9, col:26>
    (ImplicitCastExpr 0xa349f68 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa349f48 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa031350
        (ImplicitCastExpr 0xa349f38 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa349f00 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa349ee0 <col:16> '<bound member function type>' ->_M_rep 0xa0117a0
              (CXXThisExpr 0xa349db8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa349da0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa349d90 <col:9, col:32>
    (BinaryOperator 0xa349d78 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa349d48 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa349d28 <col:16, col:22> '<bound member function type>' ->size 0xa018710
          (CXXThisExpr 0xa349d18 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa349d68 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9fc4a58 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa34ae70 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa34a8f8 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa34a8a0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa34a890 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa34a824 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa019c70 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa34a870 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa34a850 <col:13, col:19> '<bound member function type>' ->size 0xa018710
          (CXXThisExpr 0xa34a840 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa34a8c8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa34a8b8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc4ec4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa34a8e8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fc4eb0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9fc4e80 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa34ae60 <line:859:2, col:22>
    (ImplicitCastExpr 0xa34ae50 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa34ae38 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa34adf0 <col:9, col:17> 'char *'
          (MemberExpr 0xa34add0 <col:9> '<bound member function type>' ->_M_data 0xa0114d0
            (CXXThisExpr 0xa34adc0 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa34ae28 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa34ae0c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa019c70 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    };
    class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa3497d8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa349638 <line:180:4, col:62>
    0xa349460 "void *__p =
      (CXXReinterpretCastExpr 0xa349620 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa349608 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa3495b0 <col:41> 'size_type []' lvalue Var 0xa059250 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa3497c8 <line:181:4, col:39>
    (UnaryOperator 0xa3497b0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa349798 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa349788 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa34976c <col:36> 'void *' lvalue Var 0xa349460 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa349448 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa349428 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa349150 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa349108 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa3490f8 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9fbd044 <col:8> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa349130 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa3490e0 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa348f40 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa3490c8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa3490a8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa349098 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa349060 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa0593e0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa349140 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9fbd130 <col:50> '_Bool' false))))
    (CompoundStmt 0xa349410 <line:236:6, line:245:6>
      (NullStmt 0x9fbd168 <line:238:67>)
      (IfStmt 0xa3493f0 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa349248 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa349220 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa349210 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9fbd198 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9f955b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa3491f8 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa3491d8 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa058a20
                (ImplicitCastExpr 0xa3491c8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa3491a0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x9fbd230 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x9fbd218 <col:10> 'int' 1)))
          (IntegerLiteral 0x9fbd270 <col:16> 'int' 0))
        (CompoundStmt 0xa3493d8 <line:241:3, line:244:3>
          (NullStmt 0x9fbd2f0 <line:242:63>)
          (CXXMemberCallExpr 0xa3493b8 <line:243:5, col:19> 'void'
            (MemberExpr 0xa349380 <col:5> '<bound member function type>' ->_M_destroy 0xa05a090
              (CXXThisExpr 0xa349260 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa3493a0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa059f70 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa3486a0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa0363b8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa0363a8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x9f9ad40 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x9f9ad28 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa348ee0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa348ed0 <col:9, col:29>
    (ImplicitCastExpr 0xa348ec0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa348ea0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa036940
        (MemberExpr 0xa348e80 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa036970
          (CXXThisExpr 0xa348d60 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa348d48 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa348d38 <col:9, col:59>
    (UnaryOperator 0xa348d20 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa348d08 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa348cf0 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa348cd8 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa348cc0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa348ca0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa348c80 <col:44> '<bound member function type>' ->_M_data 0xa0369f0
                  (CXXThisExpr 0xa348c70 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x9fbd9b8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x9fbd9a0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa3485f0 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa3485d0 <col:9, col:51> 'void'
    (CXXTemporary 0xa348550)
    (CXXMemberCallExpr 0xa348568 <col:9, col:51> 'void'
      (MemberExpr 0xa3484cc <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa059fc0
        (CXXMemberCallExpr 0xa3484a0 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa348480 <col:9> '<bound member function type>' ->_M_rep 0xa036ce0
            (ImplicitCastExpr 0xa3484c0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa348360 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa3485c0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa3485b0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa348558 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa348550)
            (CXXMemberCallExpr 0xa348520 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa348500 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa050810
                (ImplicitCastExpr 0xa348540 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa3484f0 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa34b120 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa34b110 <col:9, col:26>
    (ImplicitCastExpr 0xa34b100 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa34b0e0 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa0588a0
        (ImplicitCastExpr 0xa34b0d0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa34b0b0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa34b090 <col:16> '<bound member function type>' ->_M_rep 0xa036ce0
              (CXXThisExpr 0xa34af70 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa34af58 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa34af48 <col:9, col:32>
    (BinaryOperator 0xa34af30 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa34af00 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa34aee0 <col:16, col:22> '<bound member function type>' ->size 0xa03dc20
          (CXXThisExpr 0xa34aed0 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa34af20 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9fc4a58 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa34b7c0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa34b248 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa34b1f0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa34b1e0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa34b174 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa03f180 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa34b1c0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa34b1a0 <col:13, col:19> '<bound member function type>' ->size 0xa03dc20
          (CXXThisExpr 0xa34b190 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa34b218 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa34b208 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9fc4ec4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa34b238 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9fc4eb0 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x9fc4e80 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa34b7b0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa34b7a0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa34b788 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa34b740 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa34b720 <col:9> '<bound member function type>' ->_M_data 0xa0369f0
            (CXXThisExpr 0xa34b710 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa34b778 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa34b75c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa03f180 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa34e610 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa34e600 <col:9, col:24>
    (ImplicitCastExpr 0xa34e5f0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa34e5d0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa34e5b0 <col:16> '<bound member function type>' ->_M_data 0xa0369f0
          (CXXThisExpr 0xa34e5a0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa3499b0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa3499a0 <col:9, col:16>
    (CXXConstructExpr 0xa349978 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa349968 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa349958 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa349910 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa036970
            (CXXThisExpr 0xa3497f0 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    };
}
namespace std {
    namespace rel_ops {
        template <class _Tp> inline bool operator!=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa05c190 </usr/include/c++/4.6/bits/stl_relops.h:89:7, col:31>
  (ReturnStmt 0xa05c180 <col:9, col:28>
    (UnaryOperator 0xa05c168 <col:16, col:28> '<dependent type>' prefix '!'
      (ParenExpr 0xa05c150 <col:17, col:28> '<dependent type>'
        (CXXOperatorCallExpr 0xa05c128 <col:18, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa05c0d0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
          (DeclRefExpr 0xa05c0a0 <col:18> 'const _Tp' lvalue ParmVar 0xa05bf40 '__x' 'const _Tp &')
          (DeclRefExpr 0xa05c0b8 <col:25> 'const _Tp' lvalue ParmVar 0xa05bf90 '__y' 'const _Tp &'))))))

;
        template <class _Tp> inline bool operator>(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa05c450 </usr/include/c++/4.6/bits/stl_relops.h:102:7, col:27>
  (ReturnStmt 0xa05c440 <col:9, col:22>
    (CXXOperatorCallExpr 0xa05c418 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa05c3d0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
      (DeclRefExpr 0xa05c3a0 <col:16> 'const _Tp' lvalue ParmVar 0xa05c290 '__y' 'const _Tp &')
      (DeclRefExpr 0xa05c3b8 <col:22> 'const _Tp' lvalue ParmVar 0xa05c240 '__x' 'const _Tp &'))))

;
        template <class _Tp> inline bool operator<=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa05c740 </usr/include/c++/4.6/bits/stl_relops.h:115:7, col:30>
  (ReturnStmt 0xa05c730 <col:9, col:27>
    (UnaryOperator 0xa05c718 <col:16, col:27> '<dependent type>' prefix '!'
      (ParenExpr 0xa05c700 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa05c6d8 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa05c690 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
          (DeclRefExpr 0xa05c660 <col:18> 'const _Tp' lvalue ParmVar 0xa05c550 '__y' 'const _Tp &')
          (DeclRefExpr 0xa05c678 <col:24> 'const _Tp' lvalue ParmVar 0xa05c500 '__x' 'const _Tp &'))))))

;
        template <class _Tp> inline bool operator>=(const _Tp &__x, const _Tp &__y) (CompoundStmt 0xa05ca30 </usr/include/c++/4.6/bits/stl_relops.h:128:7, col:30>
  (ReturnStmt 0xa05ca20 <col:9, col:27>
    (UnaryOperator 0xa05ca08 <col:16, col:27> '<dependent type>' prefix '!'
      (ParenExpr 0xa05c9f0 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa05c9c8 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa05c980 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
          (DeclRefExpr 0xa05c950 <col:18> 'const _Tp' lvalue ParmVar 0xa05c7f0 '__x' 'const _Tp &')
          (DeclRefExpr 0xa05c968 <col:24> 'const _Tp' lvalue ParmVar 0xa05c840 '__y' 'const _Tp &'))))))

;
    }
}
extern "C" {
    typedef unsigned char cc_t;
    typedef unsigned int speed_t;
    typedef unsigned int tcflag_t;
    struct termios {
        struct termios;
        tcflag_t c_iflag;
        tcflag_t c_oflag;
        tcflag_t c_cflag;
        tcflag_t c_lflag;
        cc_t c_line;
        cc_t c_cc[32];
        speed_t c_ispeed;
        speed_t c_ospeed;
    };
    extern speed_t cfgetospeed(const struct termios *__termios_p) throw();
    extern speed_t cfgetispeed(const struct termios *__termios_p) throw();
    extern int cfsetospeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetispeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetspeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int tcgetattr(int __fd, struct termios *__termios_p) throw();
    extern int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p) throw();
    extern void cfmakeraw(struct termios *__termios_p) throw();
    extern int tcsendbreak(int __fd, int __duration) throw();
    extern int tcdrain(int __fd);
    extern int tcflush(int __fd, int __queue_selector) throw();
    extern int tcflow(int __fd, int __action) throw();
    extern __pid_t tcgetsid(int __fd) throw();
}
namespace std {
    class locale {
        class locale;
    public:
    public:
        typedef int category;
        class facet;
        class id;
        class _Impl;
        ;
        ;
        ;
        ;
        ;
        static const category none = (IntegerLiteral 0xa06c268 </usr/include/c++/4.6/bits/locale_classes.h:99:35> 'int' 0)
;
        static const category ctype = (ImplicitCastExpr 0xa06c310 </usr/include/c++/4.6/bits/locale_classes.h:100:36, col:42> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa06c2f8 <col:36, col:42> 'long' '<<'
    (IntegerLiteral 0xa06c2c8 <col:36> 'long' 1)
    (IntegerLiteral 0xa06c2e0 <col:42> 'int' 0)))
;
        static const category numeric = (ImplicitCastExpr 0xa06c3b0 </usr/include/c++/4.6/bits/locale_classes.h:101:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa06c398 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0xa06c368 <col:37> 'long' 1)
    (IntegerLiteral 0xa06c380 <col:43> 'int' 1)))
;
        static const category collate = (ImplicitCastExpr 0xa06c450 </usr/include/c++/4.6/bits/locale_classes.h:102:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa06c438 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0xa06c408 <col:37> 'long' 1)
    (IntegerLiteral 0xa06c420 <col:43> 'int' 2)))
;
        static const category time = (ImplicitCastExpr 0xa06c4f0 </usr/include/c++/4.6/bits/locale_classes.h:103:35, col:41> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa06c4d8 <col:35, col:41> 'long' '<<'
    (IntegerLiteral 0xa06c4a8 <col:35> 'long' 1)
    (IntegerLiteral 0xa06c4c0 <col:41> 'int' 3)))
;
        static const category monetary = (ImplicitCastExpr 0xa06c590 </usr/include/c++/4.6/bits/locale_classes.h:104:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa06c578 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0xa06c548 <col:38> 'long' 1)
    (IntegerLiteral 0xa06c560 <col:44> 'int' 4)))
;
        static const category messages = (ImplicitCastExpr 0xa06c630 </usr/include/c++/4.6/bits/locale_classes.h:105:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa06c618 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0xa06c5e8 <col:38> 'long' 1)
    (IntegerLiteral 0xa06c600 <col:44> 'int' 5)))
;
        static const category all = (ParenExpr 0xa06c7f0 </usr/include/c++/4.6/bits/locale_classes.h:106:34, line:107:36> 'int'
  (BinaryOperator 0xa06c7d8 <line:106:35, line:107:28> 'int' '|'
    (BinaryOperator 0xa06c798 <line:106:35, line:107:17> 'int' '|'
      (BinaryOperator 0xa06c758 <line:106:35, line:107:9> 'int' '|'
        (BinaryOperator 0xa06c718 <line:106:35, col:53> 'int' '|'
          (BinaryOperator 0xa06c6d8 <col:35, col:43> 'int' '|'
            (ImplicitCastExpr 0xa06c6b8 <col:35> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0xa06c684 <col:35> 'const category':'const int' lvalue Var 0xa06c290 'ctype' 'const category':'const int'))
            (ImplicitCastExpr 0xa06c6c8 <col:43> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0xa06c69c <col:43> 'const category':'const int' lvalue Var 0xa06c330 'numeric' 'const category':'const int')))
          (ImplicitCastExpr 0xa06c708 <col:53> 'category':'int' <LValueToRValue>
            (DeclRefExpr 0xa06c6f0 <col:53> 'const category':'const int' lvalue Var 0xa06c3d0 'collate' 'const category':'const int')))
        (ImplicitCastExpr 0xa06c748 <line:107:9> 'category':'int' <LValueToRValue>
          (DeclRefExpr 0xa06c730 <col:9> 'const category':'const int' lvalue Var 0xa06c470 'time' 'const category':'const int')))
      (ImplicitCastExpr 0xa06c788 <col:17> 'category':'int' <LValueToRValue>
        (DeclRefExpr 0xa06c770 <col:17> 'const category':'const int' lvalue Var 0xa06c510 'monetary' 'const category':'const int')))
    (ImplicitCastExpr 0xa06c7c8 <col:28> 'category':'int' <LValueToRValue>
      (DeclRefExpr 0xa06c7b0 <col:28> 'const category':'const int' lvalue Var 0xa06c5b0 'messages' 'const category':'const int'))))
;
        locale() throw();
        locale(const std::locale &__other) throw();
        locale(const char *__s);
        locale(const std::locale &__base, const char *__s, category __cat);
        locale(const std::locale &__base, const std::locale &__add, category __cat);
        template <typename _Facet> locale(const std::locale &__other, _Facet *__f);
        void ~locale() throw();
        const std::locale &operator=(const std::locale &__other) throw();
        template <typename _Facet> std::locale combine(const std::locale &__other) const;
        string name() const;
        bool operator==(const std::locale &__other) const throw();
        bool operator!=(const std::locale &__other) const throw() (CompoundStmt 0xa06e6b0 </usr/include/c++/4.6/bits/locale_classes.h:236:5, col:44>
  (ReturnStmt 0xa06e6a0 <col:7, col:41>
    (UnaryOperator 0xa06e688 <col:14, col:41> '_Bool' prefix '!'
      (ParenExpr 0xa06e670 <col:15, col:41> '_Bool'
        (CXXMemberCallExpr 0xa06e650 <col:16, col:40> '_Bool'
          (MemberExpr 0xa06e618 <col:16, col:30> '<bound member function type>' ->operator== 0xa06d640
            (CXXThisExpr 0xa06e608 <col:16> 'const class std::locale *' this))
          (DeclRefExpr 0xa06e638 <col:33> 'const class std::locale' lvalue ParmVar 0xa06d6c0 '__other' 'const class std::locale &'))))))


        template <typename _Char, typename _Traits, typename _Alloc> bool operator()(const basic_string<_Char, _Traits, _Alloc> &__s1, const basic_string<_Char, _Traits, _Alloc> &__s2) const;
        static std::locale global(const std::locale &);
        static const std::locale &classic();
    private:
    private:
        std::locale::_Impl *_M_impl;
        static std::locale::_Impl *_S_classic;
        static std::locale::_Impl *_S_global;
        static const char *const *const _S_categories;
        enum  {
            _S_categories_size = (ImplicitCastExpr 0xa06e108 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa06e0b0 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' '+'
    (IntegerLiteral 0xa06e080 </usr/include/c++/4.6/bits/locale_classes.h:304:33> 'int' 6)
    (IntegerLiteral 0xa06e098 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' 6)))

        };
        static __gthread_once_t _S_once;
        locale(std::locale::_Impl *) throw();
        static void _S_initialize();
        static void _S_initialize_once() throw();
        static category _S_normalize_category(category);
        void _M_coalesce(const std::locale &__base, const std::locale &__add, category __cat);
    };
    class facet {
        class facet;
    private:
    private:
        ;
        ;
        mutable _Atomic_word _M_refcount;
        static __c_locale _S_c_locale;
        static const char _S_c_name[2];
        static __gthread_once_t _S_once;
        static void _S_initialize_once();
    protected:
    protected:
        facet(size_t __refs = (ImplicitCastExpr 0xa078760 </usr/include/c++/4.6/bits/locale_classes.h:370:27> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa078748 <col:27> 'int' 0))
) throw() : _M_refcount((ConditionalOperator 0xa078800 </usr/include/c++/4.6/bits/locale_classes.h:370:52, col:65> 'int'
  (ImplicitCastExpr 0xa0787f0 <col:52> '_Bool' <IntegralToBoolean>
    (ImplicitCastExpr 0xa0787e0 <col:52> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa078794 <col:52> 'size_t':'unsigned int' lvalue ParmVar 0xa06eb70 '__refs' 'size_t':'unsigned int')))
  (IntegerLiteral 0xa0787b0 <col:61> 'int' 1)
  (IntegerLiteral 0xa0787c8 <col:65> 'int' 0))
) (CompoundStmt 0xa078840 </usr/include/c++/4.6/bits/locale_classes.h:371:5, col:7>)


        virtual void ~facet();
        static void _S_create_c_locale(__c_locale &__cloc, const char *__s, __c_locale __old = (ImplicitCastExpr 0xa078788 </usr/include/c++/4.6/bits/locale_classes.h:379:29> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0xa078770 <col:29> 'int' 0))
);
        static __c_locale _S_clone_c_locale(__c_locale &__cloc) throw();
        static void _S_destroy_c_locale(__c_locale &__cloc);
        static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char *__s);
        static __c_locale _S_get_c_locale();
        static const char *_S_get_c_name() throw();
    private:
    private:
        void _M_add_reference() const throw() (CompoundStmt 0xa078970 </usr/include/c++/4.6/bits/locale_classes.h:401:5, col:58>
  (CallExpr 0xa078948 <col:7, col:55> 'void'
    (ImplicitCastExpr 0xa078938 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa078874 <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x9f96280 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0xa078908 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0xa0788e4 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0xa06e940
        (CXXThisExpr 0xa0788b8 <col:41> 'const class std::locale::facet *' this)))
    (IntegerLiteral 0xa078920 <col:54> 'int' 1)))


        void _M_remove_reference() const throw() (CompoundStmt 0xa078bc8 </usr/include/c++/4.6/bits/locale_classes.h:405:5, line:416:5>
  (NullStmt 0xa078988 <line:407:60>)
  (IfStmt 0xa078ba8 <line:408:7, line:415:2>
    <<<NULL>>>
    (BinaryOperator 0xa078aa0 <line:408:11, col:71> '_Bool' '=='
      (CallExpr 0xa078a60 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa078a50 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0789b8 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9f955b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0xa078a08 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0xa0789e8 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0xa06e940
            (CXXThisExpr 0xa0789d8 <col:51> 'const class std::locale::facet *' this)))
        (UnaryOperator 0xa078a38 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0xa078a20 <col:65> 'int' 1)))
      (IntegerLiteral 0xa078a88 <col:71> 'int' 1))
    (CompoundStmt 0xa078b88 <line:409:2, line:415:2>
      (NullStmt 0xa078ab8 <line:410:63>)
      (IfStmt 0xa078b28 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:412:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa078ac8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa078b10 </usr/include/c++/4.6/bits/locale_classes.h:412:6, col:21>
          (CXXDeleteExpr 0xa078af8 <col:8, col:15> 'void'
            (ImplicitCastExpr 0xa078ae8 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0xa078ad8 <col:15> 'const class std::locale::facet *' this))))
        <<<NULL>>>)
      (IfStmt 0xa078b68 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:414:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa078b48 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa078b58 </usr/include/c++/4.6/bits/locale_classes.h:414:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        facet(const std::locale::facet &);
        std::locale::facet &operator=(const std::locale::facet &);
    };
    class id {
        class id;
    private:
    private:
        ;
        ;
        ;
        ;
        mutable size_t _M_index;
        static _Atomic_word _S_refcount;
        void operator=(const std::locale::id &);
        id(const std::locale::id &);
    public:
    public:
        id() (CompoundStmt 0xa079590 </usr/include/c++/4.6/bits/locale_classes.h:467:10, col:12>)


        size_t _M_id() const throw();
    };
    class _Impl {
        class _Impl;
    public:
    public:
        ;
        ;
        ;
        ;
        ;
    private:
    private:
        _Atomic_word _M_refcount;
        const std::locale::facet **_M_facets;
        size_t _M_facets_size;
        const std::locale::facet **_M_caches;
        char **_M_names;
        static const locale::id *const _S_id_ctype[];
        static const locale::id *const _S_id_numeric[];
        static const locale::id *const _S_id_collate[];
        static const locale::id *const _S_id_time[];
        static const locale::id *const _S_id_monetary[];
        static const locale::id *const _S_id_messages[];
        static const locale::id *const *const _S_facet_categories[];
        void _M_add_reference() throw() (CompoundStmt 0xa07b478 </usr/include/c++/4.6/bits/locale_classes.h:510:5, col:58>
  (CallExpr 0xa07b450 <col:7, col:55> 'void'
    (ImplicitCastExpr 0xa07b440 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa07b3bc <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x9f96280 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0xa07b410 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0xa07b3f0 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0xa079cf0
        (CXXThisExpr 0xa07b3e0 <col:41> 'class std::locale::_Impl *' this)))
    (IntegerLiteral 0xa07b428 <col:54> 'int' 1)))


        void _M_remove_reference() throw() (CompoundStmt 0xa07b6d0 </usr/include/c++/4.6/bits/locale_classes.h:514:5, line:525:5>
  (NullStmt 0xa07b490 <line:516:60>)
  (IfStmt 0xa07b6b0 <line:517:7, line:524:2>
    <<<NULL>>>
    (BinaryOperator 0xa07b5a8 <line:517:11, col:71> '_Bool' '=='
      (CallExpr 0xa07b568 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa07b558 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa07b4c0 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9f955b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0xa07b510 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0xa07b4f0 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0xa079cf0
            (CXXThisExpr 0xa07b4e0 <col:51> 'class std::locale::_Impl *' this)))
        (UnaryOperator 0xa07b540 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0xa07b528 <col:65> 'int' 1)))
      (IntegerLiteral 0xa07b590 <col:71> 'int' 1))
    (CompoundStmt 0xa07b690 <line:518:2, line:524:2>
      (NullStmt 0xa07b5c0 <line:519:63>)
      (IfStmt 0xa07b630 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:521:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa07b5d0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa07b618 </usr/include/c++/4.6/bits/locale_classes.h:521:6, col:21>
          (CXXDeleteExpr 0xa07b600 <col:8, col:15> 'void'
            (ImplicitCastExpr 0xa07b5f0 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0xa07b5e0 <col:15> 'class std::locale::_Impl *' this))))
        <<<NULL>>>)
      (IfStmt 0xa07b670 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:523:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa07b650 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa07b660 </usr/include/c++/4.6/bits/locale_classes.h:523:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        _Impl(const std::locale::_Impl &, size_t);
        _Impl(const char *, size_t);
        _Impl(size_t) throw();
        void ~_Impl() throw();
        _Impl(const std::locale::_Impl &);
        void operator=(const std::locale::_Impl &);
        bool _M_check_same_name() (CompoundStmt 0xa07ca18 </usr/include/c++/4.6/bits/locale_classes.h:540:5, line:547:5>
  (DeclStmt 0xa07b738 <line:541:7, col:24>
    0xa07b6f0 "bool __ret =
      (CXXBoolLiteralExpr 0xa07b728 <col:20> '_Bool' true)")
  (IfStmt 0xa07c9c0 <line:542:7, line:545:66>
    <<<NULL>>>
    (ImplicitCastExpr 0xa07b7c8 <line:542:11, col:21> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0xa07b7b8 <col:11, col:21> 'char *' <LValueToRValue>
        (ArraySubscriptExpr 0xa07b7a0 <col:11, col:21> 'char *' lvalue
          (ImplicitCastExpr 0xa07b790 <col:11> 'char **' <LValueToRValue>
            (MemberExpr 0xa07b758 <col:11> 'char **' lvalue ->_M_names 0xa079e10
              (CXXThisExpr 0xa07b748 <col:11> 'class std::locale::_Impl *' this)))
          (IntegerLiteral 0xa07b778 <col:20> 'int' 1))))
    (ForStmt 0xa07c998 <line:544:2, line:545:66>
      (DeclStmt 0xa07b840 <line:544:7, col:21>
        0xa07b7e0 "size_t __i =
          (ImplicitCastExpr 0xa07b830 <col:20> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa07b818 <col:20> 'int' 0))")
      <<<NULL>>>
      (BinaryOperator 0xa07b920 <col:23, col:59> '_Bool' '&&'
        (ImplicitCastExpr 0xa07b910 <col:23> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa07b850 <col:23> '_Bool' lvalue Var 0xa07b6f0 '__ret' '_Bool'))
        (BinaryOperator 0xa07b8f8 <col:32, col:59> '_Bool' '<'
          (ImplicitCastExpr 0xa07b8d8 <col:32> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa07b868 <col:32> 'size_t':'unsigned int' lvalue Var 0xa07b7e0 '__i' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0xa07b8e8 <col:38, col:59> 'unsigned int' <IntegralCast>
            (BinaryOperator 0xa07b8c0 <col:38, col:59> 'int' '-'
              (ImplicitCastExpr 0xa07b8b0 <col:38> 'int' <IntegralCast>
                (DeclRefExpr 0xa07b880 <col:38> 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>' EnumConstant 0xa06e0d0 '_S_categories_size' 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>'))
              (IntegerLiteral 0xa07b898 <col:59> 'int' 1)))))
      (UnaryOperator 0xa07b950 <col:62, col:64> 'size_t':'unsigned int' lvalue prefix '++'
        (DeclRefExpr 0xa07b938 <col:64> 'size_t':'unsigned int' lvalue Var 0xa07b7e0 '__i' 'size_t':'unsigned int'))
      (BinaryOperator 0xa07c980 <line:545:4, col:66> '_Bool' lvalue '='
        (DeclRefExpr 0xa07b964 <col:4> '_Bool' lvalue Var 0xa07b6f0 '__ret' '_Bool')
        (BinaryOperator 0xa07c968 <col:12, col:66> '_Bool' '=='
          (CallExpr 0xa07c8e8 <col:12, col:61> 'int'
            (ImplicitCastExpr 0xa07c8d8 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa07ba94 <col:12> 'int (const char *, const char *)' lvalue Function 0xa07b980 '__builtin_strcmp' 'int (const char *, const char *)'))
            (ImplicitCastExpr 0xa07c920 <col:29, col:41> 'const char *' <NoOp>
              (ImplicitCastExpr 0xa07c910 <col:29, col:41> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0xa07bb18 <col:29, col:41> 'char *' lvalue
                  (ImplicitCastExpr 0xa07baf8 <col:29> 'char **' <LValueToRValue>
                    (MemberExpr 0xa07bac0 <col:29> 'char **' lvalue ->_M_names 0xa079e10
                      (CXXThisExpr 0xa07bab0 <col:29> 'class std::locale::_Impl *' this)))
                  (ImplicitCastExpr 0xa07bb08 <col:38> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa07bae0 <col:38> 'size_t':'unsigned int' lvalue Var 0xa07b7e0 '__i' 'size_t':'unsigned int')))))
            (ImplicitCastExpr 0xa07c940 <col:44, col:60> 'const char *' <NoOp>
              (ImplicitCastExpr 0xa07c930 <col:44, col:60> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0xa07c8a0 <col:44, col:60> 'char *' lvalue
                  (ImplicitCastExpr 0xa07bbc8 <col:44> 'char **' <LValueToRValue>
                    (MemberExpr 0xa07bb40 <col:44> 'char **' lvalue ->_M_names 0xa079e10
                      (CXXThisExpr 0xa07bb30 <col:44> 'class std::locale::_Impl *' this)))
                  (BinaryOperator 0xa07bbb0 <col:53, col:59> 'unsigned int' '+'
                    (ImplicitCastExpr 0xa07bb90 <col:53> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa07bb60 <col:53> 'size_t':'unsigned int' lvalue Var 0xa07b7e0 '__i' 'size_t':'unsigned int'))
                    (ImplicitCastExpr 0xa07bba0 <col:59> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa07bb78 <col:59> 'int' 1)))))))
          (IntegerLiteral 0xa07c950 <col:66> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa07ca08 <line:546:7, col:14>
    (ImplicitCastExpr 0xa07c9f8 <col:14> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa07c9dc <col:14> '_Bool' lvalue Var 0xa07b6f0 '__ret' '_Bool'))))


        void _M_replace_categories(const std::locale::_Impl *, category);
        void _M_replace_category(const std::locale::_Impl *, const locale::id *const *);
        void _M_replace_facet(const std::locale::_Impl *, const locale::id *);
        void _M_install_facet(const locale::id *, const std::locale::facet *);
        template <typename _Facet> void _M_init_facet(_Facet *__facet) (CompoundStmt 0xa07cb10 </usr/include/c++/4.6/bits/locale_classes.h:564:7, col:49>
  (CallExpr 0xa07cae8 <col:9, col:46> '<dependent type>'
    (MemberExpr 0xa07ca48 <col:9> '<bound member function type>' ->_M_install_facet 0xa07b030
      (CXXThisExpr 0xa07ca38 <col:9> 'class std::locale::_Impl *' this))
    (UnaryOperator 0xa07cab8 <col:26, col:35> '<dependent type>' prefix '&'
      (DependentScopeDeclRefExpr 0xa07ca90 <col:27, col:35> '<dependent type>' lvalue))
    (DeclRefExpr 0xa07cacc <col:39> '_Facet *' lvalue ParmVar 0xa07b130 '__facet' '_Facet *')))

;
        void _M_install_cache(const std::locale::facet *, size_t);
    };
    template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw();
    template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc);
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate<_CharT>(size_t __refs = (ImplicitCastExpr 0xa07e430 </usr/include/c++/4.6/bits/locale_classes.h:644:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa07e418 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa07e464 </usr/include/c++/4.6/bits/locale_classes.h:645:15> 'size_t':'unsigned int' lvalue ParmVar 0xa07d410 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0xa07e558 </usr/include/c++/4.6/bits/locale_classes.h:645:44, col:60> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0xa07e548 <col:44> '__c_locale (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa07e4f8 <col:44> '__c_locale (void)' lvalue CXXMethod 0xa078250 '_S_get_c_locale' '__c_locale (void)')))
) (CompoundStmt 0xa07e5c0 </usr/include/c++/4.6/bits/locale_classes.h:646:7, col:9>)


        collate<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa07e458 </usr/include/c++/4.6/bits/locale_classes.h:658:50> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa07e440 <col:50> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa07e5d0 </usr/include/c++/4.6/bits/locale_classes.h:659:15> 'size_t':'unsigned int' lvalue ParmVar 0xa07d560 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0xa07e6e8 </usr/include/c++/4.6/bits/locale_classes.h:659:44, col:68> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0xa07e6d8 <col:44> '__c_locale (*)(__c_locale &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0xa07e668 <col:44> '__c_locale (__c_locale &) throw()' lvalue CXXMethod 0xa077f10 '_S_clone_c_locale' '__c_locale (__c_locale &) throw()'))
  (DeclRefExpr 0xa07e680 <col:62> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0xa07d520 '__cloc' '__c_locale':'struct __locale_struct *'))
) (CompoundStmt 0xa07e750 </usr/include/c++/4.6/bits/locale_classes.h:660:7, col:9>)


        int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0xa07e860 </usr/include/c++/4.6/bits/locale_classes.h:677:7, col:62>
  (ReturnStmt 0xa07e850 <col:9, col:59>
    (CallExpr 0xa07e820 <col:16, col:59> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa07e788 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa07e778 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa07e7bc <col:33> 'const _CharT *' lvalue ParmVar 0xa07d6a0 '__lo1' 'const _CharT *')
      (DeclRefExpr 0xa07e7d4 <col:40> 'const _CharT *' lvalue ParmVar 0xa07d6f0 '__hi1' 'const _CharT *')
      (DeclRefExpr 0xa07e7ec <col:47> 'const _CharT *' lvalue ParmVar 0xa07d740 '__lo2' 'const _CharT *')
      (DeclRefExpr 0xa07e804 <col:54> 'const _CharT *' lvalue ParmVar 0xa07d790 '__hi2' 'const _CharT *'))))


        string_type transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa07e928 </usr/include/c++/4.6/bits/locale_classes.h:695:7, col:48>
  (ReturnStmt 0xa07e918 <col:9, col:45>
    (CallExpr 0xa07e8f0 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa07e888 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa07e878 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa07e8bc <col:35> 'const _CharT *' lvalue ParmVar 0xa07d8e0 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa07e8d4 <col:41> 'const _CharT *' lvalue ParmVar 0xa07d930 '__hi' 'const _CharT *'))))


        long hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa07e9f0 </usr/include/c++/4.6/bits/locale_classes.h:709:7, col:43>
  (ReturnStmt 0xa07e9e0 <col:9, col:40>
    (CallExpr 0xa07e9b8 <col:16, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa07e950 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa07e940 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa07e984 <col:30> 'const _CharT *' lvalue ParmVar 0xa07da50 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa07e99c <col:36> 'const _CharT *' lvalue ParmVar 0xa07daa0 '__hi' 'const _CharT *'))))


        int _M_compare(const _CharT *, const _CharT *) const throw();
        size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate<_CharT>() (CompoundStmt 0xa07ea88 </usr/include/c++/4.6/bits/locale_classes.h:722:7, col:51>
  (CallExpr 0xa07ea68 <col:9, col:48> '<dependent type>'
    (DeclRefExpr 0xa07ea04 <col:9> 'void (__c_locale &)' lvalue CXXMethod 0xa078030 '_S_destroy_c_locale' 'void (__c_locale &)')
    (MemberExpr 0xa07ea48 <col:29> '__c_locale':'struct __locale_struct *' lvalue ->_M_c_locale_collate 0xa07d330
      (CXXThisExpr 0xa07ea38 <col:29> 'collate<_CharT> *' this))))


        virtual int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const;
        virtual string_type do_transform(const _CharT *__lo, const _CharT *__hi) const;
        virtual long do_hash(const _CharT *__lo, const _CharT *__hi) const;
    };
    static locale::id id(CXXConstructExpr 0xa07ecd8 </usr/include/c++/4.6/bits/locale_classes.h:770:33> 'class locale::id':'class std::locale::id''void (void)')
;
    int _M_compare(const char *, const char *) const throw();
    size_t _M_transform(char *, const char *, size_t) const throw();
    int _M_compare(const wchar_t *, const wchar_t *) const throw();
    size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname : public collate<_CharT> {
        class collate_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        collate_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa084030 </usr/include/c++/4.6/bits/locale_classes.h:803:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa084018 <col:55> 'int' 0))
) : collate<_CharT>((DeclRefExpr 0xa0840d0 </usr/include/c++/4.6/bits/locale_classes.h:804:25> 'size_t':'unsigned int' lvalue ParmVar 0xa083e60 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa084520 </usr/include/c++/4.6/bits/locale_classes.h:805:7, line:812:7>
  (IfStmt 0xa084500 <line:806:2, line:811:4>
    <<<NULL>>>
    (BinaryOperator 0xa084330 <line:806:6, line:807:43> '_Bool' '&&'
      (BinaryOperator 0xa0841f0 <line:806:6, col:36> '_Bool' '!='
        (CallExpr 0xa084190 <col:6, col:31> 'int'
          (ImplicitCastExpr 0xa084180 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa08412c <col:6> 'int (const char *, const char *)' lvalue Function 0xa07b980 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa0841b8 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa084144 <col:23> 'const char *' lvalue ParmVar 0xa083e20 '__s' 'const char *'))
          (ImplicitCastExpr 0xa0841c8 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa08415c <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0xa0841d8 <col:36> 'int' 0))
      (BinaryOperator 0xa084318 <line:807:9, col:43> '_Bool' '!='
        (CallExpr 0xa0842b8 <col:9, col:38> 'int'
          (ImplicitCastExpr 0xa0842a8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa084208 <col:9> 'int (const char *, const char *)' lvalue Function 0xa07b980 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa0842e0 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa084220 <col:26> 'const char *' lvalue ParmVar 0xa083e20 '__s' 'const char *'))
          (ImplicitCastExpr 0xa0842f0 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa084280 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0xa084300 <col:43> 'int' 0)))
    (CompoundStmt 0xa0844e8 <line:808:4, line:811:4>
      (CallExpr 0xa0843f8 <line:809:6, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa084378 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa084368 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0xa0843c0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa0843b0 <col:32> 'collate_byname<_CharT> *' this)))
      (CallExpr 0xa0844c0 <line:810:6, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa084428 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa084418 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0xa084470 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa084460 <col:31> 'collate_byname<_CharT> *' this))
        (DeclRefExpr 0xa0844a4 <col:58> 'const char *' lvalue ParmVar 0xa083e20 '__s' 'const char *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~collate_byname<_CharT>() (CompoundStmt 0xa084538 </usr/include/c++/4.6/bits/locale_classes.h:816:25, col:27>)


    };
}
extern int __builtin_strcmp(const char *, const char *);
namespace std {
    template <typename _Facet> class locale::locale(const std::locale &__other, _Facet *__f) (CompoundStmt 0xa084dd8 </usr/include/c++/4.6/bits/locale_classes.tcc:45:5, line:57:5>
  (BinaryOperator 0xa0849f0 <line:46:7, col:46> 'class std::locale::_Impl *' lvalue '='
    (MemberExpr 0xa0848c8 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa06dee0
      (CXXThisExpr 0xa0848b8 <col:7> 'class std::locale *' this))
    (CXXNewExpr 0xa0849b0 <col:17, col:46> 'class std::locale::_Impl *'
      (ImplicitCastExpr 0xa084968 <col:27, col:36> 'const class std::locale::_Impl' lvalue <NoOp>
        (UnaryOperator 0xa084930 <col:27, col:36> 'class std::locale::_Impl' lvalue prefix '*'
          (ImplicitCastExpr 0xa084920 <col:28, col:36> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa084900 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa06dee0
              (DeclRefExpr 0xa0848e8 <col:28> 'const class std::locale' lvalue ParmVar 0xa0846b0 '__other' 'const class std::locale &')))))
      (ImplicitCastExpr 0xa084978 <col:45> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa084948 <col:45> 'int' 1))))
  (IfStmt 0xa084b38 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:49:49>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa084a08 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa084b20 </usr/include/c++/4.6/bits/locale_classes.tcc:49:2, col:49>
      (CallExpr 0xa084af8 <col:4, col:46> '<dependent type>'
        (MemberExpr 0xa084a54 <col:4, col:13> '<bound member function type>' ->_M_install_facet 0xa07b030
          (ImplicitCastExpr 0xa084a48 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa084a28 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa06dee0
              (CXXThisExpr 0xa084a18 <col:4> 'class std::locale *' this))))
        (UnaryOperator 0xa084ac8 <col:30, col:39> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0xa084aa0 <col:31, col:39> '<dependent type>' lvalue))
        (DeclRefExpr 0xa084adc <col:43> '_Facet *' lvalue ParmVar 0xa084720 '__f' '_Facet *')))
    <<<NULL>>>)
  (IfStmt 0xa084c10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:54:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa084b58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa084bf8 </usr/include/c++/4.6/bits/locale_classes.tcc:51:2, line:54:2>
      (CXXMemberCallExpr 0xa084bc8 <line:52:4, col:33> 'void'
        (MemberExpr 0xa084ba4 <col:4, col:13> '<bound member function type>' ->_M_remove_reference 0xa07a370
          (ImplicitCastExpr 0xa084b98 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa084b78 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa06dee0
              (CXXThisExpr 0xa084b68 <col:4> 'class std::locale *' this)))))
      (NullStmt 0xa084be8 <line:53:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0xa084ce0 <line:55:7, col:36> 'void'
    (ImplicitCastExpr 0xa084cd0 <col:17, col:36> 'void *' <NoOp>
      (ArraySubscriptExpr 0xa084cb8 <col:17, col:36> 'char *' lvalue
        (ImplicitCastExpr 0xa084ca8 <col:17, col:26> 'char **' <LValueToRValue>
          (MemberExpr 0xa084c6c <col:17, col:26> 'char **' lvalue ->_M_names 0xa079e10
            (ImplicitCastExpr 0xa084c60 <col:17> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa084c40 <col:17> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa06dee0
                (CXXThisExpr 0xa084c30 <col:17> 'class std::locale *' this)))))
        (IntegerLiteral 0xa084c90 <col:35> 'int' 0))))
  (BinaryOperator 0xa084dc0 <line:56:7, col:30> 'char *' lvalue '='
    (ArraySubscriptExpr 0xa084d80 <col:7, col:26> 'char *' lvalue
      (ImplicitCastExpr 0xa084d70 <col:7, col:16> 'char **' <LValueToRValue>
        (MemberExpr 0xa084d34 <col:7, col:16> 'char **' lvalue ->_M_names 0xa079e10
          (ImplicitCastExpr 0xa084d28 <col:7> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa084d08 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa06dee0
              (CXXThisExpr 0xa084cf8 <col:7> 'class std::locale *' this)))))
      (IntegerLiteral 0xa084d58 <col:25> 'int' 0))
    (ImplicitCastExpr 0xa084db0 <col:30> 'char *' <NullToPointer>
      (IntegerLiteral 0xa084d98 <col:30> 'int' 0))))

;
    template <typename _Facet> std::locale combine(const std::locale &__other) const (CompoundStmt 0xa085438 </usr/include/c++/4.6/bits/locale_classes.tcc:63:5, line:75:5>
  (DeclStmt 0xa085108 <line:64:7, col:44>
    0xa084fd0 "std::locale::_Impl *__tmp =
      (CXXNewExpr 0xa0850c8 <col:22, col:43> 'class std::locale::_Impl *'
        (ImplicitCastExpr 0xa085080 <col:32, col:33> 'const class std::locale::_Impl' lvalue <NoOp>
          (UnaryOperator 0xa085048 <col:32, col:33> 'class std::locale::_Impl' lvalue prefix '*'
            (ImplicitCastExpr 0xa085038 <col:33> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa085018 <col:33> 'class std::locale::_Impl *const' lvalue ->_M_impl 0xa06dee0
                (CXXThisExpr 0xa085008 <col:33> 'const class std::locale *' this)))))
        (ImplicitCastExpr 0xa085090 <col:42> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa085060 <col:42> 'int' 1)))")
  (IfStmt 0xa085250 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:68:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa085118 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa085238 </usr/include/c++/4.6/bits/locale_classes.tcc:66:2, line:68:2>
      (CallExpr 0xa085210 <line:67:4, col:56> '<dependent type>'
        (MemberExpr 0xa08514c <col:4, col:11> '<bound member function type>' ->_M_replace_facet 0xa07aea0
          (ImplicitCastExpr 0xa085140 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0xa085128 <col:4> 'class std::locale::_Impl *' lvalue Var 0xa084fd0 '__tmp' 'class std::locale::_Impl *')))
        (MemberExpr 0xa085184 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa06dee0
          (DeclRefExpr 0xa08516c <col:28> 'const class std::locale' lvalue ParmVar 0xa084e80 '__other' 'const class std::locale &'))
        (UnaryOperator 0xa0851f8 <col:45, col:54> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0xa0851d0 <col:46, col:54> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (IfStmt 0xa085310 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:73:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa085270 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa0852f8 </usr/include/c++/4.6/bits/locale_classes.tcc:70:2, line:73:2>
      (CXXMemberCallExpr 0xa0852c8 <line:71:4, col:31> 'void'
        (MemberExpr 0xa0852a4 <col:4, col:11> '<bound member function type>' ->_M_remove_reference 0xa07a370
          (ImplicitCastExpr 0xa085298 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0xa085280 <col:4> 'class std::locale::_Impl *' lvalue Var 0xa084fd0 '__tmp' 'class std::locale::_Impl *'))))
      (NullStmt 0xa0852e8 <line:72:27>))
    <<<NULL>>>)
  (ReturnStmt 0xa085428 <line:74:7, col:26>
    (ExprWithCleanups 0xa085408 <col:14, col:26> 'class std::locale'
      (CXXTemporary 0xa085390)
      (CXXConstructExpr 0xa0853e0 <col:14, col:26> 'class std::locale''void (const class std::locale &) throw()' elidable
        (MaterializeTemporaryExpr 0xa0853d0 <col:14, col:26> 'const class std::locale' lvalue
          (ImplicitCastExpr 0xa0853c0 <col:14, col:26> 'const class std::locale' <NoOp>
            (CXXFunctionalCastExpr 0xa0853a8 <col:14, col:26> 'class std::locale' functional cast to class std::locale <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa085398 <col:14, col:21> 'class std::locale' (CXXTemporary 0xa085390)
                (CXXConstructExpr 0xa085360 <col:14, col:21> 'class std::locale''void (class std::locale::_Impl *) throw()'
                  (ImplicitCastExpr 0xa085350 <col:21> 'class std::locale::_Impl *' <LValueToRValue>
                    (DeclRefExpr 0xa085338 <col:21> 'class std::locale::_Impl *' lvalue Var 0xa084fd0 '__tmp' 'class std::locale::_Impl *')))))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> bool operator()(const basic_string<_CharT, _Traits, _Alloc> &__s1, const basic_string<_CharT, _Traits, _Alloc> &__s2) const (CompoundStmt 0xa0896b0 </usr/include/c++/4.6/bits/locale_classes.tcc:82:5, line:87:5>
  (DeclStmt 0xa089090 <line:83:7, col:50>
    0xa089060 "typedef std::collate<_CharT> __collate_type")
  (DeclStmt 0xa0891f0 <line:84:7, col:73>
    0xa089100 "const __collate_type &__collate =
      (CallExpr 0xa0891d0 <col:41, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa089140 <col:41, col:65> '<dependent type>' lvalue (ADL) = '1' 0xa07cdf0)
        (UnaryOperator 0xa0891b8 <col:67, col:68> 'const class std::locale' lvalue prefix '*'
          (CXXThisExpr 0xa0891a8 <col:68> 'const class std::locale *' this)))")
  (ReturnStmt 0xa0896a0 <line:85:7, line:86:50>
    (ParenExpr 0xa089688 <line:85:14, line:86:50> '<dependent type>'
      (CXXOperatorCallExpr 0xa089660 <line:85:15, line:86:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa089618 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (CallExpr 0xa0895d0 <line:85:15, line:86:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa089218 <line:85:15, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0xa089200 <col:15> 'const __collate_type':'const collate<_CharT>' lvalue Var 0xa089100 '__collate' 'const __collate_type &'))
          (CallExpr 0xa0892a0 <col:33, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa089268 <col:33, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa08924c <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0856f0 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0xa0893e8 <col:46, col:72> '<dependent type>'
            (UnresolvedLookupExpr 0xa0893a0 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
            (CallExpr 0xa089310 <col:46, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0892d8 <col:46, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0xa0892bc <col:46> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0856f0 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa089380 <col:60, col:72> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa089348 <col:60, col:65> '<dependent type>' lvalue
                (DeclRefExpr 0xa08932c <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0856f0 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
          (CallExpr 0xa089460 <line:86:5, col:15> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa089428 <col:5, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa08940c <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0858a0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0xa0895a8 <col:18, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0xa089560 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
            (CallExpr 0xa0894d0 <col:18, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa089498 <col:18, col:23> '<dependent type>' lvalue
                (DeclRefExpr 0xa08947c <col:18> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0858a0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa089540 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa089508 <col:32, col:37> '<dependent type>' lvalue
                (DeclRefExpr 0xa0894ec <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa0858a0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
        (IntegerLiteral 0xa089600 <col:49> 'int' 0)))))

;
    template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw() (CompoundStmt 0xa089bf0 </usr/include/c++/4.6/bits/locale_classes.tcc:93:5, line:102:5>
  (DeclStmt 0xa089910 <line:94:7, col:44>
    0xa089830 "const size_t __i =
      (CallExpr 0xa0898f0 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0898b8 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0xa089890 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0xa089a40 <line:95:7, col:64>
    0xa089990 "const locale::facet **__facets =
      (ImplicitCastExpr 0xa089a30 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa089a0c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0xa079d50
          (ImplicitCastExpr 0xa089a00 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa0899dc <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa06dee0
              (DeclRefExpr 0xa0899c4 <col:40> 'const class std::locale' lvalue ParmVar 0xa089740 '__loc' 'const class std::locale &')))))")
  (ReturnStmt 0xa089be0 <line:96:7, line:98:53>
    (ParenExpr 0xa089bc8 <line:96:14, line:98:53> '<dependent type>'
      (BinaryOperator 0xa089bb0 <line:96:15, line:98:52> '<dependent type>' '&&'
        (BinaryOperator 0xa089af0 <line:96:15, col:36> '_Bool' '<'
          (ImplicitCastExpr 0xa089ad0 <col:15> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa089a50 <col:15> 'const size_t':'const unsigned int' lvalue Var 0xa089830 '__i' 'const size_t':'const unsigned int'))
          (ImplicitCastExpr 0xa089ae0 <col:21, col:36> 'size_t':'unsigned int' <LValueToRValue>
            (MemberExpr 0xa089aac <col:21, col:36> 'size_t':'unsigned int' lvalue ->_M_facets_size 0xa079d90
              (ImplicitCastExpr 0xa089aa0 <col:21, col:27> 'class std::locale::_Impl *' <LValueToRValue>
                (MemberExpr 0xa089a80 <col:21, col:27> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa06dee0
                  (DeclRefExpr 0xa089a68 <col:21> 'const class std::locale' lvalue ParmVar 0xa089740 '__loc' 'const class std::locale &'))))))
        (CXXDynamicCastExpr 0xa089b98 <line:98:11, col:52> 'const _Facet *' dynamic_cast<const _Facet *> <Dependent>
          (ArraySubscriptExpr 0xa089b58 <col:39, col:51> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa089b38 <col:39> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa089b08 <col:39> 'const class locale::facet **' lvalue Var 0xa089990 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa089b48 <col:48> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa089b20 <col:48> 'const size_t':'const unsigned int' lvalue Var 0xa089830 '__i' 'const size_t':'const unsigned int'))))))))

;
    template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc) (CompoundStmt 0xa08a288 </usr/include/c++/4.6/bits/locale_classes.tcc:107:5, line:117:5>
  (DeclStmt 0xa089ea0 <line:108:7, col:44>
    0xa089dc0 "const size_t __i =
      (CallExpr 0xa089e80 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa089e48 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0xa089e20 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0xa089fa0 <line:109:7, col:64>
    0xa089ef0 "const locale::facet **__facets =
      (ImplicitCastExpr 0xa089f90 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa089f6c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0xa079d50
          (ImplicitCastExpr 0xa089f60 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa089f3c <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa06dee0
              (DeclRefExpr 0xa089f24 <col:40> 'const class std::locale' lvalue ParmVar 0xa089c80 '__loc' 'const class std::locale &')))))")
  (IfStmt 0xa08a1a0 <line:110:7, line:111:26>
    <<<NULL>>>
    (BinaryOperator 0xa08a108 <line:110:11, col:64> '_Bool' '||'
      (BinaryOperator 0xa08a050 <col:11, col:33> '_Bool' '>='
        (ImplicitCastExpr 0xa08a030 <col:11> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa089fb0 <col:11> 'const size_t':'const unsigned int' lvalue Var 0xa089dc0 '__i' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0xa08a040 <col:18, col:33> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0xa08a00c <col:18, col:33> 'size_t':'unsigned int' lvalue ->_M_facets_size 0xa079d90
            (ImplicitCastExpr 0xa08a000 <col:18, col:24> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa089fe0 <col:18, col:24> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa06dee0
                (DeclRefExpr 0xa089fc8 <col:18> 'const class std::locale' lvalue ParmVar 0xa089c80 '__loc' 'const class std::locale &'))))))
      (UnaryOperator 0xa08a0f0 <col:51, col:64> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa08a0e0 <col:52, col:64> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0xa08a0d0 <col:52, col:64> 'const class locale::facet *' <LValueToRValue>
            (ArraySubscriptExpr 0xa08a0b8 <col:52, col:64> 'const class locale::facet *' lvalue
              (ImplicitCastExpr 0xa08a098 <col:52> 'const class locale::facet **' <LValueToRValue>
                (DeclRefExpr 0xa08a068 <col:52> 'const class locale::facet **' lvalue Var 0xa089ef0 '__facets' 'const class locale::facet **'))
              (ImplicitCastExpr 0xa08a0a8 <col:61> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa08a080 <col:61> 'const size_t':'const unsigned int' lvalue Var 0xa089dc0 '__i' 'const size_t':'const unsigned int')))))))
    (CallExpr 0xa08a180 <line:111:9, col:26> 'void'
      (ImplicitCastExpr 0xa08a170 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa08a154 <col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x9e22a60 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa08a278 <line:113:7, col:56>
    (CXXDynamicCastExpr 0xa08a260 <col:14, col:56> 'const _Facet' lvalue dynamic_cast<const _Facet &> <Dependent>
      (UnaryOperator 0xa08a238 <col:42, col:55> 'const class locale::facet':'const class std::locale::facet' lvalue prefix '*'
        (ImplicitCastExpr 0xa08a228 <col:43, col:55> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0xa08a210 <col:43, col:55> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa08a1f0 <col:43> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa08a1bc <col:43> 'const class locale::facet **' lvalue Var 0xa089ef0 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa08a200 <col:52> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa08a1d4 <col:52> 'const size_t':'const unsigned int' lvalue Var 0xa089dc0 '__i' 'const size_t':'const unsigned int'))))))))

;
    int _M_compare(const _CharT *, const _CharT *) const throw() (CompoundStmt 0xa08a610 </usr/include/c++/4.6/bits/locale_classes.tcc:124:5, col:17>
  (ReturnStmt 0xa08a600 <col:7, col:14>
    (IntegerLiteral 0xa08a5e8 <col:14> 'int' 0)))


    size_t _M_transform(_CharT *, const _CharT *, size_t) const throw() (CompoundStmt 0xa08aa18 </usr/include/c++/4.6/bits/locale_classes.tcc:130:5, col:17>
  (ReturnStmt 0xa08aa08 <col:7, col:14>
    (ImplicitCastExpr 0xa08a9f8 <col:14> 'size_t':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa08a9e0 <col:14> 'int' 0))))


    int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0xa08bd30 </usr/include/c++/4.6/bits/locale_classes.tcc:137:5, line:169:5>
  (DeclStmt 0xa08aeb8 <line:140:7, col:44>
    0xa08ae30 "const string_type __one =
      (ParenListExpr 0xa08ae98 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa08ae64 <col:31> 'const _CharT *' lvalue ParmVar 0xa08ac00 '__lo1' 'const _CharT *')
        (DeclRefExpr 0xa08ae7c <col:38> 'const _CharT *' lvalue ParmVar 0xa08ac50 '__hi1' 'const _CharT *'))")
  (DeclStmt 0xa08af58 <line:141:7, col:44>
    0xa08aed0 "const string_type __two =
      (ParenListExpr 0xa08af38 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa08af04 <col:31> 'const _CharT *' lvalue ParmVar 0xa08aca0 '__lo2' 'const _CharT *')
        (DeclRefExpr 0xa08af1c <col:38> 'const _CharT *' lvalue ParmVar 0xa08acf0 '__hi2' 'const _CharT *'))")
  (DeclStmt 0xa08b028 <line:143:7, col:40>
    0xa08af80 "const _CharT *__p =
      (CallExpr 0xa08b008 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa08afd0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa08afb4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa08ae30 '__one' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa08b1d8 <line:144:7, col:59>
    0xa08b050 "const _CharT *__pend =
      (CXXOperatorCallExpr 0xa08b1b0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa08b168 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
        (CallExpr 0xa08b0d8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa08b0a0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa08b084 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa08ae30 '__one' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa08b148 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa08b110 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa08b0f4 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa08ae30 '__one' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0xa08b2a8 <line:145:7, col:40>
    0xa08b200 "const _CharT *__q =
      (CallExpr 0xa08b288 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa08b250 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa08b234 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa08aed0 '__two' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa08b458 <line:146:7, col:59>
    0xa08b2d0 "const _CharT *__qend =
      (CXXOperatorCallExpr 0xa08b430 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa08b3e8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
        (CallExpr 0xa08b358 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa08b320 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa08b304 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa08aed0 '__two' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa08b3c8 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa08b390 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa08b374 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa08aed0 '__two' 'const string_type':'const basic_string<_CharT>'))))")
  (ForStmt 0xa08bd08 <line:151:7, line:168:2>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    (CompoundStmt 0xa08bcd8 <line:152:2, line:168:2>
      (DeclStmt 0xa08b540 <line:153:4, col:42>
        0xa08b480 "const int __res =
          (CallExpr 0xa08b518 <col:22, col:41> '<dependent type>'
            (MemberExpr 0xa08b4c8 <col:22> '<bound member function type>' ->_M_compare 0xa08a550
              (CXXThisExpr 0xa08b4b8 <col:22> 'const collate<_CharT> *' this))
            (DeclRefExpr 0xa08b4e8 <col:33> 'const _CharT *' lvalue Var 0xa08af80 '__p' 'const _CharT *')
            (DeclRefExpr 0xa08b500 <col:38> 'const _CharT *' lvalue Var 0xa08b200 '__q' 'const _CharT *'))")
      (IfStmt 0xa08b5c0 <line:154:4, line:155:13>
        <<<NULL>>>
        (ImplicitCastExpr 0xa08b578 <line:154:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa08b568 <col:8> 'int' <LValueToRValue>
            (DeclRefExpr 0xa08b550 <col:8> 'const int' lvalue Var 0xa08b480 '__res' 'const int')))
        (ReturnStmt 0xa08b5b0 <line:155:6, col:13>
          (ImplicitCastExpr 0xa08b5a0 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0xa08b584 <col:13> 'const int' lvalue Var 0xa08b480 '__res' 'const int')))
        <<<NULL>>>)
      (CompoundAssignOperator 0xa08b710 <line:157:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa08b5dc <col:4> 'const _CharT *' lvalue Var 0xa08af80 '__p' 'const _CharT *')
        (CallExpr 0xa08b6f0 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa08b6a0 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0xa08b6d4 <col:39> 'const _CharT *' lvalue Var 0xa08af80 '__p' 'const _CharT *')))
      (CompoundAssignOperator 0xa08b860 <line:158:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa08b730 <col:4> 'const _CharT *' lvalue Var 0xa08b200 '__q' 'const _CharT *')
        (CallExpr 0xa08b840 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa08b7f0 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0xa08b824 <col:39> 'const _CharT *' lvalue Var 0xa08b200 '__q' 'const _CharT *')))
      (IfStmt 0xa08bc28 <line:159:4, line:164:13>
        <<<NULL>>>
        (BinaryOperator 0xa08b9e0 <line:159:8, col:32> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa08b908 <col:8, col:15> '<dependent type>'
            (UnresolvedLookupExpr 0xa08b8b0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
            (DeclRefExpr 0xa08b880 <col:8> 'const _CharT *' lvalue Var 0xa08af80 '__p' 'const _CharT *')
            (DeclRefExpr 0xa08b898 <col:15> 'const _CharT *' lvalue Var 0xa08b050 '__pend' 'const _CharT *'))
          (CXXOperatorCallExpr 0xa08b9b8 <col:25, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa08b960 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
            (DeclRefExpr 0xa08b92c <col:25> 'const _CharT *' lvalue Var 0xa08b200 '__q' 'const _CharT *')
            (DeclRefExpr 0xa08b944 <col:32> 'const _CharT *' lvalue Var 0xa08b2d0 '__qend' 'const _CharT *')))
        (ReturnStmt 0xa08ba10 <line:160:6, col:13>
          (IntegerLiteral 0xa08b9f8 <col:13> 'int' 0))
        (IfStmt 0xa08bc08 <line:161:9, line:164:13>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa08baa8 <line:161:13, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0xa08ba50 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
            (DeclRefExpr 0xa08ba20 <col:13> 'const _CharT *' lvalue Var 0xa08af80 '__p' 'const _CharT *')
            (DeclRefExpr 0xa08ba38 <col:20> 'const _CharT *' lvalue Var 0xa08b050 '__pend' 'const _CharT *'))
          (ReturnStmt 0xa08bb00 <line:162:6, col:14>
            (UnaryOperator 0xa08bae8 <col:13, col:14> 'int' prefix '-'
              (IntegerLiteral 0xa08bad0 <col:14> 'int' 1)))
          (IfStmt 0xa08bbe8 <line:163:9, line:164:13>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa08bb98 <line:163:13, col:20> '<dependent type>'
              (UnresolvedLookupExpr 0xa08bb40 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
              (DeclRefExpr 0xa08bb10 <col:13> 'const _CharT *' lvalue Var 0xa08b200 '__q' 'const _CharT *')
              (DeclRefExpr 0xa08bb28 <col:20> 'const _CharT *' lvalue Var 0xa08b2d0 '__qend' 'const _CharT *'))
            (ReturnStmt 0xa08bbd8 <line:164:6, col:13>
              (IntegerLiteral 0xa08bbc0 <col:13> 'int' 1))
            <<<NULL>>>)))
      (UnaryOperator 0xa08bc78 <line:166:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0xa08bc44 <col:4> 'const _CharT *' lvalue Var 0xa08af80 '__p' 'const _CharT *'))
      (UnaryOperator 0xa08bcc0 <line:167:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0xa08bc8c <col:4> 'const _CharT *' lvalue Var 0xa08b200 '__q' 'const _CharT *')))))


    typename collate<_CharT>::string_type do_transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa08df78 </usr/include/c++/4.6/bits/locale_classes.tcc:175:5, line:225:5>
  (DeclStmt 0xa08c2b8 <line:176:7, col:24>
    0xa08c280 "string_type __ret")
  (DeclStmt 0xa08c358 <line:179:7, col:42>
    0xa08c2d0 "const string_type __str =
      (ParenListExpr 0xa08c338 <col:30, col:41> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa08c304 <col:31> 'const _CharT *' lvalue ParmVar 0xa08c030 '__lo' 'const _CharT *')
        (DeclRefExpr 0xa08c31c <col:37> 'const _CharT *' lvalue ParmVar 0xa08c080 '__hi' 'const _CharT *'))")
  (DeclStmt 0xa08c428 <line:181:7, col:40>
    0xa08c380 "const _CharT *__p =
      (CallExpr 0xa08c408 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa08c3d0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa08c3b4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa08c2d0 '__str' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa08c5d8 <line:182:7, col:59>
    0xa08c450 "const _CharT *__pend =
      (CXXOperatorCallExpr 0xa08c5b0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa08c568 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
        (CallExpr 0xa08c4d8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa08c4a0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa08c484 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa08c2d0 '__str' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa08c548 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa08c510 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa08c4f4 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa08c2d0 '__str' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0xa08c700 <line:184:7, col:39>
    0xa08c5f0 "size_t __len =
      (BinaryOperator 0xa08c6e8 <col:22, col:38> '<dependent type>' '*'
        (ParenExpr 0xa08c6b8 <col:22, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0xa08c690 <col:23, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa08c658 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0xa08c624 <col:23> 'const _CharT *' lvalue ParmVar 0xa08c080 '__hi' 'const _CharT *')
            (DeclRefExpr 0xa08c63c <col:30> 'const _CharT *' lvalue ParmVar 0xa08c030 '__lo' 'const _CharT *')))
        (IntegerLiteral 0xa08c6d0 <col:38> 'int' 2))")
  (DeclStmt 0xa08c7d8 <line:186:7, col:38>
    0xa08c740 "_CharT *__c =
      (CXXNewExpr 0xa08c798 <col:21, col:25> '_CharT *'
        (DeclRefExpr 0xa08c774 <col:32> 'size_t':'unsigned int' lvalue Var 0xa08c5f0 '__len' 'size_t':'unsigned int'))")
  (IfStmt 0xa08de78 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:215:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa08c7e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa08de60 </usr/include/c++/4.6/bits/locale_classes.tcc:189:2, line:215:2>
      (ForStmt 0xa08de38 <line:193:4, line:214:6>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        (CompoundStmt 0xa08cfc0 <line:194:6, line:214:6>
          (DeclStmt 0xa08c8d8 <line:196:8, col:52>
            0xa08c800 "size_t __res =
              (CallExpr 0xa08c8b0 <col:23, col:51> '<dependent type>'
                (MemberExpr 0xa08c848 <col:23> '<bound member function type>' ->_M_transform 0xa08a940
                  (CXXThisExpr 0xa08c838 <col:23> 'const collate<_CharT> *' this))
                (DeclRefExpr 0xa08c868 <col:36> '_CharT *' lvalue Var 0xa08c740 '__c' '_CharT *')
                (DeclRefExpr 0xa08c880 <col:41> 'const _CharT *' lvalue Var 0xa08c380 '__p' 'const _CharT *')
                (DeclRefExpr 0xa08c898 <col:46> 'size_t':'unsigned int' lvalue Var 0xa08c5f0 '__len' 'size_t':'unsigned int'))")
          (IfStmt 0xa08cbf8 <line:199:8, line:205:3>
            <<<NULL>>>
            (BinaryOperator 0xa08c938 <line:199:12, col:21> '_Bool' '>='
              (ImplicitCastExpr 0xa08c918 <col:12> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa08c8e8 <col:12> 'size_t':'unsigned int' lvalue Var 0xa08c800 '__res' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa08c928 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa08c900 <col:21> 'size_t':'unsigned int' lvalue Var 0xa08c5f0 '__len' 'size_t':'unsigned int')))
            (CompoundStmt 0xa08cbd8 <line:200:3, line:205:3>
              (BinaryOperator 0xa08c9d0 <line:201:5, col:21> 'size_t':'unsigned int' lvalue '='
                (DeclRefExpr 0xa08c950 <col:5> 'size_t':'unsigned int' lvalue Var 0xa08c5f0 '__len' 'size_t':'unsigned int')
                (BinaryOperator 0xa08c9b8 <col:13, col:21> 'unsigned int' '+'
                  (ImplicitCastExpr 0xa08c998 <col:13> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa08c968 <col:13> 'size_t':'unsigned int' lvalue Var 0xa08c800 '__res' 'size_t':'unsigned int'))
                  (ImplicitCastExpr 0xa08c9a8 <col:21> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa08c980 <col:21> 'int' 1))))
              (BinaryOperator 0xa08ca60 <line:202:5, col:26> '<dependent type>' ','
                (CXXDeleteExpr 0xa08ca00 <col:5, col:15> 'void'
                  (DeclRefExpr 0xa08c9e8 <col:15> '_CharT *' lvalue Var 0xa08c740 '__c' '_CharT *'))
                (BinaryOperator 0xa08ca48 <col:20, col:26> '<dependent type>' '='
                  (DeclRefExpr 0xa08ca18 <col:20> '_CharT *' lvalue Var 0xa08c740 '__c' '_CharT *')
                  (IntegerLiteral 0xa08ca30 <col:26> 'int' 0)))
              (BinaryOperator 0xa08caf0 <line:203:5, col:15> '<dependent type>' '='
                (DeclRefExpr 0xa08ca78 <col:5> '_CharT *' lvalue Var 0xa08c740 '__c' '_CharT *')
                (CXXNewExpr 0xa08cab0 <col:11, col:15> '_CharT *'
                  (DeclRefExpr 0xa08ca90 <col:22> 'size_t':'unsigned int' lvalue Var 0xa08c5f0 '__len' 'size_t':'unsigned int')))
              (BinaryOperator 0xa08cbc0 <line:204:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa08cb08 <col:5> 'size_t':'unsigned int' lvalue Var 0xa08c800 '__res' 'size_t':'unsigned int')
                (CallExpr 0xa08cb98 <col:13, col:41> '<dependent type>'
                  (MemberExpr 0xa08cb30 <col:13> '<bound member function type>' ->_M_transform 0xa08a940
                    (CXXThisExpr 0xa08cb20 <col:13> 'const collate<_CharT> *' this))
                  (DeclRefExpr 0xa08cb50 <col:26> '_CharT *' lvalue Var 0xa08c740 '__c' '_CharT *')
                  (DeclRefExpr 0xa08cb68 <col:31> 'const _CharT *' lvalue Var 0xa08c380 '__p' 'const _CharT *')
                  (DeclRefExpr 0xa08cb80 <col:36> 'size_t':'unsigned int' lvalue Var 0xa08c5f0 '__len' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (CallExpr 0xa08cc98 <line:207:8, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa08cc30 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa08cc14 <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0xa08c280 '__ret' 'string_type':'basic_string<_CharT>'))
            (DeclRefExpr 0xa08cc64 <col:21> '_CharT *' lvalue Var 0xa08c740 '__c' '_CharT *')
            (DeclRefExpr 0xa08cc7c <col:26> 'size_t':'unsigned int' lvalue Var 0xa08c800 '__res' 'size_t':'unsigned int'))
          (CompoundAssignOperator 0xa08cdf0 <line:208:8, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa08ccbc <col:8> 'const _CharT *' lvalue Var 0xa08c380 '__p' 'const _CharT *')
            (CallExpr 0xa08cdd0 <col:15, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa08cd80 <col:15, col:36> '<dependent type>' lvalue)
              (DeclRefExpr 0xa08cdb4 <col:43> 'const _CharT *' lvalue Var 0xa08c380 '__p' 'const _CharT *')))
          (IfStmt 0xa08cec8 <line:209:8, line:210:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa08ce98 <line:209:12, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0xa08ce40 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
              (DeclRefExpr 0xa08ce10 <col:12> 'const _CharT *' lvalue Var 0xa08c380 '__p' 'const _CharT *')
              (DeclRefExpr 0xa08ce28 <col:19> 'const _CharT *' lvalue Var 0xa08c450 '__pend' 'const _CharT *'))
            (BreakStmt 0xa08cec0 <line:210:3>)
            <<<NULL>>>)
          (UnaryOperator 0xa08cf18 <line:212:8, col:11> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa08cee4 <col:8> 'const _CharT *' lvalue Var 0xa08c380 '__p' 'const _CharT *'))
          (CallExpr 0xa08cfa0 <line:213:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa08cf48 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa08cf2c <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0xa08c280 '__ret' 'string_type':'basic_string<_CharT>'))
            (CXXUnresolvedConstructExpr 0xa08cf88 <col:24, col:31> '_CharT')))))
    <<<NULL>>>)
  (IfStmt 0xa08df00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:220:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa08de98 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa08dee8 </usr/include/c++/4.6/bits/locale_classes.tcc:217:2, line:220:2>
      (CXXDeleteExpr 0xa08dec0 <line:218:4, col:14> 'void'
        (DeclRefExpr 0xa08dea8 <col:14> '_CharT *' lvalue Var 0xa08c740 '__c' '_CharT *'))
      (NullStmt 0xa08ded8 <line:219:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0xa08df38 <line:222:7, col:17> 'void'
    (DeclRefExpr 0xa08df1c <col:17> '_CharT *' lvalue Var 0xa08c740 '__c' '_CharT *'))
  (ReturnStmt 0xa08df68 <line:224:7, col:14>
    (DeclRefExpr 0xa08df50 <col:14> 'string_type':'basic_string<_CharT>' lvalue Var 0xa08c280 '__ret' 'string_type':'basic_string<_CharT>')))


    long do_hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa08f850 </usr/include/c++/4.6/bits/locale_classes.tcc:231:5, line:239:5>
  (DeclStmt 0xa08e360 <line:232:7, col:30>
    0xa08e300 "unsigned long __val =
      (ImplicitCastExpr 0xa08e350 <col:29> 'unsigned long' <IntegralCast>
        (IntegerLiteral 0xa08e338 <col:29> 'int' 0))")
  (ForStmt 0xa08f7b8 <line:233:7, line:237:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa08e3e8 <line:233:14, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa08e3a0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
      (DeclRefExpr 0xa08e370 <col:14> 'const _CharT *' lvalue ParmVar 0xa08e180 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa08e388 <col:21> 'const _CharT *' lvalue ParmVar 0xa08e1d0 '__hi' 'const _CharT *'))
    (UnaryOperator 0xa08e428 <col:27, col:29> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa08e40c <col:29> 'const _CharT *' lvalue ParmVar 0xa08e180 '__lo' 'const _CharT *'))
    (BinaryOperator 0xa08f7a0 <line:234:2, line:237:19> '<dependent type>' '='
      (DeclRefExpr 0xa08e43c <line:234:2> 'unsigned long' lvalue Var 0xa08e300 '__val' 'unsigned long')
      (CXXOperatorCallExpr 0xa08f778 <line:235:4, line:237:19> '<dependent type>'
        (UnresolvedLookupExpr 0xa08f730 <line:235:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
        (UnaryOperator 0xa08e470 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa08e454 <col:5> 'const _CharT *' lvalue ParmVar 0xa08e180 '__lo' 'const _CharT *'))
        (ParenExpr 0xa08f718 <col:12, line:237:19> 'unsigned long'
          (BinaryOperator 0xa08f700 <line:235:13, line:237:18> 'unsigned long' '|'
            (ParenExpr 0xa08e4e0 <line:235:13, col:24> 'unsigned long'
              (BinaryOperator 0xa08e4c8 <col:14, col:23> 'unsigned long' '<<'
                (ImplicitCastExpr 0xa08e4b8 <col:14> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0xa08e484 <col:14> 'unsigned long' lvalue Var 0xa08e300 '__val' 'unsigned long'))
                (IntegerLiteral 0xa08e4a0 <col:23> 'int' 7)))
            (ParenExpr 0xa08f6e8 <line:236:8, line:237:18> 'unsigned long'
              (BinaryOperator 0xa08f6d0 <line:236:9, line:237:17> 'unsigned long' '>>'
                (ImplicitCastExpr 0xa08f688 <line:236:9> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0xa08e4f4 <col:9> 'unsigned long' lvalue Var 0xa08e300 '__val' 'unsigned long'))
                (ParenExpr 0xa08f670 <col:18, line:237:17> 'int'
                  (BinaryOperator 0xa08f658 <line:236:19, line:237:16> 'int' '-'
                    (ImplicitCastExpr 0xa08f648 <line:236:19, line:237:5> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa08f60c <line:236:19, line:237:5> 'const int' lvalue Var 0xa08f400 '__digits' 'const int'))
                    (IntegerLiteral 0xa08f630 <col:16> 'int' 7))))))))))
  (ReturnStmt 0xa08f840 <line:238:7, col:37>
    (CXXStaticCastExpr 0xa08f828 <col:14, col:37> 'long' static_cast<long> <NoOp>
      (ImplicitCastExpr 0xa08f818 <col:32> 'long' <IntegralCast>
        (ImplicitCastExpr 0xa08f808 <col:32> 'unsigned long' <LValueToRValue>
          (DeclRefExpr 0xa08f7dc <col:32> 'unsigned long' lvalue Var 0xa08e300 '__val' 'unsigned long'))))))


    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    };
    class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    };
    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    };
    class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    };
}
namespace std {
    enum _Ios_Fmtflags {
        _S_boolalpha = (ImplicitCastExpr 0x9f238b8 </usr/include/c++/4.6/bits/ios_base.h:54:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa091820 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa0917f0 <col:23> 'long' 1)
    (IntegerLiteral 0xa091808 <col:29> 'int' 0)))
,
        _S_dec = (ImplicitCastExpr 0x9f238c8 </usr/include/c++/4.6/bits/ios_base.h:55:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa0918a8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa091878 <col:18> 'long' 1)
    (IntegerLiteral 0xa091890 <col:24> 'int' 1)))
,
        _S_fixed = (ImplicitCastExpr 0x9f238d8 </usr/include/c++/4.6/bits/ios_base.h:56:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa091928 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa0918f8 <col:20> 'long' 1)
    (IntegerLiteral 0xa091910 <col:26> 'int' 2)))
,
        _S_hex = (ImplicitCastExpr 0x9f238e8 </usr/include/c++/4.6/bits/ios_base.h:57:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa0919a8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa091978 <col:18> 'long' 1)
    (IntegerLiteral 0xa091990 <col:24> 'int' 3)))
,
        _S_internal = (ImplicitCastExpr 0x9f238f8 </usr/include/c++/4.6/bits/ios_base.h:58:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa091a28 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0xa0919f8 <col:22> 'long' 1)
    (IntegerLiteral 0xa091a10 <col:28> 'int' 4)))
,
        _S_left = (ImplicitCastExpr 0x9f23908 </usr/include/c++/4.6/bits/ios_base.h:59:19, col:25> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa091aa8 <col:19, col:25> 'long' '<<'
    (IntegerLiteral 0xa091a78 <col:19> 'long' 1)
    (IntegerLiteral 0xa091a90 <col:25> 'int' 5)))
,
        _S_oct = (ImplicitCastExpr 0x9f23918 </usr/include/c++/4.6/bits/ios_base.h:60:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa091b28 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa091af8 <col:18> 'long' 1)
    (IntegerLiteral 0xa091b10 <col:24> 'int' 6)))
,
        _S_right = (ImplicitCastExpr 0x9f23928 </usr/include/c++/4.6/bits/ios_base.h:61:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa091ba8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa091b78 <col:20> 'long' 1)
    (IntegerLiteral 0xa091b90 <col:26> 'int' 7)))
,
        _S_scientific = (ImplicitCastExpr 0x9f23938 </usr/include/c++/4.6/bits/ios_base.h:62:24, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa091c28 <col:24, col:30> 'long' '<<'
    (IntegerLiteral 0xa091bf8 <col:24> 'long' 1)
    (IntegerLiteral 0xa091c10 <col:30> 'int' 8)))
,
        _S_showbase = (ImplicitCastExpr 0x9f23948 </usr/include/c++/4.6/bits/ios_base.h:63:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa091ca8 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0xa091c78 <col:22> 'long' 1)
    (IntegerLiteral 0xa091c90 <col:28> 'int' 9)))
,
        _S_showpoint = (ImplicitCastExpr 0x9f23958 </usr/include/c++/4.6/bits/ios_base.h:64:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa091d28 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa091cf8 <col:23> 'long' 1)
    (IntegerLiteral 0xa091d10 <col:29> 'int' 10)))
,
        _S_showpos = (ImplicitCastExpr 0x9f23968 </usr/include/c++/4.6/bits/ios_base.h:65:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa091da8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa091d78 <col:21> 'long' 1)
    (IntegerLiteral 0xa091d90 <col:27> 'int' 11)))
,
        _S_skipws = (ImplicitCastExpr 0x9f23978 </usr/include/c++/4.6/bits/ios_base.h:66:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f23508 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa091df8 <col:20> 'long' 1)
    (IntegerLiteral 0x9f234f0 <col:26> 'int' 12)))
,
        _S_unitbuf = (ImplicitCastExpr 0x9f23988 </usr/include/c++/4.6/bits/ios_base.h:67:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f23588 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9f23558 <col:21> 'long' 1)
    (IntegerLiteral 0x9f23570 <col:27> 'int' 13)))
,
        _S_uppercase = (ImplicitCastExpr 0x9f23998 </usr/include/c++/4.6/bits/ios_base.h:68:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f23608 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x9f235d8 <col:23> 'long' 1)
    (IntegerLiteral 0x9f235f0 <col:29> 'int' 14)))
,
        _S_adjustfield = (ImplicitCastExpr 0x9f239a8 </usr/include/c++/4.6/bits/ios_base.h:69:25, col:46> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f236b8 <col:25, col:46> 'long' '|'
    (BinaryOperator 0x9f23688 <col:25, col:35> 'long' '|'
      (DeclRefExpr 0x9f23654 <col:25> 'long' EnumConstant 0xa091ac0 '_S_left' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x9f2366c <col:35> 'long' EnumConstant 0xa091bc0 '_S_right' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x9f236a0 <col:46> 'long' EnumConstant 0xa091a40 '_S_internal' 'enum std::_Ios_Fmtflags')))
,
        _S_basefield = (ImplicitCastExpr 0x9f239b8 </usr/include/c++/4.6/bits/ios_base.h:70:23, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f23768 <col:23, col:41> 'long' '|'
    (BinaryOperator 0x9f23738 <col:23, col:32> 'long' '|'
      (DeclRefExpr 0x9f23704 <col:23> 'long' EnumConstant 0xa0918c0 '_S_dec' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x9f2371c <col:32> 'long' EnumConstant 0xa091b40 '_S_oct' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x9f23750 <col:41> 'long' EnumConstant 0xa0919c0 '_S_hex' 'enum std::_Ios_Fmtflags')))
,
        _S_floatfield = (ImplicitCastExpr 0x9f239c8 </usr/include/c++/4.6/bits/ios_base.h:71:24, col:40> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f237e8 <col:24, col:40> 'long' '|'
    (DeclRefExpr 0x9f237b4 <col:24> 'long' EnumConstant 0xa091c40 '_S_scientific' 'enum std::_Ios_Fmtflags')
    (DeclRefExpr 0x9f237cc <col:40> 'long' EnumConstant 0xa091940 '_S_fixed' 'enum std::_Ios_Fmtflags')))
,
        _S_ios_fmtflags_end = (ImplicitCastExpr 0x9f239d8 </usr/include/c++/4.6/bits/ios_base.h:72:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f23868 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x9f23838 <col:29> 'long' 1)
    (IntegerLiteral 0x9f23850 <col:35> 'int' 16)))

    };
    inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9f23c20 </usr/include/c++/4.6/bits/ios_base.h:77:3, col:74>
  (ReturnStmt 0x9f23c10 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9f23bf8 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9f23be0 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x9f23b68 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f23b58 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f23b48 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f23b20 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f239f0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9f23bc8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f23bb8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f23ba8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f23b80 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f23a30 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9f23e50 </usr/include/c++/4.6/bits/ios_base.h:81:3, col:74>
  (ReturnStmt 0x9f23e40 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9f23e28 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9f23e10 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x9f23d98 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f23d88 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f23d78 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f23d50 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f23c40 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9f23df8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f23de8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f23dd8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f23db0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f23c80 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9f24080 </usr/include/c++/4.6/bits/ios_base.h:85:3, col:74>
  (ReturnStmt 0x9f24070 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9f24058 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x9f24040 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x9f23fc8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f23fb8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f23fa8 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f23f80 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f23e70 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x9f24028 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f24018 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f24008 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f23fe0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f23eb0 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a) (CompoundStmt 0x9f24230 </usr/include/c++/4.6/bits/ios_base.h:89:3, col:51>
  (ReturnStmt 0x9f24220 <col:5, col:48>
    (CXXFunctionalCastExpr 0x9f24208 <col:12, col:48> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (UnaryOperator 0x9f241f0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x9f241d8 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f241c8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f241b8 <col:44> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9f24190 <col:44> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f240a0 '__a' 'enum std::_Ios_Fmtflags'))))))))


    inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9f24930 </usr/include/c++/4.6/bits/ios_base.h:93:3, col:29>
  (ReturnStmt 0x9f24920 <col:5, col:24>
    (ImplicitCastExpr 0x9f24910 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9f248f8 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9f243c8 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f24280 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9f24478 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9f24468 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f24430 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ce0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9f24410 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f243e0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f24280 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9f24420 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f243f8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f242c0 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9f24b58 </usr/include/c++/4.6/bits/ios_base.h:97:3, col:29>
  (ReturnStmt 0x9f24b48 <col:5, col:24>
    (ImplicitCastExpr 0x9f24b38 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9f24b20 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9f24a68 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f24960 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9f24af8 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9f24ae8 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f24ad0 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9f24ab0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f24a80 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f24960 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9f24ac0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f24a98 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f249a0 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x9f24d78 </usr/include/c++/4.6/bits/ios_base.h:101:3, col:29>
  (ReturnStmt 0x9f24d68 <col:5, col:24>
    (ImplicitCastExpr 0x9f24d58 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x9f24d40 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x9f24c88 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f24b80 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x9f24d18 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9f24d08 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f24cf0 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23f10 'operator^' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9f24cd0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f24ca0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f24b80 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x9f24ce0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9f24cb8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9f24bc0 '__b' 'enum std::_Ios_Fmtflags')))))))


    enum _Ios_Openmode {
        _S_app = (ImplicitCastExpr 0x9f25178 </usr/include/c++/4.6/bits/ios_base.h:106:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f24e20 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9f24df0 <col:18> 'long' 1)
    (IntegerLiteral 0x9f24e08 <col:24> 'int' 0)))
,
        _S_ate = (ImplicitCastExpr 0x9f25188 </usr/include/c++/4.6/bits/ios_base.h:107:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f24ea8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9f24e78 <col:18> 'long' 1)
    (IntegerLiteral 0x9f24e90 <col:24> 'int' 1)))
,
        _S_bin = (ImplicitCastExpr 0x9f25198 </usr/include/c++/4.6/bits/ios_base.h:108:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f24f28 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9f24ef8 <col:18> 'long' 1)
    (IntegerLiteral 0x9f24f10 <col:24> 'int' 2)))
,
        _S_in = (ImplicitCastExpr 0x9f251a8 </usr/include/c++/4.6/bits/ios_base.h:109:17, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f24fa8 <col:17, col:23> 'long' '<<'
    (IntegerLiteral 0x9f24f78 <col:17> 'long' 1)
    (IntegerLiteral 0x9f24f90 <col:23> 'int' 3)))
,
        _S_out = (ImplicitCastExpr 0x9f251b8 </usr/include/c++/4.6/bits/ios_base.h:110:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f25028 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x9f24ff8 <col:18> 'long' 1)
    (IntegerLiteral 0x9f25010 <col:24> 'int' 4)))
,
        _S_trunc = (ImplicitCastExpr 0x9f251c8 </usr/include/c++/4.6/bits/ios_base.h:111:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f250a8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x9f25078 <col:20> 'long' 1)
    (IntegerLiteral 0x9f25090 <col:26> 'int' 5)))
,
        _S_ios_openmode_end = (ImplicitCastExpr 0x9f251d8 </usr/include/c++/4.6/bits/ios_base.h:112:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f25128 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x9f250f8 <col:29> 'long' 1)
    (IntegerLiteral 0x9f25110 <col:35> 'int' 16)))

    };
    inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9f25420 </usr/include/c++/4.6/bits/ios_base.h:117:3, col:74>
  (ReturnStmt 0x9f25410 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9f253f8 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9f253e0 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x9f25368 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f25358 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f25348 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9f25320 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f251f0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9f253c8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f253b8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f253a8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9f25380 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25230 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9f25650 </usr/include/c++/4.6/bits/ios_base.h:121:3, col:74>
  (ReturnStmt 0x9f25640 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9f25628 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9f25610 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x9f25598 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f25588 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f25578 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9f25550 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25440 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9f255f8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f255e8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f255d8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9f255b0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25480 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x9f25880 </usr/include/c++/4.6/bits/ios_base.h:125:3, col:74>
  (ReturnStmt 0x9f25870 <col:5, col:71>
    (CXXFunctionalCastExpr 0x9f25858 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x9f25840 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x9f257c8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f257b8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f257a8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9f25780 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25670 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x9f25828 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f25818 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f25808 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9f257e0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f256b0 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a) (CompoundStmt 0x9f25a30 </usr/include/c++/4.6/bits/ios_base.h:129:3, col:51>
  (ReturnStmt 0x9f25a20 <col:5, col:48>
    (CXXFunctionalCastExpr 0x9f25a08 <col:12, col:48> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (UnaryOperator 0x9f259f0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x9f259d8 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f259c8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f259b8 <col:44> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x9f25990 <col:44> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f258a0 '__a' 'enum std::_Ios_Openmode'))))))))


    inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9f25cf0 </usr/include/c++/4.6/bits/ios_base.h:133:3, col:29>
  (ReturnStmt 0x9f25ce0 <col:5, col:24>
    (ImplicitCastExpr 0x9f25cd0 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9f25cb8 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9f25bc8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25a80 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9f25c78 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9f25c68 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f25c30 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9f25c10 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9f25be0 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25a80 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9f25c20 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9f25bf8 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25ac0 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9f25f18 </usr/include/c++/4.6/bits/ios_base.h:137:3, col:29>
  (ReturnStmt 0x9f25f08 <col:5, col:24>
    (ImplicitCastExpr 0x9f25ef8 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9f25ee0 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9f25e28 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25d20 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9f25eb8 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9f25ea8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f25e90 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f252b0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9f25e70 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9f25e40 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25d20 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9f25e80 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9f25e58 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25d60 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x9f26138 </usr/include/c++/4.6/bits/ios_base.h:141:3, col:29>
  (ReturnStmt 0x9f26128 <col:5, col:24>
    (ImplicitCastExpr 0x9f26118 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x9f26100 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x9f26048 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25f40 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x9f260d8 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x9f260c8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f260b0 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f25710 'operator^' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9f26090 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9f26060 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25f40 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x9f260a0 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9f26078 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x9f25f80 '__b' 'enum std::_Ios_Openmode')))))))


    enum _Ios_Iostate {
        _S_goodbit = (ImplicitCastExpr 0x9f26408 </usr/include/c++/4.6/bits/ios_base.h:146:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f261b0 <col:22> 'int' 0))
,
        _S_badbit = (ImplicitCastExpr 0x9f26418 </usr/include/c++/4.6/bits/ios_base.h:147:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f26238 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9f26208 <col:21> 'long' 1)
    (IntegerLiteral 0x9f26220 <col:27> 'int' 0)))
,
        _S_eofbit = (ImplicitCastExpr 0x9f26428 </usr/include/c++/4.6/bits/ios_base.h:148:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f262b8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9f26288 <col:21> 'long' 1)
    (IntegerLiteral 0x9f262a0 <col:27> 'int' 1)))
,
        _S_failbit = (ImplicitCastExpr 0x9f26438 </usr/include/c++/4.6/bits/ios_base.h:149:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f26338 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x9f26308 <col:21> 'long' 1)
    (IntegerLiteral 0x9f26320 <col:27> 'int' 2)))
,
        _S_ios_iostate_end = (ImplicitCastExpr 0x9f26448 </usr/include/c++/4.6/bits/ios_base.h:150:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x9f263b8 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x9f26388 <col:28> 'long' 1)
    (IntegerLiteral 0x9f263a0 <col:34> 'int' 16)))

    };
    inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9f26690 </usr/include/c++/4.6/bits/ios_base.h:155:3, col:73>
  (ReturnStmt 0x9f26680 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9f26668 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9f26650 <col:25, col:69> 'int' '&'
        (CXXStaticCastExpr 0x9f265d8 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f265c8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f265b8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9f26590 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f26460 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9f26638 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f26628 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f26618 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9f265f0 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f264a0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9f268c0 </usr/include/c++/4.6/bits/ios_base.h:159:3, col:73>
  (ReturnStmt 0x9f268b0 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9f26898 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9f26880 <col:25, col:69> 'int' '|'
        (CXXStaticCastExpr 0x9f26808 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f267f8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f267e8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9f267c0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f266b0 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9f26868 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f26858 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f26848 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9f26820 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f266f0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x9f26af0 </usr/include/c++/4.6/bits/ios_base.h:163:3, col:73>
  (ReturnStmt 0x9f26ae0 <col:5, col:70>
    (CXXFunctionalCastExpr 0x9f26ac8 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x9f26ab0 <col:25, col:69> 'int' '^'
        (CXXStaticCastExpr 0x9f26a38 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f26a28 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f26a18 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9f269f0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f268e0 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x9f26a98 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f26a88 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f26a78 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9f26a50 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f26920 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a) (CompoundStmt 0x9f26ca0 </usr/include/c++/4.6/bits/ios_base.h:167:3, col:50>
  (ReturnStmt 0x9f26c90 <col:5, col:47>
    (CXXFunctionalCastExpr 0x9f26c78 <col:12, col:47> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (UnaryOperator 0x9f26c60 <col:25, col:46> 'int' prefix '~'
        (CXXStaticCastExpr 0x9f26c48 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x9f26c38 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9f26c28 <col:43> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x9f26c00 <col:43> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f26b10 '__a' 'enum std::_Ios_Iostate'))))))))


    inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9f26f60 </usr/include/c++/4.6/bits/ios_base.h:171:3, col:29>
  (ReturnStmt 0x9f26f50 <col:5, col:24>
    (ImplicitCastExpr 0x9f26f40 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9f26f28 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9f26e38 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f26cf0 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9f26ee8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9f26ed8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f26ea0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9f26750 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9f26e80 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f26e50 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f26cf0 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9f26e90 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f26e68 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f26d30 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9f27188 </usr/include/c++/4.6/bits/ios_base.h:175:3, col:29>
  (ReturnStmt 0x9f27178 <col:5, col:24>
    (ImplicitCastExpr 0x9f27168 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9f27150 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9f27098 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f26f90 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9f27128 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9f27118 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f27100 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9f26520 'operator&' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9f270e0 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f270b0 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f26f90 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9f270f0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f270c8 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f26fd0 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x9f273a8 </usr/include/c++/4.6/bits/ios_base.h:179:3, col:29>
  (ReturnStmt 0x9f27398 <col:5, col:24>
    (ImplicitCastExpr 0x9f27388 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x9f27370 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x9f272b8 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f271b0 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x9f27348 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x9f27338 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9f27320 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9f26980 'operator^' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x9f27300 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f272d0 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f271b0 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x9f27310 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9f272e8 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x9f271f0 '__b' 'enum std::_Ios_Iostate')))))))


    enum _Ios_Seekdir {
        _S_beg = (ImplicitCastExpr 0xa0a2708 </usr/include/c++/4.6/bits/ios_base.h:184:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f27420 <col:16> 'int' 0))
,
        _S_cur = (ImplicitCastExpr 0xa0a2718 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1152:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f27478 <col:33> 'int' 1))
,
        _S_end = (ImplicitCastExpr 0xa0a2728 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1155:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9f274c8 <col:33> 'int' 2))
,
        _S_ios_seekdir_end = (ImplicitCastExpr 0xa0a2738 </usr/include/c++/4.6/bits/ios_base.h:187:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa0a26b8 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0xa0a2688 <col:28> 'long' 1)
    (IntegerLiteral 0xa0a26a0 <col:34> 'int' 16)))

    };
    class ios_base {
        class ios_base;
    public:
    public:
        class failure : public std::exception {
            class failure;
        public:
        public:
            failure(const string &__str) throw();
            virtual void ~failure() throw();
            virtual const char *what() const throw();
        private:
        private:
            string _M_msg;
            inline std::ios_base::failure &operator=(const std::ios_base::failure &);
        };
        typedef std::_Ios_Fmtflags fmtflags;
        static const fmtflags boolalpha = (DeclRefExpr 0xa0a2e94 </usr/include/c++/4.6/bits/ios_base.h:259:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa091840 '_S_boolalpha' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags dec = (DeclRefExpr 0xa0a2ef4 </usr/include/c++/4.6/bits/ios_base.h:262:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa0918c0 '_S_dec' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags fixed = (DeclRefExpr 0xa0a2f54 </usr/include/c++/4.6/bits/ios_base.h:265:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa091940 '_S_fixed' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags hex = (DeclRefExpr 0xa0a2fb4 </usr/include/c++/4.6/bits/ios_base.h:268:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa0919c0 '_S_hex' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags internal = (DeclRefExpr 0xa0a3014 </usr/include/c++/4.6/bits/ios_base.h:273:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa091a40 '_S_internal' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags left = (DeclRefExpr 0xa0a3074 </usr/include/c++/4.6/bits/ios_base.h:277:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa091ac0 '_S_left' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags oct = (DeclRefExpr 0xa0a30d4 </usr/include/c++/4.6/bits/ios_base.h:280:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa091b40 '_S_oct' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags right = (DeclRefExpr 0xa0a3134 </usr/include/c++/4.6/bits/ios_base.h:284:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa091bc0 '_S_right' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags scientific = (DeclRefExpr 0xa0a3194 </usr/include/c++/4.6/bits/ios_base.h:287:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa091c40 '_S_scientific' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showbase = (DeclRefExpr 0xa0a31f4 </usr/include/c++/4.6/bits/ios_base.h:291:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa091cc0 '_S_showbase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpoint = (DeclRefExpr 0xa0a3254 </usr/include/c++/4.6/bits/ios_base.h:295:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa091d40 '_S_showpoint' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpos = (DeclRefExpr 0xa0a32b4 </usr/include/c++/4.6/bits/ios_base.h:298:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa091dc0 '_S_showpos' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags skipws = (DeclRefExpr 0xa0a3314 </usr/include/c++/4.6/bits/ios_base.h:301:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9f23520 '_S_skipws' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags unitbuf = (DeclRefExpr 0xa0a3374 </usr/include/c++/4.6/bits/ios_base.h:304:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9f235a0 '_S_unitbuf' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags uppercase = (DeclRefExpr 0xa0a33d4 </usr/include/c++/4.6/bits/ios_base.h:308:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9f23620 '_S_uppercase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags adjustfield = (DeclRefExpr 0xa0a3434 </usr/include/c++/4.6/bits/ios_base.h:311:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9f236d0 '_S_adjustfield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags basefield = (DeclRefExpr 0xa0a3494 </usr/include/c++/4.6/bits/ios_base.h:314:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9f23780 '_S_basefield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags floatfield = (DeclRefExpr 0xa0a34f4 </usr/include/c++/4.6/bits/ios_base.h:317:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x9f23800 '_S_floatfield' 'enum std::_Ios_Fmtflags')
;
        typedef std::_Ios_Iostate iostate;
        static const iostate badbit = (DeclRefExpr 0xa0a35a4 </usr/include/c++/4.6/bits/ios_base.h:335:35> 'enum std::_Ios_Iostate' EnumConstant 0x9f26250 '_S_badbit' 'enum std::_Ios_Iostate')
;
        static const iostate eofbit = (DeclRefExpr 0xa0a3604 </usr/include/c++/4.6/bits/ios_base.h:338:35> 'enum std::_Ios_Iostate' EnumConstant 0x9f262d0 '_S_eofbit' 'enum std::_Ios_Iostate')
;
        static const iostate failbit = (DeclRefExpr 0xa0a3664 </usr/include/c++/4.6/bits/ios_base.h:343:36> 'enum std::_Ios_Iostate' EnumConstant 0x9f26350 '_S_failbit' 'enum std::_Ios_Iostate')
;
        static const iostate goodbit = (DeclRefExpr 0xa0a36c4 </usr/include/c++/4.6/bits/ios_base.h:346:36> 'enum std::_Ios_Iostate' EnumConstant 0x9f261d0 '_S_goodbit' 'enum std::_Ios_Iostate')
;
        typedef std::_Ios_Openmode openmode;
        static const openmode app = (DeclRefExpr 0xa0a3774 </usr/include/c++/4.6/bits/ios_base.h:365:34> 'enum std::_Ios_Openmode' EnumConstant 0x9f24e40 '_S_app' 'enum std::_Ios_Openmode')
;
        static const openmode ate = (DeclRefExpr 0xa0a37d4 </usr/include/c++/4.6/bits/ios_base.h:368:34> 'enum std::_Ios_Openmode' EnumConstant 0x9f24ec0 '_S_ate' 'enum std::_Ios_Openmode')
;
        static const openmode binary = (DeclRefExpr 0xa0a3834 </usr/include/c++/4.6/bits/ios_base.h:373:36> 'enum std::_Ios_Openmode' EnumConstant 0x9f24f40 '_S_bin' 'enum std::_Ios_Openmode')
;
        static const openmode in = (DeclRefExpr 0xa0a3894 </usr/include/c++/4.6/bits/ios_base.h:376:33> 'enum std::_Ios_Openmode' EnumConstant 0x9f24fc0 '_S_in' 'enum std::_Ios_Openmode')
;
        static const openmode out = (DeclRefExpr 0xa0a38f4 </usr/include/c++/4.6/bits/ios_base.h:379:34> 'enum std::_Ios_Openmode' EnumConstant 0x9f25040 '_S_out' 'enum std::_Ios_Openmode')
;
        static const openmode trunc = (DeclRefExpr 0xa0a3954 </usr/include/c++/4.6/bits/ios_base.h:382:35> 'enum std::_Ios_Openmode' EnumConstant 0x9f250c0 '_S_trunc' 'enum std::_Ios_Openmode')
;
        typedef std::_Ios_Seekdir seekdir;
        static const seekdir beg = (DeclRefExpr 0xa0a3a04 </usr/include/c++/4.6/bits/ios_base.h:397:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9f27440 '_S_beg' 'enum std::_Ios_Seekdir')
;
        static const seekdir cur = (DeclRefExpr 0xa0a3a64 </usr/include/c++/4.6/bits/ios_base.h:400:33> 'enum std::_Ios_Seekdir' EnumConstant 0x9f27490 '_S_cur' 'enum std::_Ios_Seekdir')
;
        static const seekdir end = (DeclRefExpr 0xa0a3ac4 </usr/include/c++/4.6/bits/ios_base.h:403:33> 'enum std::_Ios_Seekdir' EnumConstant 0xa0a2650 '_S_end' 'enum std::_Ios_Seekdir')
;
        typedef int io_state;
        typedef int open_mode;
        typedef int seek_dir;
        typedef std::streampos streampos;
        typedef std::streamoff streamoff;
        enum event {
            erase_event,
            imbue_event,
            copyfmt_event
        };
        typedef void (*event_callback)(std::ios_base::event, std::ios_base &, int);
        void register_callback(event_callback __fn, int __index);
    protected:
    protected:
        streamsize _M_precision;
        streamsize _M_width;
        fmtflags _M_flags;
        iostate _M_exception;
        iostate _M_streambuf_state;
        struct _Callback_list {
            struct _Callback_list;
            std::ios_base::_Callback_list *_M_next;
            ios_base::event_callback _M_fn;
            int _M_index;
            _Atomic_word _M_refcount;
            _Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next((ImplicitCastExpr 0xa0a8470 </usr/include/c++/4.6/bits/ios_base.h:471:17> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
  (DeclRefExpr 0xa0a8458 <col:17> 'struct std::ios_base::_Callback_list *' lvalue ParmVar 0xa0a4620 '__cb' 'struct std::ios_base::_Callback_list *'))
), _M_fn((ImplicitCastExpr 0xa0a84b0 </usr/include/c++/4.6/bits/ios_base.h:471:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' <LValueToRValue>
  (DeclRefExpr 0xa0a8498 <col:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' lvalue ParmVar 0xa0a4580 '__fn' 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)'))
), _M_index((ImplicitCastExpr 0xa0a84f0 </usr/include/c++/4.6/bits/ios_base.h:471:46> 'int' <LValueToRValue>
  (DeclRefExpr 0xa0a84d8 <col:46> 'int' lvalue ParmVar 0xa0a45d0 '__index' 'int'))
), _M_refcount((IntegerLiteral 0xa0a8518 </usr/include/c++/4.6/bits/ios_base.h:471:68> 'int' 0)
) (CompoundStmt 0xa0a8558 </usr/include/c++/4.6/bits/ios_base.h:471:71, col:73>)


            void _M_add_reference() (CompoundStmt 0xa0a8648 </usr/include/c++/4.6/bits/ios_base.h:474:26, col:79>
  (CallExpr 0xa0a8620 <col:28, col:76> 'void'
    (ImplicitCastExpr 0xa0a8610 <col:28, col:39> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0a858c <col:28, col:39> 'void (_Atomic_word *, int)' lvalue Function 0x9f96280 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0xa0a85e0 <col:61, col:62> '_Atomic_word *' prefix '&'
      (MemberExpr 0xa0a85c0 <col:62> '_Atomic_word':'int' lvalue ->_M_refcount 0xa0a4520
        (CXXThisExpr 0xa0a85b0 <col:62> 'struct std::ios_base::_Callback_list *' this)))
    (IntegerLiteral 0xa0a85f8 <col:75> 'int' 1)))


            int _M_remove_reference() (CompoundStmt 0xa0a8888 </usr/include/c++/4.6/bits/ios_base.h:479:7, line:488:7>
  (NullStmt 0xa0a8660 <line:481:62>)
  (DeclStmt 0xa0a87a0 <line:482:9, col:77>
    0xa0a8680 "int __res =
      (CallExpr 0xa0a8778 <col:21, col:76> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa0a8768 <col:21, col:32> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0a86cc <col:21, col:32> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x9f955b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0xa0a8720 <col:60, col:61> '_Atomic_word *' prefix '&'
          (MemberExpr 0xa0a8700 <col:61> '_Atomic_word':'int' lvalue ->_M_refcount 0xa0a4520
            (CXXThisExpr 0xa0a86f0 <col:61> 'struct std::ios_base::_Callback_list *' this)))
        (UnaryOperator 0xa0a8750 <col:74, col:75> 'int' prefix '-'
          (IntegerLiteral 0xa0a8738 <col:75> 'int' 1)))")
  (IfStmt 0xa0a8830 <line:483:9, line:486:11>
    <<<NULL>>>
    (BinaryOperator 0xa0a87f0 <line:483:13, col:22> '_Bool' '=='
      (ImplicitCastExpr 0xa0a87e0 <col:13> 'int' <LValueToRValue>
        (DeclRefExpr 0xa0a87b0 <col:13> 'int' lvalue Var 0xa0a8680 '__res' 'int'))
      (IntegerLiteral 0xa0a87c8 <col:22> 'int' 0))
    (CompoundStmt 0xa0a8818 <line:484:11, line:486:11>
      (NullStmt 0xa0a8808 <line:485:65>))
    <<<NULL>>>)
  (ReturnStmt 0xa0a8878 <line:487:9, col:16>
    (ImplicitCastExpr 0xa0a8868 <col:16> 'int' <LValueToRValue>
      (DeclRefExpr 0xa0a884c <col:16> 'int' lvalue Var 0xa0a8680 '__res' 'int'))))


        };
        std::ios_base::_Callback_list *_M_callbacks;
        void _M_call_callbacks(std::ios_base::event __ev) throw();
        void _M_dispose_callbacks() throw();
        struct _Words {
            struct _Words;
            void *_M_pword;
            long _M_iword;
            _Words() : _M_pword((ImplicitCastExpr 0xa0a88c0 </usr/include/c++/4.6/bits/ios_base.h:504:27> 'void *' <NullToPointer>
  (IntegerLiteral 0xa0a88a8 <col:27> 'int' 0))
), _M_iword((ImplicitCastExpr 0xa0a8900 </usr/include/c++/4.6/bits/ios_base.h:504:40> 'long' <IntegralCast>
  (IntegerLiteral 0xa0a88e8 <col:40> 'int' 0))
) (CompoundStmt 0xa0a8930 </usr/include/c++/4.6/bits/ios_base.h:504:43, col:45>)


            inline _Words(const std::ios_base::_Words &) throw();
            inline void ~_Words() throw();
        };
        std::ios_base::_Words _M_word_zero;
        enum  {
            _S_local_word_size = (ImplicitCastExpr 0xa0a4d98 </usr/include/c++/4.6/bits/ios_base.h:512:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa0a4d40 <col:33> 'int' 8))

        };
        std::ios_base::_Words _M_local_word[8];
        int _M_word_size;
        std::ios_base::_Words *_M_word;
        std::ios_base::_Words &_M_grow_words(int __index, bool __iword);
        std::locale _M_ios_locale;
        void _M_init() throw();
    public:
    public:
        class Init {
            class Init;
            ;
        public:
        public:
            Init();
            void ~Init();
        private:
        private:
            static _Atomic_word _S_refcount;
            static bool _S_synced_with_stdio;
        };
        fmtflags flags() const (CompoundStmt 0xa0a89c8 </usr/include/c++/4.6/bits/ios_base.h:553:5, col:24>
  (ReturnStmt 0xa0a89b8 <col:7, col:14>
    (ImplicitCastExpr 0xa0a89a8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (MemberExpr 0xa0a8984 <col:14> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa0a4210
        (CXXThisExpr 0xa0a8958 <col:14> 'const class std::ios_base *' this)))))


        fmtflags flags(fmtflags __fmtfl) (CompoundStmt 0xa0a8b20 </usr/include/c++/4.6/bits/ios_base.h:564:5, line:568:5>
  (DeclStmt 0xa0a8a68 <line:565:7, col:32>
    0xa0a89f0 "fmtflags __old =
      (ImplicitCastExpr 0xa0a8a58 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa0a8a38 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa0a4210
          (CXXThisExpr 0xa0a8a28 <col:24> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa0a8ad0 <line:566:7, col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue '='
    (MemberExpr 0xa0a8a88 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa0a4210
      (CXXThisExpr 0xa0a8a78 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa0a8ac0 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0a8aa8 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa0a5640 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0a8b10 <line:567:7, col:14>
    (ImplicitCastExpr 0xa0a8b00 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0a8ae8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa0a89f0 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl) (CompoundStmt 0xa0a8cd8 </usr/include/c++/4.6/bits/ios_base.h:580:5, line:584:5>
  (DeclStmt 0xa0a8bc8 <line:581:7, col:32>
    0xa0a8b50 "fmtflags __old =
      (ImplicitCastExpr 0xa0a8bb8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa0a8b98 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa0a4210
          (CXXThisExpr 0xa0a8b88 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0xa0a8c78 <line:582:7, col:19> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa0a8c68 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0a8c30 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9f24360 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa0a8be8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa0a4210
      (CXXThisExpr 0xa0a8bd8 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa0a8c20 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0a8c08 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa0a5730 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0a8cc8 <line:583:7, col:14>
    (ImplicitCastExpr 0xa0a8cb8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0a8c9c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa0a8b50 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl, fmtflags __mask) (CompoundStmt 0xa0a9008 </usr/include/c++/4.6/bits/ios_base.h:597:5, line:602:5>
  (DeclStmt 0xa0a8d78 <line:598:7, col:32>
    0xa0a8d00 "fmtflags __old =
      (ImplicitCastExpr 0xa0a8d68 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa0a8d48 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa0a4210
          (CXXThisExpr 0xa0a8d38 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0xa0a8e70 <line:599:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa0a8e60 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0a8e48 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9f24a00 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa0a8d98 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa0a4210
      (CXXThisExpr 0xa0a8d88 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0xa0a8e28 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa0a8e18 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0a8de0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9f24120 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0xa0a8dd0 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa0a8db8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa0a5830 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags'))))
  (CXXOperatorCallExpr 0xa0a8fa8 <line:600:7, col:36> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa0a8f98 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0a8f80 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9f24360 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa0a8ea8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa0a4210
      (CXXThisExpr 0xa0a8e98 <col:7> 'class std::ios_base *' this))
    (ParenExpr 0xa0a8f68 <col:19, col:36> 'enum std::_Ios_Fmtflags'
      (CXXOperatorCallExpr 0xa0a8f40 <col:20, col:30> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa0a8f30 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0a8f18 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0xa0a8ef8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa0a8ec8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa0a57f0 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0xa0a8f08 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa0a8ee0 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa0a5830 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))
  (ReturnStmt 0xa0a8ff8 <line:601:7, col:14>
    (ImplicitCastExpr 0xa0a8fe8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0a8fcc <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa0a8d00 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        void unsetf(fmtflags __mask) (CompoundStmt 0xa0a9118 </usr/include/c++/4.6/bits/ios_base.h:612:5, col:28>
  (CXXOperatorCallExpr 0xa0a90f0 <col:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa0a90e0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa0a90c8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x9f24a00 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa0a9038 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa0a4210
      (CXXThisExpr 0xa0a9028 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0xa0a90a8 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa0a9098 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa0a9080 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9f24120 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0xa0a9070 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa0a9058 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa0a5920 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))


        streamsize precision() const (CompoundStmt 0xa0a9180 </usr/include/c++/4.6/bits/ios_base.h:623:5, col:28>
  (ReturnStmt 0xa0a9170 <col:7, col:14>
    (ImplicitCastExpr 0xa0a9160 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0xa0a9140 <col:14> 'const streamsize':'const int' lvalue ->_M_precision 0xa0a4190
        (CXXThisExpr 0xa0a9130 <col:14> 'const class std::ios_base *' this)))))


        streamsize precision(streamsize __prec) (CompoundStmt 0xa0a92d0 </usr/include/c++/4.6/bits/ios_base.h:632:5, line:636:5>
  (DeclStmt 0xa0a9218 <line:633:7, col:38>
    0xa0a91a0 "streamsize __old =
      (ImplicitCastExpr 0xa0a9208 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0xa0a91e8 <col:26> 'streamsize':'int' lvalue ->_M_precision 0xa0a4190
          (CXXThisExpr 0xa0a91d8 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa0a9280 <line:634:7, col:22> 'streamsize':'int' lvalue '='
    (MemberExpr 0xa0a9238 <col:7> 'streamsize':'int' lvalue ->_M_precision 0xa0a4190
      (CXXThisExpr 0xa0a9228 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa0a9270 <col:22> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa0a9258 <col:22> 'streamsize':'int' lvalue ParmVar 0xa0a5af0 '__prec' 'streamsize':'int')))
  (ReturnStmt 0xa0a92c0 <line:635:7, col:14>
    (ImplicitCastExpr 0xa0a92b0 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa0a9298 <col:14> 'streamsize':'int' lvalue Var 0xa0a91a0 '__old' 'streamsize':'int'))))


        streamsize width() const (CompoundStmt 0xa0a9340 </usr/include/c++/4.6/bits/ios_base.h:646:5, col:24>
  (ReturnStmt 0xa0a9330 <col:7, col:14>
    (ImplicitCastExpr 0xa0a9320 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0xa0a9300 <col:14> 'const streamsize':'const int' lvalue ->_M_width 0xa0a41d0
        (CXXThisExpr 0xa0a92f0 <col:14> 'const class std::ios_base *' this)))))


        streamsize width(streamsize __wide) (CompoundStmt 0xa0a9490 </usr/include/c++/4.6/bits/ios_base.h:655:5, line:659:5>
  (DeclStmt 0xa0a93d8 <line:656:7, col:34>
    0xa0a9360 "streamsize __old =
      (ImplicitCastExpr 0xa0a93c8 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0xa0a93a8 <col:26> 'streamsize':'int' lvalue ->_M_width 0xa0a41d0
          (CXXThisExpr 0xa0a9398 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa0a9440 <line:657:7, col:18> 'streamsize':'int' lvalue '='
    (MemberExpr 0xa0a93f8 <col:7> 'streamsize':'int' lvalue ->_M_width 0xa0a41d0
      (CXXThisExpr 0xa0a93e8 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa0a9430 <col:18> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa0a9418 <col:18> 'streamsize':'int' lvalue ParmVar 0xa0a5c60 '__wide' 'streamsize':'int')))
  (ReturnStmt 0xa0a9480 <line:658:7, col:14>
    (ImplicitCastExpr 0xa0a9470 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa0a9458 <col:14> 'streamsize':'int' lvalue Var 0xa0a9360 '__old' 'streamsize':'int'))))


        static bool sync_with_stdio(bool __sync = (CXXBoolLiteralExpr 0xa0a8448 </usr/include/c++/4.6/bits/ios_base.h:673:35> '_Bool' true)
);
        std::locale imbue(const std::locale &__loc) throw();
        std::locale getloc() const (CompoundStmt 0xa0a9518 </usr/include/c++/4.6/bits/ios_base.h:697:5, col:29>
  (ReturnStmt 0xa0a9508 <col:7, col:14>
    (CXXConstructExpr 0xa0a94e0 <col:14> 'class std::locale''void (const class std::locale &) throw()'
      (MemberExpr 0xa0a94c0 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0xa0a50c0
        (CXXThisExpr 0xa0a94b0 <col:14> 'const class std::ios_base *' this)))))


        const std::locale &_M_getloc() const (CompoundStmt 0xa0a9570 </usr/include/c++/4.6/bits/ios_base.h:708:5, col:29>
  (ReturnStmt 0xa0a9560 <col:7, col:14>
    (MemberExpr 0xa0a9540 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0xa0a50c0
      (CXXThisExpr 0xa0a9530 <col:14> 'const class std::ios_base *' this))))


        static int xalloc() throw();
        long &iword(int __ix) (CompoundStmt 0xa0a97f8 </usr/include/c++/4.6/bits/ios_base.h:743:5, line:747:5>
  (DeclStmt 0xa0a97a0 <line:744:7, line:745:47>
    0xa0a95a0 "std::ios_base::_Words &__word =
      (ConditionalOperator 0xa0a9780 <line:744:24, line:745:46> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0xa0a9658 <line:744:24, col:44> '_Bool'
          (BinaryOperator 0xa0a9640 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0xa0a9620 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0xa0a95d4 <col:25> 'int' lvalue ParmVar 0xa0a60c0 '__ix' 'int'))
            (ImplicitCastExpr 0xa0a9630 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0xa0a9600 <col:32> 'int' lvalue ->_M_word_size 0xa0a4ed0
                (CXXThisExpr 0xa0a95f0 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0xa0a96d8 <line:745:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0xa0a96b8 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0xa0a9680 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa0a4f30
              (CXXThisExpr 0xa0a9670 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0xa0a96c8 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0xa0a96a0 <col:14> 'int' lvalue ParmVar 0xa0a60c0 '__ix' 'int')))
        (CXXMemberCallExpr 0xa0a9748 <col:22, col:46> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0xa0a9700 <col:22> '<bound member function type>' ->_M_grow_words 0xa0a5050
            (CXXThisExpr 0xa0a96f0 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0xa0a9770 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0xa0a9720 <col:36> 'int' lvalue ParmVar 0xa0a60c0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0xa0a9738 <col:42> '_Bool' true)))")
  (ReturnStmt 0xa0a97e8 <line:746:7, col:21>
    (MemberExpr 0xa0a97c8 <col:14, col:21> 'long' lvalue ._M_iword 0xa0a4be0
      (DeclRefExpr 0xa0a97b0 <col:14> 'struct std::ios_base::_Words' lvalue Var 0xa0a95a0 '__word' 'struct std::ios_base::_Words &'))))


        void *&pword(int __ix) (CompoundStmt 0xa0a9a78 </usr/include/c++/4.6/bits/ios_base.h:764:5, line:768:5>
  (DeclStmt 0xa0a9a20 <line:765:7, line:766:48>
    0xa0a9820 "std::ios_base::_Words &__word =
      (ConditionalOperator 0xa0a9a00 <line:765:24, line:766:47> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0xa0a98d8 <line:765:24, col:44> '_Bool'
          (BinaryOperator 0xa0a98c0 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0xa0a98a0 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0xa0a9854 <col:25> 'int' lvalue ParmVar 0xa0a61c0 '__ix' 'int'))
            (ImplicitCastExpr 0xa0a98b0 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0xa0a9880 <col:32> 'int' lvalue ->_M_word_size 0xa0a4ed0
                (CXXThisExpr 0xa0a9870 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0xa0a9958 <line:766:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0xa0a9938 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0xa0a9900 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa0a4f30
              (CXXThisExpr 0xa0a98f0 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0xa0a9948 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0xa0a9920 <col:14> 'int' lvalue ParmVar 0xa0a61c0 '__ix' 'int')))
        (CXXMemberCallExpr 0xa0a99c8 <col:22, col:47> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0xa0a9980 <col:22> '<bound member function type>' ->_M_grow_words 0xa0a5050
            (CXXThisExpr 0xa0a9970 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0xa0a99f0 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0xa0a99a0 <col:36> 'int' lvalue ParmVar 0xa0a61c0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0xa0a99b8 <col:42> '_Bool' false)))")
  (ReturnStmt 0xa0a9a68 <line:767:7, col:21>
    (MemberExpr 0xa0a9a48 <col:14, col:21> 'void *' lvalue ._M_pword 0xa0a4ba0
      (DeclRefExpr 0xa0a9a30 <col:14> 'struct std::ios_base::_Words' lvalue Var 0xa0a9820 '__word' 'struct std::ios_base::_Words &'))))


        virtual void ~ios_base();
    protected:
    protected:
        ios_base() throw();
    private:
    private:
        ios_base(const std::ios_base &);
        std::ios_base &operator=(const std::ios_base &);
    };
    inline std::ios_base &boolalpha(std::ios_base &__base) (CompoundStmt 0xa0a9c98 </usr/include/c++/4.6/bits/ios_base.h:797:3, line:800:3>
  (CXXMemberCallExpr 0xa0a9c40 <line:798:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0a9c1c <col:5, col:12> '<bound member function type>' .setf 0xa0a5780
      (DeclRefExpr 0xa0a9b84 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0a9aa0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0a9c60 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0a9bfc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2e60 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0a9c88 <line:799:5, col:12>
    (DeclRefExpr 0xa0a9c6c <col:12> 'class std::ios_base' lvalue ParmVar 0xa0a9aa0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noboolalpha(std::ios_base &__base) (CompoundStmt 0xa0a9e58 </usr/include/c++/4.6/bits/ios_base.h:805:3, line:808:3>
  (CXXMemberCallExpr 0xa0a9e00 <line:806:5, col:38> 'void'
    (MemberExpr 0xa0a9d9c <col:5, col:12> '<bound member function type>' .unsetf 0xa0a59c0
      (DeclRefExpr 0xa0a9d84 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0a9cc0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0a9e20 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0a9ddc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2e60 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0a9e48 <line:807:5, col:12>
    (DeclRefExpr 0xa0a9e2c <col:12> 'class std::ios_base' lvalue ParmVar 0xa0a9cc0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showbase(std::ios_base &__base) (CompoundStmt 0xa0aa058 </usr/include/c++/4.6/bits/ios_base.h:813:3, line:816:3>
  (CXXMemberCallExpr 0xa0aa000 <line:814:5, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0a9fdc <col:5, col:12> '<bound member function type>' .setf 0xa0a5780
      (DeclRefExpr 0xa0a9f44 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0a9e80 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0aa020 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0a9fbc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a31c0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0aa048 <line:815:5, col:12>
    (DeclRefExpr 0xa0aa02c <col:12> 'class std::ios_base' lvalue ParmVar 0xa0a9e80 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowbase(std::ios_base &__base) (CompoundStmt 0xa0aa218 </usr/include/c++/4.6/bits/ios_base.h:821:3, line:824:3>
  (CXXMemberCallExpr 0xa0aa1c0 <line:822:5, col:37> 'void'
    (MemberExpr 0xa0aa15c <col:5, col:12> '<bound member function type>' .unsetf 0xa0a59c0
      (DeclRefExpr 0xa0aa144 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0aa080 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0aa1e0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0aa19c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a31c0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0aa208 <line:823:5, col:12>
    (DeclRefExpr 0xa0aa1ec <col:12> 'class std::ios_base' lvalue ParmVar 0xa0aa080 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpoint(std::ios_base &__base) (CompoundStmt 0xa0aa418 </usr/include/c++/4.6/bits/ios_base.h:829:3, line:832:3>
  (CXXMemberCallExpr 0xa0aa3c0 <line:830:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0aa39c <col:5, col:12> '<bound member function type>' .setf 0xa0a5780
      (DeclRefExpr 0xa0aa304 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0aa240 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0aa3e0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0aa37c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3220 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0aa408 <line:831:5, col:12>
    (DeclRefExpr 0xa0aa3ec <col:12> 'class std::ios_base' lvalue ParmVar 0xa0aa240 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpoint(std::ios_base &__base) (CompoundStmt 0xa0aa5d8 </usr/include/c++/4.6/bits/ios_base.h:837:3, line:840:3>
  (CXXMemberCallExpr 0xa0aa580 <line:838:5, col:38> 'void'
    (MemberExpr 0xa0aa51c <col:5, col:12> '<bound member function type>' .unsetf 0xa0a59c0
      (DeclRefExpr 0xa0aa504 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0aa440 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0aa5a0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0aa55c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3220 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0aa5c8 <line:839:5, col:12>
    (DeclRefExpr 0xa0aa5ac <col:12> 'class std::ios_base' lvalue ParmVar 0xa0aa440 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpos(std::ios_base &__base) (CompoundStmt 0xa0aa7d8 </usr/include/c++/4.6/bits/ios_base.h:845:3, line:848:3>
  (CXXMemberCallExpr 0xa0aa780 <line:846:5, col:34> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0aa75c <col:5, col:12> '<bound member function type>' .setf 0xa0a5780
      (DeclRefExpr 0xa0aa6c4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0aa600 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0aa7a0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0aa73c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3280 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0aa7c8 <line:847:5, col:12>
    (DeclRefExpr 0xa0aa7ac <col:12> 'class std::ios_base' lvalue ParmVar 0xa0aa600 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpos(std::ios_base &__base) (CompoundStmt 0xa0aa998 </usr/include/c++/4.6/bits/ios_base.h:853:3, line:856:3>
  (CXXMemberCallExpr 0xa0aa940 <line:854:5, col:36> 'void'
    (MemberExpr 0xa0aa8dc <col:5, col:12> '<bound member function type>' .unsetf 0xa0a59c0
      (DeclRefExpr 0xa0aa8c4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0aa800 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0aa960 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0aa91c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3280 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0aa988 <line:855:5, col:12>
    (DeclRefExpr 0xa0aa96c <col:12> 'class std::ios_base' lvalue ParmVar 0xa0aa800 '__base' 'class std::ios_base &')))


    inline std::ios_base &skipws(std::ios_base &__base) (CompoundStmt 0xa0aab98 </usr/include/c++/4.6/bits/ios_base.h:861:3, line:864:3>
  (CXXMemberCallExpr 0xa0aab40 <line:862:5, col:33> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0aab1c <col:5, col:12> '<bound member function type>' .setf 0xa0a5780
      (DeclRefExpr 0xa0aaa84 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0aa9c0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0aab60 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0aaafc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a32e0 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0aab88 <line:863:5, col:12>
    (DeclRefExpr 0xa0aab6c <col:12> 'class std::ios_base' lvalue ParmVar 0xa0aa9c0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noskipws(std::ios_base &__base) (CompoundStmt 0xa0aad58 </usr/include/c++/4.6/bits/ios_base.h:869:3, line:872:3>
  (CXXMemberCallExpr 0xa0aad00 <line:870:5, col:35> 'void'
    (MemberExpr 0xa0aac9c <col:5, col:12> '<bound member function type>' .unsetf 0xa0a59c0
      (DeclRefExpr 0xa0aac84 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0aabc0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0aad20 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0aacdc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a32e0 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0aad48 <line:871:5, col:12>
    (DeclRefExpr 0xa0aad2c <col:12> 'class std::ios_base' lvalue ParmVar 0xa0aabc0 '__base' 'class std::ios_base &')))


    inline std::ios_base &uppercase(std::ios_base &__base) (CompoundStmt 0xa0aaf58 </usr/include/c++/4.6/bits/ios_base.h:877:3, line:880:3>
  (CXXMemberCallExpr 0xa0aaf00 <line:878:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0aaedc <col:5, col:12> '<bound member function type>' .setf 0xa0a5780
      (DeclRefExpr 0xa0aae44 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0aad80 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0aaf20 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0aaebc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a33a0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0aaf48 <line:879:5, col:12>
    (DeclRefExpr 0xa0aaf2c <col:12> 'class std::ios_base' lvalue ParmVar 0xa0aad80 '__base' 'class std::ios_base &')))


    inline std::ios_base &nouppercase(std::ios_base &__base) (CompoundStmt 0xa0ab118 </usr/include/c++/4.6/bits/ios_base.h:885:3, line:888:3>
  (CXXMemberCallExpr 0xa0ab0c0 <line:886:5, col:38> 'void'
    (MemberExpr 0xa0ab05c <col:5, col:12> '<bound member function type>' .unsetf 0xa0a59c0
      (DeclRefExpr 0xa0ab044 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0aaf80 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0ab0e0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0ab09c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a33a0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0ab108 <line:887:5, col:12>
    (DeclRefExpr 0xa0ab0ec <col:12> 'class std::ios_base' lvalue ParmVar 0xa0aaf80 '__base' 'class std::ios_base &')))


    inline std::ios_base &unitbuf(std::ios_base &__base) (CompoundStmt 0xa0ab318 </usr/include/c++/4.6/bits/ios_base.h:893:3, line:896:3>
  (CXXMemberCallExpr 0xa0ab2c0 <line:894:6, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0ab29c <col:6, col:13> '<bound member function type>' .setf 0xa0a5780
      (DeclRefExpr 0xa0ab204 <col:6> 'class std::ios_base' lvalue ParmVar 0xa0ab140 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0ab2e0 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0ab27c <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3340 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0ab308 <line:895:6, col:13>
    (DeclRefExpr 0xa0ab2ec <col:13> 'class std::ios_base' lvalue ParmVar 0xa0ab140 '__base' 'class std::ios_base &')))


    inline std::ios_base &nounitbuf(std::ios_base &__base) (CompoundStmt 0xa0ab4d8 </usr/include/c++/4.6/bits/ios_base.h:901:3, line:904:3>
  (CXXMemberCallExpr 0xa0ab480 <line:902:6, col:37> 'void'
    (MemberExpr 0xa0ab41c <col:6, col:13> '<bound member function type>' .unsetf 0xa0a59c0
      (DeclRefExpr 0xa0ab404 <col:6> 'class std::ios_base' lvalue ParmVar 0xa0ab340 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0ab4a0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0ab45c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3340 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0ab4c8 <line:903:6, col:13>
    (DeclRefExpr 0xa0ab4ac <col:13> 'class std::ios_base' lvalue ParmVar 0xa0ab340 '__base' 'class std::ios_base &')))


    inline std::ios_base &internal(std::ios_base &__base) (CompoundStmt 0xa0ab730 </usr/include/c++/4.6/bits/ios_base.h:910:3, line:913:3>
  (CXXMemberCallExpr 0xa0ab6c0 <line:911:6, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0ab69c <col:6, col:13> '<bound member function type>' .setf 0xa0a58b0
      (DeclRefExpr 0xa0ab5c4 <col:6> 'class std::ios_base' lvalue ParmVar 0xa0ab500 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0ab6e8 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0ab63c <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2fe0 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa0ab6f8 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0ab67c <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3400 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0ab720 <line:912:6, col:13>
    (DeclRefExpr 0xa0ab704 <col:13> 'class std::ios_base' lvalue ParmVar 0xa0ab500 '__base' 'class std::ios_base &')))


    inline std::ios_base &left(std::ios_base &__base) (CompoundStmt 0xa0ab990 </usr/include/c++/4.6/bits/ios_base.h:918:3, line:921:3>
  (CXXMemberCallExpr 0xa0ab920 <line:919:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0ab8fc <col:5, col:12> '<bound member function type>' .setf 0xa0a58b0
      (DeclRefExpr 0xa0ab824 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0ab760 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0ab948 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0ab89c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3040 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa0ab958 <col:33, col:43> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0ab8dc <col:33, col:43> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3400 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0ab980 <line:920:5, col:12>
    (DeclRefExpr 0xa0ab964 <col:12> 'class std::ios_base' lvalue ParmVar 0xa0ab760 '__base' 'class std::ios_base &')))


    inline std::ios_base &right(std::ios_base &__base) (CompoundStmt 0xa0abbf0 </usr/include/c++/4.6/bits/ios_base.h:926:3, line:929:3>
  (CXXMemberCallExpr 0xa0abb80 <line:927:5, col:55> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0abb5c <col:5, col:12> '<bound member function type>' .setf 0xa0a58b0
      (DeclRefExpr 0xa0aba84 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0ab9c0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0abba8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0abafc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3100 'right' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa0abbb8 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0abb3c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3400 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0abbe0 <line:928:5, col:12>
    (DeclRefExpr 0xa0abbc4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa0ab9c0 '__base' 'class std::ios_base &')))


    inline std::ios_base &dec(std::ios_base &__base) (CompoundStmt 0xa0abe50 </usr/include/c++/4.6/bits/ios_base.h:935:3, line:938:3>
  (CXXMemberCallExpr 0xa0abde0 <line:936:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0abdbc <col:5, col:12> '<bound member function type>' .setf 0xa0a58b0
      (DeclRefExpr 0xa0abce4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0abc20 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0abe08 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0abd5c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2ec0 'dec' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa0abe18 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0abd9c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3460 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0abe40 <line:937:5, col:12>
    (DeclRefExpr 0xa0abe24 <col:12> 'class std::ios_base' lvalue ParmVar 0xa0abc20 '__base' 'class std::ios_base &')))


    inline std::ios_base &hex(std::ios_base &__base) (CompoundStmt 0xa0ac0b0 </usr/include/c++/4.6/bits/ios_base.h:943:3, line:946:3>
  (CXXMemberCallExpr 0xa0ac040 <line:944:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0ac01c <col:5, col:12> '<bound member function type>' .setf 0xa0a58b0
      (DeclRefExpr 0xa0abf44 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0abe80 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0ac068 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0abfbc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2f80 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa0ac078 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0abffc <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3460 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0ac0a0 <line:945:5, col:12>
    (DeclRefExpr 0xa0ac084 <col:12> 'class std::ios_base' lvalue ParmVar 0xa0abe80 '__base' 'class std::ios_base &')))


    inline std::ios_base &oct(std::ios_base &__base) (CompoundStmt 0xa0ac310 </usr/include/c++/4.6/bits/ios_base.h:951:3, line:954:3>
  (CXXMemberCallExpr 0xa0ac2a0 <line:952:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0ac27c <col:5, col:12> '<bound member function type>' .setf 0xa0a58b0
      (DeclRefExpr 0xa0ac1a4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0ac0e0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0ac2c8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0ac21c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a30a0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa0ac2d8 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0ac25c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3460 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0ac300 <line:953:5, col:12>
    (DeclRefExpr 0xa0ac2e4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa0ac0e0 '__base' 'class std::ios_base &')))


    inline std::ios_base &fixed(std::ios_base &__base) (CompoundStmt 0xa0b1300 </usr/include/c++/4.6/bits/ios_base.h:960:3, line:963:3>
  (CXXMemberCallExpr 0xa0b1290 <line:961:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0b126c <col:5, col:12> '<bound member function type>' .setf 0xa0a58b0
      (DeclRefExpr 0xa0b1194 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0ac340 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0b12b8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0b120c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2f20 'fixed' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa0b12c8 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0b124c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a34c0 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0b12f0 <line:962:5, col:12>
    (DeclRefExpr 0xa0b12d4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa0ac340 '__base' 'class std::ios_base &')))


    inline std::ios_base &scientific(std::ios_base &__base) (CompoundStmt 0xa0b1560 </usr/include/c++/4.6/bits/ios_base.h:968:3, line:971:3>
  (CXXMemberCallExpr 0xa0b14f0 <line:969:5, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa0b14cc <col:5, col:12> '<bound member function type>' .setf 0xa0a58b0
      (DeclRefExpr 0xa0b13f4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa0b1330 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa0b1518 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0b146c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3160 'scientific' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa0b1528 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa0b14ac <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a34c0 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa0b1550 <line:970:5, col:12>
    (DeclRefExpr 0xa0b1534 <col:12> 'class std::ios_base' lvalue ParmVar 0xa0b1330 '__base' 'class std::ios_base &')))


}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf<_CharT, _Traits>() (CompoundStmt 0xa0ba708 </usr/include/c++/4.6/streambuf:195:7, col:9>)


        std::locale pubimbue(const std::locale &__loc) (CompoundStmt 0xa0ba930 </usr/include/c++/4.6/streambuf:207:7, line:212:7>
  (DeclStmt 0xa0ba7e0 <line:208:2, col:30>
    0xa0ba720 "std::locale __tmp =
      (ParenListExpr 0xa0ba7c0 <col:14, col:29> 'class std::locale'
        (CallExpr 0xa0ba7a0 <col:15, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0ba768 <col:15, col:21> '<dependent type>' lvalue
            (CXXThisExpr 0xa0ba758 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (CallExpr 0xa0ba850 <line:209:2, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa0ba800 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0xa0ba7f0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa0ba834 <col:14> 'const class std::locale' lvalue ParmVar 0xa0b7980 '__loc' 'const class std::locale &'))
  (BinaryOperator 0xa0ba8b8 <line:210:2, col:18> '<dependent type>' '='
    (MemberExpr 0xa0ba880 <col:2> 'class std::locale' lvalue ->_M_buf_locale 0xa0b7860
      (CXXThisExpr 0xa0ba870 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa0ba8a0 <col:18> 'const class std::locale' lvalue ParmVar 0xa0b7980 '__loc' 'const class std::locale &'))
  (ReturnStmt 0xa0ba920 <line:211:2, col:9>
    (CXXConstructExpr 0xa0ba8f8 <col:9> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0xa0ba8e8 <col:9> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0xa0ba8d0 <col:9> 'class std::locale' lvalue Var 0xa0ba720 '__tmp' 'class std::locale')))))


        std::locale getloc() const (CompoundStmt 0xa0ba9a8 </usr/include/c++/4.6/streambuf:224:7, col:31>
  (ReturnStmt 0xa0ba998 <col:9, col:16>
    (MemberExpr 0xa0ba978 <col:16> 'const class std::locale' lvalue ->_M_buf_locale 0xa0b7860
      (CXXThisExpr 0xa0ba968 <col:16> 'const basic_streambuf<_CharT, _Traits> *' this))))


        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n) (CompoundStmt 0xa0baa70 </usr/include/c++/4.6/streambuf:237:7, col:40>
  (ReturnStmt 0xa0baa60 <col:9, col:37>
    (CallExpr 0xa0baa38 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0ba9d0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0ba9c0 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa0baa04 <col:29> 'char_type *' lvalue ParmVar 0xa0b7ac0 '__s' 'char_type *')
      (DeclRefExpr 0xa0baa1c <col:34> 'streamsize':'int' lvalue ParmVar 0xa0b7b00 '__n' 'streamsize':'int'))))


        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa0ba340 </usr/include/c++/4.6/streambuf:241:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa0ba330 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa0ba318 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa0ba2f8 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0ba294 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa0ba308 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0ba2d4 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa0bab50 </usr/include/c++/4.6/streambuf:242:7, col:53>
  (ReturnStmt 0xa0bab40 <col:9, col:50>
    (CallExpr 0xa0bab18 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0baa98 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0baa88 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa0baacc <col:30> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa0b7c40 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0xa0baae4 <col:37> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa0b7cd0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
      (DeclRefExpr 0xa0baafc <col:44> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa0b7d60 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa0ba430 </usr/include/c++/4.6/streambuf:246:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa0ba420 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa0ba408 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa0ba3e8 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0ba384 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa0ba3f8 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0ba3c4 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa0bac18 </usr/include/c++/4.6/streambuf:247:7, col:45>
  (ReturnStmt 0xa0bac08 <col:9, col:42>
    (CallExpr 0xa0babe0 <col:16, col:42> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0bab78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0bab68 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa0babac <col:30> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa0b7ea0 '__sp' 'pos_type':'typename traits_type::pos_type')
      (DeclRefExpr 0xa0babc4 <col:36> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa0b7f10 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        int pubsync() (CompoundStmt 0xa0baca8 </usr/include/c++/4.6/streambuf:250:17, col:40>
  (ReturnStmt 0xa0bac98 <col:19, col:37>
    (CallExpr 0xa0bac78 <col:26, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0bac40 <col:26, col:32> '<dependent type>' lvalue
        (CXXThisExpr 0xa0bac30 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))))


        streamsize in_avail() (CompoundStmt 0xa0baf30 </usr/include/c++/4.6/streambuf:264:7, line:267:7>
  (DeclStmt 0xa0bae38 <line:265:2, col:55>
    0xa0bacd0 "const streamsize __ret =
      (CXXOperatorCallExpr 0xa0bae10 <col:27, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa0badd8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (CallExpr 0xa0bad50 <col:27, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0bad18 <col:27, col:33> '<dependent type>' lvalue
            (CXXThisExpr 0xa0bad08 <col:27> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa0badb8 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0bad80 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa0bad70 <col:43> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (ReturnStmt 0xa0baf20 <line:266:2, col:41>
    (ConditionalOperator 0xa0baf00 <col:9, col:41> '<dependent type>'
      (ImplicitCastExpr 0xa0baef0 <col:9> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa0baee0 <col:9> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa0bae48 <col:9> 'const streamsize':'const int' lvalue Var 0xa0bacd0 '__ret' 'const streamsize':'const int')))
      (DeclRefExpr 0xa0bae60 <col:17> 'const streamsize':'const int' lvalue Var 0xa0bacd0 '__ret' 'const streamsize':'const int')
      (CallExpr 0xa0baec0 <col:25, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0bae88 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa0bae78 <col:25> 'basic_streambuf<_CharT, _Traits> *' this))))))


        int_type snextc() (CompoundStmt 0xa0bb258 </usr/include/c++/4.6/streambuf:278:7, line:284:7>
  (DeclStmt 0xa0bb000 <line:279:2, col:37>
    0xa0baf50 "int_type __ret =
      (CallExpr 0xa0bafe0 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0bafa8 <col:19, col:32> '<dependent type>' lvalue))")
  (IfStmt 0xa0bb210 <line:280:2, line:282:24>
    <<<NULL>>>
    (CallExpr 0xa0bb150 <line:280:6, line:281:26> '<dependent type>'
      (DeclRefExpr 0xa0bb010 <line:280:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (UnaryOperator 0xa0bb128 <col:23, line:281:19> '<dependent type>' prefix '!'
        (CallExpr 0xa0bb100 <line:280:24, line:281:19> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0bb048 <line:280:24, col:37> '<dependent type>' lvalue)
          (CallExpr 0xa0bb0c8 <col:49, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0bb090 <col:49, col:55> '<dependent type>' lvalue
              (CXXThisExpr 0xa0bb080 <col:49> 'basic_streambuf<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa0bb0e4 <line:281:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0baf50 '__ret' 'int_type':'typename traits_type::int_type')))
      (CXXBoolLiteralExpr 0xa0bb140 <col:22> '_Bool' true))
    (BinaryOperator 0xa0bb1f8 <line:282:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa0bb174 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0baf50 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa0bb1d8 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0bb1a0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa0bb190 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))))
    <<<NULL>>>)
  (ReturnStmt 0xa0bb248 <line:283:2, col:9>
    (DeclRefExpr 0xa0bb22c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0baf50 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sbumpc() (CompoundStmt 0xa0c22f8 </usr/include/c++/4.6/streambuf:296:7, line:306:7>
  (DeclStmt 0xa0bb2b8 <line:297:2, col:16>
    0xa0bb280 "int_type __ret")
  (IfStmt 0xa0c22b0 <line:298:2, line:304:24>
    <<<NULL>>>
    (CallExpr 0xa0bb430 <line:298:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa0bb2c8 <col:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa0bb3f8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa0bb3b0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (CallExpr 0xa0bb328 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0bb2f0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa0bb2e0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa0bb390 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0bb358 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa0bb348 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa0bb420 <col:53> '_Bool' true))
    (CompoundStmt 0xa0c2200 <line:299:4, line:302:4>
      (BinaryOperator 0xa0c2168 <line:300:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa0bb454 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0bb280 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa0bb548 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0bb490 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa0bb530 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa0bb510 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0bb4d8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa0bb4c8 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0xa0c21e0 <line:301:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c2190 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c2180 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa0c21c8 <col:18> 'int' 1)))
    (BinaryOperator 0xa0c2298 <line:304:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa0c2218 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0bb280 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa0c2278 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c2240 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c2230 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa0c22e8 <line:305:2, col:9>
    (DeclRefExpr 0xa0c22cc <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0bb280 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sgetc() (CompoundStmt 0xa0c2700 </usr/include/c++/4.6/streambuf:318:7, line:325:7>
  (DeclStmt 0xa0c2358 <line:319:2, col:16>
    0xa0c2320 "int_type __ret")
  (IfStmt 0xa0c26b8 <line:320:2, line:323:28>
    <<<NULL>>>
    (CallExpr 0xa0c24d0 <line:320:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa0c2368 <col:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa0c2498 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c2450 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (CallExpr 0xa0c23c8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c2390 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c2380 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa0c2430 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c23f8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c23e8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa0c24c0 <col:53> '_Bool' true))
    (BinaryOperator 0xa0c2608 <line:321:4, col:50> '<dependent type>' '='
      (DeclRefExpr 0xa0c24f4 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c2320 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa0c25e8 <col:12, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c2530 <col:12, col:25> '<dependent type>' lvalue)
        (UnaryOperator 0xa0c25d0 <col:37, col:49> '<dependent type>' prefix '*'
          (CallExpr 0xa0c25b0 <col:38, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0c2578 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0xa0c2568 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))))
    (BinaryOperator 0xa0c26a0 <line:323:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0xa0c2620 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c2320 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa0c2680 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c2648 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c2638 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa0c26f0 <line:324:2, col:9>
    (DeclRefExpr 0xa0c26d4 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c2320 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sgetn(char_type *__s, streamsize __n) (CompoundStmt 0xa0c27d0 </usr/include/c++/4.6/streambuf:337:7, col:40>
  (ReturnStmt 0xa0c27c0 <col:9, col:37>
    (CallExpr 0xa0c2798 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0c2730 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c2720 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa0c2764 <col:29> 'char_type *' lvalue ParmVar 0xa0b82f0 '__s' 'char_type *')
      (DeclRefExpr 0xa0c277c <col:34> 'streamsize':'int' lvalue ParmVar 0xa0b8330 '__n' 'streamsize':'int'))))


        int_type sputbackc(char_type __c) (CompoundStmt 0xa0c2f18 </usr/include/c++/4.6/streambuf:352:7, line:364:7>
  (DeclStmt 0xa0c2828 <line:353:2, col:16>
    0xa0c27f0 "int_type __ret")
  (DeclStmt 0xa0c29b8 <line:354:2, col:53>
    0xa0c2840 "const bool __testpos =
      (CXXOperatorCallExpr 0xa0c2990 <col:25, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c2948 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (CallExpr 0xa0c28c0 <col:25, col:37> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c2888 <col:25, col:31> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c2878 <col:25> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa0c2928 <col:41, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c28f0 <col:41, col:47> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c28e0 <col:41> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (IfStmt 0xa0c2ed0 <line:355:2, line:362:4>
    <<<NULL>>>
    (CallExpr 0xa0c2ba8 <line:355:6, line:356:55> '<dependent type>'
      (DeclRefExpr 0xa0c29c8 <line:355:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0xa0c2b80 <col:23, line:356:47> '<dependent type>' '||'
        (UnaryOperator 0xa0c2a08 <line:355:23, col:24> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa0c29f8 <col:24> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa0c29e0 <col:24> 'const _Bool' lvalue Var 0xa0c2840 '__testpos' 'const _Bool')))
        (UnaryOperator 0xa0c2b68 <line:356:9, col:47> '<dependent type>' prefix '!'
          (CallExpr 0xa0c2b40 <col:10, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0c2a40 <col:10, col:23> '<dependent type>' lvalue)
            (DeclRefExpr 0xa0c2a74 <col:26> 'char_type':'_CharT' lvalue ParmVar 0xa0b8440 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa0c2b28 <col:31, col:46> '<dependent type>' lvalue
              (CallExpr 0xa0c2ad8 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0c2aa0 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0c2a90 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
              (UnaryOperator 0xa0c2b10 <col:44, col:45> 'int' prefix '-'
                (IntegerLiteral 0xa0c2af8 <col:45> 'int' 1))))))
      (CXXBoolLiteralExpr 0xa0c2b98 <col:50> '_Bool' false))
    (BinaryOperator 0xa0c2ce0 <line:357:4, col:57> '<dependent type>' '='
      (DeclRefExpr 0xa0c2bcc <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c27f0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa0c2cc0 <col:12, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c2bf8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c2be8 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0xa0c2ca0 <col:28, col:56> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c2c50 <col:28, col:41> '<dependent type>' lvalue)
          (DeclRefExpr 0xa0c2c84 <col:53> 'char_type':'_CharT' lvalue ParmVar 0xa0b8440 '__c' 'char_type':'_CharT'))))
    (CompoundStmt 0xa0c2eb8 <line:359:4, line:362:4>
      (CallExpr 0xa0c2d70 <line:360:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c2d08 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c2cf8 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0xa0c2d58 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0xa0c2d40 <col:19> 'int' 1)))
      (BinaryOperator 0xa0c2ea0 <line:361:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa0c2d90 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c27f0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa0c2e80 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c2dc8 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa0c2e68 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa0c2e48 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0c2e10 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa0c2e00 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))))
  (ReturnStmt 0xa0c2f08 <line:363:2, col:9>
    (DeclRefExpr 0xa0c2eec <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c27f0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sungetc() (CompoundStmt 0xa0c33d0 </usr/include/c++/4.6/streambuf:377:7, line:387:7>
  (DeclStmt 0xa0c2f78 <line:378:2, col:16>
    0xa0c2f40 "int_type __ret")
  (IfStmt 0xa0c3388 <line:379:2, line:385:28>
    <<<NULL>>>
    (CallExpr 0xa0c30f0 <line:379:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa0c2f88 <col:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa0c30b8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c3070 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (CallExpr 0xa0c2fe8 <col:23, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c2fb0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c2fa0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa0c3050 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c3018 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c3008 <col:39> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa0c30e0 <col:53> '_Bool' true))
    (CompoundStmt 0xa0c32d8 <line:380:4, line:383:4>
      (CallExpr 0xa0c3190 <line:381:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c3128 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c3118 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0xa0c3178 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0xa0c3160 <col:19> 'int' 1)))
      (BinaryOperator 0xa0c32c0 <line:382:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa0c31b0 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c2f40 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa0c32a0 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c31e8 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa0c3288 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa0c3268 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0c3230 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa0c3220 <col:40> 'basic_streambuf<_CharT, _Traits> *' this)))))))
    (BinaryOperator 0xa0c3370 <line:385:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0xa0c32f0 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c2f40 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa0c3350 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c3318 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c3308 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa0c33c0 <line:386:2, col:9>
    (DeclRefExpr 0xa0c33a4 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c2f40 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sputc(char_type __c) (CompoundStmt 0xa0c3958 </usr/include/c++/4.6/streambuf:404:7, line:415:7>
  (DeclStmt 0xa0c3438 <line:405:2, col:16>
    0xa0c3400 "int_type __ret")
  (IfStmt 0xa0c3910 <line:406:2, line:413:56>
    <<<NULL>>>
    (CallExpr 0xa0c35b0 <line:406:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa0c3448 <col:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa0c3578 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa0c3530 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (CallExpr 0xa0c34a8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c3470 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c3460 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa0c3510 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c34d8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c34c8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa0c35a0 <col:53> '_Bool' true))
    (CompoundStmt 0xa0c37c8 <line:407:4, line:411:4>
      (BinaryOperator 0xa0c3670 <line:408:6, col:22> '<dependent type>' '='
        (UnaryOperator 0xa0c3640 <col:6, col:18> '<dependent type>' prefix '*'
          (CallExpr 0xa0c3620 <col:7, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0c35e8 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa0c35d8 <col:7> 'basic_streambuf<_CharT, _Traits> *' this))))
        (DeclRefExpr 0xa0c3654 <col:22> 'char_type':'_CharT' lvalue ParmVar 0xa0b85d0 '__c' 'char_type':'_CharT'))
      (CallExpr 0xa0c36e8 <line:409:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c3698 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c3688 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa0c36d0 <col:18> 'int' 1))
      (BinaryOperator 0xa0c37b0 <line:410:6, col:42> '<dependent type>' '='
        (DeclRefExpr 0xa0c3708 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c3400 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa0c3790 <col:14, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c3740 <col:14, col:27> '<dependent type>' lvalue)
          (DeclRefExpr 0xa0c3774 <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa0b85d0 '__c' 'char_type':'_CharT'))))
    (BinaryOperator 0xa0c38f8 <line:413:4, col:56> '<dependent type>' '='
      (DeclRefExpr 0xa0c37e4 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c3400 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa0c38d8 <col:12, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c3810 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c3800 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0xa0c38b8 <col:27, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c3868 <col:27, col:40> '<dependent type>' lvalue)
          (DeclRefExpr 0xa0c389c <col:52> 'char_type':'_CharT' lvalue ParmVar 0xa0b85d0 '__c' 'char_type':'_CharT')))))
  (ReturnStmt 0xa0c3948 <line:414:2, col:9>
    (DeclRefExpr 0xa0c392c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c3400 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sputn(const char_type *__s, streamsize __n) (CompoundStmt 0xa0c3a28 </usr/include/c++/4.6/streambuf:430:7, col:40>
  (ReturnStmt 0xa0c3a18 <col:9, col:37>
    (CallExpr 0xa0c39f0 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0c3988 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c3978 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa0c39bc <col:29> 'const char_type *' lvalue ParmVar 0xa0b86c0 '__s' 'const char_type *')
      (DeclRefExpr 0xa0c39d4 <col:34> 'streamsize':'int' lvalue ParmVar 0xa0b8700 '__n' 'streamsize':'int'))))


    protected:
    protected:
        basic_streambuf<_CharT, _Traits>() : _M_in_beg((IntegerLiteral 0xa0c3a40 </usr/include/c++/4.6/streambuf:443:19> 'int' 0)
), _M_in_cur((IntegerLiteral 0xa0c3a98 </usr/include/c++/4.6/streambuf:443:33> 'int' 0)
), _M_in_end((IntegerLiteral 0xa0c3ae8 </usr/include/c++/4.6/streambuf:443:47> 'int' 0)
), _M_out_beg((IntegerLiteral 0xa0c3b38 </usr/include/c++/4.6/streambuf:444:18> 'int' 0)
), _M_out_cur((IntegerLiteral 0xa0c3b88 </usr/include/c++/4.6/streambuf:444:33> 'int' 0)
), _M_out_end((IntegerLiteral 0xa0c3bd8 </usr/include/c++/4.6/streambuf:444:48> 'int' 0)
), _M_buf_locale((CXXBindTemporaryExpr 0xa0c3c68 </usr/include/c++/4.6/streambuf:445:21, col:28> 'class std::locale' (CXXTemporary 0xa0c3c60)
  (CXXTemporaryObjectExpr 0xa0c3c30 <col:21, col:28> 'class std::locale''void (void) throw()'))
) (CompoundStmt 0xa0c3d38 </usr/include/c++/4.6/streambuf:446:7, col:9>)


        char_type *eback() const (CompoundStmt 0xa0c3d88 </usr/include/c++/4.6/streambuf:461:21, col:41>
  (ReturnStmt 0xa0c3d78 <col:23, col:30>
    (MemberExpr 0xa0c3d58 <col:30> 'char_type *const' lvalue ->_M_in_beg 0xa0b76e0
      (CXXThisExpr 0xa0c3d48 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *gptr() const (CompoundStmt 0xa0c3de0 </usr/include/c++/4.6/streambuf:464:21, col:42>
  (ReturnStmt 0xa0c3dd0 <col:23, col:30>
    (MemberExpr 0xa0c3db0 <col:30> 'char_type *const' lvalue ->_M_in_cur 0xa0b7720
      (CXXThisExpr 0xa0c3da0 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *egptr() const (CompoundStmt 0xa0c3e38 </usr/include/c++/4.6/streambuf:467:21, col:41>
  (ReturnStmt 0xa0c3e28 <col:23, col:30>
    (MemberExpr 0xa0c3e08 <col:30> 'char_type *const' lvalue ->_M_in_end 0xa0b7760
      (CXXThisExpr 0xa0c3df8 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void gbump(int __n) (CompoundStmt 0xa0c3eb8 </usr/include/c++/4.6/streambuf:477:22, col:42>
  (CompoundAssignOperator 0xa0c3e98 <col:24, col:37> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa0c3e60 <col:24> 'char_type *' lvalue ->_M_in_cur 0xa0b7720
      (CXXThisExpr 0xa0c3e50 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa0c3e80 <col:37> 'int' lvalue ParmVar 0xa0b8a90 '__n' 'int')))


        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend) (CompoundStmt 0xa0c3ff0 </usr/include/c++/4.6/streambuf:489:7, line:493:7>
  (BinaryOperator 0xa0c3f18 <line:490:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa0c3ee0 <col:2> 'char_type *' lvalue ->_M_in_beg 0xa0b76e0
      (CXXThisExpr 0xa0c3ed0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa0c3f00 <col:14> 'char_type *' lvalue ParmVar 0xa0b8b60 '__gbeg' 'char_type *'))
  (BinaryOperator 0xa0c3f78 <line:491:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa0c3f40 <col:2> 'char_type *' lvalue ->_M_in_cur 0xa0b7720
      (CXXThisExpr 0xa0c3f30 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa0c3f60 <col:14> 'char_type *' lvalue ParmVar 0xa0b8bb0 '__gnext' 'char_type *'))
  (BinaryOperator 0xa0c3fd8 <line:492:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa0c3fa0 <col:2> 'char_type *' lvalue ->_M_in_end 0xa0b7760
      (CXXThisExpr 0xa0c3f90 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa0c3fc0 <col:14> 'char_type *' lvalue ParmVar 0xa0b8c00 '__gend' 'char_type *')))


        char_type *pbase() const (CompoundStmt 0xa0c4050 </usr/include/c++/4.6/streambuf:508:21, col:42>
  (ReturnStmt 0xa0c4040 <col:23, col:30>
    (MemberExpr 0xa0c4020 <col:30> 'char_type *const' lvalue ->_M_out_beg 0xa0b77a0
      (CXXThisExpr 0xa0c4010 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *pptr() const (CompoundStmt 0xa0c40a8 </usr/include/c++/4.6/streambuf:511:20, col:41>
  (ReturnStmt 0xa0c4098 <col:22, col:29>
    (MemberExpr 0xa0c4078 <col:29> 'char_type *const' lvalue ->_M_out_cur 0xa0b77e0
      (CXXThisExpr 0xa0c4068 <col:29> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *epptr() const (CompoundStmt 0xa0c4100 </usr/include/c++/4.6/streambuf:514:21, col:42>
  (ReturnStmt 0xa0c40f0 <col:23, col:30>
    (MemberExpr 0xa0c40d0 <col:30> 'char_type *const' lvalue ->_M_out_end 0xa0b7820
      (CXXThisExpr 0xa0c40c0 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void pbump(int __n) (CompoundStmt 0xa0c4180 </usr/include/c++/4.6/streambuf:524:22, col:43>
  (CompoundAssignOperator 0xa0c4160 <col:24, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa0c4128 <col:24> 'char_type *' lvalue ->_M_out_cur 0xa0b77e0
      (CXXThisExpr 0xa0c4118 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa0c4148 <col:38> 'int' lvalue ParmVar 0xa0b8e90 '__n' 'int')))


        void setp(char_type *__pbeg, char_type *__pend) (CompoundStmt 0xa0c42a0 </usr/include/c++/4.6/streambuf:535:7, line:538:7>
  (BinaryOperator 0xa0c4228 <line:536:2, col:28> '<dependent type>' '='
    (MemberExpr 0xa0c41a8 <col:2> 'char_type *' lvalue ->_M_out_beg 0xa0b77a0
      (CXXThisExpr 0xa0c4198 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (BinaryOperator 0xa0c4210 <col:15, col:28> '<dependent type>' '='
      (MemberExpr 0xa0c41d8 <col:15> 'char_type *' lvalue ->_M_out_cur 0xa0b77e0
        (CXXThisExpr 0xa0c41c8 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa0c41f8 <col:28> 'char_type *' lvalue ParmVar 0xa0b8f60 '__pbeg' 'char_type *')))
  (BinaryOperator 0xa0c4288 <line:537:2, col:15> '<dependent type>' '='
    (MemberExpr 0xa0c4250 <col:2> 'char_type *' lvalue ->_M_out_end 0xa0b7820
      (CXXThisExpr 0xa0c4240 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa0c4270 <col:15> 'char_type *' lvalue ParmVar 0xa0b8fb0 '__pend' 'char_type *')))


        virtual void imbue(const std::locale &) (CompoundStmt 0xa0c42b8 </usr/include/c++/4.6/streambuf:556:7, col:9>)


        virtual basic_streambuf<char_type, _Traits> *setbuf(char_type *, streamsize) (CompoundStmt 0xa0c42e8 </usr/include/c++/4.6/streambuf:571:7, col:22>
  (ReturnStmt 0xa0c42d8 <col:9, col:16>
    (CXXThisExpr 0xa0c42c8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this)))


        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (CXXOperatorCallExpr 0xa0ba520 </usr/include/c++/4.6/streambuf:582:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa0ba510 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa0ba4f8 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa0ba4d8 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0ba474 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa0ba4e8 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0ba4b4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa0c4390 </usr/include/c++/4.6/streambuf:583:7, col:40>
  (ReturnStmt 0xa0c4380 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0xa0c4360 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0xa0c4340 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0xa0c4328 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0xa0c4310 <col:35> 'int' 1))))))


        virtual pos_type seekpos(pos_type, ios_base::openmode = (CXXOperatorCallExpr 0xa0ba610 </usr/include/c++/4.6/streambuf:594:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa0ba600 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa0ba5e8 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa0ba5c8 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0ba564 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa0ba5d8 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa0ba5a4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa0c4438 </usr/include/c++/4.6/streambuf:595:7, col:40>
  (ReturnStmt 0xa0c4428 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0xa0c4408 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0xa0c43e8 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0xa0c43d0 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0xa0c43b8 <col:35> 'int' 1))))))


        virtual int sync() (CompoundStmt 0xa0c4478 </usr/include/c++/4.6/streambuf:606:14, col:26>
  (ReturnStmt 0xa0c4468 <col:16, col:23>
    (IntegerLiteral 0xa0c4450 <col:23> 'int' 0)))


        virtual streamsize showmanyc() (CompoundStmt 0xa0c44b8 </usr/include/c++/4.6/streambuf:628:19, col:31>
  (ReturnStmt 0xa0c44a8 <col:21, col:28>
    (IntegerLiteral 0xa0c4490 <col:28> 'int' 0)))


        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow() (CompoundStmt 0xa0c4558 </usr/include/c++/4.6/streambuf:667:7, col:36>
  (ReturnStmt 0xa0c4548 <col:9, col:33>
    (CallExpr 0xa0c4528 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0c44f0 <col:16, col:29> '<dependent type>' lvalue))))


        virtual int_type uflow() (CompoundStmt 0xa0c49e0 </usr/include/c++/4.6/streambuf:680:7, line:690:7>
  (DeclStmt 0xa0c4630 <line:681:2, col:37>
    0xa0c4580 "int_type __ret =
      (CallExpr 0xa0c4610 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c45d8 <col:19, col:32> '<dependent type>' lvalue))")
  (DeclStmt 0xa0c4788 <line:682:2, line:683:14>
    0xa0c4650 "const bool __testeof =
      (CallExpr 0xa0c4760 <line:682:25, line:683:13> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c46a8 <line:682:25, col:38> '<dependent type>' lvalue)
        (CallExpr 0xa0c4728 <col:50, col:66> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c46f0 <col:50, col:56> '<dependent type>' lvalue
            (CXXThisExpr 0xa0c46e0 <col:50> 'basic_streambuf<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa0c4744 <line:683:8> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c4580 '__ret' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0xa0c4998 <line:684:2, line:688:4>
    <<<NULL>>>
    (UnaryOperator 0xa0c47c0 <line:684:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa0c47b0 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa0c4798 <col:7> 'const _Bool' lvalue Var 0xa0c4650 '__testeof' 'const _Bool')))
    (CompoundStmt 0xa0c4980 <line:685:4, line:688:4>
      (BinaryOperator 0xa0c48e8 <line:686:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa0c47d4 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c4580 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa0c48c8 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0c4810 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa0c48b0 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa0c4890 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0c4858 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa0c4848 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0xa0c4960 <line:687:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c4910 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c4900 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa0c4948 <col:18> 'int' 1)))
    <<<NULL>>>)
  (ReturnStmt 0xa0c49d0 <line:689:2, col:9>
    (DeclRefExpr 0xa0c49b4 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c4580 '__ret' 'int_type':'typename traits_type::int_type')))


        virtual int_type pbackfail(int_type = (CallExpr 0xa0ba680 </usr/include/c++/4.6/streambuf:703:39, col:56> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa0ba658 <col:39, col:52> '<dependent type>' lvalue))
) (CompoundStmt 0xa0c4a88 </usr/include/c++/4.6/streambuf:704:7, col:36>
  (ReturnStmt 0xa0c4a78 <col:9, col:33>
    (CallExpr 0xa0c4a58 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0c4a20 <col:16, col:29> '<dependent type>' lvalue))))


        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type = (CallExpr 0xa0ba6e8 </usr/include/c++/4.6/streambuf:747:37, col:54> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa0ba6c0 <col:37, col:50> '<dependent type>' lvalue))
) (CompoundStmt 0xa0c4b28 </usr/include/c++/4.6/streambuf:748:7, col:36>
  (ReturnStmt 0xa0c4b18 <col:9, col:33>
    (CallExpr 0xa0c4af8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0c4ac0 <col:16, col:29> '<dependent type>' lvalue))))


    public:
    public:
        void stossc() (CompoundStmt 0xa0c4d88 </usr/include/c++/4.6/streambuf:763:7, line:768:7>
  (IfStmt 0xa0c4d68 <line:764:2, line:767:16>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa0c4c58 <line:764:6, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa0c4c10 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
      (CallExpr 0xa0c4b88 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c4b50 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c4b40 <col:6> 'basic_streambuf<_CharT, _Traits> *' this)))
      (CallExpr 0xa0c4bf0 <col:21, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0c4bb8 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0xa0c4ba8 <col:21> 'basic_streambuf<_CharT, _Traits> *' this))))
    (CallExpr 0xa0c4ce0 <line:765:4, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0c4c90 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c4c80 <col:4> 'basic_streambuf<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa0c4cc8 <col:16> 'int' 1))
    (CallExpr 0xa0c4d48 <line:767:4, col:16> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0c4d10 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa0c4d00 <col:4> 'basic_streambuf<_CharT, _Traits> *' this)))))


        void __safe_gbump(streamsize __n) (CompoundStmt 0xa0c4e08 </usr/include/c++/4.6/streambuf:773:36, col:56>
  (CompoundAssignOperator 0xa0c4de8 <col:38, col:51> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa0c4db0 <col:38> 'char_type *' lvalue ->_M_in_cur 0xa0b7720
      (CXXThisExpr 0xa0c4da0 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa0c4dd0 <col:51> 'streamsize':'int' lvalue ParmVar 0xa0b9dd0 '__n' 'streamsize':'int')))


        void __safe_pbump(streamsize __n) (CompoundStmt 0xa0c4e88 </usr/include/c++/4.6/streambuf:776:36, col:57>
  (CompoundAssignOperator 0xa0c4e68 <col:38, col:52> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa0c4e30 <col:38> 'char_type *' lvalue ->_M_out_cur 0xa0b77e0
      (CXXThisExpr 0xa0c4e20 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa0c4e50 <col:52> 'streamsize':'int' lvalue ParmVar 0xa0b9ec0 '__n' 'streamsize':'int')))


    private:
    private:
        basic_streambuf<_CharT, _Traits>(const __streambuf_type &__sb) : _M_in_beg((CXXDependentScopeMemberExpr 0xa0c4eb8 </usr/include/c++/4.6/streambuf:782:19, col:24> '<dependent type>' lvalue
  (DeclRefExpr 0xa0c4e9c <col:19> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa0ba010 '__sb' 'const __streambuf_type &'))
), _M_in_cur((CXXDependentScopeMemberExpr 0xa0c4f40 </usr/include/c++/4.6/streambuf:782:46, col:51> '<dependent type>' lvalue
  (DeclRefExpr 0xa0c4f28 <col:46> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa0ba010 '__sb' 'const __streambuf_type &'))
), _M_in_end((CXXDependentScopeMemberExpr 0xa0c4fd0 </usr/include/c++/4.6/streambuf:783:17, col:22> '<dependent type>' lvalue
  (DeclRefExpr 0xa0c4fb8 <col:17> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa0ba010 '__sb' 'const __streambuf_type &'))
), _M_out_beg((CXXDependentScopeMemberExpr 0xa0c5060 </usr/include/c++/4.6/streambuf:783:45, col:50> '<dependent type>' lvalue
  (DeclRefExpr 0xa0c5048 <col:45> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa0ba010 '__sb' 'const __streambuf_type &'))
), _M_out_cur((CXXDependentScopeMemberExpr 0xa0c50f0 </usr/include/c++/4.6/streambuf:784:18, col:23> '<dependent type>' lvalue
  (DeclRefExpr 0xa0c50d8 <col:18> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa0ba010 '__sb' 'const __streambuf_type &'))
), _M_out_end((CXXDependentScopeMemberExpr 0xa0c5180 </usr/include/c++/4.6/streambuf:784:47, col:52> '<dependent type>' lvalue
  (DeclRefExpr 0xa0c5168 <col:47> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa0ba010 '__sb' 'const __streambuf_type &'))
), _M_buf_locale((CXXDependentScopeMemberExpr 0xa0c5210 </usr/include/c++/4.6/streambuf:785:21, col:26> '<dependent type>' lvalue
  (DeclRefExpr 0xa0c51f8 <col:21> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa0ba010 '__sb' 'const __streambuf_type &'))
) (CompoundStmt 0xa0c52a8 </usr/include/c++/4.6/streambuf:786:7, col:9>)


        __streambuf_type &operator=(const __streambuf_type &) (CompoundStmt 0xa0c52f0 </usr/include/c++/4.6/streambuf:789:42, col:58>
  (ReturnStmt 0xa0c52e0 <col:44, col:52>
    (UnaryOperator 0xa0c52c8 <col:51, col:52> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0c52b8 <col:52> 'basic_streambuf<_CharT, _Traits> *' this))))


    };
    streamsize __copy_streambufs_eof(basic_streambuf<char> *__sbin, basic_streambuf<char> *__sbout, bool &__ineof);
    streamsize __copy_streambufs_eof(basic_streambuf<wchar_t> *__sbin, basic_streambuf<wchar_t> *__sbout, bool &__ineof);
}
namespace std {
    streamsize xsgetn(char_type *__s, streamsize __n) (CompoundStmt 0xa0c93f8 </usr/include/c++/4.6/bits/streambuf.tcc:47:5, line:75:5>
  (DeclStmt 0xa0c85f0 <line:48:7, col:27>
    0xa0c85a0 "streamsize __ret =
      (IntegerLiteral 0xa0c85d8 <col:26> 'int' 0)")
  (WhileStmt 0xa0c93a8 <line:49:7, line:73:2>
    <<<NULL>>>
    (BinaryOperator 0xa0c8650 <line:49:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0xa0c8630 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa0c8600 <col:14> 'streamsize':'int' lvalue Var 0xa0c85a0 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0xa0c8640 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa0c8618 <col:22> 'streamsize':'int' lvalue ParmVar 0xa0c84a0 '__n' 'streamsize':'int')))
    (CompoundStmt 0xa0c9388 <line:50:2, line:73:2>
      (DeclStmt 0xa0c87d8 <line:51:4, col:61>
        0xa0c8670 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0xa0c87b0 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa0c8778 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (CallExpr 0xa0c86f0 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0c86b8 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0xa0c86a8 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0xa0c8758 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0c8720 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0xa0c8710 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0xa0c8ef8 <line:52:4, line:60:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa0c8810 <line:52:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa0c8800 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa0c87e8 <col:8> 'const streamsize':'const int' lvalue Var 0xa0c8670 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0xa0c8ed0 <line:53:6, line:60:6>
          (DeclStmt 0xa0c88d0 <line:54:8, col:50>
            0xa0c8830 "const streamsize __remaining =
              (BinaryOperator 0xa0c88b8 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0xa0c8898 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa0c8864 <col:39> 'streamsize':'int' lvalue ParmVar 0xa0c84a0 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0xa0c88a8 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa0c887c <col:45> 'streamsize':'int' lvalue Var 0xa0c85a0 '__ret' 'streamsize':'int')))")
          (DeclStmt 0xa0c8c70 <line:55:8, col:65>
            0xa0c88f0 "const streamsize __len =
              (ImplicitCastExpr 0xa0c8c60 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0xa0c8c38 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa0c8c28 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa0c8bc8 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0xa0c8b20 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9e8ec70 'min')))
                  (DeclRefExpr 0xa0c8980 <col:42> 'const streamsize':'const int' lvalue Var 0xa0c8670 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0xa0c8998 <col:53> 'const streamsize':'const int' lvalue Var 0xa0c8830 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0xa0c8d78 <line:56:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0c8ca8 <col:8, col:21> '<dependent type>' lvalue)
            (DeclRefExpr 0xa0c8cdc <col:26> 'char_type *' lvalue ParmVar 0xa0c8460 '__s' 'char_type *')
            (CallExpr 0xa0c8d40 <col:31, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0c8d08 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0xa0c8cf8 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa0c8d5c <col:45> 'const streamsize':'const int' lvalue Var 0xa0c88f0 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0xa0c8de0 <line:57:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa0c8da0 <col:8> 'streamsize':'int' lvalue Var 0xa0c85a0 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0xa0c8dd0 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa0c8db8 <col:17> 'const streamsize':'const int' lvalue Var 0xa0c88f0 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0xa0c8e30 <line:58:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa0c8e00 <col:8> 'char_type *' lvalue ParmVar 0xa0c8460 '__s' 'char_type *')
            (DeclRefExpr 0xa0c8e18 <col:15> 'const streamsize':'const int' lvalue Var 0xa0c88f0 '__len' 'const streamsize':'const int'))
          (CallExpr 0xa0c8eb0 <line:59:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0c8e60 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa0c8e50 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0c8e94 <col:27> 'const streamsize':'const int' lvalue Var 0xa0c88f0 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0xa0c9368 <line:62:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0xa0c8f68 <line:62:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0xa0c8f48 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa0c8f14 <col:8> 'streamsize':'int' lvalue Var 0xa0c85a0 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0xa0c8f58 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa0c8f2c <col:16> 'streamsize':'int' lvalue ParmVar 0xa0c84a0 '__n' 'streamsize':'int')))
        (CompoundStmt 0xa0c9350 <line:63:6, line:72:6>
          (DeclStmt 0xa0c9030 <line:64:8, col:42>
            0xa0c8f90 "const int_type __c =
              (CallExpr 0xa0c9010 <col:29, col:41> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0c8fd8 <col:29, col:35> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0c8fc8 <col:29> 'basic_streambuf<_CharT, _Traits> *' this)))")
          (IfStmt 0xa0c9330 <line:65:8, line:71:3>
            <<<NULL>>>
            (UnaryOperator 0xa0c9150 <line:65:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0xa0c9128 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0c9060 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa0c9094 <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa0c8f90 '__c' 'const int_type':'const typename traits_type::int_type')
                (CallExpr 0xa0c9108 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0c90d0 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0xa0c9310 <line:66:3, line:69:3>
              (CallExpr 0xa0c92b8 <line:67:5, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0c9190 <col:5, col:18> '<dependent type>' lvalue)
                (UnaryOperator 0xa0c9210 <col:25, col:29> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa0c91f8 <col:26, col:29> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa0c91c4 <col:26> 'char_type *' lvalue ParmVar 0xa0c8460 '__s' 'char_type *')))
                (CallExpr 0xa0c9298 <col:33, col:62> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0c9248 <col:33, col:46> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa0c927c <col:59> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa0c8f90 '__c' 'const int_type':'const typename traits_type::int_type')))
              (UnaryOperator 0xa0c92f8 <line:68:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa0c92dc <col:7> 'streamsize':'int' lvalue Var 0xa0c85a0 '__ret' 'streamsize':'int')))
            (BreakStmt 0xa0c9328 <line:71:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0xa0c93e8 <line:74:7, col:14>
    (ImplicitCastExpr 0xa0c93d8 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa0c93bc <col:14> 'streamsize':'int' lvalue Var 0xa0c85a0 '__ret' 'streamsize':'int'))))


    streamsize xsputn(const char_type *__s, streamsize __n) (CompoundStmt 0xa0ca388 </usr/include/c++/4.6/bits/streambuf.tcc:81:5, line:109:5>
  (DeclStmt 0xa0c9850 <line:82:7, col:27>
    0xa0c9800 "streamsize __ret =
      (IntegerLiteral 0xa0c9838 <col:26> 'int' 0)")
  (WhileStmt 0xa0ca338 <line:83:7, line:107:2>
    <<<NULL>>>
    (BinaryOperator 0xa0c98b0 <line:83:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0xa0c9890 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa0c9860 <col:14> 'streamsize':'int' lvalue Var 0xa0c9800 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0xa0c98a0 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa0c9878 <col:22> 'streamsize':'int' lvalue ParmVar 0xa0c9700 '__n' 'streamsize':'int')))
    (CompoundStmt 0xa0ca318 <line:84:2, line:107:2>
      (DeclStmt 0xa0c9a38 <line:85:4, col:61>
        0xa0c98d0 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0xa0c9a10 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa0c99d8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (CallExpr 0xa0c9950 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0c9918 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0xa0c9908 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0xa0c99b8 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0c9980 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0xa0c9970 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0xa0c9f30 <line:86:4, line:94:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa0c9a70 <line:86:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa0c9a60 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa0c9a48 <col:8> 'const streamsize':'const int' lvalue Var 0xa0c98d0 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0xa0c9f08 <line:87:6, line:94:6>
          (DeclStmt 0xa0c9b30 <line:88:8, col:50>
            0xa0c9a90 "const streamsize __remaining =
              (BinaryOperator 0xa0c9b18 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0xa0c9af8 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa0c9ac4 <col:39> 'streamsize':'int' lvalue ParmVar 0xa0c9700 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0xa0c9b08 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa0c9adc <col:45> 'streamsize':'int' lvalue Var 0xa0c9800 '__ret' 'streamsize':'int')))")
          (DeclStmt 0xa0c9ca8 <line:89:8, col:65>
            0xa0c9b50 "const streamsize __len =
              (ImplicitCastExpr 0xa0c9c98 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0xa0c9c70 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa0c9c60 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa0c9c38 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0xa0c8b20 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9e8ec70 'min')))
                  (DeclRefExpr 0xa0c9bd8 <col:42> 'const streamsize':'const int' lvalue Var 0xa0c98d0 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0xa0c9bf0 <col:53> 'const streamsize':'const int' lvalue Var 0xa0c9a90 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0xa0c9db0 <line:90:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0c9ce0 <col:8, col:21> '<dependent type>' lvalue)
            (CallExpr 0xa0c9d60 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0c9d28 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa0c9d18 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa0c9d7c <col:40> 'const char_type *' lvalue ParmVar 0xa0c96c0 '__s' 'const char_type *')
            (DeclRefExpr 0xa0c9d94 <col:45> 'const streamsize':'const int' lvalue Var 0xa0c9b50 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0xa0c9e18 <line:91:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa0c9dd8 <col:8> 'streamsize':'int' lvalue Var 0xa0c9800 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0xa0c9e08 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa0c9df0 <col:17> 'const streamsize':'const int' lvalue Var 0xa0c9b50 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0xa0c9e68 <line:92:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa0c9e38 <col:8> 'const char_type *' lvalue ParmVar 0xa0c96c0 '__s' 'const char_type *')
            (DeclRefExpr 0xa0c9e50 <col:15> 'const streamsize':'const int' lvalue Var 0xa0c9b50 '__len' 'const streamsize':'const int'))
          (CallExpr 0xa0c9ee8 <line:93:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0c9e98 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa0c9e88 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0c9ecc <col:27> 'const streamsize':'const int' lvalue Var 0xa0c9b50 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0xa0ca2f8 <line:96:4, line:106:6>
        <<<NULL>>>
        (BinaryOperator 0xa0c9fa0 <line:96:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0xa0c9f80 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa0c9f4c <col:8> 'streamsize':'int' lvalue Var 0xa0c9800 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0xa0c9f90 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa0c9f64 <col:16> 'streamsize':'int' lvalue ParmVar 0xa0c9700 '__n' 'streamsize':'int')))
        (CompoundStmt 0xa0ca2e0 <line:97:6, line:106:6>
          (DeclStmt 0xa0ca108 <line:98:8, col:69>
            0xa0c9fc0 "int_type __c =
              (CallExpr 0xa0ca0e8 <col:23, col:68> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0ca008 <col:23, col:29> '<dependent type>' lvalue
                  (CXXThisExpr 0xa0c9ff8 <col:23> 'basic_streambuf<_CharT, _Traits> *' this))
                (CallExpr 0xa0ca0c8 <col:38, col:67> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0ca060 <col:38, col:51> '<dependent type>' lvalue)
                  (UnaryOperator 0xa0ca0b0 <col:63, col:64> '<dependent type>' prefix '*'
                    (DeclRefExpr 0xa0ca094 <col:64> 'const char_type *' lvalue ParmVar 0xa0c96c0 '__s' 'const char_type *'))))")
          (IfStmt 0xa0ca2c0 <line:99:8, line:105:3>
            <<<NULL>>>
            (UnaryOperator 0xa0ca228 <line:99:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0xa0ca200 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa0ca138 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa0ca16c <col:38> 'int_type':'typename traits_type::int_type' lvalue Var 0xa0c9fc0 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa0ca1e0 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa0ca1a8 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0xa0ca2a0 <line:100:3, line:103:3>
              (UnaryOperator 0xa0ca258 <line:101:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa0ca23c <col:7> 'streamsize':'int' lvalue Var 0xa0c9800 '__ret' 'streamsize':'int'))
              (UnaryOperator 0xa0ca288 <line:102:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa0ca26c <col:7> 'const char_type *' lvalue ParmVar 0xa0c96c0 '__s' 'const char_type *')))
            (BreakStmt 0xa0ca2b8 <line:105:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0xa0ca378 <line:108:7, col:14>
    (ImplicitCastExpr 0xa0ca368 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa0ca34c <col:14> 'streamsize':'int' lvalue Var 0xa0c9800 '__ret' 'streamsize':'int'))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout, bool &__ineof) (CompoundStmt 0xa0caf28 </usr/include/c++/4.6/bits/streambuf.tcc:119:5, line:135:5>
  (DeclStmt 0xa0ca8d0 <line:120:7, col:27>
    0xa0ca880 "streamsize __ret =
      (IntegerLiteral 0xa0ca8b8 <col:26> 'int' 0)")
  (BinaryOperator 0xa0ca908 <line:121:7, col:17> '_Bool' lvalue '='
    (DeclRefExpr 0xa0ca8e0 <col:7> '_Bool' lvalue ParmVar 0xa0ca750 '__ineof' '_Bool &')
    (CXXBoolLiteralExpr 0xa0ca8f8 <col:17> '_Bool' true))
  (DeclStmt 0xa0caa38 <line:122:7, col:55>
    0xa0ca990 "typename _Traits::int_type __c =
      (CallExpr 0xa0caa18 <col:40, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0ca9e0 <col:40, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0xa0ca9c4 <col:40> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa0ca590 '__sbin' 'basic_streambuf<_CharT, _Traits> *')))")
  (WhileStmt 0xa0caed8 <line:123:7, line:133:2>
    <<<NULL>>>
    (UnaryOperator 0xa0cab38 <line:123:14, col:55> '<dependent type>' prefix '!'
      (CallExpr 0xa0cab10 <col:15, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa0caa68 <col:15, col:24> '<dependent type>' lvalue)
        (DeclRefExpr 0xa0caa8c <col:36> 'typename _Traits::int_type' lvalue Var 0xa0ca990 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa0caaf0 <col:41, col:54> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa0caac8 <col:41, col:50> '<dependent type>' lvalue))))
    (CompoundStmt 0xa0caeb8 <line:124:2, line:133:2>
      (BinaryOperator 0xa0cac58 <line:125:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0xa0cab4c <col:4> 'typename _Traits::int_type' lvalue Var 0xa0ca990 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa0cac38 <col:10, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0cab80 <col:10, col:19> '<dependent type>' lvalue
            (DeclRefExpr 0xa0cab64 <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa0ca700 '__sbout' 'basic_streambuf<_CharT, _Traits> *'))
          (CallExpr 0xa0cac18 <col:25, col:50> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa0cabd8 <col:25, col:34> '<dependent type>' lvalue)
            (DeclRefExpr 0xa0cabfc <col:47> 'typename _Traits::int_type' lvalue Var 0xa0ca990 '__c' 'typename _Traits::int_type'))))
      (IfStmt 0xa0cadc8 <line:126:4, line:130:6>
        <<<NULL>>>
        (CallExpr 0xa0cad40 <line:126:8, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa0cac98 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0xa0cacbc <col:29> 'typename _Traits::int_type' lvalue Var 0xa0ca990 '__c' 'typename _Traits::int_type')
          (CallExpr 0xa0cad20 <col:34, col:47> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa0cacf8 <col:34, col:43> '<dependent type>' lvalue)))
        (CompoundStmt 0xa0cadb0 <line:127:6, line:130:6>
          (BinaryOperator 0xa0cad90 <line:128:8, col:18> '_Bool' lvalue '='
            (DeclRefExpr 0xa0cad64 <col:8> '_Bool' lvalue ParmVar 0xa0ca750 '__ineof' '_Bool &')
            (CXXBoolLiteralExpr 0xa0cad80 <col:18> '_Bool' false))
          (BreakStmt 0xa0cada8 <line:129:8>))
        <<<NULL>>>)
      (UnaryOperator 0xa0cae00 <line:131:4, col:6> 'streamsize':'int' lvalue prefix '++'
        (DeclRefExpr 0xa0cade4 <col:6> 'streamsize':'int' lvalue Var 0xa0ca880 '__ret' 'streamsize':'int'))
      (BinaryOperator 0xa0caea0 <line:132:4, col:25> '<dependent type>' '='
        (DeclRefExpr 0xa0cae14 <col:4> 'typename _Traits::int_type' lvalue Var 0xa0ca990 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa0cae80 <col:10, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0cae48 <col:10, col:18> '<dependent type>' lvalue
            (DeclRefExpr 0xa0cae2c <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa0ca590 '__sbin' 'basic_streambuf<_CharT, _Traits> *'))))))
  (ReturnStmt 0xa0caf18 <line:134:7, col:14>
    (ImplicitCastExpr 0xa0caf08 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa0caeec <col:14> 'streamsize':'int' lvalue Var 0xa0ca880 '__ret' 'streamsize':'int'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline streamsize __copy_streambufs(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbin, basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbout)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline streamsize __copy_streambufs(basic_streambuf<char, std::char_traits<char> > *__sbin, basic_streambuf<char, std::char_traits<char> > *__sbout)template <typename _CharT, typename _Traits> inline streamsize __copy_streambufs(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout) (CompoundStmt 0xa0cb4e0 </usr/include/c++/4.6/bits/streambuf.tcc:141:5, line:144:5>
  (DeclStmt 0xa0cb418 <line:142:7, col:19>
    0xa0cb3e0 "bool __ineof")
  (ReturnStmt 0xa0cb4d0 <line:143:7, col:60>
    (CallExpr 0xa0cb4a8 <col:14, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0xa0cb428 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa0ca840)
      (DeclRefExpr 0xa0cb45c <col:36> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa0cb130 '__sbin' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa0cb474 <col:44> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa0cb2a0 '__sbout' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa0cb48c <col:53> '_Bool' lvalue Var 0xa0cb3e0 '__ineof' '_Bool'))))

;
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
}
typedef unsigned long wctype_t;
enum  {
    __ISwupper = (IntegerLiteral 0xa0dfb60 </usr/include/wctype.h:74:16> 'int' 0)
,
    __ISwlower = (IntegerLiteral 0xa0dfbb8 </usr/include/wctype.h:75:16> 'int' 1)
,
    __ISwalpha = (IntegerLiteral 0xa0dfc08 </usr/include/wctype.h:76:16> 'int' 2)
,
    __ISwdigit = (IntegerLiteral 0xa0dfc58 </usr/include/wctype.h:77:16> 'int' 3)
,
    __ISwxdigit = (IntegerLiteral 0xa0dfca8 </usr/include/wctype.h:78:17> 'int' 4)
,
    __ISwspace = (IntegerLiteral 0xa0dfcf8 </usr/include/wctype.h:79:16> 'int' 5)
,
    __ISwprint = (IntegerLiteral 0xa0dfd48 </usr/include/wctype.h:80:16> 'int' 6)
,
    __ISwgraph = (IntegerLiteral 0xa0dfd98 </usr/include/wctype.h:81:16> 'int' 7)
,
    __ISwblank = (IntegerLiteral 0xa0dfde8 </usr/include/wctype.h:82:16> 'int' 8)
,
    __ISwcntrl = (IntegerLiteral 0xa0dfe38 </usr/include/wctype.h:83:16> 'int' 9)
,
    __ISwpunct = (IntegerLiteral 0xa0dfe88 </usr/include/wctype.h:84:16> 'int' 10)
,
    __ISwalnum = (IntegerLiteral 0xa0dfed8 </usr/include/wctype.h:85:16> 'int' 11)
,
    _ISwupper = (ParenExpr 0xa0e04b8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0e0498 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0dff70 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0dff40 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0dff24 <line:87:24> 'int' EnumConstant 0xa0dfb80 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0dff58 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0e0068 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0e0058 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0e0030 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0e0018 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0dffe8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0dffd0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0dff88 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0dffb8 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0dffa0 <line:87:24> 'int' EnumConstant 0xa0dfb80 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0e0000 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0e0480 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0e0460 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0e00c8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0e0098 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0e0080 <line:87:24> 'int' EnumConstant 0xa0dfb80 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0e00b0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0e01c0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0e01b0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0e0188 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0e0170 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0e0140 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0e0128 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0e00e0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0e0110 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0e00f8 <line:87:24> 'int' EnumConstant 0xa0dfb80 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0e0158 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0e0448 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0e0428 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0e0220 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0e01f0 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0e01d8 <line:87:24> 'int' EnumConstant 0xa0dfb80 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0e0208 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0e0318 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0e0308 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0e02e0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0e02c8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0e0298 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0e0280 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0e0238 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0e0268 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0e0250 <line:87:24> 'int' EnumConstant 0xa0dfb80 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0e02b0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0e0410 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0e0400 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0e03d8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0e03c0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0e0390 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0e0378 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0e0330 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0e0360 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0e0348 <line:87:24> 'int' EnumConstant 0xa0dfb80 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0e03a8 <line:69:36> 'int' 24)))))))))))
,
    _ISwlower = (ParenExpr 0xa0e0a98 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0e0a78 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0e0550 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0e0520 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0e0504 <line:88:24> 'int' EnumConstant 0xa0dfbd0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0e0538 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0e0648 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0e0638 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0e0610 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0e05f8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0e05c8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0e05b0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0e0568 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0e0598 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0e0580 <line:88:24> 'int' EnumConstant 0xa0dfbd0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0e05e0 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0e0a60 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0e0a40 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0e06a8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0e0678 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0e0660 <line:88:24> 'int' EnumConstant 0xa0dfbd0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0e0690 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0e07a0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0e0790 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0e0768 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0e0750 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0e0720 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0e0708 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0e06c0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0e06f0 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0e06d8 <line:88:24> 'int' EnumConstant 0xa0dfbd0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0e0738 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0e0a28 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0e0a08 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0e0800 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0e07d0 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0e07b8 <line:88:24> 'int' EnumConstant 0xa0dfbd0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0e07e8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0e08f8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0e08e8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0e08c0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0e08a8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0e0878 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0e0860 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0e0818 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0e0848 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0e0830 <line:88:24> 'int' EnumConstant 0xa0dfbd0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0e0890 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0e09f0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0e09e0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0e09b8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0e09a0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0e0970 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0e0958 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0e0910 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0e0940 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0e0928 <line:88:24> 'int' EnumConstant 0xa0dfbd0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0e0988 <line:69:36> 'int' 24)))))))))))
,
    _ISwalpha = (ParenExpr 0xa0e1078 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0e1058 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0e0b30 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0e0b00 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0e0ae4 <line:89:24> 'int' EnumConstant 0xa0dfc20 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0e0b18 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0e0c28 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0e0c18 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0e0bf0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0e0bd8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0e0ba8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0e0b90 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0e0b48 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0e0b78 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0e0b60 <line:89:24> 'int' EnumConstant 0xa0dfc20 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0e0bc0 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0e1040 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0e1020 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0e0c88 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0e0c58 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0e0c40 <line:89:24> 'int' EnumConstant 0xa0dfc20 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0e0c70 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0e0d80 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0e0d70 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0e0d48 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0e0d30 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0e0d00 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0e0ce8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0e0ca0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0e0cd0 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0e0cb8 <line:89:24> 'int' EnumConstant 0xa0dfc20 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0e0d18 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0e1008 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0e0fe8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0e0de0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0e0db0 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0e0d98 <line:89:24> 'int' EnumConstant 0xa0dfc20 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0e0dc8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0e0ed8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0e0ec8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0e0ea0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0e0e88 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0e0e58 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0e0e40 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0e0df8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0e0e28 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0e0e10 <line:89:24> 'int' EnumConstant 0xa0dfc20 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0e0e70 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0e0fd0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0e0fc0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0e0f98 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0e0f80 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0e0f50 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0e0f38 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0e0ef0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0e0f20 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0e0f08 <line:89:24> 'int' EnumConstant 0xa0dfc20 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0e0f68 <line:69:36> 'int' 24)))))))))))
,
    _ISwdigit = (ParenExpr 0xa0ecb08 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0ecae8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0e1110 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0e10e0 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0e10c4 <line:90:24> 'int' EnumConstant 0xa0dfc70 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0e10f8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0e1208 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0e11f8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0e11d0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0e11b8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0e1188 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0e1170 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0e1128 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0e1158 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0e1140 <line:90:24> 'int' EnumConstant 0xa0dfc70 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0e11a0 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0ecad0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0ecab0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0e1268 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0e1238 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0e1220 <line:90:24> 'int' EnumConstant 0xa0dfc70 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0e1250 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0ec810 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0e1350 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0e1328 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0e1310 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0e12e0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0e12c8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0e1280 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0e12b0 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0e1298 <line:90:24> 'int' EnumConstant 0xa0dfc70 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0e12f8 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0eca98 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0eca78 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0ec870 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0ec840 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0ec828 <line:90:24> 'int' EnumConstant 0xa0dfc70 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0ec858 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0ec968 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ec958 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0ec930 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0ec918 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0ec8e8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0ec8d0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ec888 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0ec8b8 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0ec8a0 <line:90:24> 'int' EnumConstant 0xa0dfc70 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ec900 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0eca60 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0eca50 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0eca28 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0eca10 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0ec9e0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0ec9c8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ec980 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0ec9b0 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0ec998 <line:90:24> 'int' EnumConstant 0xa0dfc70 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ec9f8 <line:69:36> 'int' 24)))))))))))
,
    _ISwxdigit = (ParenExpr 0xa0ed0e8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0ed0c8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0ecba0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0ecb70 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0ecb54 <line:91:25> 'int' EnumConstant 0xa0dfcc0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0ecb88 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0ecc98 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0ecc88 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0ecc60 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0ecc48 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0ecc18 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0ecc00 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0ecbb8 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0ecbe8 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0ecbd0 <line:91:25> 'int' EnumConstant 0xa0dfcc0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0ecc30 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0ed0b0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0ed090 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0eccf8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0eccc8 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0eccb0 <line:91:25> 'int' EnumConstant 0xa0dfcc0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0ecce0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0ecdf0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0ecde0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0ecdb8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0ecda0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0ecd70 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0ecd58 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0ecd10 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0ecd40 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0ecd28 <line:91:25> 'int' EnumConstant 0xa0dfcc0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0ecd88 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0ed078 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0ed058 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0ece50 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0ece20 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0ece08 <line:91:25> 'int' EnumConstant 0xa0dfcc0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0ece38 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0ecf48 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ecf38 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0ecf10 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0ecef8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0ecec8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0eceb0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ece68 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0ece98 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0ece80 <line:91:25> 'int' EnumConstant 0xa0dfcc0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ecee0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0ed040 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ed030 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0ed008 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0ecff0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0ecfc0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0ecfa8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ecf60 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0ecf90 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0ecf78 <line:91:25> 'int' EnumConstant 0xa0dfcc0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ecfd8 <line:69:36> 'int' 24)))))))))))
,
    _ISwspace = (ParenExpr 0xa0ed6c8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0ed6a8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0ed180 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0ed150 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0ed134 <line:92:24> 'int' EnumConstant 0xa0dfd10 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0ed168 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0ed278 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0ed268 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0ed240 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0ed228 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0ed1f8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0ed1e0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0ed198 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0ed1c8 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0ed1b0 <line:92:24> 'int' EnumConstant 0xa0dfd10 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0ed210 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0ed690 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0ed670 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0ed2d8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0ed2a8 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0ed290 <line:92:24> 'int' EnumConstant 0xa0dfd10 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0ed2c0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0ed3d0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0ed3c0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0ed398 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0ed380 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0ed350 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0ed338 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0ed2f0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0ed320 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0ed308 <line:92:24> 'int' EnumConstant 0xa0dfd10 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0ed368 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0ed658 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0ed638 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0ed430 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0ed400 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0ed3e8 <line:92:24> 'int' EnumConstant 0xa0dfd10 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0ed418 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0ed528 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ed518 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0ed4f0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0ed4d8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0ed4a8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0ed490 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ed448 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0ed478 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0ed460 <line:92:24> 'int' EnumConstant 0xa0dfd10 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ed4c0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0ed620 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ed610 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0ed5e8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0ed5d0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0ed5a0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0ed588 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ed540 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0ed570 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0ed558 <line:92:24> 'int' EnumConstant 0xa0dfd10 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ed5b8 <line:69:36> 'int' 24)))))))))))
,
    _ISwprint = (ParenExpr 0xa0edca8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0edc88 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0ed760 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0ed730 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0ed714 <line:93:24> 'int' EnumConstant 0xa0dfd60 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0ed748 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0ed858 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0ed848 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0ed820 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0ed808 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0ed7d8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0ed7c0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0ed778 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0ed7a8 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0ed790 <line:93:24> 'int' EnumConstant 0xa0dfd60 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0ed7f0 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0edc70 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0edc50 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0ed8b8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0ed888 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0ed870 <line:93:24> 'int' EnumConstant 0xa0dfd60 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0ed8a0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0ed9b0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0ed9a0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0ed978 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0ed960 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0ed930 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0ed918 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0ed8d0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0ed900 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0ed8e8 <line:93:24> 'int' EnumConstant 0xa0dfd60 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0ed948 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0edc38 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0edc18 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0eda10 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0ed9e0 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0ed9c8 <line:93:24> 'int' EnumConstant 0xa0dfd60 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0ed9f8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0edb08 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0edaf8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0edad0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0edab8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0eda88 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0eda70 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0eda28 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0eda58 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0eda40 <line:93:24> 'int' EnumConstant 0xa0dfd60 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0edaa0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0edc00 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0edbf0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0edbc8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0edbb0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0edb80 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0edb68 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0edb20 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0edb50 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0edb38 <line:93:24> 'int' EnumConstant 0xa0dfd60 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0edb98 <line:69:36> 'int' 24)))))))))))
,
    _ISwgraph = (ParenExpr 0xa0ee288 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0ee268 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0edd40 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0edd10 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0edcf4 <line:94:24> 'int' EnumConstant 0xa0dfdb0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0edd28 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0ede38 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0ede28 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0ede00 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0edde8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0eddb8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0edda0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0edd58 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0edd88 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0edd70 <line:94:24> 'int' EnumConstant 0xa0dfdb0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0eddd0 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0ee250 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0ee230 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0ede98 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0ede68 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0ede50 <line:94:24> 'int' EnumConstant 0xa0dfdb0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0ede80 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0edf90 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0edf80 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0edf58 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0edf40 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0edf10 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0edef8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0edeb0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0edee0 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0edec8 <line:94:24> 'int' EnumConstant 0xa0dfdb0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0edf28 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0ee218 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0ee1f8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0edff0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0edfc0 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0edfa8 <line:94:24> 'int' EnumConstant 0xa0dfdb0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0edfd8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0ee0e8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ee0d8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0ee0b0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0ee098 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0ee068 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0ee050 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ee008 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0ee038 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0ee020 <line:94:24> 'int' EnumConstant 0xa0dfdb0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ee080 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0ee1e0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ee1d0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0ee1a8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0ee190 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0ee160 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0ee148 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ee100 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0ee130 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0ee118 <line:94:24> 'int' EnumConstant 0xa0dfdb0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ee178 <line:69:36> 'int' 24)))))))))))
,
    _ISwblank = (ParenExpr 0xa0ee868 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0ee848 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0ee320 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0ee2f0 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0ee2d4 <line:95:24> 'int' EnumConstant 0xa0dfe00 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0ee308 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0ee418 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0ee408 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0ee3e0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0ee3c8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0ee398 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0ee380 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0ee338 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0ee368 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0ee350 <line:95:24> 'int' EnumConstant 0xa0dfe00 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0ee3b0 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0ee830 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0ee810 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0ee478 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0ee448 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0ee430 <line:95:24> 'int' EnumConstant 0xa0dfe00 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0ee460 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0ee570 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0ee560 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0ee538 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0ee520 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0ee4f0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0ee4d8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0ee490 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0ee4c0 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0ee4a8 <line:95:24> 'int' EnumConstant 0xa0dfe00 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0ee508 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0ee7f8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0ee7d8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0ee5d0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0ee5a0 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0ee588 <line:95:24> 'int' EnumConstant 0xa0dfe00 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0ee5b8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0ee6c8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ee6b8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0ee690 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0ee678 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0ee648 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0ee630 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ee5e8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0ee618 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0ee600 <line:95:24> 'int' EnumConstant 0xa0dfe00 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ee660 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0ee7c0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ee7b0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0ee788 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0ee770 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0ee740 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0ee728 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ee6e0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0ee710 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0ee6f8 <line:95:24> 'int' EnumConstant 0xa0dfe00 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ee758 <line:69:36> 'int' 24)))))))))))
,
    _ISwcntrl = (ParenExpr 0xa0eee48 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0eee28 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0ee900 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0ee8d0 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0ee8b4 <line:96:24> 'int' EnumConstant 0xa0dfe50 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0ee8e8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0ee9f8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0ee9e8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0ee9c0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0ee9a8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0ee978 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0ee960 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0ee918 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0ee948 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0ee930 <line:96:24> 'int' EnumConstant 0xa0dfe50 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0ee990 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0eee10 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0eedf0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0eea58 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0eea28 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0eea10 <line:96:24> 'int' EnumConstant 0xa0dfe50 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0eea40 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0eeb50 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0eeb40 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0eeb18 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0eeb00 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0eead0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0eeab8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0eea70 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0eeaa0 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0eea88 <line:96:24> 'int' EnumConstant 0xa0dfe50 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0eeae8 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0eedd8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0eedb8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0eebb0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0eeb80 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0eeb68 <line:96:24> 'int' EnumConstant 0xa0dfe50 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0eeb98 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0eeca8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0eec98 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0eec70 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0eec58 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0eec28 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0eec10 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0eebc8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0eebf8 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0eebe0 <line:96:24> 'int' EnumConstant 0xa0dfe50 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0eec40 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0eeda0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0eed90 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0eed68 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0eed50 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0eed20 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0eed08 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0eecc0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0eecf0 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0eecd8 <line:96:24> 'int' EnumConstant 0xa0dfe50 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0eed38 <line:69:36> 'int' 24)))))))))))
,
    _ISwpunct = (ParenExpr 0xa0ef428 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0ef408 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0eeee0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0eeeb0 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0eee94 <line:97:24> 'int' EnumConstant 0xa0dfea0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0eeec8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0eefd8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0eefc8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0eefa0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0eef88 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0eef58 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0eef40 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0eeef8 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0eef28 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0eef10 <line:97:24> 'int' EnumConstant 0xa0dfea0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0eef70 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0ef3f0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0ef3d0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0ef038 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0ef008 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0eeff0 <line:97:24> 'int' EnumConstant 0xa0dfea0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0ef020 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0ef130 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0ef120 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0ef0f8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0ef0e0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0ef0b0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0ef098 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0ef050 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0ef080 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0ef068 <line:97:24> 'int' EnumConstant 0xa0dfea0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0ef0c8 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0ef3b8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0ef398 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0ef190 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0ef160 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0ef148 <line:97:24> 'int' EnumConstant 0xa0dfea0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0ef178 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0ef288 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ef278 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0ef250 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0ef238 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0ef208 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0ef1f0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ef1a8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0ef1d8 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0ef1c0 <line:97:24> 'int' EnumConstant 0xa0dfea0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ef220 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0ef380 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ef370 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0ef348 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0ef330 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0ef300 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0ef2e8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ef2a0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0ef2d0 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0ef2b8 <line:97:24> 'int' EnumConstant 0xa0dfea0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ef318 <line:69:36> 'int' 24)))))))))))
,
    _ISwalnum = (ParenExpr 0xa0efa08 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa0ef9e8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa0ef4c0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa0ef490 <col:3, col:7> 'int'
        (DeclRefExpr 0xa0ef474 <line:98:24> 'int' EnumConstant 0xa0dfef0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa0ef4a8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa0ef5b8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa0ef5a8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa0ef580 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa0ef568 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa0ef538 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa0ef520 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa0ef4d8 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa0ef508 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa0ef4f0 <line:98:24> 'int' EnumConstant 0xa0dfef0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa0ef550 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa0ef9d0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa0ef9b0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa0ef618 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa0ef5e8 <col:6, col:10> 'int'
            (DeclRefExpr 0xa0ef5d0 <line:98:24> 'int' EnumConstant 0xa0dfef0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa0ef600 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa0ef710 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa0ef700 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa0ef6d8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa0ef6c0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa0ef690 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa0ef678 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa0ef630 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa0ef660 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa0ef648 <line:98:24> 'int' EnumConstant 0xa0dfef0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa0ef6a8 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa0ef998 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa0ef978 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa0ef770 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa0ef740 <col:9, col:13> 'int'
                (DeclRefExpr 0xa0ef728 <line:98:24> 'int' EnumConstant 0xa0dfef0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa0ef758 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa0ef868 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ef858 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa0ef830 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa0ef818 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa0ef7e8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa0ef7d0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ef788 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa0ef7b8 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa0ef7a0 <line:98:24> 'int' EnumConstant 0xa0dfef0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ef800 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa0ef960 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa0ef950 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa0ef928 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa0ef910 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa0ef8e0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa0ef8c8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa0ef880 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa0ef8b0 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa0ef898 <line:98:24> 'int' EnumConstant 0xa0dfef0 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa0ef8f8 <line:69:36> 'int' 24)))))))))))

};
extern "C" {
    extern int iswalnum(wint_t __wc) throw();
    extern int iswalpha(wint_t __wc) throw();
    extern int iswcntrl(wint_t __wc) throw();
    extern int iswdigit(wint_t __wc) throw();
    extern int iswgraph(wint_t __wc) throw();
    extern int iswlower(wint_t __wc) throw();
    extern int iswprint(wint_t __wc) throw();
    extern int iswpunct(wint_t __wc) throw();
    extern int iswspace(wint_t __wc) throw();
    extern int iswupper(wint_t __wc) throw();
    extern int iswxdigit(wint_t __wc) throw();
    extern int iswblank(wint_t __wc) throw();
    extern wctype_t wctype(const char *__property) throw();
    extern int iswctype(wint_t __wc, wctype_t __desc) throw();
    typedef const __int32_t *wctrans_t;
    extern wint_t towlower(wint_t __wc) throw();
    extern wint_t towupper(wint_t __wc) throw();
}
extern "C" {
    extern wctrans_t wctrans(const char *__property) throw();
    extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
    extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
    extern wctype_t wctype_l(const char *__property, __locale_t __locale) throw();
    extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
    extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
    extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
    extern wctrans_t wctrans_l(const char *__property, __locale_t __locale) throw();
    extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
}
namespace std {
    using ::wctrans_t;
    ;
    using ::wctype_t;
    ;
    using ::wint_t;
    ;
    using ::iswalnum;
    ;
    using ::iswalpha;
    ;
    using ::iswblank;
    ;
    using ::iswcntrl;
    ;
    using ::iswctype;
    ;
    using ::iswdigit;
    ;
    using ::iswgraph;
    ;
    using ::iswlower;
    ;
    using ::iswprint;
    ;
    using ::iswpunct;
    ;
    using ::iswspace;
    ;
    using ::iswupper;
    ;
    using ::iswxdigit;
    ;
    using ::towctrans;
    ;
    using ::towlower;
    ;
    using ::towupper;
    ;
    using ::wctrans;
    ;
    using ::wctype;
    ;
}
namespace std {
    struct ctype_base {
        struct ctype_base;
        typedef const int *__to_type;
        typedef unsigned short mask;
        static const mask upper = (ImplicitCastExpr 0xa0f2dd0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:50:35> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa0f2db4 <col:35> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f01f20 '_ISupper' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask lower = (ImplicitCastExpr 0xa0f2e40 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:51:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa0f2e24 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f02170 '_ISlower' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alpha = (ImplicitCastExpr 0xa0f2eb0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:52:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa0f2e94 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f023c0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask digit = (ImplicitCastExpr 0xa0f2f20 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:53:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa0f2f04 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f02610 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask xdigit = (ImplicitCastExpr 0xa0f2f90 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:54:33> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa0f2f74 <col:33> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f02860 '_ISxdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask space = (ImplicitCastExpr 0xa0f3000 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:55:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa0f2fe4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f02ab0 '_ISspace' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask print = (ImplicitCastExpr 0xa0f3070 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:56:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa0f3054 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f02d00 '_ISprint' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask graph = (ImplicitCastExpr 0xa0f3170 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:57:32, col:54> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0xa0f3158 <col:32, col:54> 'int' '|'
    (BinaryOperator 0xa0f3118 <col:32, col:43> 'int' '|'
      (ImplicitCastExpr 0xa0f30f8 <col:32> 'int' <IntegralCast>
        (DeclRefExpr 0xa0f30c4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f023c0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
      (ImplicitCastExpr 0xa0f3108 <col:43> 'int' <IntegralCast>
        (DeclRefExpr 0xa0f30dc <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f02610 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>')))
    (ImplicitCastExpr 0xa0f3148 <col:54> 'int' <IntegralCast>
      (DeclRefExpr 0xa0f3130 <col:54> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f08330 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        static const mask cntrl = (ImplicitCastExpr 0xa0f31e0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:58:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa0f31c4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f080e0 '_IScntrl' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask punct = (ImplicitCastExpr 0xa0f3250 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:59:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa0f3234 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f08330 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alnum = (ImplicitCastExpr 0xa0f3310 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:60:32, col:43> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0xa0f32f8 <col:32, col:43> 'int' '|'
    (ImplicitCastExpr 0xa0f32d8 <col:32> 'int' <IntegralCast>
      (DeclRefExpr 0xa0f32a4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f023c0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
    (ImplicitCastExpr 0xa0f32e8 <col:43> 'int' <IntegralCast>
      (DeclRefExpr 0xa0f32bc <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x9f02610 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        inline std::ctype_base &operator=(const std::ctype_base &) throw();
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
        class istreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename _Traits::int_type int_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_istream<_CharT, _Traits> istream_type;
        ;
        ;
        ;
    private:
    private:
        mutable streambuf_type *_M_sbuf;
        mutable int_type _M_c;
    public:
    public:
        istreambuf_iterator<_CharT, _Traits>() throw() : _M_sbuf((IntegerLiteral 0xa0fa9b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:17> 'int' 0)
), _M_c((CallExpr 0xa0faaa0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:26, col:43> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa0faa68 <col:26, col:39> '<dependent type>' lvalue))
) (CompoundStmt 0xa0fab00 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:46, col:48>)


        istreambuf_iterator<_CharT, _Traits>(istream_type &__s) throw() : _M_sbuf((CallExpr 0xa0fab60 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa0fab28 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0xa0fab10 <col:17> 'istream_type':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa0fa2a0 '__s' 'istream_type &')))
), _M_c((CallExpr 0xa0fac10 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:36, col:53> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa0fabd8 <col:36, col:49> '<dependent type>' lvalue))
) (CompoundStmt 0xa0fac70 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:56, col:58>)


        istreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0xa0fac80 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:17> 'streambuf_type *' lvalue ParmVar 0xa0fa3c0 '__s' 'streambuf_type *')
), _M_c((CallExpr 0xa0fad30 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:28, col:45> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa0facf8 <col:28, col:41> '<dependent type>' lvalue))
) (CompoundStmt 0xa0fad90 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:48, col:50>)


        char_type operator*() const (CompoundStmt 0xa0fae90 </usr/include/c++/4.6/bits/streambuf_iterator.h:113:7, line:122:7>
  (ReturnStmt 0xa0fae80 <line:121:2, col:43>
    (CallExpr 0xa0fae60 <col:9, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fadd8 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0xa0fae40 <col:35, col:42> '<dependent type>'
        (MemberExpr 0xa0fae20 <col:35> '<bound member function type>' ->_M_get 0xa0fa8d0
          (CXXThisExpr 0xa0fae10 <col:35> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))


        istreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0xa0fb0a0 </usr/include/c++/4.6/bits/streambuf_iterator.h:127:7, line:137:7>
  (NullStmt 0xa0faea8 <line:130:25>)
  (IfStmt 0xa0fb048 <line:131:2, line:135:4>
    <<<NULL>>>
    (MemberExpr 0xa0faec8 <line:131:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa0fa100
      (CXXThisExpr 0xa0faeb8 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa0fb030 <line:132:4, line:135:4>
      (CallExpr 0xa0faf50 <line:133:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0faf18 <col:6, col:15> '<dependent type>' lvalue
          (MemberExpr 0xa0faef8 <col:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa0fa100
            (CXXThisExpr 0xa0faee8 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))))
      (BinaryOperator 0xa0fb018 <line:134:6, col:30> '<dependent type>' '='
        (MemberExpr 0xa0faf80 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa0fa150
          (CXXThisExpr 0xa0faf70 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0xa0faff8 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fafc0 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0xa0fb090 <line:136:2, col:10>
    (UnaryOperator 0xa0fb078 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0fb068 <col:10> 'istreambuf_iterator<_CharT, _Traits> *' this))))


        istreambuf_iterator<_CharT, _Traits> operator++(int) (CompoundStmt 0xa0fb390 </usr/include/c++/4.6/bits/streambuf_iterator.h:142:7, line:154:7>
  (NullStmt 0xa0fb0c0 <line:145:25>)
  (DeclStmt 0xa0fb140 <line:147:2, col:35>
    0xa0fb0e0 "istreambuf_iterator<_CharT, _Traits> __old =
      (UnaryOperator 0xa0fb128 <col:30, col:31> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa0fb118 <col:31> 'istreambuf_iterator<_CharT, _Traits> *' this))")
  (IfStmt 0xa0fb348 <line:148:2, line:152:4>
    <<<NULL>>>
    (MemberExpr 0xa0fb160 <line:148:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa0fa100
      (CXXThisExpr 0xa0fb150 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa0fb330 <line:149:4, line:152:4>
      (BinaryOperator 0xa0fb258 <line:150:6, col:35> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa0fb198 <col:6, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0xa0fb180 <col:6> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0xa0fb0e0 '__old' 'istreambuf_iterator<_CharT, _Traits>'))
        (CallExpr 0xa0fb238 <col:19, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fb200 <col:19, col:28> '<dependent type>' lvalue
            (MemberExpr 0xa0fb1e0 <col:19> 'streambuf_type *' lvalue ->_M_sbuf 0xa0fa100
              (CXXThisExpr 0xa0fb1d0 <col:19> 'istreambuf_iterator<_CharT, _Traits> *' this)))))
      (BinaryOperator 0xa0fb318 <line:151:6, col:30> '<dependent type>' '='
        (MemberExpr 0xa0fb280 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa0fa150
          (CXXThisExpr 0xa0fb270 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0xa0fb2f8 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fb2c0 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0xa0fb380 <line:153:2, col:9>
    (DeclRefExpr 0xa0fb364 <col:9> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0xa0fb0e0 '__old' 'istreambuf_iterator<_CharT, _Traits>')))


        bool equal(const istreambuf_iterator<_CharT, _Traits> &__b) const (CompoundStmt 0xa0fb500 </usr/include/c++/4.6/bits/streambuf_iterator.h:162:7, col:48>
  (ReturnStmt 0xa0fb4f0 <col:9, col:45>
    (CXXOperatorCallExpr 0xa0fb4c8 <col:16, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa0fb470 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10)
      (CallExpr 0xa0fb3e0 <col:16, col:26> '<dependent type>'
        (MemberExpr 0xa0fb3c0 <col:16> '<bound member function type>' ->_M_at_eof 0xa0fa950
          (CXXThisExpr 0xa0fb3b0 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (CallExpr 0xa0fb450 <col:31, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fb418 <col:31, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa0fb3fc <col:31> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa0fa750 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))))


    private:
    private:
        int_type _M_get() const (CompoundStmt 0xa0fbaa0 </usr/include/c++/4.6/bits/streambuf_iterator.h:167:7, line:181:7>
  (DeclStmt 0xa0fb5d0 <line:168:2, col:43>
    0xa0fb520 "const int_type __eof =
      (CallExpr 0xa0fb5b0 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fb578 <col:25, col:38> '<dependent type>' lvalue))")
  (DeclStmt 0xa0fb640 <line:169:2, col:24>
    0xa0fb5f0 "int_type __ret =
      (DeclRefExpr 0xa0fb624 <col:19> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa0fb520 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (IfStmt 0xa0fba58 <line:170:2, line:179:4>
    <<<NULL>>>
    (MemberExpr 0xa0fb660 <line:170:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa0fa100
      (CXXThisExpr 0xa0fb650 <col:6> 'const istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa0fba40 <line:171:4, line:179:4>
      (IfStmt 0xa0fba20 <line:172:6, line:178:18>
        <<<NULL>>>
        (UnaryOperator 0xa0fb748 <line:172:10, col:47> '<dependent type>' prefix '!'
          (CallExpr 0xa0fb720 <col:11, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0fb6a0 <col:11, col:24> '<dependent type>' lvalue)
            (MemberExpr 0xa0fb6e8 <col:36> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa0fa150
              (CXXThisExpr 0xa0fb6d8 <col:36> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0fb708 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa0fb520 '__eof' 'const int_type':'const typename _Traits::int_type')))
        (BinaryOperator 0xa0fb7a8 <line:173:8, col:16> '<dependent type>' '='
          (DeclRefExpr 0xa0fb75c <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa0fb5f0 '__ret' 'int_type':'typename _Traits::int_type')
          (MemberExpr 0xa0fb788 <col:16> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa0fa150
            (CXXThisExpr 0xa0fb778 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
        (IfStmt 0xa0fba00 <line:174:11, line:178:18>
          <<<NULL>>>
          (UnaryOperator 0xa0fb928 <line:174:15, line:175:18> '<dependent type>' prefix '!'
            (CallExpr 0xa0fb900 <line:174:16, line:175:18> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa0fb7e0 <line:174:16, col:29> '<dependent type>' lvalue)
              (ParenExpr 0xa0fb8d0 <col:41, col:66> '<dependent type>'
                (BinaryOperator 0xa0fb8b8 <col:42, col:65> '<dependent type>' '='
                  (DeclRefExpr 0xa0fb814 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0xa0fb5f0 '__ret' 'int_type':'typename _Traits::int_type')
                  (CallExpr 0xa0fb898 <col:50, col:65> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa0fb860 <col:50, col:59> '<dependent type>' lvalue
                      (MemberExpr 0xa0fb840 <col:50> 'streambuf_type *' lvalue ->_M_sbuf 0xa0fa100
                        (CXXThisExpr 0xa0fb830 <col:50> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))
              (DeclRefExpr 0xa0fb8e4 <line:175:13> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa0fb520 '__eof' 'const int_type':'const typename _Traits::int_type')))
          (BinaryOperator 0xa0fb988 <line:176:8, col:15> '<dependent type>' '='
            (MemberExpr 0xa0fb950 <col:8> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa0fa150
              (CXXThisExpr 0xa0fb940 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa0fb970 <col:15> 'int_type':'typename _Traits::int_type' lvalue Var 0xa0fb5f0 '__ret' 'int_type':'typename _Traits::int_type'))
          (BinaryOperator 0xa0fb9e8 <line:178:8, col:18> '<dependent type>' '='
            (MemberExpr 0xa0fb9b0 <col:8> 'streambuf_type *' lvalue ->_M_sbuf 0xa0fa100
              (CXXThisExpr 0xa0fb9a0 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa0fb9d0 <col:18> 'int' 0)))))
    <<<NULL>>>)
  (ReturnStmt 0xa0fba90 <line:180:2, col:9>
    (DeclRefExpr 0xa0fba74 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa0fb5f0 '__ret' 'int_type':'typename _Traits::int_type')))


        bool _M_at_eof() const (CompoundStmt 0xa0fbc88 </usr/include/c++/4.6/bits/streambuf_iterator.h:185:7, line:188:7>
  (DeclStmt 0xa0fbb80 <line:186:2, col:43>
    0xa0fbad0 "const int_type __eof =
      (CallExpr 0xa0fbb60 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fbb28 <col:25, col:38> '<dependent type>' lvalue))")
  (ReturnStmt 0xa0fbc78 <line:187:2, col:49>
    (CallExpr 0xa0fbc50 <col:9, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fbbb0 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0xa0fbc18 <col:34, col:41> '<dependent type>'
        (MemberExpr 0xa0fbbf8 <col:34> '<bound member function type>' ->_M_get 0xa0fa8d0
          (CXXThisExpr 0xa0fbbe8 <col:34> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa0fbc34 <col:44> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa0fbad0 '__eof' 'const int_type':'const typename _Traits::int_type'))))


    };
    template <typename _CharT, typename _Traits> inline bool operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0xa0fc1d8 </usr/include/c++/4.6/bits/streambuf_iterator.h:195:5, col:30>
  (ReturnStmt 0xa0fc1c8 <col:7, col:27>
    (CallExpr 0xa0fc1a8 <col:14, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa0fc158 <col:14, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0xa0fc140 <col:14> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa0fbea0 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
      (DeclRefExpr 0xa0fc18c <col:24> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa0fc010 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))

;
    template <typename _CharT, typename _Traits> inline bool operator!=(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0xa0fc700 </usr/include/c++/4.6/bits/streambuf_iterator.h:201:5, col:31>
  (ReturnStmt 0xa0fc6f0 <col:7, col:28>
    (UnaryOperator 0xa0fc6d8 <col:14, col:28> '<dependent type>' prefix '!'
      (CallExpr 0xa0fc6b8 <col:15, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fc668 <col:15, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa0fc650 <col:15> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa0fc3d0 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
        (DeclRefExpr 0xa0fc69c <col:25> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa0fc540 '__b' 'const istreambuf_iterator<_CharT, _Traits> &')))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class ostreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_ostream<_CharT, _Traits> ostream_type;
        ;
    private:
    private:
        streambuf_type *_M_sbuf;
        bool _M_failed;
    public:
    public:
        ostreambuf_iterator<_CharT, _Traits>(ostream_type &__s) throw() : _M_sbuf((CallExpr 0xa0fe088 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa0fe050 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0xa0fe038 <col:17> 'ostream_type':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa0fd8d0 '__s' 'ostream_type &')))
), _M_failed((UnaryOperator 0xa0fe138 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:41, col:42> '<dependent type>' prefix '!'
  (MemberExpr 0xa0fe118 <col:42> 'streambuf_type *' lvalue ->_M_sbuf 0xa0fd7e0
    (CXXThisExpr 0xa0fe108 <col:42> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0xa0fe190 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:51, col:53>)


        ostreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0xa0fe1a0 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:17> 'streambuf_type *' lvalue ParmVar 0xa0fda00 '__s' 'streambuf_type *')
), _M_failed((UnaryOperator 0xa0fe228 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:33, col:34> '<dependent type>' prefix '!'
  (MemberExpr 0xa0fe208 <col:34> 'streambuf_type *' lvalue ->_M_sbuf 0xa0fd7e0
    (CXXThisExpr 0xa0fe1f8 <col:34> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0xa0fe280 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:43, col:45>)


        ostreambuf_iterator<_CharT, _Traits> &operator=(_CharT __c) (CompoundStmt 0xa0fe550 </usr/include/c++/4.6/bits/streambuf_iterator.h:240:7, line:245:7>
  (IfStmt 0xa0fe4f8 <line:241:2, line:243:16>
    <<<NULL>>>
    (BinaryOperator 0xa0fe488 <line:241:6, line:242:62> '<dependent type>' '&&'
      (UnaryOperator 0xa0fe2d0 <line:241:6, col:7> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa0fe2c0 <col:7> '_Bool' <LValueToRValue>
          (MemberExpr 0xa0fe2a0 <col:7> '_Bool' lvalue ->_M_failed 0xa0fd820
            (CXXThisExpr 0xa0fe290 <col:7> 'ostreambuf_iterator<_CharT, _Traits> *' this))))
      (CallExpr 0xa0fe460 <line:242:6, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa0fe310 <col:6, col:15> '<dependent type>' lvalue)
        (CallExpr 0xa0fe3c8 <col:27, col:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fe378 <col:27, col:36> '<dependent type>' lvalue
            (MemberExpr 0xa0fe358 <col:27> 'streambuf_type *' lvalue ->_M_sbuf 0xa0fd7e0
              (CXXThisExpr 0xa0fe348 <col:27> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa0fe3ac <col:42> '_CharT' lvalue ParmVar 0xa0fdb00 '__c' '_CharT'))
        (CallExpr 0xa0fe440 <col:48, col:61> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa0fe408 <col:48, col:57> '<dependent type>' lvalue))))
    (BinaryOperator 0xa0fe4e0 <line:243:4, col:16> '<dependent type>' '='
      (MemberExpr 0xa0fe4b0 <col:4> '_Bool' lvalue ->_M_failed 0xa0fd820
        (CXXThisExpr 0xa0fe4a0 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0xa0fe4d0 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0xa0fe540 <line:244:2, col:10>
    (UnaryOperator 0xa0fe528 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0fe518 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator*() (CompoundStmt 0xa0fe5a0 </usr/include/c++/4.6/bits/streambuf_iterator.h:250:7, col:23>
  (ReturnStmt 0xa0fe590 <col:9, col:17>
    (UnaryOperator 0xa0fe578 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0fe568 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++(int) (CompoundStmt 0xa0fe5f0 </usr/include/c++/4.6/bits/streambuf_iterator.h:255:7, col:23>
  (ReturnStmt 0xa0fe5e0 <col:9, col:17>
    (UnaryOperator 0xa0fe5c8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0fe5b8 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0xa0fe640 </usr/include/c++/4.6/bits/streambuf_iterator.h:260:7, col:23>
  (ReturnStmt 0xa0fe630 <col:9, col:17>
    (UnaryOperator 0xa0fe618 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0fe608 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        bool failed() const throw() (CompoundStmt 0xa0fe6b8 </usr/include/c++/4.6/bits/streambuf_iterator.h:265:7, col:27>
  (ReturnStmt 0xa0fe6a8 <col:9, col:16>
    (MemberExpr 0xa0fe688 <col:16> 'const _Bool' lvalue ->_M_failed 0xa0fd820
      (CXXThisExpr 0xa0fe678 <col:16> 'const ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &_M_put(const _CharT *__ws, streamsize __len) (CompoundStmt 0xa0fea48 </usr/include/c++/4.6/bits/streambuf_iterator.h:269:7, line:275:7>
  (IfStmt 0xa0fe9f0 <line:270:2, line:273:16>
    <<<NULL>>>
    (BinaryOperator 0xa0fe980 <line:270:6, line:272:10> '<dependent type>' '&&'
      (CallExpr 0xa0fe778 <line:270:6, col:39> 'long'
        (ImplicitCastExpr 0xa0fe768 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa0fe6cc <col:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa0fe7a0 <col:23, col:24> 'long' <IntegralCast>
          (UnaryOperator 0xa0fe728 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa0fe718 <col:24> '_Bool' <LValueToRValue>
              (MemberExpr 0xa0fe6f8 <col:24> '_Bool' lvalue ->_M_failed 0xa0fd820
                (CXXThisExpr 0xa0fe6e8 <col:24> 'ostreambuf_iterator<_CharT, _Traits> *' this)))))
        (ImplicitCastExpr 0xa0fe7b0 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa0fe740 <col:35> '_Bool' true)))
      (CallExpr 0xa0fe958 <line:271:9, line:272:10> '<dependent type>'
        (DeclRefExpr 0xa0fe7bc <line:271:9> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
        (CXXOperatorCallExpr 0xa0fe920 <col:26, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0xa0fe8c8 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa0fc620 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0)
          (CallExpr 0xa0fe888 <col:26, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa0fe820 <col:26, col:41> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa0fe7e8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa0fe7d8 <col:26> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa0fe854 <col:47> 'const _CharT *' lvalue ParmVar 0xa0fdef0 '__ws' 'const _CharT *')
            (DeclRefExpr 0xa0fe86c <col:53> 'streamsize':'int' lvalue ParmVar 0xa0fdf30 '__len' 'streamsize':'int'))
          (DeclRefExpr 0xa0fe8ac <col:63> 'streamsize':'int' lvalue ParmVar 0xa0fdf30 '__len' 'streamsize':'int'))
        (CXXBoolLiteralExpr 0xa0fe948 <line:272:5> '_Bool' false)))
    (BinaryOperator 0xa0fe9d8 <line:273:4, col:16> '<dependent type>' '='
      (MemberExpr 0xa0fe9a8 <col:4> '_Bool' lvalue ->_M_failed 0xa0fd820
        (CXXThisExpr 0xa0fe998 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0xa0fe9c8 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0xa0fea38 <line:274:2, col:10>
    (UnaryOperator 0xa0fea20 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa0fea10 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


    };
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type copy(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa0ff850 </usr/include/c++/4.6/bits/streambuf_iterator.h:285:5, line:294:5>
  (IfStmt 0xa0ff808 <line:286:7, line:292:2>
    <<<NULL>>>
    (BinaryOperator 0xa0ff590 <line:286:11, col:59> '<dependent type>' '&&'
      (BinaryOperator 0xa0ff510 <col:11, col:38> '<dependent type>' '&&'
        (CXXDependentScopeMemberExpr 0xa0ff470 <col:11, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa0ff454 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa0fefd0 '__first' 'istreambuf_iterator<_CharT>'))
        (UnaryOperator 0xa0ff4f8 <col:30, col:38> '<dependent type>' prefix '!'
          (CXXDependentScopeMemberExpr 0xa0ff4c0 <col:31, col:38> '<dependent type>' lvalue
            (DeclRefExpr 0xa0ff4a4 <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa0ff160 '__last' 'istreambuf_iterator<_CharT>'))))
      (UnaryOperator 0xa0ff578 <col:49, col:59> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa0ff540 <col:50, col:59> '<dependent type>' lvalue
          (DeclRefExpr 0xa0ff528 <col:50> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa0ff2f0 '__result' 'ostreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa0ff7e8 <line:287:2, line:292:2>
      (DeclStmt 0xa0ff5e8 <line:288:4, col:16>
        0xa0ff5b0 "bool __ineof")
      (CallExpr 0xa0ff6e8 <line:289:4, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa0ff5f8 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0xa0ca840)
        (CXXDependentScopeMemberExpr 0xa0ff648 <col:26, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0xa0ff62c <col:26> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa0fefd0 '__first' 'istreambuf_iterator<_CharT>'))
        (CXXDependentScopeMemberExpr 0xa0ff698 <col:43, col:52> '<dependent type>' lvalue
          (DeclRefExpr 0xa0ff67c <col:43> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa0ff2f0 '__result' 'ostreambuf_iterator<_CharT>'))
        (DeclRefExpr 0xa0ff6cc <col:61> '_Bool' lvalue Var 0xa0ff5b0 '__ineof' '_Bool'))
      (IfStmt 0xa0ff7c8 <line:290:4, line:291:27>
        <<<NULL>>>
        (UnaryOperator 0xa0ff738 <line:290:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa0ff728 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa0ff710 <col:9> '_Bool' lvalue Var 0xa0ff5b0 '__ineof' '_Bool')))
        (BinaryOperator 0xa0ff7b0 <line:291:6, col:27> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa0ff768 <col:6, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0xa0ff74c <col:6> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa0ff2f0 '__result' 'ostreambuf_iterator<_CharT>'))
          (CXXBoolLiteralExpr 0xa0ff7a0 <col:27> '_Bool' true))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa0ff840 <line:293:7, col:14>
    (DeclRefExpr 0xa0ff824 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa0ff2f0 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa100210 </usr/include/c++/4.6/bits/streambuf_iterator.h:301:5, line:306:5>
  (DeclStmt 0xa1000b8 <line:302:7, col:48>
    0xa0ffff0 "const streamsize __num =
      (CXXOperatorCallExpr 0xa100090 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa100058 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0xa100024 <col:32> '_CharT *' lvalue ParmVar 0xa0ffcf0 '__last' '_CharT *')
        (DeclRefExpr 0xa10003c <col:41> '_CharT *' lvalue ParmVar 0xa0ffca0 '__first' '_CharT *'))")
  (IfStmt 0xa1001c8 <line:303:7, line:304:32>
    <<<NULL>>>
    (BinaryOperator 0xa100108 <line:303:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0xa1000f8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa1000c8 <col:11> 'const streamsize':'const int' lvalue Var 0xa0ffff0 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0xa1000e0 <col:19> 'int' 0))
    (CallExpr 0xa1001a0 <line:304:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa100138 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0xa100120 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa0ffe80 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0xa10016c <col:18> '_CharT *' lvalue ParmVar 0xa0ffca0 '__first' '_CharT *')
      (DeclRefExpr 0xa100184 <col:27> 'const streamsize':'const int' lvalue Var 0xa0ffff0 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0xa100200 <line:305:7, col:14>
    (DeclRefExpr 0xa1001e4 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa0ffe80 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa100bd0 </usr/include/c++/4.6/bits/streambuf_iterator.h:313:5, line:318:5>
  (DeclStmt 0xa100a78 <line:314:7, col:48>
    0xa1009b0 "const streamsize __num =
      (CXXOperatorCallExpr 0xa100a50 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa100a18 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0xa1009e4 <col:32> 'const _CharT *' lvalue ParmVar 0xa1006b0 '__last' 'const _CharT *')
        (DeclRefExpr 0xa1009fc <col:41> 'const _CharT *' lvalue ParmVar 0xa100660 '__first' 'const _CharT *'))")
  (IfStmt 0xa100b88 <line:315:7, line:316:32>
    <<<NULL>>>
    (BinaryOperator 0xa100ac8 <line:315:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0xa100ab8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa100a88 <col:11> 'const streamsize':'const int' lvalue Var 0xa1009b0 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0xa100aa0 <col:19> 'int' 0))
    (CallExpr 0xa100b60 <line:316:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa100af8 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0xa100ae0 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa100840 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0xa100b2c <col:18> 'const _CharT *' lvalue ParmVar 0xa100660 '__first' 'const _CharT *')
      (DeclRefExpr 0xa100b44 <col:27> 'const streamsize':'const int' lvalue Var 0xa1009b0 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0xa100bc0 <line:317:7, col:14>
    (DeclRefExpr 0xa100ba4 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa100840 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT *__result) (CompoundStmt 0xa102248 </usr/include/c++/4.6/bits/streambuf_iterator.h:325:5, line:353:5>
  (DeclStmt 0xa1014e0 <line:326:7, col:78>
    0xa1014b0 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0xa1015d0 <line:327:7, col:71>
    0xa1015a0 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0xa101690 <line:328:7, col:74>
    0xa101660 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0xa101780 <line:329:7, col:68>
    0xa101750 "typedef typename traits_type::int_type int_type")
  (IfStmt 0xa102200 <line:331:7, line:351:2>
    <<<NULL>>>
    (BinaryOperator 0xa101848 <line:331:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa1017a8 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa101790 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa101020 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0xa101830 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa1017f8 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa1017dc <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa1011d0 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa1021e0 <line:332:2, line:351:2>
      (DeclStmt 0xa101948 <line:333:4, col:42>
        0xa1018c0 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0xa101910 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa1018f4 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa101020 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0xa101a28 <line:334:4, col:32>
        0xa101980 "int_type __c =
          (CallExpr 0xa101a08 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1019d0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa1019b4 <col:19> 'streambuf_type *' lvalue Var 0xa1018c0 '__sb' 'streambuf_type *')))")
      (WhileStmt 0xa1021c8 <line:335:4, line:350:6>
        <<<NULL>>>
        (UnaryOperator 0xa101b28 <line:335:11, col:60> '<dependent type>' prefix '!'
          (CallExpr 0xa101b00 <col:12, col:60> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa101a58 <col:12, col:25> '<dependent type>' lvalue)
            (DeclRefExpr 0xa101a7c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0xa101980 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa101ae0 <col:42, col:59> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa101ab8 <col:42, col:55> '<dependent type>' lvalue))))
        (CompoundStmt 0xa1021b0 <line:336:6, line:350:6>
          (DeclStmt 0xa101cc8 <line:337:8, col:59>
            0xa101b50 "const streamsize __n =
              (CXXOperatorCallExpr 0xa101ca0 <col:31, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0xa101c68 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                (CallExpr 0xa101bd8 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa101ba0 <col:31, col:37> '<dependent type>' lvalue
                    (DeclRefExpr 0xa101b84 <col:31> 'streambuf_type *' lvalue Var 0xa1018c0 '__sb' 'streambuf_type *')))
                (CallExpr 0xa101c48 <col:47, col:58> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa101c10 <col:47, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0xa101bf4 <col:47> 'streambuf_type *' lvalue Var 0xa1018c0 '__sb' 'streambuf_type *'))))")
          (IfStmt 0xa102190 <line:338:8, line:349:3>
            <<<NULL>>>
            (BinaryOperator 0xa101d18 <line:338:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa101d08 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa101cd8 <col:12> 'const streamsize':'const int' lvalue Var 0xa101b50 '__n' 'const streamsize':'const int'))
              (IntegerLiteral 0xa101cf0 <col:18> 'int' 1))
            (CompoundStmt 0xa101fc0 <line:339:3, line:344:3>
              (CallExpr 0xa101e20 <line:340:5, col:50> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa101d58 <col:5, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0xa101d7c <col:23> '_CharT *' lvalue ParmVar 0xa101220 '__result' '_CharT *')
                (CallExpr 0xa101de8 <col:33, col:44> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa101db0 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa101d94 <col:33> 'streambuf_type *' lvalue Var 0xa1018c0 '__sb' 'streambuf_type *')))
                (DeclRefExpr 0xa101e04 <col:47> 'const streamsize':'const int' lvalue Var 0xa101b50 '__n' 'const streamsize':'const int'))
              (CallExpr 0xa101eb0 <line:341:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa101e60 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0xa101e48 <col:5> 'streambuf_type *' lvalue Var 0xa1018c0 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0xa101e94 <col:24> 'const streamsize':'const int' lvalue Var 0xa101b50 '__n' 'const streamsize':'const int'))
              (CompoundAssignOperator 0xa101f00 <line:342:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa101ed0 <col:5> '_CharT *' lvalue ParmVar 0xa101220 '__result' '_CharT *')
                (DeclRefExpr 0xa101ee8 <col:17> 'const streamsize':'const int' lvalue Var 0xa101b50 '__n' 'const streamsize':'const int'))
              (BinaryOperator 0xa101fa8 <line:343:5, col:27> '<dependent type>' '='
                (DeclRefExpr 0xa101f20 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa101980 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa101f88 <col:11, col:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa101f50 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa101f38 <col:11> 'streambuf_type *' lvalue Var 0xa1018c0 '__sb' 'streambuf_type *')))))
            (CompoundStmt 0xa102178 <line:346:3, line:349:3>
              (BinaryOperator 0xa1020c0 <line:347:5, col:48> '<dependent type>' '='
                (UnaryOperator 0xa102028 <col:5, col:14> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa102010 <col:6, col:14> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa101fe0 <col:6> '_CharT *' lvalue ParmVar 0xa101220 '__result' '_CharT *')))
                (CallExpr 0xa1020a0 <col:19, col:48> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa102060 <col:19, col:32> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa102084 <col:45> 'int_type':'typename traits_type::int_type' lvalue Var 0xa101980 '__c' 'int_type':'typename traits_type::int_type')))
              (BinaryOperator 0xa102160 <line:348:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa1020d8 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa101980 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa102140 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa102108 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa1020f0 <col:11> 'streambuf_type *' lvalue Var 0xa1018c0 '__sb' 'streambuf_type *')))))))))
    <<<NULL>>>)
  (ReturnStmt 0xa102238 <line:352:7, col:14>
    (DeclRefExpr 0xa10221c <col:14> '_CharT *' lvalue ParmVar 0xa101220 '__result' '_CharT *')))

;
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, istreambuf_iterator<_CharT> >::__type find(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT &__val) (CompoundStmt 0xa103db8 </usr/include/c++/4.6/bits/streambuf_iterator.h:360:5, line:394:5>
  (DeclStmt 0xa102c20 <line:361:7, col:78>
    0xa102bf0 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0xa102d10 <line:362:7, col:71>
    0xa102ce0 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0xa102dd0 <line:363:7, col:74>
    0xa102da0 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0xa102ec0 <line:364:7, col:68>
    0xa102e90 "typedef typename traits_type::int_type int_type")
  (IfStmt 0xa103d70 <line:366:7, line:392:2>
    <<<NULL>>>
    (BinaryOperator 0xa102f88 <line:366:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa102ee8 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa102ed0 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa102760 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0xa102f70 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa102f38 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa102f1c <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa1028f0 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa103d48 <line:367:2, line:392:2>
      (DeclStmt 0xa103078 <line:368:4, col:59>
        0xa102fc0 "const int_type __ival =
          (CallExpr 0xa103058 <col:28, col:58> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa103018 <col:28, col:41> '<dependent type>' lvalue)
            (DeclRefExpr 0xa10303c <col:53> 'const _CharT' lvalue ParmVar 0xa102960 '__val' 'const _CharT &'))")
      (DeclStmt 0xa103178 <line:369:4, col:42>
        0xa1030f0 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0xa103140 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa103124 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa102760 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0xa103238 <line:370:4, col:32>
        0xa103190 "int_type __c =
          (CallExpr 0xa103218 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1031e0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa1031c4 <col:19> 'streambuf_type *' lvalue Var 0xa1030f0 '__sb' 'streambuf_type *')))")
      (WhileStmt 0xa103b08 <line:371:4, line:386:6>
        <<<NULL>>>
        (BinaryOperator 0xa103408 <line:371:11, line:372:44> '<dependent type>' '&&'
          (UnaryOperator 0xa103338 <line:371:11, col:60> '<dependent type>' prefix '!'
            (CallExpr 0xa103310 <col:12, col:60> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa103268 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa10328c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0xa103190 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0xa1032f0 <col:42, col:59> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa1032c8 <col:42, col:55> '<dependent type>' lvalue))))
          (UnaryOperator 0xa1033f0 <line:372:7, col:44> '<dependent type>' prefix '!'
            (CallExpr 0xa1033c8 <col:8, col:44> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa103370 <col:8, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa103394 <col:33> 'int_type':'typename traits_type::int_type' lvalue Var 0xa103190 '__c' 'int_type':'typename traits_type::int_type')
              (DeclRefExpr 0xa1033ac <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa102fc0 '__ival' 'const int_type':'const typename traits_type::int_type'))))
        (CompoundStmt 0xa103af0 <line:373:6, line:386:6>
          (DeclStmt 0xa1035a8 <line:374:8, col:53>
            0xa103430 "streamsize __n =
              (CXXOperatorCallExpr 0xa103580 <col:25, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0xa103548 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                (CallExpr 0xa1034b8 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa103480 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0xa103464 <col:25> 'streambuf_type *' lvalue Var 0xa1030f0 '__sb' 'streambuf_type *')))
                (CallExpr 0xa103528 <col:41, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1034f0 <col:41, col:47> '<dependent type>' lvalue
                    (DeclRefExpr 0xa1034d4 <col:41> 'streambuf_type *' lvalue Var 0xa1030f0 '__sb' 'streambuf_type *'))))")
          (IfStmt 0xa103ad0 <line:375:8, line:385:22>
            <<<NULL>>>
            (BinaryOperator 0xa1035f8 <line:375:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa1035e8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa1035b8 <col:12> 'streamsize':'int' lvalue Var 0xa103430 '__n' 'streamsize':'int'))
              (IntegerLiteral 0xa1035d0 <col:18> 'int' 1))
            (CompoundStmt 0xa103a10 <line:376:3, line:383:3>
              (DeclStmt 0xa103788 <line:377:5, line:378:19>
                0xa103640 "const _CharT *__p =
                  (CallExpr 0xa103760 <line:377:25, line:378:18> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa103698 <line:377:25, col:38> '<dependent type>' lvalue)
                    (CallExpr 0xa103710 <col:43, col:54> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa1036d8 <col:43, col:49> '<dependent type>' lvalue
                        (DeclRefExpr 0xa1036bc <col:43> 'streambuf_type *' lvalue Var 0xa1030f0 '__sb' 'streambuf_type *')))
                    (DeclRefExpr 0xa10372c <line:378:8> 'streamsize':'int' lvalue Var 0xa103430 '__n' 'streamsize':'int')
                    (DeclRefExpr 0xa103744 <col:13> 'const _CharT' lvalue ParmVar 0xa102960 '__val' 'const _CharT &'))")
              (IfStmt 0xa1038c8 <line:379:5, line:380:30>
                <<<NULL>>>
                (DeclRefExpr 0xa103798 <line:379:9> 'const _CharT *' lvalue Var 0xa103640 '__p' 'const _CharT *')
                (BinaryOperator 0xa1038b0 <line:380:7, col:30> '<dependent type>' '='
                  (DeclRefExpr 0xa1037b0 <col:7> 'streamsize':'int' lvalue Var 0xa103430 '__n' 'streamsize':'int')
                  (CXXOperatorCallExpr 0xa103888 <col:13, col:30> '<dependent type>'
                    (UnresolvedLookupExpr 0xa103850 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                    (DeclRefExpr 0xa1037c8 <col:13> 'const _CharT *' lvalue Var 0xa103640 '__p' 'const _CharT *')
                    (CallExpr 0xa103830 <col:19, col:30> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa1037f8 <col:19, col:25> '<dependent type>' lvalue
                        (DeclRefExpr 0xa1037e0 <col:19> 'streambuf_type *' lvalue Var 0xa1030f0 '__sb' 'streambuf_type *')))))
                <<<NULL>>>)
              (CallExpr 0xa103950 <line:381:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa103900 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1038e4 <col:5> 'streambuf_type *' lvalue Var 0xa1030f0 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0xa103934 <col:24> 'streamsize':'int' lvalue Var 0xa103430 '__n' 'streamsize':'int'))
              (BinaryOperator 0xa1039f8 <line:382:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0xa103970 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa103190 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa1039d8 <col:11, col:23> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1039a0 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa103988 <col:11> 'streambuf_type *' lvalue Var 0xa1030f0 '__sb' 'streambuf_type *')))))
            (BinaryOperator 0xa103ab8 <line:385:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0xa103a30 <col:3> 'int_type':'typename traits_type::int_type' lvalue Var 0xa103190 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0xa103a98 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa103a60 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0xa103a48 <col:9> 'streambuf_type *' lvalue Var 0xa1030f0 '__sb' 'streambuf_type *')))))))
      (IfStmt 0xa103d28 <line:388:4, line:391:24>
        <<<NULL>>>
        (UnaryOperator 0xa103c10 <line:388:8, col:57> '<dependent type>' prefix '!'
          (CallExpr 0xa103be8 <col:9, col:57> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa103b40 <col:9, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0xa103b64 <col:34> 'int_type':'typename traits_type::int_type' lvalue Var 0xa103190 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa103bc8 <col:39, col:56> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa103ba0 <col:39, col:52> '<dependent type>' lvalue))))
        (BinaryOperator 0xa103c90 <line:389:6, col:21> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa103c40 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa103c24 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa102760 '__first' 'istreambuf_iterator<_CharT>'))
          (DeclRefExpr 0xa103c74 <col:21> 'int_type':'typename traits_type::int_type' lvalue Var 0xa103190 '__c' 'int_type':'typename traits_type::int_type'))
        (BinaryOperator 0xa103d10 <line:391:6, col:24> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa103cc0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa103ca8 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa102760 '__first' 'istreambuf_iterator<_CharT>'))
          (IntegerLiteral 0xa103cf8 <col:24> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa103da8 <line:393:7, col:14>
    (DeclRefExpr 0xa103d8c <col:14> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa102760 '__first' 'istreambuf_iterator<_CharT>')))

;
}
namespace std {
    template <typename _Tp = float> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = double> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = long double> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
    template <typename _CharT, typename _Traits> struct __pad {
        struct __pad;
        static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen);
    };
    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last);
    template <typename _CharT> inline ostreambuf_iterator<_CharT> __write(ostreambuf_iterator<_CharT> __s, const _CharT *__ws, int __len) (CompoundStmt 0xa1069a8 </usr/include/c++/4.6/bits/locale_facets.h:114:5, line:117:5>
  (CallExpr 0xa106958 <line:115:7, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1068f0 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0xa1068d4 <col:7> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa1066b0 '__s' 'ostreambuf_iterator<_CharT>'))
    (DeclRefExpr 0xa106924 <col:18> 'const _CharT *' lvalue ParmVar 0xa106720 '__ws' 'const _CharT *')
    (DeclRefExpr 0xa10693c <col:24> 'int' lvalue ParmVar 0xa106770 '__len' 'int'))
  (ReturnStmt 0xa106998 <line:116:7, col:14>
    (DeclRefExpr 0xa10697c <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa1066b0 '__s' 'ostreambuf_iterator<_CharT>')))

;
    template <typename _CharT, typename _OutIter> inline _OutIter __write(_OutIter __s, const _CharT *__ws, int __len) (CompoundStmt 0xa106ed0 </usr/include/c++/4.6/bits/locale_facets.h:124:5, line:128:5>
  (ForStmt 0xa106e80 <line:125:7, line:126:17>
    (DeclStmt 0xa106d00 <line:125:12, col:23>
      0xa106cb0 "int __j =
        (IntegerLiteral 0xa106ce8 <col:22> 'int' 0)")
    <<<NULL>>>
    (BinaryOperator 0xa106d60 <col:25, col:31> '_Bool' '<'
      (ImplicitCastExpr 0xa106d40 <col:25> 'int' <LValueToRValue>
        (DeclRefExpr 0xa106d10 <col:25> 'int' lvalue Var 0xa106cb0 '__j' 'int'))
      (ImplicitCastExpr 0xa106d50 <col:31> 'int' <LValueToRValue>
        (DeclRefExpr 0xa106d28 <col:31> 'int' lvalue ParmVar 0xa106b40 '__len' 'int')))
    (BinaryOperator 0xa106dd8 <col:38, col:47> '<dependent type>' ','
      (UnaryOperator 0xa106d90 <col:38, col:41> 'int' postfix '++'
        (DeclRefExpr 0xa106d78 <col:38> 'int' lvalue Var 0xa106cb0 '__j' 'int'))
      (UnaryOperator 0xa106dc0 <col:45, col:47> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa106da4 <col:47> '_OutIter' lvalue ParmVar 0xa106a80 '__s' '_OutIter')))
    (BinaryOperator 0xa106e68 <line:126:2, col:17> '<dependent type>' '='
      (UnaryOperator 0xa106e08 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa106df0 <col:3> '_OutIter' lvalue ParmVar 0xa106a80 '__s' '_OutIter'))
      (ArraySubscriptExpr 0xa106e50 <col:9, col:17> '<dependent type>' lvalue
        (DeclRefExpr 0xa106e1c <col:9> 'const _CharT *' lvalue ParmVar 0xa106af0 '__ws' 'const _CharT *')
        (DeclRefExpr 0xa106e34 <col:14> 'int' lvalue Var 0xa106cb0 '__j' 'int'))))
  (ReturnStmt 0xa106ec0 <line:127:7, col:14>
    (DeclRefExpr 0xa106ea4 <col:14> '_OutIter' lvalue ParmVar 0xa106a80 '__s' '_OutIter')))

;
    template <typename _CharT = wchar_t> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef wchar_t char_type;
        bool is(mask __m, char_type __c) const;
        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        char_type toupper(char_type __c) const;
        const char_type *toupper(char_type *__lo, const char_type *__hi) const;
        char_type tolower(char_type __c) const;
        const char_type *tolower(char_type *__lo, const char_type *__hi) const;
        char_type widen(char __c) const;
        const char *widen(const char *__lo, const char *__hi, char_type *__to) const;
        char narrow(char_type __c, char __dfault) const;
        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const;
    protected:
    protected:
        __ctype_abstract_base(size_t __refs);
        virtual void ~__ctype_abstract_base();
        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
        inline std::__ctype_abstract_base<wchar_t> &operator=(const std::__ctype_abstract_base<wchar_t> &);
    }
template <typename _CharT> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef _CharT char_type;
        bool is(mask __m, char_type __c) const (CompoundStmt 0xa1096c8 </usr/include/c++/4.6/bits/locale_facets.h:163:7, col:39>
  (ReturnStmt 0xa1096b8 <col:9, col:36>
    (CallExpr 0xa109690 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa109628 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa109618 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa10965c <col:28> 'mask':'unsigned short' lvalue ParmVar 0xa107260 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa109674 <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa1072c0 '__c' 'char_type':'_CharT'))))


        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const (CompoundStmt 0xa1097a8 </usr/include/c++/4.6/bits/locale_facets.h:180:7, col:48>
  (ReturnStmt 0xa109798 <col:9, col:45>
    (CallExpr 0xa109770 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1096f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1096e0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa109724 <col:28> 'const char_type *' lvalue ParmVar 0xa107400 '__lo' 'const char_type *')
      (DeclRefExpr 0xa10973c <col:34> 'const char_type *' lvalue ParmVar 0xa107450 '__hi' 'const char_type *')
      (DeclRefExpr 0xa109754 <col:40> 'mask *' lvalue ParmVar 0xa1074c0 '__vec' 'mask *'))))


        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa109888 </usr/include/c++/4.6/bits/locale_facets.h:196:7, col:51>
  (ReturnStmt 0xa109878 <col:9, col:48>
    (CallExpr 0xa109850 <col:16, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1097d0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1097c0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa109804 <col:33> 'mask':'unsigned short' lvalue ParmVar 0xa107600 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa10981c <col:38> 'const char_type *' lvalue ParmVar 0xa107650 '__lo' 'const char_type *')
      (DeclRefExpr 0xa109834 <col:44> 'const char_type *' lvalue ParmVar 0xa1076a0 '__hi' 'const char_type *'))))


        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa10ac30 </usr/include/c++/4.6/bits/locale_facets.h:212:7, col:52>
  (ReturnStmt 0xa10ac20 <col:9, col:49>
    (CallExpr 0xa10abf8 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1098b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1098a0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa1098e4 <col:34> 'mask':'unsigned short' lvalue ParmVar 0xa1077e0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa10abc8 <col:39> 'const char_type *' lvalue ParmVar 0xa107830 '__lo' 'const char_type *')
      (DeclRefExpr 0xa10abe0 <col:45> 'const char_type *' lvalue ParmVar 0xa107880 '__hi' 'const char_type *'))))


        char_type toupper(char_type __c) const (CompoundStmt 0xa10acd8 </usr/include/c++/4.6/bits/locale_facets.h:226:7, col:39>
  (ReturnStmt 0xa10acc8 <col:9, col:36>
    (CallExpr 0xa10aca8 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa10ac58 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa10ac48 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa10ac8c <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa107960 '__c' 'char_type':'_CharT'))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa10ada0 </usr/include/c++/4.6/bits/locale_facets.h:241:7, col:46>
  (ReturnStmt 0xa10ad90 <col:9, col:43>
    (CallExpr 0xa10ad68 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa10ad00 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa10acf0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa10ad34 <col:33> 'char_type *' lvalue ParmVar 0xa107aa0 '__lo' 'char_type *')
      (DeclRefExpr 0xa10ad4c <col:39> 'const char_type *' lvalue ParmVar 0xa107af0 '__hi' 'const char_type *'))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa10ae48 </usr/include/c++/4.6/bits/locale_facets.h:255:7, col:39>
  (ReturnStmt 0xa10ae38 <col:9, col:36>
    (CallExpr 0xa10ae18 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa10adc8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa10adb8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa10adfc <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa107c00 '__c' 'char_type':'_CharT'))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa10af10 </usr/include/c++/4.6/bits/locale_facets.h:270:7, col:46>
  (ReturnStmt 0xa10af00 <col:9, col:43>
    (CallExpr 0xa10aed8 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa10ae70 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa10ae60 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa10aea4 <col:33> 'char_type *' lvalue ParmVar 0xa107cd0 '__lo' 'char_type *')
      (DeclRefExpr 0xa10aebc <col:39> 'const char_type *' lvalue ParmVar 0xa107d20 '__hi' 'const char_type *'))))


        char_type widen(char __c) const (CompoundStmt 0xa10afb8 </usr/include/c++/4.6/bits/locale_facets.h:287:7, col:37>
  (ReturnStmt 0xa10afa8 <col:9, col:34>
    (CallExpr 0xa10af88 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa10af38 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa10af28 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa10af6c <col:31> 'char' lvalue ParmVar 0xa107df0 '__c' 'char'))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa10b098 </usr/include/c++/4.6/bits/locale_facets.h:306:7, col:50>
  (ReturnStmt 0xa10b088 <col:9, col:47>
    (CallExpr 0xa10b060 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa10afe0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa10afd0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa10b014 <col:31> 'const char *' lvalue ParmVar 0xa107f10 '__lo' 'const char *')
      (DeclRefExpr 0xa10b02c <col:37> 'const char *' lvalue ParmVar 0xa107f60 '__hi' 'const char *')
      (DeclRefExpr 0xa10b044 <col:43> 'char_type *' lvalue ParmVar 0xa107fb0 '__to' 'char_type *'))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa10b160 </usr/include/c++/4.6/bits/locale_facets.h:325:7, col:48>
  (ReturnStmt 0xa10b150 <col:9, col:45>
    (CallExpr 0xa10b128 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa10b0c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa10b0b0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa10b0f4 <col:32> 'char_type':'_CharT' lvalue ParmVar 0xa1080f0 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0xa10b10c <col:37> 'char' lvalue ParmVar 0xa108130 '__dfault' 'char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa10b260 </usr/include/c++/4.6/bits/locale_facets.h:348:7, col:61>
  (ReturnStmt 0xa10b250 <col:9, col:58>
    (CallExpr 0xa10b220 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa10b188 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa10b178 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa10b1bc <col:32> 'const char_type *' lvalue ParmVar 0xa108250 '__lo' 'const char_type *')
      (DeclRefExpr 0xa10b1d4 <col:38> 'const char_type *' lvalue ParmVar 0xa1082a0 '__hi' 'const char_type *')
      (DeclRefExpr 0xa10b1ec <col:44> 'char' lvalue ParmVar 0xa1082e0 '__dfault' 'char')
      (DeclRefExpr 0xa10b204 <col:54> 'char *' lvalue ParmVar 0xa108330 '__to' 'char *'))))


    protected:
    protected:
        __ctype_abstract_base<_CharT>(size_t __refs = (ImplicitCastExpr 0xa1095f0 </usr/include/c++/4.6/bits/locale_facets.h:352:45> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1095d8 <col:45> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa10b274 </usr/include/c++/4.6/bits/locale_facets.h:352:55> 'size_t':'unsigned int' lvalue ParmVar 0xa1084b0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa10b310 </usr/include/c++/4.6/bits/locale_facets.h:352:63, col:65>)


        virtual void ~__ctype_abstract_base<_CharT>() (CompoundStmt 0xa10b320 </usr/include/c++/4.6/bits/locale_facets.h:355:32, col:34>)


        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
    };
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa10d700 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa10d6e8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa10d658 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa10d6d8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa10d6c0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa10d6b0 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa10d688 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa10d670 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa1106a8 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa110690 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa1106b8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa1106e0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1106c8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa110708 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa1106f0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa110718 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa110740 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa110728 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa110830 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa110820 <col:9, col:36>
    (CXXMemberCallExpr 0xa1107f0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa1107d0 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa10fa60
        (CXXThisExpr 0xa110768 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110810 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa1107b8 <col:33> 'char_type':'char' lvalue ParmVar 0xa10e1b0 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa110940 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa110930 <col:9, col:43>
    (CXXMemberCallExpr 0xa1108e8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa1108c8 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa10fb90
        (CXXThisExpr 0xa110848 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110910 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa110898 <col:33> 'char_type *' lvalue ParmVar 0xa10e2f0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa110920 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1108b0 <col:39> 'const char_type *' lvalue ParmVar 0xa10e360 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa110a20 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa110a10 <col:9, col:36>
    (CXXMemberCallExpr 0xa1109e0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa1109c0 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa10fc50
        (CXXThisExpr 0xa110958 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110a00 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa1109a8 <col:33> 'char_type':'char' lvalue ParmVar 0xa10e470 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa110b30 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa110b20 <col:9, col:43>
    (CXXMemberCallExpr 0xa110ad8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa110ab8 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa10fd80
        (CXXThisExpr 0xa110a38 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110b00 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa110a88 <col:33> 'char_type *' lvalue ParmVar 0xa10e540 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa110b10 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa110aa0 <col:39> 'const char_type *' lvalue ParmVar 0xa10e590 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa110dc8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa110c90 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa110ba8 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa110b98 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa110b74 <col:6> 'char' lvalue ->_M_widen_ok 0xa10d320
          (CXXThisExpr 0xa110b48 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa110c80 <line:868:4, col:51>
      (ImplicitCastExpr 0xa110c70 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa110c58 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa110c48 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa110bc8 <col:11> 'char [256]' lvalue ->_M_widen 0xa10d410
              (CXXThisExpr 0xa110bb8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa110c30 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa110c20 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa110c10 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa110be8 <col:47> 'char' lvalue ParmVar 0xa10e660 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa110ce0 <line:869:2, col:22> 'void'
    (MemberExpr 0xa110cc0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa1103f0
      (CXXThisExpr 0xa110cb0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa110db8 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa110d88 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa110d68 <col:9, col:15> '<bound member function type>' ->do_widen 0xa10fe40
        (CXXThisExpr 0xa110d00 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110da8 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa110d50 <col:24> 'char' lvalue ParmVar 0xa10e660 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa111208 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa110ff0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa110e50 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa110e40 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa110e30 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa110df8 <col:6> 'char' lvalue ->_M_widen_ok 0xa10d320
            (CXXThisExpr 0xa110de8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa110e18 <col:21> 'int' 1))
    (CompoundStmt 0xa110fd8 <line:895:4, line:898:4>
      (CallExpr 0xa110f28 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa110f18 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa110e68 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa110f60 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa110f50 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa110e80 <col:23> 'char_type *' lvalue ParmVar 0xa10e800 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa110f80 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa110f70 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa110e98 <col:29> 'const char *' lvalue ParmVar 0xa10e760 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa110f90 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa110f00 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa110ee0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa110eb0 <col:35> 'const char *' lvalue ParmVar 0xa10e7b0 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa110ef0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa110ec8 <col:42> 'const char *' lvalue ParmVar 0xa10e760 '__lo' 'const char *')))))
      (ReturnStmt 0xa110fc8 <line:897:6, col:13>
        (ImplicitCastExpr 0xa110fb8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa110f9c <col:13> 'const char *' lvalue ParmVar 0xa10e7b0 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa1110c8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa111060 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa111050 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa111040 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa111020 <col:7> 'char' lvalue ->_M_widen_ok 0xa10d320
            (CXXThisExpr 0xa111010 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa1110a8 <line:900:4, col:18> 'void'
      (MemberExpr 0xa111088 <col:4> '<bound member function type>' ->_M_widen_init 0xa1103f0
        (CXXThisExpr 0xa111078 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa1111f8 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa1111a0 <col:9, col:40> 'const char *'
      (MemberExpr 0xa111180 <col:9, col:15> '<bound member function type>' ->do_widen 0xa10ffc0
        (CXXThisExpr 0xa1110e8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa1111c8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa111138 <col:24> 'const char *' lvalue ParmVar 0xa10e760 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa1111d8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa111150 <col:30> 'const char *' lvalue ParmVar 0xa10e7b0 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa1111e8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111168 <col:36> 'char_type *' lvalue ParmVar 0xa10e800 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa111750 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa1113d8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1112f0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa1112e0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa1112c8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa1112b8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa111238 <col:6> 'char [256]' lvalue ->_M_narrow 0xa10d500
              (CXXThisExpr 0xa111228 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa1112a0 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa111290 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa111280 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa111258 <col:43> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa1113c8 <line:926:4, col:52>
      (ImplicitCastExpr 0xa1113b8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa1113a0 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa111390 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa111310 <col:11> 'char [256]' lvalue ->_M_narrow 0xa10d500
              (CXXThisExpr 0xa111300 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa111378 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa111368 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa111358 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa111330 <col:48> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa111530 <line:927:2, col:43>
    0xa111400 "const char __t =
      (CXXMemberCallExpr 0xa1114e8 <col:19, col:42> 'char'
        (MemberExpr 0xa1114c8 <col:19> '<bound member function type>' ->do_narrow 0xa1100e0
          (CXXThisExpr 0xa1114b8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa111510 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa111488 <col:29> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa111520 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa1114a0 <col:34> 'char' lvalue ParmVar 0xa10e980 '__dfault' 'char')))")
  (IfStmt 0xa1116f8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa1115b0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa111580 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa111570 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa111540 <col:6> 'const char' lvalue Var 0xa111400 '__t' 'const char')))
      (ImplicitCastExpr 0xa1115a0 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa111590 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa111558 <col:13> 'char' lvalue ParmVar 0xa10e980 '__dfault' 'char'))))
    (BinaryOperator 0xa1116e0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa1116a0 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa111690 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa111610 <col:4> 'char [256]' lvalue ->_M_narrow 0xa10d500
            (CXXThisExpr 0xa111600 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa111678 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa111668 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa111658 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa111630 <col:41> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa1116d0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa1116b4 <col:49> 'const char' lvalue Var 0xa111400 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa111740 <line:930:2, col:9>
    (ImplicitCastExpr 0xa111730 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa111714 <col:9> 'const char' lvalue Var 0xa111400 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa111c50 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa111a08 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa111870 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa111828 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa111818 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa111770 <col:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa111850 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa1117f0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa1117e0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa1117d0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa111798 <col:23> 'char' lvalue ->_M_narrow_ok 0xa10d540
                  (CXXThisExpr 0xa111788 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa1117b8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa111860 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa111808 <col:42> '_Bool' true))))
    (CompoundStmt 0xa1119f0 <line:960:4, line:963:4>
      (CallExpr 0xa111940 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa111930 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa11187c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa111978 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa111968 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa111894 <col:23> 'char *' lvalue ParmVar 0xa10eb80 '__to' 'char *')))
        (ImplicitCastExpr 0xa111998 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa111988 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1118ac <col:29> 'const char_type *' lvalue ParmVar 0xa10eaa0 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa1119a8 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa111918 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa1118f8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa1118c4 <col:35> 'const char_type *' lvalue ParmVar 0xa10eaf0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa111908 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa1118dc <col:42> 'const char_type *' lvalue ParmVar 0xa10eaa0 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa1119e0 <line:962:6, col:13>
        (ImplicitCastExpr 0xa1119d0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1119b4 <col:13> 'const char_type *' lvalue ParmVar 0xa10eaf0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa111ae0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa111a78 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa111a68 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa111a58 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa111a38 <col:7> 'char' lvalue ->_M_narrow_ok 0xa10d540
            (CXXThisExpr 0xa111a28 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa111ac0 <line:965:4, col:19> 'void'
      (MemberExpr 0xa111aa0 <col:4> '<bound member function type>' ->_M_narrow_init 0xa110370
        (CXXThisExpr 0xa111a90 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa111c40 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa111bd0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa111bb0 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa1102a0
        (CXXThisExpr 0xa111b00 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa111c00 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111b50 <col:25> 'const char_type *' lvalue ParmVar 0xa10eaa0 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa111c10 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111b68 <col:31> 'const char_type *' lvalue ParmVar 0xa10eaf0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa111c20 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa111b80 <col:37> 'char' lvalue ParmVar 0xa10eb30 '__dfault' 'char'))
      (ImplicitCastExpr 0xa111c30 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa111b98 <col:47> 'char *' lvalue ParmVar 0xa10eb80 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa111cc0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa111cb0 <col:9, col:16>
    (ImplicitCastExpr 0xa111ca0 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa111c80 <col:16> 'const mask *const' lvalue ->_M_table 0xa10d2e0
        (CXXThisExpr 0xa111c70 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa111d10 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa111d00 <col:9, col:16>
    (ImplicitCastExpr 0xa111cf0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa111cd4 <col:16> 'char' lvalue ParmVar 0xa10fdf0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa111e98 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa111de8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa111dd8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa111d24 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa111e20 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa111e10 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111d3c <col:19> 'char_type *' lvalue ParmVar 0xa10ff60 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa111e40 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa111e30 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa111d54 <col:27> 'const char *' lvalue ParmVar 0xa10fec0 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa111e50 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa111dc0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa111da0 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa111d6c <col:33> 'const char *' lvalue ParmVar 0xa10ff10 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa111db0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa111d84 <col:40> 'const char *' lvalue ParmVar 0xa10fec0 '__lo' 'const char *')))))
  (ReturnStmt 0xa111e88 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa111e78 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa111e5c <col:9> 'const char *' lvalue ParmVar 0xa10ff10 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa111ee8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa111ed8 <col:9, col:16>
    (ImplicitCastExpr 0xa111ec8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa111eb0 <col:16> 'char_type':'char' lvalue ParmVar 0xa110040 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa112070 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa111fc0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa111fb0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa111efc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa111ff8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa111fe8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa111f14 <col:19> 'char *' lvalue ParmVar 0xa110240 '__dest' 'char *')))
    (ImplicitCastExpr 0xa112018 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa112008 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111f2c <col:27> 'const char_type *' lvalue ParmVar 0xa110160 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa112028 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa111f98 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa111f78 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa111f44 <col:33> 'const char_type *' lvalue ParmVar 0xa1101b0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa111f88 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa111f5c <col:40> 'const char_type *' lvalue ParmVar 0xa110160 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa112060 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa112050 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa112034 <col:9> 'const char_type *' lvalue ParmVar 0xa1101b0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa1196a8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa119690 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa1196d0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1196b8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype : public __ctype_abstract_base<_CharT> {
        class ctype;
    public:
    public:
        typedef _CharT char_type;
        typedef typename __ctype_abstract_base<_CharT>::mask mask;
        static locale::id id;
        ctype<_CharT>(size_t __refs = (ImplicitCastExpr 0xa10cb08 </usr/include/c++/4.6/bits/locale_facets.h:616:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa10caf0 <col:29> 'int' 0))
) : __ctype_abstract_base<_CharT>((DeclRefExpr 0xa10cba0 </usr/include/c++/4.6/bits/locale_facets.h:616:64> 'size_t':'unsigned int' lvalue ParmVar 0xa10b7d0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa10cc00 </usr/include/c++/4.6/bits/locale_facets.h:616:72, col:74>)


    protected:
    protected:
        virtual void ~ctype<_CharT>();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type __c) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type __c) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
    };
    static locale::id id(CXXConstructExpr 0xa10ce48 </usr/include/c++/4.6/bits/locale_facets.h:662:31> 'class locale::id':'class std::locale::id''void (void)')
;
    class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa10d700 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa10d6e8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa10d658 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa10d6d8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa10d6c0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa10d6b0 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa10d688 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa10d670 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa1106a8 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa110690 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa1106b8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa1106e0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1106c8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa110708 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa1106f0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa110718 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa110740 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa110728 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa110830 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa110820 <col:9, col:36>
    (CXXMemberCallExpr 0xa1107f0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa1107d0 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa10fa60
        (CXXThisExpr 0xa110768 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110810 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa1107b8 <col:33> 'char_type':'char' lvalue ParmVar 0xa10e1b0 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa110940 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa110930 <col:9, col:43>
    (CXXMemberCallExpr 0xa1108e8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa1108c8 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa10fb90
        (CXXThisExpr 0xa110848 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110910 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa110898 <col:33> 'char_type *' lvalue ParmVar 0xa10e2f0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa110920 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1108b0 <col:39> 'const char_type *' lvalue ParmVar 0xa10e360 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa110a20 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa110a10 <col:9, col:36>
    (CXXMemberCallExpr 0xa1109e0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa1109c0 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa10fc50
        (CXXThisExpr 0xa110958 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110a00 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa1109a8 <col:33> 'char_type':'char' lvalue ParmVar 0xa10e470 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa110b30 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa110b20 <col:9, col:43>
    (CXXMemberCallExpr 0xa110ad8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa110ab8 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa10fd80
        (CXXThisExpr 0xa110a38 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110b00 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa110a88 <col:33> 'char_type *' lvalue ParmVar 0xa10e540 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa110b10 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa110aa0 <col:39> 'const char_type *' lvalue ParmVar 0xa10e590 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa110dc8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa110c90 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa110ba8 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa110b98 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa110b74 <col:6> 'char' lvalue ->_M_widen_ok 0xa10d320
          (CXXThisExpr 0xa110b48 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa110c80 <line:868:4, col:51>
      (ImplicitCastExpr 0xa110c70 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa110c58 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa110c48 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa110bc8 <col:11> 'char [256]' lvalue ->_M_widen 0xa10d410
              (CXXThisExpr 0xa110bb8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa110c30 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa110c20 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa110c10 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa110be8 <col:47> 'char' lvalue ParmVar 0xa10e660 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa110ce0 <line:869:2, col:22> 'void'
    (MemberExpr 0xa110cc0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa1103f0
      (CXXThisExpr 0xa110cb0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa110db8 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa110d88 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa110d68 <col:9, col:15> '<bound member function type>' ->do_widen 0xa10fe40
        (CXXThisExpr 0xa110d00 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa110da8 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa110d50 <col:24> 'char' lvalue ParmVar 0xa10e660 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa111208 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa110ff0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa110e50 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa110e40 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa110e30 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa110df8 <col:6> 'char' lvalue ->_M_widen_ok 0xa10d320
            (CXXThisExpr 0xa110de8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa110e18 <col:21> 'int' 1))
    (CompoundStmt 0xa110fd8 <line:895:4, line:898:4>
      (CallExpr 0xa110f28 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa110f18 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa110e68 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa110f60 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa110f50 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa110e80 <col:23> 'char_type *' lvalue ParmVar 0xa10e800 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa110f80 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa110f70 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa110e98 <col:29> 'const char *' lvalue ParmVar 0xa10e760 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa110f90 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa110f00 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa110ee0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa110eb0 <col:35> 'const char *' lvalue ParmVar 0xa10e7b0 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa110ef0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa110ec8 <col:42> 'const char *' lvalue ParmVar 0xa10e760 '__lo' 'const char *')))))
      (ReturnStmt 0xa110fc8 <line:897:6, col:13>
        (ImplicitCastExpr 0xa110fb8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa110f9c <col:13> 'const char *' lvalue ParmVar 0xa10e7b0 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa1110c8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa111060 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa111050 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa111040 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa111020 <col:7> 'char' lvalue ->_M_widen_ok 0xa10d320
            (CXXThisExpr 0xa111010 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa1110a8 <line:900:4, col:18> 'void'
      (MemberExpr 0xa111088 <col:4> '<bound member function type>' ->_M_widen_init 0xa1103f0
        (CXXThisExpr 0xa111078 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa1111f8 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa1111a0 <col:9, col:40> 'const char *'
      (MemberExpr 0xa111180 <col:9, col:15> '<bound member function type>' ->do_widen 0xa10ffc0
        (CXXThisExpr 0xa1110e8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa1111c8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa111138 <col:24> 'const char *' lvalue ParmVar 0xa10e760 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa1111d8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa111150 <col:30> 'const char *' lvalue ParmVar 0xa10e7b0 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa1111e8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111168 <col:36> 'char_type *' lvalue ParmVar 0xa10e800 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa111750 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa1113d8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1112f0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa1112e0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa1112c8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa1112b8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa111238 <col:6> 'char [256]' lvalue ->_M_narrow 0xa10d500
              (CXXThisExpr 0xa111228 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa1112a0 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa111290 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa111280 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa111258 <col:43> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa1113c8 <line:926:4, col:52>
      (ImplicitCastExpr 0xa1113b8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa1113a0 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa111390 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa111310 <col:11> 'char [256]' lvalue ->_M_narrow 0xa10d500
              (CXXThisExpr 0xa111300 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa111378 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa111368 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa111358 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa111330 <col:48> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa111530 <line:927:2, col:43>
    0xa111400 "const char __t =
      (CXXMemberCallExpr 0xa1114e8 <col:19, col:42> 'char'
        (MemberExpr 0xa1114c8 <col:19> '<bound member function type>' ->do_narrow 0xa1100e0
          (CXXThisExpr 0xa1114b8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa111510 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa111488 <col:29> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa111520 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa1114a0 <col:34> 'char' lvalue ParmVar 0xa10e980 '__dfault' 'char')))")
  (IfStmt 0xa1116f8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa1115b0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa111580 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa111570 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa111540 <col:6> 'const char' lvalue Var 0xa111400 '__t' 'const char')))
      (ImplicitCastExpr 0xa1115a0 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa111590 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa111558 <col:13> 'char' lvalue ParmVar 0xa10e980 '__dfault' 'char'))))
    (BinaryOperator 0xa1116e0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa1116a0 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa111690 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa111610 <col:4> 'char [256]' lvalue ->_M_narrow 0xa10d500
            (CXXThisExpr 0xa111600 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa111678 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa111668 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa111658 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa111630 <col:41> 'char_type':'char' lvalue ParmVar 0xa10e940 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa1116d0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa1116b4 <col:49> 'const char' lvalue Var 0xa111400 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa111740 <line:930:2, col:9>
    (ImplicitCastExpr 0xa111730 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa111714 <col:9> 'const char' lvalue Var 0xa111400 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa111c50 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa111a08 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa111870 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa111828 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa111818 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa111770 <col:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa111850 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa1117f0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa1117e0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa1117d0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa111798 <col:23> 'char' lvalue ->_M_narrow_ok 0xa10d540
                  (CXXThisExpr 0xa111788 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa1117b8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa111860 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa111808 <col:42> '_Bool' true))))
    (CompoundStmt 0xa1119f0 <line:960:4, line:963:4>
      (CallExpr 0xa111940 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa111930 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa11187c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa111978 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa111968 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa111894 <col:23> 'char *' lvalue ParmVar 0xa10eb80 '__to' 'char *')))
        (ImplicitCastExpr 0xa111998 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa111988 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1118ac <col:29> 'const char_type *' lvalue ParmVar 0xa10eaa0 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa1119a8 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa111918 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa1118f8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa1118c4 <col:35> 'const char_type *' lvalue ParmVar 0xa10eaf0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa111908 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa1118dc <col:42> 'const char_type *' lvalue ParmVar 0xa10eaa0 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa1119e0 <line:962:6, col:13>
        (ImplicitCastExpr 0xa1119d0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1119b4 <col:13> 'const char_type *' lvalue ParmVar 0xa10eaf0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa111ae0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa111a78 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa111a68 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa111a58 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa111a38 <col:7> 'char' lvalue ->_M_narrow_ok 0xa10d540
            (CXXThisExpr 0xa111a28 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa111ac0 <line:965:4, col:19> 'void'
      (MemberExpr 0xa111aa0 <col:4> '<bound member function type>' ->_M_narrow_init 0xa110370
        (CXXThisExpr 0xa111a90 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa111c40 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa111bd0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa111bb0 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa1102a0
        (CXXThisExpr 0xa111b00 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa111c00 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111b50 <col:25> 'const char_type *' lvalue ParmVar 0xa10eaa0 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa111c10 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111b68 <col:31> 'const char_type *' lvalue ParmVar 0xa10eaf0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa111c20 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa111b80 <col:37> 'char' lvalue ParmVar 0xa10eb30 '__dfault' 'char'))
      (ImplicitCastExpr 0xa111c30 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa111b98 <col:47> 'char *' lvalue ParmVar 0xa10eb80 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa111cc0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa111cb0 <col:9, col:16>
    (ImplicitCastExpr 0xa111ca0 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa111c80 <col:16> 'const mask *const' lvalue ->_M_table 0xa10d2e0
        (CXXThisExpr 0xa111c70 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa111d10 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa111d00 <col:9, col:16>
    (ImplicitCastExpr 0xa111cf0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa111cd4 <col:16> 'char' lvalue ParmVar 0xa10fdf0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa111e98 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa111de8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa111dd8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa111d24 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa111e20 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa111e10 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111d3c <col:19> 'char_type *' lvalue ParmVar 0xa10ff60 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa111e40 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa111e30 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa111d54 <col:27> 'const char *' lvalue ParmVar 0xa10fec0 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa111e50 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa111dc0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa111da0 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa111d6c <col:33> 'const char *' lvalue ParmVar 0xa10ff10 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa111db0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa111d84 <col:40> 'const char *' lvalue ParmVar 0xa10fec0 '__lo' 'const char *')))))
  (ReturnStmt 0xa111e88 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa111e78 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa111e5c <col:9> 'const char *' lvalue ParmVar 0xa10ff10 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa111ee8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa111ed8 <col:9, col:16>
    (ImplicitCastExpr 0xa111ec8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa111eb0 <col:16> 'char_type':'char' lvalue ParmVar 0xa110040 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa112070 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa111fc0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa111fb0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa111efc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x9ec8990 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa111ff8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa111fe8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa111f14 <col:19> 'char *' lvalue ParmVar 0xa110240 '__dest' 'char *')))
    (ImplicitCastExpr 0xa112018 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa112008 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa111f2c <col:27> 'const char_type *' lvalue ParmVar 0xa110160 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa112028 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa111f98 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa111f78 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa111f44 <col:33> 'const char_type *' lvalue ParmVar 0xa1101b0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa111f88 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa111f5c <col:40> 'const char_type *' lvalue ParmVar 0xa110160 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa112060 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa112050 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa112034 <col:9> 'const char_type *' lvalue ParmVar 0xa1101b0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    };
    class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa1196a8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa119690 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa1196d0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1196b8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    };
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname : public ctype<_CharT> {
        class ctype_byname;
    public:
    public:
        typedef typename ctype<_CharT>::mask mask;
        ctype_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa119ce0 </usr/include/c++/4.6/bits/locale_facets.h:1473:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa119cc8 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname<_CharT>() (CompoundStmt 0xa119cf0 </usr/include/c++/4.6/bits/locale_facets.h:1477:23, col:25>)


    };
    class ctype_byname : public ctype<char> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0xa11a318 </usr/include/c++/4.6/bits/locale_facets.h:1486:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa11a300 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<char> &operator=(const std::ctype_byname<char> &);
    };
    class ctype_byname : public ctype<wchar_t> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0xa11a938 </usr/include/c++/4.6/bits/locale_facets.h:1499:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa11a920 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<wchar_t> &operator=(const std::ctype_byname<wchar_t> &);
    };
}
namespace std {
    bool is(mask __m, char __c) const (CompoundStmt 0xa11acf8 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:44:3, col:61>
  (ReturnStmt 0xa11ace8 <col:5, col:56>
    (ImplicitCastExpr 0xa11acd8 <col:12, col:56> '_Bool' <IntegralToBoolean>
      (BinaryOperator 0xa11acc0 <col:12, col:56> 'int' '&'
        (ImplicitCastExpr 0xa11ac90 <col:12, col:52> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa11ac80 <col:12, col:52> 'mask':'unsigned short' <LValueToRValue>
            (ArraySubscriptExpr 0xa11ac50 <col:12, col:52> 'const mask':'const unsigned short' lvalue
              (ImplicitCastExpr 0xa11ac40 <col:12> 'const mask *' <LValueToRValue>
                (MemberExpr 0xa11abc0 <col:12> 'const mask *const' lvalue ->_M_table 0xa10d2e0
                  (CXXThisExpr 0xa11abb0 <col:12> 'const class std::ctype<char> *' this)))
              (CXXStaticCastExpr 0xa11ac28 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                (ImplicitCastExpr 0xa11ac18 <col:48> 'unsigned char' <IntegralCast>
                  (ImplicitCastExpr 0xa11ac08 <col:48> 'char' <LValueToRValue>
                    (DeclRefExpr 0xa11abe0 <col:48> 'char' lvalue ParmVar 0xa11aac0 '__c' 'char')))))))
        (ImplicitCastExpr 0xa11acb0 <col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa11aca0 <col:56> 'mask':'unsigned short' <LValueToRValue>
            (DeclRefExpr 0xa11ac64 <col:56> 'mask':'unsigned short' lvalue ParmVar 0xa11aa80 '__m' 'mask':'unsigned short')))))))


    const char *is(const char *__low, const char *__high, mask *__vec) const (CompoundStmt 0xa11b148 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:49:3, line:53:3>
  (WhileStmt 0xa11b0f8 <line:50:5, line:51:63>
    <<<NULL>>>
    (BinaryOperator 0xa11af88 <line:50:12, col:20> '_Bool' '<'
      (ImplicitCastExpr 0xa11af68 <col:12> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa11af34 <col:12> 'const char *' lvalue ParmVar 0xa11ad90 '__low' 'const char *'))
      (ImplicitCastExpr 0xa11af78 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa11af4c <col:20> 'const char *' lvalue ParmVar 0xa11ade0 '__high' 'const char *')))
    (BinaryOperator 0xa11b0e0 <line:51:7, col:63> 'mask':'unsigned short' lvalue '='
      (UnaryOperator 0xa11afd0 <col:7, col:13> 'mask':'unsigned short' lvalue prefix '*'
        (UnaryOperator 0xa11afb8 <col:8, col:13> 'mask *' postfix '++'
          (DeclRefExpr 0xa11afa0 <col:8> 'mask *' lvalue ParmVar 0xa11ae30 '__vec' 'mask *')))
      (ImplicitCastExpr 0xa11b0d0 <col:18, col:63> 'mask':'unsigned short' <LValueToRValue>
        (ArraySubscriptExpr 0xa11b0b8 <col:18, col:63> 'const mask':'const unsigned short' lvalue
          (ImplicitCastExpr 0xa11b0a8 <col:18> 'const mask *' <LValueToRValue>
            (MemberExpr 0xa11aff8 <col:18> 'const mask *const' lvalue ->_M_table 0xa10d2e0
              (CXXThisExpr 0xa11afe8 <col:18> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa11b090 <col:27, col:62> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa11b080 <col:54, col:60> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa11b070 <col:54, col:60> 'char' <LValueToRValue>
                (UnaryOperator 0xa11b048 <col:54, col:60> 'const char' lvalue prefix '*'
                  (UnaryOperator 0xa11b030 <col:55, col:60> 'const char *' postfix '++'
                    (DeclRefExpr 0xa11b018 <col:55> 'const char *' lvalue ParmVar 0xa11ad90 '__low' 'const char *'))))))))))
  (ReturnStmt 0xa11b138 <line:52:5, col:12>
    (ImplicitCastExpr 0xa11b128 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa11b10c <col:12> 'const char *' lvalue ParmVar 0xa11ade0 '__high' 'const char *'))))


    const char *scan_is(mask __m, const char *__low, const char *__high) const (CompoundStmt 0xa11b608 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:58:3, line:63:3>
  (WhileStmt 0xa11b5b8 <line:59:5, line:61:9>
    <<<NULL>>>
    (BinaryOperator 0xa11b570 <line:59:12, line:60:60> '_Bool' '&&'
      (BinaryOperator 0xa11b3c8 <line:59:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0xa11b3a8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa11b374 <col:12> 'const char *' lvalue ParmVar 0xa11b220 '__low' 'const char *'))
        (ImplicitCastExpr 0xa11b3b8 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa11b38c <col:20> 'const char *' lvalue ParmVar 0xa11b270 '__high' 'const char *')))
      (UnaryOperator 0xa11b558 <line:60:8, col:60> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa11b548 <col:9, col:60> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa11b530 <col:9, col:60> 'int'
            (BinaryOperator 0xa11b518 <col:10, col:57> 'int' '&'
              (ImplicitCastExpr 0xa11b4e8 <col:10, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa11b4d8 <col:10, col:53> 'mask':'unsigned short' <LValueToRValue>
                  (ArraySubscriptExpr 0xa11b4a8 <col:10, col:53> 'const mask':'const unsigned short' lvalue
                    (ImplicitCastExpr 0xa11b498 <col:10> 'const mask *' <LValueToRValue>
                      (MemberExpr 0xa11b3f0 <col:10> 'const mask *const' lvalue ->_M_table 0xa10d2e0
                        (CXXThisExpr 0xa11b3e0 <col:10> 'const class std::ctype<char> *' this)))
                    (CXXStaticCastExpr 0xa11b480 <col:19, col:52> 'unsigned char' static_cast<unsigned char> <NoOp>
                      (ImplicitCastExpr 0xa11b470 <col:46, col:47> 'unsigned char' <IntegralCast>
                        (ImplicitCastExpr 0xa11b460 <col:46, col:47> 'char' <LValueToRValue>
                          (UnaryOperator 0xa11b438 <col:46, col:47> 'const char' lvalue prefix '*'
                            (ImplicitCastExpr 0xa11b428 <col:47> 'const char *' <LValueToRValue>
                              (DeclRefExpr 0xa11b410 <col:47> 'const char *' lvalue ParmVar 0xa11b220 '__low' 'const char *')))))))))
              (ImplicitCastExpr 0xa11b508 <col:57> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa11b4f8 <col:57> 'mask':'unsigned short' <LValueToRValue>
                  (DeclRefExpr 0xa11b4bc <col:57> 'mask':'unsigned short' lvalue ParmVar 0xa11b1d0 '__m' 'mask':'unsigned short'))))))))
    (UnaryOperator 0xa11b5a0 <line:61:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0xa11b588 <col:9> 'const char *' lvalue ParmVar 0xa11b220 '__low' 'const char *')))
  (ReturnStmt 0xa11b5f8 <line:62:5, col:12>
    (ImplicitCastExpr 0xa11b5e8 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa11b5cc <col:12> 'const char *' lvalue ParmVar 0xa11b220 '__low' 'const char *'))))


    const char *scan_not(mask __m, const char *__low, const char *__high) const (CompoundStmt 0xa11bad0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:68:3, line:73:3>
  (WhileStmt 0xa11ba80 <line:69:5, line:71:9>
    <<<NULL>>>
    (BinaryOperator 0xa11ba38 <line:69:12, line:70:64> '_Bool' '&&'
      (BinaryOperator 0xa11b888 <line:69:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0xa11b868 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa11b834 <col:12> 'const char *' lvalue ParmVar 0xa11b6e0 '__low' 'const char *'))
        (ImplicitCastExpr 0xa11b878 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa11b84c <col:20> 'const char *' lvalue ParmVar 0xa11b730 '__high' 'const char *')))
      (BinaryOperator 0xa11ba20 <line:70:8, col:64> '_Bool' '!='
        (ParenExpr 0xa11b9f0 <col:8, col:59> 'int'
          (BinaryOperator 0xa11b9d8 <col:9, col:56> 'int' '&'
            (ImplicitCastExpr 0xa11b9a8 <col:9, col:52> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa11b998 <col:9, col:52> 'mask':'unsigned short' <LValueToRValue>
                (ArraySubscriptExpr 0xa11b968 <col:9, col:52> 'const mask':'const unsigned short' lvalue
                  (ImplicitCastExpr 0xa11b958 <col:9> 'const mask *' <LValueToRValue>
                    (MemberExpr 0xa11b8b0 <col:9> 'const mask *const' lvalue ->_M_table 0xa10d2e0
                      (CXXThisExpr 0xa11b8a0 <col:9> 'const class std::ctype<char> *' this)))
                  (CXXStaticCastExpr 0xa11b940 <col:18, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                    (ImplicitCastExpr 0xa11b930 <col:45, col:46> 'unsigned char' <IntegralCast>
                      (ImplicitCastExpr 0xa11b920 <col:45, col:46> 'char' <LValueToRValue>
                        (UnaryOperator 0xa11b8f8 <col:45, col:46> 'const char' lvalue prefix '*'
                          (ImplicitCastExpr 0xa11b8e8 <col:46> 'const char *' <LValueToRValue>
                            (DeclRefExpr 0xa11b8d0 <col:46> 'const char *' lvalue ParmVar 0xa11b6e0 '__low' 'const char *')))))))))
            (ImplicitCastExpr 0xa11b9c8 <col:56> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa11b9b8 <col:56> 'mask':'unsigned short' <LValueToRValue>
                (DeclRefExpr 0xa11b97c <col:56> 'mask':'unsigned short' lvalue ParmVar 0xa11b690 '__m' 'mask':'unsigned short')))))
        (IntegerLiteral 0xa11ba08 <col:64> 'int' 0)))
    (UnaryOperator 0xa11ba68 <line:71:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0xa11ba50 <col:9> 'const char *' lvalue ParmVar 0xa11b6e0 '__low' 'const char *')))
  (ReturnStmt 0xa11bac0 <line:72:5, col:12>
    (ImplicitCastExpr 0xa11bab0 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa11ba94 <col:12> 'const char *' lvalue ParmVar 0xa11b6e0 '__low' 'const char *'))))


}
namespace std {
    class __num_base {
        class __num_base;
    public:
    public:
        enum  {
            _S_ominus,
            _S_oplus,
            _S_ox,
            _S_oX,
            _S_odigits,
            _S_odigits_end = (ImplicitCastExpr 0xa11c138 </usr/include/c++/4.6/bits/locale_facets.h:1530:26, col:39> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa11bec8 <col:26, col:39> 'int' '+'
    (DeclRefExpr 0xa11be94 <col:26> 'int' EnumConstant 0xa11be60 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa11beb0 <col:39> 'int' 16)))
,
            _S_oudigits = (ImplicitCastExpr 0xa11c148 </usr/include/c++/4.6/bits/locale_facets.h:1531:23> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa11bf14 <col:23> 'int' EnumConstant 0xa11bee0 '_S_odigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
,
            _S_oudigits_end = (ImplicitCastExpr 0xa11c158 </usr/include/c++/4.6/bits/locale_facets.h:1532:27, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa11bf98 <col:27, col:41> 'int' '+'
    (DeclRefExpr 0xa11bf64 <col:27> 'int' EnumConstant 0xa11bf30 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa11bf80 <col:41> 'int' 16)))
,
            _S_oe = (ImplicitCastExpr 0xa11c168 </usr/include/c++/4.6/bits/locale_facets.h:1533:17, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa11c018 <col:17, col:30> 'int' '+'
    (DeclRefExpr 0xa11bfe4 <col:17> 'int' EnumConstant 0xa11be60 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa11c000 <col:30> 'int' 14)))
,
            _S_oE = (ImplicitCastExpr 0xa11c178 </usr/include/c++/4.6/bits/locale_facets.h:1534:17, col:31> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa11c098 <col:17, col:31> 'int' '+'
    (DeclRefExpr 0xa11c064 <col:17> 'int' EnumConstant 0xa11bf30 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa11c080 <col:31> 'int' 14)))
,
            _S_oend = (ImplicitCastExpr 0xa11c188 </usr/include/c++/4.6/bits/locale_facets.h:1535:12> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa11c0e4 <col:12> 'int' EnumConstant 0xa11bfb0 '_S_oudigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))

        };
        static const char *_S_atoms_out;
        static const char *_S_atoms_in;
        enum  {
            _S_iminus,
            _S_iplus,
            _S_ix,
            _S_iX,
            _S_izero,
            _S_ie = (ImplicitCastExpr 0xa11c528 </usr/include/c++/4.6/bits/locale_facets.h:1556:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa11c408 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0xa11c3d4 <col:15> 'int' EnumConstant 0xa11c3a0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0xa11c3f0 <col:26> 'int' 14)))
,
            _S_iE = (ImplicitCastExpr 0xa11c538 </usr/include/c++/4.6/bits/locale_facets.h:1557:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa11c488 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0xa11c454 <col:15> 'int' EnumConstant 0xa11c3a0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0xa11c470 <col:26> 'int' 20)))
,
            _S_iend = (ImplicitCastExpr 0xa11c548 </usr/include/c++/4.6/bits/locale_facets.h:1558:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa11c4d8 <col:17> 'int' 26))

        };
        static void _S_format_float(const std::ios_base &__io, char *__fptr, char __mod) throw();
    };
    template <typename _CharT = char> struct __numpunct_cache
template <typename _CharT = wchar_t> struct __numpunct_cache
template <typename _CharT> struct __numpunct_cache : public locale::facet {
        struct __numpunct_cache;
        const char *_M_grouping;
        size_t _M_grouping_size;
        bool _M_use_grouping;
        const _CharT *_M_truename;
        size_t _M_truename_size;
        const _CharT *_M_falsename;
        size_t _M_falsename_size;
        _CharT _M_decimal_point;
        _CharT _M_thousands_sep;
        _CharT _M_atoms_out[36];
        _CharT _M_atoms_in[26];
        bool _M_allocated;
        __numpunct_cache<_CharT>(size_t __refs = (ImplicitCastExpr 0xa11e358 </usr/include/c++/4.6/bits/locale_facets.h:1594:40> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa11e340 <col:40> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa11e364 </usr/include/c++/4.6/bits/locale_facets.h:1595:15> 'size_t':'unsigned int' lvalue ParmVar 0xa11de70 '__refs' 'size_t':'unsigned int')
), _M_grouping((IntegerLiteral 0xa11e3f8 </usr/include/c++/4.6/bits/locale_facets.h:1595:36> 'int' 0)
), _M_grouping_size((IntegerLiteral 0xa11e458 </usr/include/c++/4.6/bits/locale_facets.h:1595:57> 'int' 0)
), _M_use_grouping((CXXBoolLiteralExpr 0xa11e4b8 </usr/include/c++/4.6/bits/locale_facets.h:1596:18> '_Bool' false)
), _M_truename((IntegerLiteral 0xa11e508 </usr/include/c++/4.6/bits/locale_facets.h:1597:14> 'int' 0)
), _M_truename_size((IntegerLiteral 0xa11e558 </usr/include/c++/4.6/bits/locale_facets.h:1597:35> 'int' 0)
), _M_falsename((IntegerLiteral 0xa11e5b8 </usr/include/c++/4.6/bits/locale_facets.h:1597:52> 'int' 0)
), _M_falsename_size((IntegerLiteral 0xa11e608 </usr/include/c++/4.6/bits/locale_facets.h:1598:20> 'int' 0)
), _M_decimal_point((CXXUnresolvedConstructExpr 0xa11e670 </usr/include/c++/4.6/bits/locale_facets.h:1598:41, col:48> '_CharT')
), _M_thousands_sep((CXXUnresolvedConstructExpr 0xa11e6d0 </usr/include/c++/4.6/bits/locale_facets.h:1599:19, col:26> '_CharT')
), _M_allocated((CXXBoolLiteralExpr 0xa11e728 </usr/include/c++/4.6/bits/locale_facets.h:1599:43> '_Bool' false)
) (CompoundStmt 0xa11e7a8 </usr/include/c++/4.6/bits/locale_facets.h:1600:9, col:11>)


        void ~__numpunct_cache<_CharT>();
        void _M_cache(const std::locale &__loc);
    private:
    private:
        __numpunct_cache<_CharT> &operator=(const __numpunct_cache<_CharT> &);
        __numpunct_cache<_CharT>(const __numpunct_cache<_CharT> &);
    };
    void ~__numpunct_cache<_CharT>() (CompoundStmt 0xa11eb70 </usr/include/c++/4.6/bits/locale_facets.h:1617:5, line:1624:5>
  (IfStmt 0xa11eb50 <line:1618:7, line:1623:2>
    <<<NULL>>>
    (MemberExpr 0xa11ea38 <line:1618:11> '_Bool' lvalue ->_M_allocated 0xa11de30
      (CXXThisExpr 0xa11ea28 <col:11> '__numpunct_cache<_CharT> *' this))
    (CompoundStmt 0xa11eb30 <line:1619:2, line:1623:2>
      (CXXDeleteExpr 0xa11ea88 <line:1620:4, col:14> 'void'
        (MemberExpr 0xa11ea68 <col:14> 'const char *' lvalue ->_M_grouping 0xa11ca00
          (CXXThisExpr 0xa11ea58 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0xa11ead0 <line:1621:4, col:14> 'void'
        (MemberExpr 0xa11eab0 <col:14> 'const _CharT *' lvalue ->_M_truename 0xa11cae0
          (CXXThisExpr 0xa11eaa0 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0xa11eb18 <line:1622:4, col:14> 'void'
        (MemberExpr 0xa11eaf8 <col:14> 'const _CharT *' lvalue ->_M_falsename 0xa11cb60
          (CXXThisExpr 0xa11eae8 <col:14> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>))


    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        typedef __numpunct_cache<_CharT> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct<_CharT>(size_t __refs = (ImplicitCastExpr 0xa11fd30 </usr/include/c++/4.6/bits/locale_facets.h:1665:32> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa11fd18 <col:32> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa11fdb4 </usr/include/c++/4.6/bits/locale_facets.h:1666:15> 'size_t':'unsigned int' lvalue ParmVar 0xa11f290 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0xa11fe48 </usr/include/c++/4.6/bits/locale_facets.h:1666:32> 'int' 0)
) (CompoundStmt 0xa11ff08 </usr/include/c++/4.6/bits/locale_facets.h:1667:7, col:35>
  (CallExpr 0xa11fee8 <col:9, col:32> '<dependent type>'
    (MemberExpr 0xa11fec8 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa11fcb0
      (CXXThisExpr 0xa11feb8 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__cache_type *__cache, size_t __refs = (ImplicitCastExpr 0xa11fd58 </usr/include/c++/4.6/bits/locale_facets.h:1679:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa11fd40 <col:55> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa11ff1c </usr/include/c++/4.6/bits/locale_facets.h:1680:15> 'size_t':'unsigned int' lvalue ParmVar 0xa11f3c0 '__refs' 'size_t':'unsigned int')
), _M_data((DeclRefExpr 0xa11ffb8 </usr/include/c++/4.6/bits/locale_facets.h:1680:32> '__cache_type *' lvalue ParmVar 0xa11f380 '__cache' '__cache_type *')
) (CompoundStmt 0xa120060 </usr/include/c++/4.6/bits/locale_facets.h:1681:7, col:35>
  (CallExpr 0xa120040 <col:9, col:32> '<dependent type>'
    (MemberExpr 0xa120020 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa11fcb0
      (CXXThisExpr 0xa120010 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa11fd80 </usr/include/c++/4.6/bits/locale_facets.h:1693:51> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa11fd68 <col:51> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa120074 </usr/include/c++/4.6/bits/locale_facets.h:1694:15> 'size_t':'unsigned int' lvalue ParmVar 0xa11f520 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0xa120108 </usr/include/c++/4.6/bits/locale_facets.h:1694:32> 'int' 0)
) (CompoundStmt 0xa1201c8 </usr/include/c++/4.6/bits/locale_facets.h:1695:7, col:41>
  (CallExpr 0xa1201a8 <col:9, col:38> '<dependent type>'
    (MemberExpr 0xa120170 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa11fcb0
      (CXXThisExpr 0xa120160 <col:9> 'numpunct<_CharT> *' this))
    (DeclRefExpr 0xa120190 <col:32> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0xa11f4e0 '__cloc' '__c_locale':'struct __locale_struct *')))


        char_type decimal_point() const (CompoundStmt 0xa120270 </usr/include/c++/4.6/bits/locale_facets.h:1708:7, col:42>
  (ReturnStmt 0xa120260 <col:9, col:39>
    (CallExpr 0xa120240 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa120208 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1201f8 <col:16> 'const numpunct<_CharT> *' this)))))


        char_type thousands_sep() const (CompoundStmt 0xa120300 </usr/include/c++/4.6/bits/locale_facets.h:1721:7, col:42>
  (ReturnStmt 0xa1202f0 <col:9, col:39>
    (CallExpr 0xa1202d0 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa120298 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa120288 <col:16> 'const numpunct<_CharT> *' this)))))


        string grouping() const (CompoundStmt 0xa120390 </usr/include/c++/4.6/bits/locale_facets.h:1752:7, col:37>
  (ReturnStmt 0xa120380 <col:9, col:34>
    (CallExpr 0xa120360 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa120328 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa120318 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type truename() const (CompoundStmt 0xa120420 </usr/include/c++/4.6/bits/locale_facets.h:1765:7, col:37>
  (ReturnStmt 0xa120410 <col:9, col:34>
    (CallExpr 0xa1203f0 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1203b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1203a8 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type falsename() const (CompoundStmt 0xa1204b0 </usr/include/c++/4.6/bits/locale_facets.h:1778:7, col:38>
  (ReturnStmt 0xa1204a0 <col:9, col:35>
    (CallExpr 0xa120480 <col:16, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa120448 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa120438 <col:16> 'const numpunct<_CharT> *' this)))))


    protected:
    protected:
        virtual void ~numpunct<_CharT>();
        virtual char_type do_decimal_point() const (CompoundStmt 0xa120540 </usr/include/c++/4.6/bits/locale_facets.h:1795:7, col:43>
  (ReturnStmt 0xa120530 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa1204f8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa1204d8 <col:16> '__cache_type *const' lvalue ->_M_data 0xa11f1b0
        (CXXThisExpr 0xa1204c8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual char_type do_thousands_sep() const (CompoundStmt 0xa1205d0 </usr/include/c++/4.6/bits/locale_facets.h:1807:7, col:43>
  (ReturnStmt 0xa1205c0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa120588 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa120568 <col:16> '__cache_type *const' lvalue ->_M_data 0xa11f1b0
        (CXXThisExpr 0xa120558 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string do_grouping() const (CompoundStmt 0xa120660 </usr/include/c++/4.6/bits/locale_facets.h:1820:7, col:38>
  (ReturnStmt 0xa120650 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa120618 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa1205f8 <col:16> '__cache_type *const' lvalue ->_M_data 0xa11f1b0
        (CXXThisExpr 0xa1205e8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_truename() const (CompoundStmt 0xa1206f0 </usr/include/c++/4.6/bits/locale_facets.h:1833:7, col:38>
  (ReturnStmt 0xa1206e0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa1206a8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa120688 <col:16> '__cache_type *const' lvalue ->_M_data 0xa11f1b0
        (CXXThisExpr 0xa120678 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_falsename() const (CompoundStmt 0xa120780 </usr/include/c++/4.6/bits/locale_facets.h:1846:7, col:39>
  (ReturnStmt 0xa120770 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa120738 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa120718 <col:16> '__cache_type *const' lvalue ->_M_data 0xa11f1b0
        (CXXThisExpr 0xa120708 <col:16> 'const numpunct<_CharT> *' this)))))


        void _M_initialize_numpunct(__c_locale __cloc = (ImplicitCastExpr 0xa11fda8 </usr/include/c++/4.6/bits/locale_facets.h:1850:50> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0xa11fd90 <col:50> 'int' 0))
);
    };
    static locale::id id(CXXConstructExpr 0xa1209d8 </usr/include/c++/4.6/bits/locale_facets.h:1854:34> 'class locale::id':'class std::locale::id''void (void)')
;
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname : public numpunct<_CharT> {
        class numpunct_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        numpunct_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa1266b0 </usr/include/c++/4.6/bits/locale_facets.h:1881:56> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa126698 <col:56> 'int' 0))
) : numpunct<_CharT>((DeclRefExpr 0xa126750 </usr/include/c++/4.6/bits/locale_facets.h:1882:26> 'size_t':'unsigned int' lvalue ParmVar 0xa1264e0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa126bd8 </usr/include/c++/4.6/bits/locale_facets.h:1883:7, line:1892:7>
  (IfStmt 0xa126bb8 <line:1884:2, line:1891:4>
    <<<NULL>>>
    (BinaryOperator 0xa126968 <line:1884:6, line:1885:43> '_Bool' '&&'
      (BinaryOperator 0xa126870 <line:1884:6, col:36> '_Bool' '!='
        (CallExpr 0xa126810 <col:6, col:31> 'int'
          (ImplicitCastExpr 0xa126800 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1267ac <col:6> 'int (const char *, const char *)' lvalue Function 0xa07b980 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa126838 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa1267c4 <col:23> 'const char *' lvalue ParmVar 0xa1264a0 '__s' 'const char *'))
          (ImplicitCastExpr 0xa126848 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa1267dc <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0xa126858 <col:36> 'int' 0))
      (BinaryOperator 0xa126950 <line:1885:9, col:43> '_Bool' '!='
        (CallExpr 0xa1268f0 <col:9, col:38> 'int'
          (ImplicitCastExpr 0xa1268e0 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa126888 <col:9> 'int (const char *, const char *)' lvalue Function 0xa07b980 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa126918 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa1268a0 <col:26> 'const char *' lvalue ParmVar 0xa1264a0 '__s' 'const char *'))
          (ImplicitCastExpr 0xa126928 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa1268b8 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0xa126938 <col:43> 'int' 0)))
    (CompoundStmt 0xa126b98 <line:1886:4, line:1891:4>
      (DeclStmt 0xa1269c8 <line:1887:6, col:22>
        0xa126990 "__c_locale __tmp")
      (CallExpr 0xa126a70 <line:1888:6, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa126a08 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa1269f8 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa126a3c <col:31> '__c_locale':'struct __locale_struct *' lvalue Var 0xa126990 '__tmp' '__c_locale':'struct __locale_struct *')
        (DeclRefExpr 0xa126a54 <col:38> 'const char *' lvalue ParmVar 0xa1264a0 '__s' 'const char *'))
      (CallExpr 0xa126af8 <line:1889:6, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa126aa8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa126a98 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa126adc <col:35> '__c_locale':'struct __locale_struct *' lvalue Var 0xa126990 '__tmp' '__c_locale':'struct __locale_struct *'))
      (CallExpr 0xa126b78 <line:1890:6, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa126b28 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa126b18 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa126b5c <col:32> '__c_locale':'struct __locale_struct *' lvalue Var 0xa126990 '__tmp' '__c_locale':'struct __locale_struct *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~numpunct_byname<_CharT>() (CompoundStmt 0xa126bf0 </usr/include/c++/4.6/bits/locale_facets.h:1896:26, col:28>)


    };
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef _CharT char_type;
        typedef _InIter iter_type;
        static locale::id id;
        num_get<_CharT, _InIter>(size_t __refs = (ImplicitCastExpr 0xa12b8a0 </usr/include/c++/4.6/bits/locale_facets.h:1936:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa12b888 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa12b8ac </usr/include/c++/4.6/bits/locale_facets.h:1936:42> 'size_t':'unsigned int' lvalue ParmVar 0xa126f80 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa12b950 </usr/include/c++/4.6/bits/locale_facets.h:1936:50, col:52>)


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0xa12ba78 </usr/include/c++/4.6/bits/locale_facets.h:1964:7, col:61>
  (ReturnStmt 0xa12ba68 <col:9, col:58>
    (CallExpr 0xa12ba38 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12b988 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12b978 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12b9bc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa127080 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12b9d4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa1270c0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12b9ec <col:42> 'class std::ios_base' lvalue ParmVar 0xa127110 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12ba04 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa127180 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12ba1c <col:55> '_Bool' lvalue ParmVar 0xa1271d0 '__v' '_Bool &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0xa12bb90 </usr/include/c++/4.6/bits/locale_facets.h:2000:7, col:61>
  (ReturnStmt 0xa12bb80 <col:9, col:58>
    (CallExpr 0xa12bb50 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12baa0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12ba90 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12bad4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa127320 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12baec <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa127360 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12bb04 <col:42> 'class std::ios_base' lvalue ParmVar 0xa1273b0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12bb1c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa127420 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12bb34 <col:55> 'long' lvalue ParmVar 0xa127470 '__v' 'long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0xa12bca8 </usr/include/c++/4.6/bits/locale_facets.h:2005:7, col:61>
  (ReturnStmt 0xa12bc98 <col:9, col:58>
    (CallExpr 0xa12bc68 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12bbb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12bba8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12bbec <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa1275c0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12bc04 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa127600 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12bc1c <col:42> 'class std::ios_base' lvalue ParmVar 0xa127650 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12bc34 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa1276c0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12bc4c <col:55> 'unsigned short' lvalue ParmVar 0xa127710 '__v' 'unsigned short &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0xa12e6a8 </usr/include/c++/4.6/bits/locale_facets.h:2010:7, col:61>
  (ReturnStmt 0xa12e698 <col:9, col:58>
    (CallExpr 0xa12e668 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12e5b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12e5a8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12e5ec <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa127860 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12e604 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa1278a0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12e61c <col:42> 'class std::ios_base' lvalue ParmVar 0xa1278f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12e634 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa127960 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12e64c <col:55> 'unsigned int' lvalue ParmVar 0xa1279b0 '__v' 'unsigned int &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0xa12e7c0 </usr/include/c++/4.6/bits/locale_facets.h:2015:7, col:61>
  (ReturnStmt 0xa12e7b0 <col:9, col:58>
    (CallExpr 0xa12e780 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12e6d0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12e6c0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12e704 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa127d40 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12e71c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa127d80 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12e734 <col:42> 'class std::ios_base' lvalue ParmVar 0xa127dd0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12e74c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa127e40 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12e764 <col:55> 'unsigned long' lvalue ParmVar 0xa127e90 '__v' 'unsigned long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0xa12e8d8 </usr/include/c++/4.6/bits/locale_facets.h:2021:7, col:61>
  (ReturnStmt 0xa12e8c8 <col:9, col:58>
    (CallExpr 0xa12e898 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12e7e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12e7d8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12e81c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa127fe0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12e834 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa128020 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12e84c <col:42> 'class std::ios_base' lvalue ParmVar 0xa128070 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12e864 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa1280e0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12e87c <col:55> 'long long' lvalue ParmVar 0xa128130 '__v' 'long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0xa12e9f0 </usr/include/c++/4.6/bits/locale_facets.h:2026:7, col:61>
  (ReturnStmt 0xa12e9e0 <col:9, col:58>
    (CallExpr 0xa12e9b0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12e900 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12e8f0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12e934 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa128280 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12e94c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa1282c0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12e964 <col:42> 'class std::ios_base' lvalue ParmVar 0xa128310 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12e97c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa128380 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12e994 <col:55> 'unsigned long long' lvalue ParmVar 0xa1283d0 '__v' 'unsigned long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0xa12eb08 </usr/include/c++/4.6/bits/locale_facets.h:2059:7, col:61>
  (ReturnStmt 0xa12eaf8 <col:9, col:58>
    (CallExpr 0xa12eac8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12ea18 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12ea08 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12ea4c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa128520 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12ea64 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa128560 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12ea7c <col:42> 'class std::ios_base' lvalue ParmVar 0xa1285b0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12ea94 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa128620 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12eaac <col:55> 'float' lvalue ParmVar 0xa128670 '__v' 'float &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0xa12ec20 </usr/include/c++/4.6/bits/locale_facets.h:2064:7, col:61>
  (ReturnStmt 0xa12ec10 <col:9, col:58>
    (CallExpr 0xa12ebe0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12eb30 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12eb20 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12eb64 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa1287c0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12eb7c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa128800 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12eb94 <col:42> 'class std::ios_base' lvalue ParmVar 0xa128850 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12ebac <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa1288c0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12ebc4 <col:55> 'double' lvalue ParmVar 0xa128910 '__v' 'double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0xa12ed38 </usr/include/c++/4.6/bits/locale_facets.h:2069:7, col:61>
  (ReturnStmt 0xa12ed28 <col:9, col:58>
    (CallExpr 0xa12ecf8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12ec48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12ec38 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12ec7c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa128a60 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12ec94 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa128aa0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12ecac <col:42> 'class std::ios_base' lvalue ParmVar 0xa128af0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12ecc4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa128b60 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12ecdc <col:55> 'long double' lvalue ParmVar 0xa128bb0 '__v' 'long double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0xa12ee50 </usr/include/c++/4.6/bits/locale_facets.h:2101:7, col:61>
  (ReturnStmt 0xa12ee40 <col:9, col:58>
    (CallExpr 0xa12ee10 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa12ed60 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa12ed50 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa12ed94 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa128d00 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12edac <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa128d40 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa12edc4 <col:42> 'class std::ios_base' lvalue ParmVar 0xa128d90 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa12eddc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa128e00 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa12edf4 <col:55> 'void *' lvalue ParmVar 0xa128e50 '__v' 'void *&'))))


    protected:
    protected:
        virtual void ~num_get<_CharT, _InIter>() (CompoundStmt 0xa12ee68 </usr/include/c++/4.6/bits/locale_facets.h:2105:26, col:28>)


        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const (CompoundStmt 0xa12fc98 </usr/include/c++/4.6/bits/locale_facets.h:2119:9, line:2136:2>
  (DeclStmt 0xa12eef8 <line:2120:4, col:18>
    0xa12ee90 "int __ret =
      (UnaryOperator 0xa12eee0 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0xa12eec8 <col:17> 'int' 1))")
  (IfStmt 0xa12fc50 <line:2121:4, line:2134:6>
    <<<NULL>>>
    (BinaryOperator 0xa12ef58 <line:2121:8, col:17> '_Bool' '<='
      (ImplicitCastExpr 0xa12ef38 <col:8> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa12ef08 <col:8> 'size_t':'unsigned int' lvalue ParmVar 0xa1299d0 '__len' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0xa12ef48 <col:17> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa12ef20 <col:17> 'int' 10)))
    (CompoundStmt 0xa12f2d0 <line:2122:6, line:2125:6>
      (IfStmt 0xa12f2b0 <line:2123:8, line:2124:28>
        <<<NULL>>>
        (BinaryOperator 0xa12f1b0 <line:2123:12, col:69> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa12f010 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa12efc8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
            (DeclRefExpr 0xa12ef70 <col:12> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa12efa8 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0xa12ef90 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0xa12f188 <col:35, col:69> '<dependent type>'
            (UnresolvedLookupExpr 0xa12f140 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
            (DeclRefExpr 0xa12f034 <col:35> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa12f120 <col:41, col:69> '_CharT2'
              (CXXOperatorCallExpr 0xa12f0f8 <col:49, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0xa12f0b0 <col:62, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
                (CXXUnresolvedConstructExpr 0xa12f078 <col:49, col:60> '_CharT2'
                  (CharacterLiteral 0xa12f060 <col:57> 'char'48))
                (DeclRefExpr 0xa12f094 <col:64> 'size_t':'unsigned int' lvalue ParmVar 0xa1299d0 '__len' 'size_t':'unsigned int')))))
        (BinaryOperator 0xa12f298 <line:2124:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0xa12f1c8 <col:3> 'int' lvalue Var 0xa12ee90 '__ret' 'int')
          (CXXOperatorCallExpr 0xa12f270 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa12f238 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0xa12f1e0 <col:11> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa12f218 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0xa12f200 <col:25> 'char'48))))
        <<<NULL>>>))
    (CompoundStmt 0xa12fc38 <line:2127:6, line:2134:6>
      (IfStmt 0xa12fc18 <line:2128:8, line:2133:35>
        <<<NULL>>>
        (BinaryOperator 0xa12f478 <line:2128:12, col:53> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa12f388 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa12f340 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
            (DeclRefExpr 0xa12f2e4 <col:12> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa12f320 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0xa12f308 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0xa12f450 <col:35, col:53> '<dependent type>'
            (UnresolvedLookupExpr 0xa12f408 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
            (DeclRefExpr 0xa12f3ac <col:35> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa12f3e8 <col:42, col:53> '_CharT2'
              (CharacterLiteral 0xa12f3d0 <col:50> 'char'57))))
        (BinaryOperator 0xa12f560 <line:2129:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0xa12f490 <col:3> 'int' lvalue Var 0xa12ee90 '__ret' 'int')
          (CXXOperatorCallExpr 0xa12f538 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa12f500 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0xa12f4a8 <col:11> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa12f4e0 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0xa12f4c8 <col:25> 'char'48))))
        (IfStmt 0xa12fbf8 <line:2130:13, line:2133:35>
          <<<NULL>>>
          (BinaryOperator 0xa12f708 <line:2130:17, col:58> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0xa12f618 <col:17, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0xa12f5d0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
              (DeclRefExpr 0xa12f578 <col:17> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0xa12f5b0 <col:24, col:35> '_CharT2'
                (CharacterLiteral 0xa12f598 <col:32> 'char'97)))
            (CXXOperatorCallExpr 0xa12f6e0 <col:40, col:58> '<dependent type>'
              (UnresolvedLookupExpr 0xa12f698 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
              (DeclRefExpr 0xa12f63c <col:40> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0xa12f678 <col:47, col:58> '_CharT2'
                (CharacterLiteral 0xa12f660 <col:55> 'char'102))))
          (BinaryOperator 0xa12f890 <line:2131:3, col:35> '<dependent type>' '='
            (DeclRefExpr 0xa12f720 <col:3> 'int' lvalue Var 0xa12ee90 '__ret' 'int')
            (CXXOperatorCallExpr 0xa12f868 <col:11, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0xa12f820 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
              (IntegerLiteral 0xa12f738 <col:11> 'int' 10)
              (ParenExpr 0xa12f808 <col:16, col:35> '<dependent type>'
                (CXXOperatorCallExpr 0xa12f7e0 <col:17, col:34> '<dependent type>'
                  (UnresolvedLookupExpr 0xa12f7a8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                  (DeclRefExpr 0xa12f750 <col:17> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
                  (CXXUnresolvedConstructExpr 0xa12f788 <col:23, col:34> '_CharT2'
                    (CharacterLiteral 0xa12f770 <col:31> 'char'97))))))
          (IfStmt 0xa12fbd8 <line:2132:13, line:2133:35>
            <<<NULL>>>
            (BinaryOperator 0xa12fa38 <line:2132:17, col:58> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa12f948 <col:17, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa12f900 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
                (DeclRefExpr 0xa12f8a8 <col:17> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0xa12f8e0 <col:24, col:35> '_CharT2'
                  (CharacterLiteral 0xa12f8c8 <col:32> 'char'65)))
              (CXXOperatorCallExpr 0xa12fa10 <col:40, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0xa12f9c8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
                (DeclRefExpr 0xa12f96c <col:40> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0xa12f9a8 <col:47, col:58> '_CharT2'
                  (CharacterLiteral 0xa12f990 <col:55> 'char'70))))
            (BinaryOperator 0xa12fbc0 <line:2133:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0xa12fa50 <col:3> 'int' lvalue Var 0xa12ee90 '__ret' 'int')
              (CXXOperatorCallExpr 0xa12fb98 <col:11, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa12fb50 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
                (IntegerLiteral 0xa12fa68 <col:11> 'int' 10)
                (ParenExpr 0xa12fb38 <col:16, col:35> '<dependent type>'
                  (CXXOperatorCallExpr 0xa12fb10 <col:17, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0xa12fad8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                    (DeclRefExpr 0xa12fa80 <col:17> '_CharT2' lvalue ParmVar 0xa129a10 '__c' '_CharT2')
                    (CXXUnresolvedConstructExpr 0xa12fab8 <col:23, col:34> '_CharT2'
                      (CharacterLiteral 0xa12faa0 <col:31> 'char'65))))))
            <<<NULL>>>)))))
  (ReturnStmt 0xa12fc88 <line:2135:4, col:11>
    (DeclRefExpr 0xa12fc6c <col:11> 'int' lvalue Var 0xa12ee90 '__ret' 'int')))

;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const (CompoundStmt 0xa130128 </usr/include/c++/4.6/bits/locale_facets.h:2142:9, line:2152:2>
  (DeclStmt 0xa12fd38 <line:2143:4, col:18>
    0xa12fcd0 "int __ret =
      (UnaryOperator 0xa12fd20 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0xa12fd08 <col:17> 'int' 1))")
  (DeclStmt 0xa12ff18 <line:2144:4, col:73>
    0xa12fd90 "const char_type *__q =
      (CallExpr 0xa12fef0 <col:27, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa12fe70 <col:27, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0xa12fea4 <col:54> 'const _CharT2 *' lvalue ParmVar 0xa129e90 '__zero' 'const _CharT2 *')
        (DeclRefExpr 0xa12febc <col:62> 'size_t':'unsigned int' lvalue ParmVar 0xa129ed0 '__len' 'size_t':'unsigned int')
        (DeclRefExpr 0xa12fed4 <col:69> '_CharT2' lvalue ParmVar 0xa129f10 '__c' '_CharT2'))")
  (IfStmt 0xa1300e0 <line:2145:4, line:2150:6>
    <<<NULL>>>
    (DeclRefExpr 0xa12ff28 <line:2145:8> 'const char_type *' lvalue Var 0xa12fd90 '__q' 'const char_type *')
    (CompoundStmt 0xa1300c8 <line:2146:6, line:2150:6>
      (BinaryOperator 0xa12ffe8 <line:2147:8, col:22> '<dependent type>' '='
        (DeclRefExpr 0xa12ff40 <col:8> 'int' lvalue Var 0xa12fcd0 '__ret' 'int')
        (CXXOperatorCallExpr 0xa12ffc0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa12ff88 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (DeclRefExpr 0xa12ff58 <col:16> 'const char_type *' lvalue Var 0xa12fd90 '__q' 'const char_type *')
          (DeclRefExpr 0xa12ff70 <col:22> 'const _CharT2 *' lvalue ParmVar 0xa129e90 '__zero' 'const _CharT2 *')))
      (IfStmt 0xa1300a8 <line:2148:8, line:2149:12>
        <<<NULL>>>
        (BinaryOperator 0xa130040 <line:2148:12, col:20> '_Bool' '>'
          (ImplicitCastExpr 0xa130030 <col:12> 'int' <LValueToRValue>
            (DeclRefExpr 0xa130000 <col:12> 'int' lvalue Var 0xa12fcd0 '__ret' 'int'))
          (IntegerLiteral 0xa130018 <col:20> 'int' 15))
        (CompoundAssignOperator 0xa130088 <line:2149:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
          (DeclRefExpr 0xa130058 <col:3> 'int' lvalue Var 0xa12fcd0 '__ret' 'int')
          (IntegerLiteral 0xa130070 <col:12> 'int' 6))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa130118 <line:2151:4, col:11>
    (DeclRefExpr 0xa1300fc <col:11> 'int' lvalue Var 0xa12fcd0 '__ret' 'int')))

;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0xa130250 </usr/include/c++/4.6/bits/locale_facets.h:2175:7, col:64>
  (ReturnStmt 0xa130240 <col:9, col:61>
    (CallExpr 0xa130210 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa130158 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa130194 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa12a2b0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa1301ac <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa12a2f0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa1301c4 <col:45> 'class std::ios_base' lvalue ParmVar 0xa12a340 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa1301dc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa12a3b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa1301f4 <col:58> 'long' lvalue ParmVar 0xa12a400 '__v' 'long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0xa130370 </usr/include/c++/4.6/bits/locale_facets.h:2180:7, col:64>
  (ReturnStmt 0xa130360 <col:9, col:61>
    (CallExpr 0xa130330 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa130278 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1302b4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa12a4e0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa1302cc <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa12a520 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa1302e4 <col:45> 'class std::ios_base' lvalue ParmVar 0xa12a570 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa1302fc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa12a5e0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa130314 <col:58> 'unsigned short' lvalue ParmVar 0xa12a630 '__v' 'unsigned short &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0xa130490 </usr/include/c++/4.6/bits/locale_facets.h:2185:7, col:64>
  (ReturnStmt 0xa130480 <col:9, col:61>
    (CallExpr 0xa130450 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa130398 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1303d4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa12a710 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa1303ec <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa12a750 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa130404 <col:45> 'class std::ios_base' lvalue ParmVar 0xa12a7a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa13041c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa12a810 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa130434 <col:58> 'unsigned int' lvalue ParmVar 0xa12a860 '__v' 'unsigned int &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0xa1305b0 </usr/include/c++/4.6/bits/locale_facets.h:2190:7, col:64>
  (ReturnStmt 0xa1305a0 <col:9, col:61>
    (CallExpr 0xa130570 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa1304b8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1304f4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa12a940 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa13050c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa12a980 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa130524 <col:45> 'class std::ios_base' lvalue ParmVar 0xa12a9d0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa13053c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa12aa40 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa130554 <col:58> 'unsigned long' lvalue ParmVar 0xa12aa90 '__v' 'unsigned long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0xa1306d0 </usr/include/c++/4.6/bits/locale_facets.h:2196:7, col:64>
  (ReturnStmt 0xa1306c0 <col:9, col:61>
    (CallExpr 0xa130690 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa1305d8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa130614 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa12ab70 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa13062c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa12abb0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa130644 <col:45> 'class std::ios_base' lvalue ParmVar 0xa12ac00 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa13065c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa12ac70 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa130674 <col:58> 'long long' lvalue ParmVar 0xa12acc0 '__v' 'long long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0xa1307f0 </usr/include/c++/4.6/bits/locale_facets.h:2201:7, col:64>
  (ReturnStmt 0xa1307e0 <col:9, col:61>
    (CallExpr 0xa1307b0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa1306f8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa130734 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa12ada0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa13074c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa12ade0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa130764 <col:45> 'class std::ios_base' lvalue ParmVar 0xa12ae30 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa13077c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa12aea0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa130794 <col:58> 'unsigned long long' lvalue ParmVar 0xa12aef0 '__v' 'unsigned long long &'))))


        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
    };
    static locale::id id(CXXConstructExpr 0xa130b38 </usr/include/c++/4.6/bits/locale_facets.h:2237:42> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef _CharT char_type;
        typedef _OutIter iter_type;
        static locale::id id;
        num_put<_CharT, _OutIter>(size_t __refs = (ImplicitCastExpr 0xa134848 </usr/include/c++/4.6/bits/locale_facets.h:2274:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa134830 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa134854 </usr/include/c++/4.6/bits/locale_facets.h:2274:42> 'size_t':'unsigned int' lvalue ParmVar 0xa130ee0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa1348f0 </usr/include/c++/4.6/bits/locale_facets.h:2274:50, col:52>)


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const (CompoundStmt 0xa134a00 </usr/include/c++/4.6/bits/locale_facets.h:2293:7, col:53>
  (ReturnStmt 0xa1349f0 <col:9, col:50>
    (CallExpr 0xa1349c0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa134928 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa134918 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa13495c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa130fe0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa134974 <col:34> 'class std::ios_base' lvalue ParmVar 0xa131030 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa13498c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa131090 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa1349a4 <col:47> '_Bool' lvalue ParmVar 0xa1310d0 '__v' '_Bool'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const (CompoundStmt 0xa134b00 </usr/include/c++/4.6/bits/locale_facets.h:2335:7, col:53>
  (ReturnStmt 0xa134af0 <col:9, col:50>
    (CallExpr 0xa134ac0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa134a28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa134a18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa134a5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa131210 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa134a74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa131260 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa134a8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa1312a0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa134aa4 <col:47> 'long' lvalue ParmVar 0xa1312f0 '__v' 'long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const (CompoundStmt 0xa134c00 </usr/include/c++/4.6/bits/locale_facets.h:2340:7, col:53>
  (ReturnStmt 0xa134bf0 <col:9, col:50>
    (CallExpr 0xa134bc0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa134b28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa134b18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa134b5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa131430 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa134b74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa131480 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa134b8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa1314c0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa134ba4 <col:47> 'unsigned long' lvalue ParmVar 0xa131510 '__v' 'unsigned long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const (CompoundStmt 0xa134d00 </usr/include/c++/4.6/bits/locale_facets.h:2345:7, col:53>
  (ReturnStmt 0xa134cf0 <col:9, col:50>
    (CallExpr 0xa134cc0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa134c28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa134c18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa134c5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa131650 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa134c74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa1316a0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa134c8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa1316e0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa134ca4 <col:47> 'long long' lvalue ParmVar 0xa131730 '__v' 'long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const (CompoundStmt 0xa134e00 </usr/include/c++/4.6/bits/locale_facets.h:2350:7, col:53>
  (ReturnStmt 0xa134df0 <col:9, col:50>
    (CallExpr 0xa134dc0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa134d28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa134d18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa134d5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa131870 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa134d74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa1318c0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa134d8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa131900 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa134da4 <col:47> 'unsigned long long' lvalue ParmVar 0xa131950 '__v' 'unsigned long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const (CompoundStmt 0xa134f00 </usr/include/c++/4.6/bits/locale_facets.h:2398:7, col:53>
  (ReturnStmt 0xa134ef0 <col:9, col:50>
    (CallExpr 0xa134ec0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa134e28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa134e18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa134e5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa131a90 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa134e74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa131ae0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa134e8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa131b20 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa134ea4 <col:47> 'double' lvalue ParmVar 0xa131b70 '__v' 'double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const (CompoundStmt 0xa135000 </usr/include/c++/4.6/bits/locale_facets.h:2403:7, col:53>
  (ReturnStmt 0xa134ff0 <col:9, col:50>
    (CallExpr 0xa134fc0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa134f28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa134f18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa134f5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa131cb0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa134f74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa131d00 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa134f8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa131d40 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa134fa4 <col:47> 'long double' lvalue ParmVar 0xa131d90 '__v' 'long double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const (CompoundStmt 0xa135100 </usr/include/c++/4.6/bits/locale_facets.h:2424:7, col:53>
  (ReturnStmt 0xa1350f0 <col:9, col:50>
    (CallExpr 0xa1350c0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa135028 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa135018 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa13505c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa131ed0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa135074 <col:34> 'class std::ios_base' lvalue ParmVar 0xa131f20 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa13508c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa131f60 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa1350a4 <col:47> 'const void *' lvalue ParmVar 0xa131fb0 '__v' 'const void *'))))


    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put<_CharT, _OutIter>() (CompoundStmt 0xa135118 </usr/include/c++/4.6/bits/locale_facets.h:2453:18, col:20>)


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const (CompoundStmt 0xa135218 </usr/include/c++/4.6/bits/locale_facets.h:2474:7, col:55>
  (ReturnStmt 0xa135208 <col:9, col:52>
    (CallExpr 0xa1351d8 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa135138 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa135174 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa133c00 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa13518c <col:35> 'class std::ios_base' lvalue ParmVar 0xa133c50 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa1351a4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa133c90 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa1351bc <col:49> 'long' lvalue ParmVar 0xa133ce0 '__v' 'long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const (CompoundStmt 0xa135320 </usr/include/c++/4.6/bits/locale_facets.h:2479:7, col:55>
  (ReturnStmt 0xa135310 <col:9, col:52>
    (CallExpr 0xa1352e0 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa135240 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa13527c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa133dc0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa135294 <col:35> 'class std::ios_base' lvalue ParmVar 0xa133e10 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa1352ac <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa133e50 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa1352c4 <col:49> 'unsigned long' lvalue ParmVar 0xa133ea0 '__v' 'unsigned long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const (CompoundStmt 0xa135428 </usr/include/c++/4.6/bits/locale_facets.h:2485:7, col:55>
  (ReturnStmt 0xa135418 <col:9, col:52>
    (CallExpr 0xa1353e8 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa135348 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa135384 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa133f80 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa13539c <col:35> 'class std::ios_base' lvalue ParmVar 0xa133fd0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa1353b4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa134010 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa1353cc <col:49> 'long long' lvalue ParmVar 0xa134060 '__v' 'long long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const (CompoundStmt 0xa135530 </usr/include/c++/4.6/bits/locale_facets.h:2490:7, col:55>
  (ReturnStmt 0xa135520 <col:9, col:52>
    (CallExpr 0xa1354f0 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa135450 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa13548c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa134140 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa1354a4 <col:35> 'class std::ios_base' lvalue ParmVar 0xa134190 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa1354bc <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa1341d0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa1354d4 <col:49> 'unsigned long long' lvalue ParmVar 0xa134220 '__v' 'unsigned long long'))))


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
    };
    static locale::id id(CXXConstructExpr 0xa135878 </usr/include/c++/4.6/bits/locale_facets.h:2517:43> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT> inline bool isspace(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa135ca0 </usr/include/c++/4.6/bits/locale_facets.h:2530:5, col:75>
  (ReturnStmt 0xa135c90 <col:7, col:72>
    (CallExpr 0xa135c68 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa135bd0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa135bb0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa135b30 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa135b98 <col:40> 'const class std::locale' lvalue ParmVar 0xa135950 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa135c30 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f2fb0 'space' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa135c50 <col:69> '_CharT' lvalue ParmVar 0xa135900 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isprint(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa1360b8 </usr/include/c++/4.6/bits/locale_facets.h:2536:5, col:75>
  (ReturnStmt 0xa1360a8 <col:7, col:72>
    (CallExpr 0xa136080 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa135ff0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa135fd0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa135f50 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa135fb8 <col:40> 'const class std::locale' lvalue ParmVar 0xa135d70 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa136044 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f3020 'print' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa136064 <col:69> '_CharT' lvalue ParmVar 0xa135d20 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool iscntrl(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa1364c8 </usr/include/c++/4.6/bits/locale_facets.h:2542:5, col:75>
  (ReturnStmt 0xa1364b8 <col:7, col:72>
    (CallExpr 0xa136490 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa136400 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa1363e0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa136360 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa1363c8 <col:40> 'const class std::locale' lvalue ParmVar 0xa136180 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa136454 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f3190 'cntrl' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa136474 <col:69> '_CharT' lvalue ParmVar 0xa136130 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa1368d8 </usr/include/c++/4.6/bits/locale_facets.h:2548:5, col:75>
  (ReturnStmt 0xa1368c8 <col:7, col:72>
    (CallExpr 0xa1368a0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa136810 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa1367f0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa136770 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa1367d8 <col:40> 'const class std::locale' lvalue ParmVar 0xa136590 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa136864 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f2d80 'upper' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa136884 <col:69> '_CharT' lvalue ParmVar 0xa136540 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool islower(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa136ce8 </usr/include/c++/4.6/bits/locale_facets.h:2554:5, col:75>
  (ReturnStmt 0xa136cd8 <col:7, col:72>
    (CallExpr 0xa136cb0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa136c20 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa136c00 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa136b80 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa136be8 <col:40> 'const class std::locale' lvalue ParmVar 0xa1369a0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa136c74 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f2df0 'lower' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa136c94 <col:69> '_CharT' lvalue ParmVar 0xa136950 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalpha(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa137108 </usr/include/c++/4.6/bits/locale_facets.h:2560:5, col:75>
  (ReturnStmt 0xa1370f8 <col:7, col:72>
    (CallExpr 0xa1370d0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa137040 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa137020 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa136fa0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa137008 <col:40> 'const class std::locale' lvalue ParmVar 0xa136db0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa137094 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f2e60 'alpha' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa1370b4 <col:69> '_CharT' lvalue ParmVar 0xa136d60 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa137518 </usr/include/c++/4.6/bits/locale_facets.h:2566:5, col:75>
  (ReturnStmt 0xa137508 <col:7, col:72>
    (CallExpr 0xa1374e0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa137450 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa137430 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa1373b0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa137418 <col:40> 'const class std::locale' lvalue ParmVar 0xa1371d0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa1374a4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f2ed0 'digit' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa1374c4 <col:69> '_CharT' lvalue ParmVar 0xa137180 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool ispunct(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa137928 </usr/include/c++/4.6/bits/locale_facets.h:2572:5, col:75>
  (ReturnStmt 0xa137918 <col:7, col:72>
    (CallExpr 0xa1378f0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa137860 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa137840 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa1377c0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa137828 <col:40> 'const class std::locale' lvalue ParmVar 0xa1375e0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa1378b4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f3200 'punct' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa1378d4 <col:69> '_CharT' lvalue ParmVar 0xa137590 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isxdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa137d38 </usr/include/c++/4.6/bits/locale_facets.h:2578:5, col:76>
  (ReturnStmt 0xa137d28 <col:7, col:73>
    (CallExpr 0xa137d00 <col:14, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa137c70 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa137c50 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa137bd0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa137c38 <col:40> 'const class std::locale' lvalue ParmVar 0xa1379f0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa137cc4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f2f40 'xdigit' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa137ce4 <col:70> '_CharT' lvalue ParmVar 0xa1379a0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalnum(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa138148 </usr/include/c++/4.6/bits/locale_facets.h:2584:5, col:75>
  (ReturnStmt 0xa138138 <col:7, col:72>
    (CallExpr 0xa138110 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa138080 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa138060 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa137fe0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa138048 <col:40> 'const class std::locale' lvalue ParmVar 0xa137e00 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa1380d4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f3270 'alnum' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa1380f4 <col:69> '_CharT' lvalue ParmVar 0xa137db0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isgraph(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa138558 </usr/include/c++/4.6/bits/locale_facets.h:2590:5, col:75>
  (ReturnStmt 0xa138548 <col:7, col:72>
    (CallExpr 0xa138520 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa138490 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa138470 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa1383f0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa138458 <col:40> 'const class std::locale' lvalue ParmVar 0xa138210 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa1384e4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa0f3090 'graph' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa138504 <col:69> '_CharT' lvalue ParmVar 0xa1381c0 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT toupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa138920 </usr/include/c++/4.6/bits/locale_facets.h:2596:5, col:61>
  (ReturnStmt 0xa138910 <col:7, col:58>
    (CallExpr 0xa1388f0 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1388a0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa138880 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa138800 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa138868 <col:40> 'const class std::locale' lvalue ParmVar 0xa138620 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa1388d4 <col:55> '_CharT' lvalue ParmVar 0xa1385d0 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT tolower(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa138cf0 </usr/include/c++/4.6/bits/locale_facets.h:2602:5, col:61>
  (ReturnStmt 0xa138ce0 <col:7, col:58>
    (CallExpr 0xa138cc0 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa138c70 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa138c50 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa138bd0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa138c38 <col:40> 'const class std::locale' lvalue ParmVar 0xa1389f0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa138ca4 <col:55> '_CharT' lvalue ParmVar 0xa1389a0 '__c' '_CharT'))))

;
}
namespace std {
    template <typename _Facet> struct __use_cache {
        struct __use_cache;
        const _Facet *operator()(const std::locale &__loc) const;
    };
    struct __use_cache {
        struct __use_cache;
        const __numpunct_cache<_CharT> *operator()(const std::locale &__loc) const (CompoundStmt 0xa139f98 </usr/include/c++/4.6/bits/locale_facets.tcc:55:7, line:74:7>
  (DeclStmt 0xa1397d8 <line:56:2, col:49>
    0xa139650 "const size_t __i =
      (CallExpr 0xa1397b8 <col:21, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa139780 <col:21, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa139748 <col:21, col:39> '<dependent type>' lvalue)))")
  (DeclStmt 0xa1398d0 <line:57:2, col:59>
    0xa139820 "const locale::facet **__caches =
      (ImplicitCastExpr 0xa1398c0 <col:35, col:50> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa13989c <col:35, col:50> 'const class std::locale::facet **' lvalue ->_M_caches 0xa079dd0
          (ImplicitCastExpr 0xa139890 <col:35, col:41> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa13986c <col:35, col:41> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa06dee0
              (DeclRefExpr 0xa139854 <col:35> 'const class std::locale' lvalue ParmVar 0xa1394c0 '__loc' 'const class std::locale &')))))")
  (IfStmt 0xa139e10 <line:58:2, line:72:4>
    <<<NULL>>>
    (UnaryOperator 0xa139968 <line:58:6, col:19> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa139958 <col:7, col:19> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa139948 <col:7, col:19> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0xa139930 <col:7, col:19> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa139910 <col:7> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa1398e0 <col:7> 'const class locale::facet **' lvalue Var 0xa139820 '__caches' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa139920 <col:16> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa1398f8 <col:16> 'const size_t':'const unsigned int' lvalue Var 0xa139650 '__i' 'const size_t':'const unsigned int'))))))
    (CompoundStmt 0xa139df0 <line:59:4, line:72:4>
      (DeclStmt 0xa139aa0 <line:60:6, col:41>
        0xa139a50 "__numpunct_cache<_CharT> *__tmp =
          (IntegerLiteral 0xa139a88 <col:40> 'int' 0)")
      (IfStmt 0xa139c88 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:65:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa139ab0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa139c70 </usr/include/c++/4.6/bits/locale_facets.tcc:62:8, line:65:8>
          (BinaryOperator 0xa139bd0 <line:63:3, col:38> '<dependent type>' '='
            (DeclRefExpr 0xa139ac0 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0xa139a50 '__tmp' '__numpunct_cache<_CharT> *')
            (CXXNewExpr 0xa139b98 <col:11, col:38> '__numpunct_cache<_CharT> *'))
          (CallExpr 0xa139c50 <line:64:3, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa139c00 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa139be8 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0xa139a50 '__tmp' '__numpunct_cache<_CharT> *'))
            (DeclRefExpr 0xa139c34 <col:19> 'const class std::locale' lvalue ParmVar 0xa1394c0 '__loc' 'const class std::locale &')))
        <<<NULL>>>)
      (IfStmt 0xa139d10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:70:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa139ca8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa139cf8 </usr/include/c++/4.6/bits/locale_facets.tcc:67:8, line:70:8>
          (CXXDeleteExpr 0xa139cd0 <line:68:3, col:10> 'void'
            (DeclRefExpr 0xa139cb8 <col:10> '__numpunct_cache<_CharT> *' lvalue Var 0xa139a50 '__tmp' '__numpunct_cache<_CharT> *'))
          (NullStmt 0xa139ce8 <line:69:26>))
        <<<NULL>>>)
      (CallExpr 0xa139dc8 <line:71:6, col:48> '<dependent type>'
        (MemberExpr 0xa139d74 <col:6, col:21> '<bound member function type>' ->_M_install_cache 0xa07b330
          (ImplicitCastExpr 0xa139d68 <col:6, col:12> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa139d44 <col:6, col:12> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa06dee0
              (DeclRefExpr 0xa139d2c <col:6> 'const class std::locale' lvalue ParmVar 0xa1394c0 '__loc' 'const class std::locale &'))))
        (DeclRefExpr 0xa139d94 <col:38> '__numpunct_cache<_CharT> *' lvalue Var 0xa139a50 '__tmp' '__numpunct_cache<_CharT> *')
        (DeclRefExpr 0xa139dac <col:45> 'const size_t':'const unsigned int' lvalue Var 0xa139650 '__i' 'const size_t':'const unsigned int')))
    <<<NULL>>>)
  (ReturnStmt 0xa139f88 <line:73:2, col:67>
    (CXXStaticCastExpr 0xa139f70 <col:9, col:67> 'const __numpunct_cache<_CharT> *' static_cast<const __numpunct_cache<_CharT> *> <Dependent>
      (ArraySubscriptExpr 0xa139f10 <col:54, col:66> 'const class locale::facet *' lvalue
        (ImplicitCastExpr 0xa139ef0 <col:54> 'const class locale::facet **' <LValueToRValue>
          (DeclRefExpr 0xa139ec0 <col:54> 'const class locale::facet **' lvalue Var 0xa139820 '__caches' 'const class locale::facet **'))
        (ImplicitCastExpr 0xa139f00 <col:63> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa139ed8 <col:63> 'const size_t':'const unsigned int' lvalue Var 0xa139650 '__i' 'const size_t':'const unsigned int'))))))


    };
    void _M_cache(const std::locale &__loc) (CompoundStmt 0xa1402a0 </usr/include/c++/4.6/bits/locale_facets.tcc:80:5, line:127:5>
  (BinaryOperator 0xa13a298 <line:81:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa13a268 <col:7> '_Bool' lvalue ->_M_allocated 0xa11de30
      (CXXThisExpr 0xa13a258 <col:7> '__numpunct_cache<_CharT> *' this))
    (CXXBoolLiteralExpr 0xa13a288 <col:22> '_Bool' true))
  (DeclStmt 0xa13a520 <line:83:7, col:73>
    0xa13a3a0 "const numpunct<_CharT> &__np =
      (CallExpr 0xa13a500 <col:38, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa13a480 <col:38, col:65> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
        (DeclRefExpr 0xa13a4e8 <col:67> 'const class std::locale' lvalue ParmVar 0xa13a170 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa13a5a0 <line:85:7, col:27>
    0xa13a540 "char *__grouping =
      (ImplicitCastExpr 0xa13a590 <col:26> 'char *' <NullToPointer>
        (IntegerLiteral 0xa13a578 <col:26> 'int' 0))")
  (DeclStmt 0xa13a630 <line:86:7, col:29>
    0xa13a5e0 "_CharT *__truename =
      (IntegerLiteral 0xa13a618 <col:28> 'int' 0)")
  (DeclStmt 0xa13a6a0 <line:87:7, col:30>
    0xa13a650 "_CharT *__falsename =
      (IntegerLiteral 0xa13a688 <col:29> 'int' 0)")
  (IfStmt 0xa140180 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:119:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa13a6b0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa140128 </usr/include/c++/4.6/bits/locale_facets.tcc:89:2, line:119:2>
      (BinaryOperator 0xa13a7b8 <line:90:4, col:44> '<dependent type>' '='
        (MemberExpr 0xa13a6d0 <col:4> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa11ca40
          (CXXThisExpr 0xa13a6c0 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa13a798 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa13a760 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0xa13a740 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa13a708 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa13a6f0 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa13a3a0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa13a860 <line:91:4, col:21> 'char *' lvalue '='
        (DeclRefExpr 0xa13a7d0 <col:4> 'char *' lvalue Var 0xa13a540 '__grouping' 'char *')
        (CXXNewExpr 0xa13a820 <col:17, col:21> 'char *'
          (MemberExpr 0xa13a7f8 <col:26> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa11ca40
            (CXXThisExpr 0xa13a7e8 <col:26> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa13a968 <line:92:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13a8e8 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0xa13a8c8 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa13a890 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa13a878 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa13a3a0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa13a91c <col:25> 'char *' lvalue Var 0xa13a540 '__grouping' 'char *')
        (MemberExpr 0xa13a948 <col:37> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa11ca40
          (CXXThisExpr 0xa13a938 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa13a9d8 <line:93:4, col:18> '<dependent type>' '='
        (MemberExpr 0xa13a9a0 <col:4> 'const char *' lvalue ->_M_grouping 0xa11ca00
          (CXXThisExpr 0xa13a990 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa13a9c0 <col:18> 'char *' lvalue Var 0xa13a540 '__grouping' 'char *'))
      (BinaryOperator 0xa13f370 <line:94:4, line:97:50> '<dependent type>' '='
        (MemberExpr 0xa13aa00 <line:94:4> '_Bool' lvalue ->_M_use_grouping 0xa11ca80
          (CXXThisExpr 0xa13a9f0 <col:4> '__numpunct_cache<_CharT> *' this))
        (ParenExpr 0xa13f358 <col:22, line:97:50> '<dependent type>'
          (BinaryOperator 0xa13f340 <line:94:23, line:97:49> '<dependent type>' '&&'
            (BinaryOperator 0xa13ab18 <line:94:23, line:95:55> '<dependent type>' '&&'
              (MemberExpr 0xa13aa30 <line:94:23> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa11ca40
                (CXXThisExpr 0xa13aa20 <col:23> '__numpunct_cache<_CharT> *' this))
              (BinaryOperator 0xa13ab00 <line:95:12, col:55> '_Bool' '>'
                (ImplicitCastExpr 0xa13aaf0 <col:12, col:51> 'int' <IntegralCast>
                  (CXXStaticCastExpr 0xa13aac0 <col:12, col:51> 'signed char' static_cast<signed char> <Dependent>
                    (ArraySubscriptExpr 0xa13aa98 <col:37, col:50> '<dependent type>' lvalue
                      (MemberExpr 0xa13aa60 <col:37> 'const char *' lvalue ->_M_grouping 0xa11ca00
                        (CXXThisExpr 0xa13aa50 <col:37> '__numpunct_cache<_CharT> *' this))
                      (IntegerLiteral 0xa13aa80 <col:49> 'int' 0))))
                (IntegerLiteral 0xa13aad8 <col:55> 'int' 0)))
            (ParenExpr 0xa13f328 <line:96:12, line:97:49> '<dependent type>'
              (CXXOperatorCallExpr 0xa13f300 <line:96:13, line:97:44> '<dependent type>'
                (UnresolvedLookupExpr 0xa13f2a8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
                (ArraySubscriptExpr 0xa13ab78 <line:96:13, col:26> '<dependent type>' lvalue
                  (MemberExpr 0xa13ab40 <col:13> 'const char *' lvalue ->_M_grouping 0xa11ca00
                    (CXXThisExpr 0xa13ab30 <col:13> '__numpunct_cache<_CharT> *' this))
                  (IntegerLiteral 0xa13ab60 <col:25> 'int' 0))
                (DeclRefExpr 0xa13f288 <line:97:9, col:44> 'const char':'const char' lvalue Var 0xa13ec40 '__max' 'const char':'const char'))))))
      (BinaryOperator 0xa13f480 <line:99:4, col:44> '<dependent type>' '='
        (MemberExpr 0xa13f398 <col:4> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa11cb20
          (CXXThisExpr 0xa13f388 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa13f460 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa13f428 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0xa13f408 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa13f3d0 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa13f3b8 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa13a3a0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa13f528 <line:100:4, col:21> '<dependent type>' '='
        (DeclRefExpr 0xa13f498 <col:4> '_CharT *' lvalue Var 0xa13a5e0 '__truename' '_CharT *')
        (CXXNewExpr 0xa13f4e8 <col:17, col:21> '_CharT *'
          (MemberExpr 0xa13f4c0 <col:28> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa11cb20
            (CXXThisExpr 0xa13f4b0 <col:28> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa13f630 <line:101:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13f5b0 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0xa13f590 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa13f558 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa13f540 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa13a3a0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa13f5e4 <col:25> '_CharT *' lvalue Var 0xa13a5e0 '__truename' '_CharT *')
        (MemberExpr 0xa13f610 <col:37> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa11cb20
          (CXXThisExpr 0xa13f600 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa13f6a0 <line:102:4, col:18> '<dependent type>' '='
        (MemberExpr 0xa13f668 <col:4> 'const _CharT *' lvalue ->_M_truename 0xa11cae0
          (CXXThisExpr 0xa13f658 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa13f688 <col:18> '_CharT *' lvalue Var 0xa13a5e0 '__truename' '_CharT *'))
      (BinaryOperator 0xa13f7b0 <line:104:4, col:46> '<dependent type>' '='
        (MemberExpr 0xa13f6c8 <col:4> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa11cba0
          (CXXThisExpr 0xa13f6b8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa13f790 <col:24, col:46> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa13f758 <col:24, col:41> '<dependent type>' lvalue
            (CallExpr 0xa13f738 <col:24, col:39> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa13f700 <col:24, col:29> '<dependent type>' lvalue
                (DeclRefExpr 0xa13f6e8 <col:24> 'const numpunct<_CharT>' lvalue Var 0xa13a3a0 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa13f858 <line:105:4, col:22> '<dependent type>' '='
        (DeclRefExpr 0xa13f7c8 <col:4> '_CharT *' lvalue Var 0xa13a650 '__falsename' '_CharT *')
        (CXXNewExpr 0xa13f818 <col:18, col:22> '_CharT *'
          (MemberExpr 0xa13f7f0 <col:29> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa11cba0
            (CXXThisExpr 0xa13f7e0 <col:29> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa13f960 <line:106:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13f8e0 <col:4, col:21> '<dependent type>' lvalue
          (CallExpr 0xa13f8c0 <col:4, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa13f888 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa13f870 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa13a3a0 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa13f914 <col:26> '_CharT *' lvalue Var 0xa13a650 '__falsename' '_CharT *')
        (MemberExpr 0xa13f940 <col:39> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa11cba0
          (CXXThisExpr 0xa13f930 <col:39> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa13f9d0 <line:107:4, col:19> '<dependent type>' '='
        (MemberExpr 0xa13f998 <col:4> 'const _CharT *' lvalue ->_M_falsename 0xa11cb60
          (CXXThisExpr 0xa13f988 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa13f9b8 <col:19> '_CharT *' lvalue Var 0xa13a650 '__falsename' '_CharT *'))
      (BinaryOperator 0xa13fa88 <line:109:4, col:42> '<dependent type>' '='
        (MemberExpr 0xa13f9f8 <col:4> '_CharT' lvalue ->_M_decimal_point 0xa11cbe0
          (CXXThisExpr 0xa13f9e8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa13fa68 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa13fa30 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0xa13fa18 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa13a3a0 '__np' 'const numpunct<_CharT> &'))))
      (BinaryOperator 0xa13fb40 <line:110:4, col:42> '<dependent type>' '='
        (MemberExpr 0xa13fab0 <col:4> '_CharT' lvalue ->_M_thousands_sep 0xa11cc20
          (CXXThisExpr 0xa13faa0 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa13fb20 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa13fae8 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0xa13fad0 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa13a3a0 '__np' 'const numpunct<_CharT> &'))))
      (DeclStmt 0xa13fda0 <line:112:4, col:64>
        0xa13fc20 "const ctype<_CharT> &__ct =
          (CallExpr 0xa13fd80 <col:32, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0xa13fd00 <col:32, col:56> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
            (DeclRefExpr 0xa13fd68 <col:58> 'const class std::locale' lvalue ParmVar 0xa13a170 '__loc' 'const class std::locale &'))")
      (CallExpr 0xa13ff60 <line:113:4, line:115:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13fdc8 <line:113:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa13fdb0 <col:4> 'const ctype<_CharT>' lvalue Var 0xa13fc20 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0xa13fe1c <col:15, col:27> 'const char *' lvalue Var 0xa11c1b0 '_S_atoms_out' 'const char *')
        (BinaryOperator 0xa13ff18 <line:114:8, line:115:22> 'const char *' '+'
          (ImplicitCastExpr 0xa13fef8 <line:114:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa13fe5c <col:8, col:20> 'const char *' lvalue Var 0xa11c1b0 '_S_atoms_out' 'const char *'))
          (ImplicitCastExpr 0xa13ff08 <line:115:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0xa13fe9c <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa11c100 '_S_oend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
        (MemberExpr 0xa13ff40 <col:31> '_CharT [36]' lvalue ->_M_atoms_out 0xa11cd00
          (CXXThisExpr 0xa13ff30 <col:31> '__numpunct_cache<_CharT> *' this)))
      (CallExpr 0xa140100 <line:116:4, line:118:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa13ffa0 <line:116:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa13ff88 <col:4> 'const ctype<_CharT>' lvalue Var 0xa13fc20 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0xa13fff4 <col:15, col:27> 'const char *' lvalue Var 0xa11c200 '_S_atoms_in' 'const char *')
        (BinaryOperator 0xa1400b8 <line:117:8, line:118:22> 'const char *' '+'
          (ImplicitCastExpr 0xa140098 <line:117:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa140034 <col:8, col:20> 'const char *' lvalue Var 0xa11c200 '_S_atoms_in' 'const char *'))
          (ImplicitCastExpr 0xa1400a8 <line:118:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0xa140074 <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c4f0 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
        (MemberExpr 0xa1400e0 <col:31> '_CharT [26]' lvalue ->_M_atoms_in 0xa11ddf0
          (CXXThisExpr 0xa1400d0 <col:31> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>)
  (IfStmt 0xa140280 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:126:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa1401a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa140260 </usr/include/c++/4.6/bits/locale_facets.tcc:121:2, line:126:2>
      (CXXDeleteExpr 0xa1401d8 <line:122:4, col:14> 'void'
        (ImplicitCastExpr 0xa1401c8 <col:14> 'void *' <NoOp>
          (DeclRefExpr 0xa1401b0 <col:14> 'char *' lvalue Var 0xa13a540 '__grouping' 'char *')))
      (CXXDeleteExpr 0xa140208 <line:123:4, col:14> 'void'
        (DeclRefExpr 0xa1401f0 <col:14> '_CharT *' lvalue Var 0xa13a5e0 '__truename' '_CharT *'))
      (CXXDeleteExpr 0xa140238 <line:124:4, col:14> 'void'
        (DeclRefExpr 0xa140220 <col:14> '_CharT *' lvalue Var 0xa13a650 '__falsename' '_CharT *'))
      (NullStmt 0xa140250 <line:125:27>))
    <<<NULL>>>))


    bool __verify_grouping(const char *__grouping, size_t __grouping_size, const string &__grouping_tmp) throw();
    _InIter _M_extract_float(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, string &__xtrc) const (CompoundStmt 0xa145770 </usr/include/c++/4.6/bits/locale_facets.tcc:148:5, line:365:5>
  (DeclStmt 0xa140b00 <line:149:7, col:50>
    0xa140ad0 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0xa140bf0 <line:150:7, col:69>
    0xa140bc0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa140cf8 <line:151:7, col:37>
    0xa140cc0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa140dc0 <line:152:7, col:45>
    0xa140d20 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa140d90 <col:29, col:44> 'const class std::locale' lvalue
        (MemberExpr 0xa140d6c <col:29, col:34> '<bound member function type>' ._M_getloc 0xa0a5fd0
          (ImplicitCastExpr 0xa140db0 <col:29> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa140d54 <col:29> 'class std::ios_base' lvalue ParmVar 0xa140810 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa140e88 <line:153:7, col:45>
    0xa140e00 "const __cache_type *__lc =
      (CallExpr 0xa140e68 <col:34, col:44> '<dependent type>'
        (DeclRefExpr 0xa140e34 <col:34> '__use_cache<__cache_type>' lvalue Var 0xa140cc0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa140e4c <col:39> 'const class std::locale' lvalue Var 0xa140d20 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa140f58 <line:154:7, col:46>
    0xa140ed0 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa140f20 <col:29, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0xa140f04 <col:29> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa140fc8 <line:155:7, col:34>
    0xa140f70 "char_type __c =
      (CXXUnresolvedConstructExpr 0xa140fb0 <col:23, col:33> 'char_type':'_CharT')")
  (DeclStmt 0xa1410d0 <line:158:7, col:38>
    0xa140fe0 "bool __testeof =
      (CXXOperatorCallExpr 0xa1410a8 <col:24, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0xa141048 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
        (DeclRefExpr 0xa141014 <col:24> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter')
        (DeclRefExpr 0xa14102c <col:33> '_InIter' lvalue ParmVar 0xa1407c0 '__end' '_InIter'))")
  (IfStmt 0xa141a30 <line:161:7, line:175:2>
    <<<NULL>>>
    (UnaryOperator 0xa141108 <line:161:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa1410f8 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa1410e0 <col:12> '_Bool' lvalue Var 0xa140fe0 '__testeof' '_Bool')))
    (CompoundStmt 0xa141a10 <line:162:2, line:175:2>
      (BinaryOperator 0xa141168 <line:163:4, col:11> '<dependent type>' '='
        (DeclRefExpr 0xa14111c <col:4> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
        (UnaryOperator 0xa141150 <col:10, col:11> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa141134 <col:11> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter')))
      (DeclStmt 0xa1412d8 <line:164:4, col:58>
        0xa141190 "const bool __plus =
          (CXXOperatorCallExpr 0xa1412b0 <col:24, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa141250 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
            (DeclRefExpr 0xa1411c4 <col:24> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa141238 <col:31, col:57> '<dependent type>' lvalue
              (DeclRefExpr 0xa1411dc <col:31> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa141214 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c2e0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
      (IfStmt 0xa1419f0 <line:165:4, line:174:6>
        <<<NULL>>>
        (BinaryOperator 0xa141700 <line:165:8, line:167:42> '<dependent type>' '&&'
          (BinaryOperator 0xa1415c8 <line:165:8, line:166:67> '<dependent type>' '&&'
            (ParenExpr 0xa141428 <line:165:8, col:54> '<dependent type>'
              (BinaryOperator 0xa141410 <col:9, col:53> '<dependent type>' '||'
                (DeclRefExpr 0xa1412e8 <col:9> 'const _Bool' lvalue Var 0xa141190 '__plus' 'const _Bool')
                (CXXOperatorCallExpr 0xa1413e8 <col:19, col:53> '<dependent type>'
                  (UnresolvedLookupExpr 0xa141388 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                  (DeclRefExpr 0xa141300 <col:19> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0xa141370 <col:26, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0xa141318 <col:26> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
                    (DeclRefExpr 0xa14134c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c2a0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0xa1415b0 <line:166:11, col:67> '<dependent type>' prefix '!'
              (ParenExpr 0xa141598 <col:12, col:67> '<dependent type>'
                (BinaryOperator 0xa141580 <col:13, col:51> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0xa141458 <col:13, col:19> '<dependent type>' lvalue
                    (DeclRefExpr 0xa14143c <col:13> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0xa141558 <col:38, col:51> '<dependent type>'
                    (UnresolvedLookupExpr 0xa1414f8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                    (DeclRefExpr 0xa14148c <col:38> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0xa1414c0 <col:45, col:51> '<dependent type>' lvalue
                      (DeclRefExpr 0xa1414a4 <col:45> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0xa1416e8 <line:167:11, col:42> '<dependent type>' prefix '!'
            (ParenExpr 0xa1416d0 <col:12, col:42> '<dependent type>'
              (CXXOperatorCallExpr 0xa1416a8 <col:13, col:26> '<dependent type>'
                (UnresolvedLookupExpr 0xa141648 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                (DeclRefExpr 0xa1415e0 <col:13> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa141610 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1415f8 <col:20> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0xa1419d8 <line:168:6, line:174:6>
          (CXXOperatorCallExpr 0xa141828 <line:169:8, col:33> 'class std::basic_string<char>' lvalue
            (ImplicitCastExpr 0xa141818 <col:15, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1417c8 <col:15, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
            (DeclRefExpr 0xa141718 <col:8> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')
            (ConditionalOperator 0xa141788 <col:18, col:33> 'char'
              (ImplicitCastExpr 0xa141778 <col:18> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa141730 <col:18> 'const _Bool' lvalue Var 0xa141190 '__plus' 'const _Bool'))
              (CharacterLiteral 0xa141748 <col:27> 'char'43)
              (CharacterLiteral 0xa141760 <col:33> 'char'45)))
          (IfStmt 0xa1419b8 <line:170:8, line:173:15>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa1418f0 <line:170:12, col:23> '<dependent type>'
              (UnresolvedLookupExpr 0xa141898 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
              (UnaryOperator 0xa141868 <col:12, col:14> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa14184c <col:14> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter'))
              (DeclRefExpr 0xa14187c <col:23> '_InIter' lvalue ParmVar 0xa1407c0 '__end' '_InIter'))
            (BinaryOperator 0xa141960 <line:171:3, col:10> '<dependent type>' '='
              (DeclRefExpr 0xa141914 <col:3> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
              (UnaryOperator 0xa141948 <col:9, col:10> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa14192c <col:10> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter')))
            (BinaryOperator 0xa1419a0 <line:173:3, col:15> '_Bool' lvalue '='
              (DeclRefExpr 0xa141978 <col:3> '_Bool' lvalue Var 0xa140fe0 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0xa141990 <col:15> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0xa141aa8 <line:178:7, col:36>
    0xa141a60 "bool __found_mantissa =
      (CXXBoolLiteralExpr 0xa141a98 <col:31> '_Bool' false)")
  (DeclStmt 0xa141b20 <line:179:7, col:24>
    0xa141ad0 "int __sep_pos =
      (IntegerLiteral 0xa141b08 <col:23> 'int' 0)")
  (WhileStmt 0xa142270 <line:180:7, line:201:2>
    <<<NULL>>>
    (UnaryOperator 0xa141b58 <line:180:14, col:15> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa141b48 <col:15> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa141b30 <col:15> '_Bool' lvalue Var 0xa140fe0 '__testeof' '_Bool')))
    (CompoundStmt 0xa142258 <line:181:2, line:201:2>
      (IfStmt 0xa142238 <line:182:4, line:200:6>
        <<<NULL>>>
        (BinaryOperator 0xa141dd0 <line:182:8, line:183:24> '<dependent type>' '||'
          (ParenExpr 0xa141cc8 <line:182:8, col:63> '<dependent type>'
            (BinaryOperator 0xa141cb0 <col:9, col:47> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0xa141b88 <col:9, col:15> '<dependent type>' lvalue
                (DeclRefExpr 0xa141b6c <col:9> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0xa141c88 <col:34, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0xa141c28 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                (DeclRefExpr 0xa141bbc <col:34> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa141bf0 <col:41, col:47> '<dependent type>' lvalue
                  (DeclRefExpr 0xa141bd4 <col:41> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0xa141da8 <line:183:11, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa141d48 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
            (DeclRefExpr 0xa141cdc <col:11> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0xa141d10 <col:18, col:24> '<dependent type>' lvalue
              (DeclRefExpr 0xa141cf4 <col:18> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))))
        (BreakStmt 0xa141de8 <line:184:6>)
        (IfStmt 0xa142218 <line:185:9, line:200:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa141ed8 <line:185:13, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0xa141e78 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
            (DeclRefExpr 0xa141df0 <col:13> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa141e60 <col:20, col:46> '<dependent type>' lvalue
              (DeclRefExpr 0xa141e08 <col:20> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa141e3c <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c3a0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
          (CompoundStmt 0xa1421f0 <line:186:6, line:198:6>
            (IfStmt 0xa142018 <line:187:8, line:191:3>
              <<<NULL>>>
              (UnaryOperator 0xa141f28 <line:187:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa141f18 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa141efc <col:13> '_Bool' lvalue Var 0xa141a60 '__found_mantissa' '_Bool')))
              (CompoundStmt 0xa142000 <line:188:3, line:191:3>
                (CXXOperatorCallExpr 0xa141f98 <line:189:5, col:15> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa141f88 <col:12, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa141f70 <col:12, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa141f3c <col:5> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')
                  (CharacterLiteral 0xa141f58 <col:15> 'char'48))
                (BinaryOperator 0xa141fe8 <line:190:5, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0xa141fbc <col:5> '_Bool' lvalue Var 0xa141a60 '__found_mantissa' '_Bool')
                  (CXXBoolLiteralExpr 0xa141fd8 <col:24> '_Bool' true)))
              <<<NULL>>>)
            (UnaryOperator 0xa142050 <line:192:8, col:10> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa142034 <col:10> 'int' lvalue Var 0xa141ad0 '__sep_pos' 'int'))
            (IfStmt 0xa1421d0 <line:194:8, line:197:15>
              <<<NULL>>>
              (CXXOperatorCallExpr 0xa142108 <line:194:12, col:23> '<dependent type>'
                (UnresolvedLookupExpr 0xa1420b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
                (UnaryOperator 0xa142080 <col:12, col:14> '<dependent type>' prefix '++'
                  (DeclRefExpr 0xa142064 <col:14> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter'))
                (DeclRefExpr 0xa142094 <col:23> '_InIter' lvalue ParmVar 0xa1407c0 '__end' '_InIter'))
              (BinaryOperator 0xa142178 <line:195:3, col:10> '<dependent type>' '='
                (DeclRefExpr 0xa14212c <col:3> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                (UnaryOperator 0xa142160 <col:9, col:10> '<dependent type>' prefix '*'
                  (DeclRefExpr 0xa142144 <col:10> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter')))
              (BinaryOperator 0xa1421b8 <line:197:3, col:15> '_Bool' lvalue '='
                (DeclRefExpr 0xa142190 <col:3> '_Bool' lvalue Var 0xa140fe0 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0xa1421a8 <col:15> '_Bool' true))))
          (BreakStmt 0xa142210 <line:200:6>)))))
  (DeclStmt 0xa1422d8 <line:204:7, col:31>
    0xa142290 "bool __found_dec =
      (CXXBoolLiteralExpr 0xa1422c8 <col:26> '_Bool' false)")
  (DeclStmt 0xa142338 <line:205:7, col:31>
    0xa1422f0 "bool __found_sci =
      (CXXBoolLiteralExpr 0xa142328 <col:26> '_Bool' false)")
  (DeclStmt 0xa1423a8 <line:206:7, col:30>
    0xa142350 "string __found_grouping =
      (CXXConstructExpr 0xa142388 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0xa142488 <line:207:7, line:208:29>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa1423d0 <line:207:11, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0xa1423b8 <col:11> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0xa142458 <line:208:2, col:29> 'void'
      (MemberExpr 0xa14241c <col:2, col:19> '<bound member function type>' .reserve 0xa019250
        (DeclRefExpr 0xa142404 <col:2> 'string':'class std::basic_string<char>' lvalue Var 0xa142350 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0xa142478 <col:27> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa142440 <col:27> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0xa1425d0 <line:209:7, col:65>
    0xa1424d0 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0xa1425a8 <col:37, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa142560 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
        (DeclRefExpr 0xa142504 <col:37> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa14253c <col:45, col:57> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c3a0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0xa145328 <line:211:7, line:348:4>
    <<<NULL>>>
    (UnaryOperator 0xa142630 <line:211:11, col:18> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0xa1425f8 <col:12, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0xa1425e0 <col:12> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *')))
    (WhileStmt 0xa143700 <line:213:2, line:258:4>
      <<<NULL>>>
      (UnaryOperator 0xa142670 <line:213:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa142660 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa142644 <col:10> '_Bool' lvalue Var 0xa140fe0 '__testeof' '_Bool')))
      (CompoundStmt 0xa1436e0 <line:214:4, line:258:4>
        (DeclStmt 0xa142798 <line:215:6, col:54>
          0xa1426a0 "const int __digit =
            (CallExpr 0xa142770 <col:26, col:53> '<dependent type>'
              (UnresolvedMemberExpr 0xa1426e8 <col:26> '<bound member function type>' lvalue)
              (DeclRefExpr 0xa142728 <col:34> 'const char_type *' lvalue Var 0xa1424d0 '__lit_zero' 'const char_type *')
              (IntegerLiteral 0xa142740 <col:46> 'int' 10)
              (DeclRefExpr 0xa142758 <col:50> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT'))")
        (IfStmt 0xa143538 <line:216:6, line:252:8>
          <<<NULL>>>
          (BinaryOperator 0xa142800 <line:216:10, col:22> '_Bool' '!='
            (ImplicitCastExpr 0xa1427f0 <col:10> 'int' <LValueToRValue>
              (DeclRefExpr 0xa1427a8 <col:10> 'const int' lvalue Var 0xa1426a0 '__digit' 'const int'))
            (UnaryOperator 0xa1427d8 <col:21, col:22> 'int' prefix '-'
              (IntegerLiteral 0xa1427c0 <col:22> 'int' 1)))
          (CompoundStmt 0xa142938 <line:217:8, line:220:8>
            (CXXOperatorCallExpr 0xa1428d0 <line:218:3, col:19> 'class std::basic_string<char>' lvalue
              (ImplicitCastExpr 0xa1428c0 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa1428a8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
              (DeclRefExpr 0xa142818 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')
              (ImplicitCastExpr 0xa142898 <col:13, col:19> 'char':'char' <IntegralCast>
                (BinaryOperator 0xa142880 <col:13, col:19> 'int' '+'
                  (ImplicitCastExpr 0xa142860 <col:13> 'int' <IntegralCast>
                    (CharacterLiteral 0xa142830 <col:13> 'char'48))
                  (ImplicitCastExpr 0xa142870 <col:19> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa142844 <col:19> 'const int' lvalue Var 0xa1426a0 '__digit' 'const int')))))
            (BinaryOperator 0xa142920 <line:219:3, col:22> '_Bool' lvalue '='
              (DeclRefExpr 0xa1428f4 <col:3> '_Bool' lvalue Var 0xa141a60 '__found_mantissa' '_Bool')
              (CXXBoolLiteralExpr 0xa142910 <col:22> '_Bool' true)))
          (IfStmt 0xa143518 <line:221:11, line:252:8>
            <<<NULL>>>
            (BinaryOperator 0xa142ad8 <line:221:15, line:222:28> '<dependent type>' '&&'
              (BinaryOperator 0xa142a80 <line:221:15, line:222:12> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa142a18 <line:221:15, col:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa1429b8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                  (DeclRefExpr 0xa142950 <col:15> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                  (CXXDependentScopeMemberExpr 0xa142980 <col:22, col:28> '<dependent type>' lvalue
                    (DeclRefExpr 0xa142968 <col:22> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *')))
                (UnaryOperator 0xa142a68 <line:222:11, col:12> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa142a58 <col:12> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa142a3c <col:12> '_Bool' lvalue Var 0xa142290 '__found_dec' '_Bool'))))
              (UnaryOperator 0xa142ac0 <col:27, col:28> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa142ab0 <col:28> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa142a98 <col:28> '_Bool' lvalue Var 0xa1422f0 '__found_sci' '_Bool'))))
            (CompoundStmt 0xa142bb0 <line:223:8, line:226:8>
              (CXXOperatorCallExpr 0xa142b48 <line:224:3, col:13> 'class std::basic_string<char>' lvalue
                (ImplicitCastExpr 0xa142b38 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa142b20 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                (DeclRefExpr 0xa142af0 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')
                (CharacterLiteral 0xa142b08 <col:13> 'char'46))
              (BinaryOperator 0xa142b98 <line:225:3, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0xa142b6c <col:3> '_Bool' lvalue Var 0xa142290 '__found_dec' '_Bool')
                (CXXBoolLiteralExpr 0xa142b88 <col:17> '_Bool' true)))
            (IfStmt 0xa1434f8 <line:227:11, line:252:8>
              <<<NULL>>>
              (BinaryOperator 0xa142e88 <line:227:15, line:229:27> '<dependent type>' '&&'
                (BinaryOperator 0xa142e58 <line:227:15, line:229:12> '<dependent type>' '&&'
                  (ParenExpr 0xa142e00 <line:227:15, line:228:43> '<dependent type>'
                    (BinaryOperator 0xa142de8 <line:227:16, line:228:42> '<dependent type>' '||'
                      (CXXOperatorCallExpr 0xa142cb0 <line:227:16, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0xa142c50 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                        (DeclRefExpr 0xa142bc8 <col:16> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0xa142c38 <col:23, col:46> '<dependent type>' lvalue
                          (DeclRefExpr 0xa142be0 <col:23> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
                          (DeclRefExpr 0xa142c14 <col:29, col:41> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c420 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                      (CXXOperatorCallExpr 0xa142dc0 <line:228:12, col:42> '<dependent type>'
                        (UnresolvedLookupExpr 0xa142d60 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                        (DeclRefExpr 0xa142cd4 <col:12> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0xa142d48 <col:19, col:42> '<dependent type>' lvalue
                          (DeclRefExpr 0xa142cec <col:19> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
                          (DeclRefExpr 0xa142d24 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c4a0 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                  (UnaryOperator 0xa142e40 <line:229:11, col:12> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa142e30 <col:12> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa142e14 <col:12> '_Bool' lvalue Var 0xa1422f0 '__found_sci' '_Bool'))))
                (DeclRefExpr 0xa142e70 <col:27> '_Bool' lvalue Var 0xa141a60 '__found_mantissa' '_Bool'))
              (CompoundStmt 0xa1434d0 <line:230:8, line:250:8>
                (CXXOperatorCallExpr 0xa142ef8 <line:232:3, col:13> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa142ee8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa142ed0 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa142ea0 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')
                  (CharacterLiteral 0xa142eb8 <col:13> 'char'101))
                (BinaryOperator 0xa142f48 <line:233:3, col:17> '_Bool' lvalue '='
                  (DeclRefExpr 0xa142f1c <col:3> '_Bool' lvalue Var 0xa1422f0 '__found_sci' '_Bool')
                  (CXXBoolLiteralExpr 0xa142f38 <col:17> '_Bool' true))
                (IfStmt 0xa1434b0 <line:236:3, line:249:5>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0xa143000 <line:236:7, col:18> '<dependent type>'
                    (UnresolvedLookupExpr 0xa142fa8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
                    (UnaryOperator 0xa142f78 <col:7, col:9> '<dependent type>' prefix '++'
                      (DeclRefExpr 0xa142f60 <col:9> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter'))
                    (DeclRefExpr 0xa142f8c <col:18> '_InIter' lvalue ParmVar 0xa1407c0 '__end' '_InIter'))
                  (CompoundStmt 0xa143430 <line:237:5, line:244:5>
                    (BinaryOperator 0xa143070 <line:238:7, col:14> '<dependent type>' '='
                      (DeclRefExpr 0xa143024 <col:7> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                      (UnaryOperator 0xa143058 <col:13, col:14> '<dependent type>' prefix '*'
                        (DeclRefExpr 0xa14303c <col:14> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter')))
                    (DeclStmt 0xa1431d8 <line:239:7, col:61>
                      0xa143090 "const bool __plus =
                        (CXXOperatorCallExpr 0xa1431b0 <col:27, col:60> '<dependent type>'
                          (UnresolvedLookupExpr 0xa143150 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                          (DeclRefExpr 0xa1430c4 <col:27> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0xa143138 <col:34, col:60> '<dependent type>' lvalue
                            (DeclRefExpr 0xa1430dc <col:34> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
                            (DeclRefExpr 0xa143114 <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c2e0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                    (IfStmt 0xa143410 <line:240:7, line:243:9>
                      <<<NULL>>>
                      (BinaryOperator 0xa143310 <line:240:11, col:55> '<dependent type>' '||'
                        (DeclRefExpr 0xa1431e8 <col:11> 'const _Bool' lvalue Var 0xa143090 '__plus' 'const _Bool')
                        (CXXOperatorCallExpr 0xa1432e8 <col:21, col:55> '<dependent type>'
                          (UnresolvedLookupExpr 0xa143288 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                          (DeclRefExpr 0xa143200 <col:21> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0xa143270 <col:28, col:55> '<dependent type>' lvalue
                            (DeclRefExpr 0xa143218 <col:28> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
                            (DeclRefExpr 0xa14324c <col:34, col:46> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c2a0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
                      (CXXOperatorCallExpr 0xa1433e0 <line:241:9, col:34> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0xa1433d0 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa1433b8 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0xa143328 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')
                        (ConditionalOperator 0xa143398 <col:19, col:34> 'char'
                          (ImplicitCastExpr 0xa143388 <col:19> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0xa143340 <col:19> 'const _Bool' lvalue Var 0xa143090 '__plus' 'const _Bool'))
                          (CharacterLiteral 0xa143358 <col:28> 'char'43)
                          (CharacterLiteral 0xa143370 <col:34> 'char'45)))
                      (ContinueStmt 0xa143408 <line:243:9>)))
                  (CompoundStmt 0xa143498 <line:246:5, line:249:5>
                    (BinaryOperator 0xa143478 <line:247:7, col:19> '_Bool' lvalue '='
                      (DeclRefExpr 0xa14344c <col:7> '_Bool' lvalue Var 0xa140fe0 '__testeof' '_Bool')
                      (CXXBoolLiteralExpr 0xa143468 <col:19> '_Bool' true))
                    (BreakStmt 0xa143490 <line:248:7>))))
              (BreakStmt 0xa1434f0 <line:252:8>))))
        (IfStmt 0xa1436c0 <line:254:6, line:257:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa1435f8 <line:254:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0xa1435a0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
            (UnaryOperator 0xa143570 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa143554 <col:12> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter'))
            (DeclRefExpr 0xa143584 <col:21> '_InIter' lvalue ParmVar 0xa1407c0 '__end' '_InIter'))
          (BinaryOperator 0xa143668 <line:255:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0xa14361c <col:8> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa143650 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa143634 <col:15> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter')))
          (BinaryOperator 0xa1436a8 <line:257:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa143680 <col:8> '_Bool' lvalue Var 0xa140fe0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa143698 <col:20> '_Bool' true)))))
    (WhileStmt 0xa145310 <line:260:2, line:348:4>
      <<<NULL>>>
      (UnaryOperator 0xa143740 <line:260:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa143730 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa143714 <col:10> '_Bool' lvalue Var 0xa140fe0 '__testeof' '_Bool')))
      (CompoundStmt 0xa1452f8 <line:261:4, line:348:4>
        (IfStmt 0xa145150 <line:264:6, line:342:8>
          <<<NULL>>>
          (BinaryOperator 0xa143898 <line:264:10, col:48> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0xa143770 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa143754 <col:10> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0xa143870 <col:35, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0xa143810 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
              (DeclRefExpr 0xa1437a4 <col:35> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa1437d8 <col:42, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0xa1437bc <col:42> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0xa143b78 <line:265:8, line:285:8>
            (IfStmt 0xa143b58 <line:266:3, line:284:5>
              <<<NULL>>>
              (BinaryOperator 0xa143930 <line:266:7, col:24> '_Bool' '&&'
                (UnaryOperator 0xa1438d8 <col:7, col:8> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa1438c8 <col:8> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa1438b0 <col:8> '_Bool' lvalue Var 0xa142290 '__found_dec' '_Bool')))
                (UnaryOperator 0xa143918 <col:23, col:24> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa143908 <col:24> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa1438ec <col:24> '_Bool' lvalue Var 0xa1422f0 '__found_sci' '_Bool'))))
              (CompoundStmt 0xa143b38 <line:267:5, line:282:5>
                (IfStmt 0xa143b18 <line:270:7, line:281:9>
                  <<<NULL>>>
                  (ImplicitCastExpr 0xa143970 <line:270:11> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0xa143960 <col:11> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa143948 <col:11> 'int' lvalue Var 0xa141ad0 '__sep_pos' 'int')))
                  (CompoundStmt 0xa143a88 <line:271:9, line:274:9>
                    (CXXOperatorCallExpr 0xa143a18 <line:272:4, col:51> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa143a08 <col:21, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa1439f0 <col:21, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa14397c <col:4> 'string':'class std::basic_string<char>' lvalue Var 0xa142350 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0xa1439d8 <col:24, col:51> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0xa1439c8 <col:42> 'char' <IntegralCast>
                          (ImplicitCastExpr 0xa1439b8 <col:42> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa143994 <col:42> 'int' lvalue Var 0xa141ad0 '__sep_pos' 'int')))))
                    (BinaryOperator 0xa143a70 <line:273:4, col:16> 'int' lvalue '='
                      (DeclRefExpr 0xa143a3c <col:4> 'int' lvalue Var 0xa141ad0 '__sep_pos' 'int')
                      (IntegerLiteral 0xa143a58 <col:16> 'int' 0)))
                  (CompoundStmt 0xa143b00 <line:276:9, line:281:9>
                    (CXXMemberCallExpr 0xa143ad8 <line:279:4, col:17> 'void'
                      (MemberExpr 0xa143ab8 <col:4, col:11> '<bound member function type>' .clear 0xa0192c0
                        (DeclRefExpr 0xa143aa0 <col:4> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')))
                    (BreakStmt 0xa143af8 <line:280:4>))))
              (BreakStmt 0xa143b50 <line:284:5>)))
          (IfStmt 0xa145130 <line:286:11, line:342:8>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa143c58 <line:286:15, col:28> '<dependent type>'
              (UnresolvedLookupExpr 0xa143bf8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
              (DeclRefExpr 0xa143b8c <col:15> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa143bc0 <col:22, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa143ba4 <col:22> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *')))
            (CompoundStmt 0xa143f90 <line:287:8, line:300:8>
              (IfStmt 0xa143f70 <line:288:3, line:299:5>
                <<<NULL>>>
                (BinaryOperator 0xa143d00 <line:288:7, col:24> '_Bool' '&&'
                  (UnaryOperator 0xa143ca8 <col:7, col:8> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa143c98 <col:8> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa143c7c <col:8> '_Bool' lvalue Var 0xa142290 '__found_dec' '_Bool')))
                  (UnaryOperator 0xa143ce8 <col:23, col:24> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa143cd8 <col:24> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa143cbc <col:24> '_Bool' lvalue Var 0xa1422f0 '__found_sci' '_Bool'))))
                (CompoundStmt 0xa143f48 <line:289:5, line:297:5>
                  (IfStmt 0xa143e68 <line:293:7, line:294:56>
                    <<<NULL>>>
                    (ImplicitCastExpr 0xa143d98 <line:293:11, col:33> '_Bool' <IntegralToBoolean>
                      (CXXMemberCallExpr 0xa143d50 <col:11, col:33> 'size_type':'unsigned int'
                        (MemberExpr 0xa143d30 <col:11, col:28> '<bound member function type>' .size 0xa018710
                          (ImplicitCastExpr 0xa143d88 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                            (DeclRefExpr 0xa143d18 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa142350 '__found_grouping' 'string':'class std::basic_string<char>')))))
                    (CXXOperatorCallExpr 0xa143e40 <line:294:9, col:56> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa143e30 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa143e18 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa143da4 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa142350 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0xa143e00 <col:29, col:56> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0xa143df0 <col:47> 'char' <IntegralCast>
                          (ImplicitCastExpr 0xa143de0 <col:47> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa143dbc <col:47> 'int' lvalue Var 0xa141ad0 '__sep_pos' 'int')))))
                    <<<NULL>>>)
                  (CXXOperatorCallExpr 0xa143ee0 <line:295:7, col:17> 'class std::basic_string<char>' lvalue
                    (ImplicitCastExpr 0xa143ed0 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa143eb8 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                    (DeclRefExpr 0xa143e84 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')
                    (CharacterLiteral 0xa143ea0 <col:17> 'char'46))
                  (BinaryOperator 0xa143f30 <line:296:7, col:21> '_Bool' lvalue '='
                    (DeclRefExpr 0xa143f04 <col:7> '_Bool' lvalue Var 0xa142290 '__found_dec' '_Bool')
                    (CXXBoolLiteralExpr 0xa143f20 <col:21> '_Bool' true)))
                (BreakStmt 0xa143f68 <line:299:5>)))
            (CompoundStmt 0xa145118 <line:302:8, line:342:8>
              (DeclStmt 0xa1440e0 <line:303:3, line:304:45>
                0xa143fc0 "const char_type *__q =
                  (CallExpr 0xa1440b8 <col:5, col:44> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa144038 <col:5, col:20> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa14406c <col:25> 'const char_type *' lvalue Var 0xa1424d0 '__lit_zero' 'const char_type *')
                    (IntegerLiteral 0xa144088 <col:37> 'int' 10)
                    (DeclRefExpr 0xa1440a0 <col:41> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT'))")
              (IfStmt 0xa1450f8 <line:305:3, line:341:5>
                <<<NULL>>>
                (DeclRefExpr 0xa1440f0 <line:305:7> 'const char_type *' lvalue Var 0xa143fc0 '__q' 'const char_type *')
                (CompoundStmt 0xa1442e0 <line:306:5, line:310:5>
                  (CompoundAssignOperator 0xa144250 <line:307:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa144108 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')
                    (CXXOperatorCallExpr 0xa144228 <col:17, col:40> '<dependent type>'
                      (UnresolvedLookupExpr 0xa1441e0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
                      (CharacterLiteral 0xa144120 <col:17> 'char'48)
                      (ParenExpr 0xa1441c8 <col:23, col:40> '<dependent type>'
                        (CXXOperatorCallExpr 0xa1441a0 <col:24, col:30> '<dependent type>'
                          (UnresolvedLookupExpr 0xa144168 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                          (DeclRefExpr 0xa144134 <col:24> 'const char_type *' lvalue Var 0xa143fc0 '__q' 'const char_type *')
                          (DeclRefExpr 0xa14414c <col:30> 'const char_type *' lvalue Var 0xa1424d0 '__lit_zero' 'const char_type *')))))
                  (BinaryOperator 0xa144298 <line:308:7, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa144270 <col:7> '_Bool' lvalue Var 0xa141a60 '__found_mantissa' '_Bool')
                    (CXXBoolLiteralExpr 0xa144288 <col:26> '_Bool' true))
                  (UnaryOperator 0xa1442c8 <line:309:7, col:9> 'int' lvalue prefix '++'
                    (DeclRefExpr 0xa1442b0 <col:9> 'int' lvalue Var 0xa141ad0 '__sep_pos' 'int')))
                (IfStmt 0xa1450d8 <line:311:8, line:341:5>
                  <<<NULL>>>
                  (BinaryOperator 0xa1445c0 <line:311:12, line:313:24> '<dependent type>' '&&'
                    (BinaryOperator 0xa144590 <line:311:12, line:313:9> '<dependent type>' '&&'
                      (ParenExpr 0xa144538 <line:311:12, line:312:40> '<dependent type>'
                        (BinaryOperator 0xa144520 <line:311:13, line:312:39> '<dependent type>' '||'
                          (CXXOperatorCallExpr 0xa1443e8 <line:311:13, col:43> '<dependent type>'
                            (UnresolvedLookupExpr 0xa144388 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                            (DeclRefExpr 0xa1442fc <col:13> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0xa144370 <col:20, col:43> '<dependent type>' lvalue
                              (DeclRefExpr 0xa144314 <col:20> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
                              (DeclRefExpr 0xa14434c <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c420 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                          (CXXOperatorCallExpr 0xa1444f8 <line:312:9, col:39> '<dependent type>'
                            (UnresolvedLookupExpr 0xa144498 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                            (DeclRefExpr 0xa14440c <col:9> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0xa144480 <col:16, col:39> '<dependent type>' lvalue
                              (DeclRefExpr 0xa144424 <col:16> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
                              (DeclRefExpr 0xa14445c <col:22, col:34> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c4a0 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                      (UnaryOperator 0xa144578 <line:313:8, col:9> '_Bool' prefix '!'
                        (ImplicitCastExpr 0xa144568 <col:9> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0xa14454c <col:9> '_Bool' lvalue Var 0xa1422f0 '__found_sci' '_Bool'))))
                    (DeclRefExpr 0xa1445a8 <col:24> '_Bool' lvalue Var 0xa141a60 '__found_mantissa' '_Bool'))
                  (CompoundStmt 0xa1450b0 <line:314:5, line:339:5>
                    (IfStmt 0xa144768 <line:316:7, line:317:56>
                      <<<NULL>>>
                      (BinaryOperator 0xa144690 <line:316:11, col:39> '_Bool' '&&'
                        (ImplicitCastExpr 0xa144680 <col:11, col:33> '_Bool' <IntegralToBoolean>
                          (CXXMemberCallExpr 0xa144610 <col:11, col:33> 'size_type':'unsigned int'
                            (MemberExpr 0xa1445f0 <col:11, col:28> '<bound member function type>' .size 0xa018710
                              (ImplicitCastExpr 0xa144630 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                                (DeclRefExpr 0xa1445d8 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa142350 '__found_grouping' 'string':'class std::basic_string<char>')))))
                        (UnaryOperator 0xa144668 <col:38, col:39> '_Bool' prefix '!'
                          (ImplicitCastExpr 0xa144658 <col:39> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0xa14463c <col:39> '_Bool' lvalue Var 0xa142290 '__found_dec' '_Bool'))))
                      (CXXOperatorCallExpr 0xa144740 <line:317:9, col:56> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0xa144730 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa144718 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0xa1446a8 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa142350 '__found_grouping' 'string':'class std::basic_string<char>')
                        (CXXStaticCastExpr 0xa144700 <col:29, col:56> 'char' static_cast<char> <NoOp>
                          (ImplicitCastExpr 0xa1446f0 <col:47> 'char' <IntegralCast>
                            (ImplicitCastExpr 0xa1446e0 <col:47> 'int' <LValueToRValue>
                              (DeclRefExpr 0xa1446c0 <col:47> 'int' lvalue Var 0xa141ad0 '__sep_pos' 'int')))))
                      <<<NULL>>>)
                    (CXXOperatorCallExpr 0xa1447e0 <line:318:7, col:17> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa1447d0 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa1447b8 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa144784 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')
                      (CharacterLiteral 0xa1447a0 <col:17> 'char'101))
                    (BinaryOperator 0xa144830 <line:319:7, col:21> '_Bool' lvalue '='
                      (DeclRefExpr 0xa144804 <col:7> '_Bool' lvalue Var 0xa1422f0 '__found_sci' '_Bool')
                      (CXXBoolLiteralExpr 0xa144820 <col:21> '_Bool' true))
                    (IfStmt 0xa145090 <line:322:7, line:338:9>
                      <<<NULL>>>
                      (CXXOperatorCallExpr 0xa1448e8 <line:322:11, col:22> '<dependent type>'
                        (UnresolvedLookupExpr 0xa144890 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
                        (UnaryOperator 0xa144860 <col:11, col:13> '<dependent type>' prefix '++'
                          (DeclRefExpr 0xa144848 <col:13> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter'))
                        (DeclRefExpr 0xa144874 <col:22> '_InIter' lvalue ParmVar 0xa1407c0 '__end' '_InIter'))
                      (CompoundStmt 0xa145010 <line:323:9, line:333:9>
                        (BinaryOperator 0xa144958 <line:324:4, col:11> '<dependent type>' '='
                          (DeclRefExpr 0xa14490c <col:4> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                          (UnaryOperator 0xa144940 <col:10, col:11> '<dependent type>' prefix '*'
                            (DeclRefExpr 0xa144924 <col:11> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter')))
                        (DeclStmt 0xa144ac8 <line:325:4, col:58>
                          0xa144980 "const bool __plus =
                            (CXXOperatorCallExpr 0xa144aa0 <col:24, col:57> '<dependent type>'
                              (UnresolvedLookupExpr 0xa144a40 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                              (DeclRefExpr 0xa1449b4 <col:24> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                              (ArraySubscriptExpr 0xa144a28 <col:31, col:57> '<dependent type>' lvalue
                                (DeclRefExpr 0xa1449cc <col:31> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
                                (DeclRefExpr 0xa144a04 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c2e0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                        (IfStmt 0xa144ff0 <line:326:4, line:332:6>
                          <<<NULL>>>
                          (BinaryOperator 0xa144ef0 <line:326:8, line:329:42> '<dependent type>' '&&'
                            (BinaryOperator 0xa144db8 <line:326:8, line:328:38> '<dependent type>' '&&'
                              (ParenExpr 0xa144c18 <line:326:8, col:54> '<dependent type>'
                                (BinaryOperator 0xa144c00 <col:9, col:53> '<dependent type>' '||'
                                  (DeclRefExpr 0xa144ad8 <col:9> 'const _Bool' lvalue Var 0xa144980 '__plus' 'const _Bool')
                                  (CXXOperatorCallExpr 0xa144bd8 <col:19, col:53> '<dependent type>'
                                    (UnresolvedLookupExpr 0xa144b78 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                                    (DeclRefExpr 0xa144af0 <col:19> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                                    (ArraySubscriptExpr 0xa144b60 <col:26, col:53> '<dependent type>' lvalue
                                      (DeclRefExpr 0xa144b08 <col:26> 'const _CharT *' lvalue Var 0xa140ed0 '__lit' 'const _CharT *')
                                      (DeclRefExpr 0xa144b3c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c2a0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                              (UnaryOperator 0xa144da0 <line:327:11, line:328:38> '<dependent type>' prefix '!'
                                (ParenExpr 0xa144d88 <line:327:12, line:328:38> '<dependent type>'
                                  (BinaryOperator 0xa144d70 <line:327:13, line:328:22> '<dependent type>' '&&'
                                    (CXXDependentScopeMemberExpr 0xa144c48 <line:327:13, col:19> '<dependent type>' lvalue
                                      (DeclRefExpr 0xa144c2c <col:13> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))
                                    (CXXOperatorCallExpr 0xa144d48 <line:328:9, col:22> '<dependent type>'
                                      (UnresolvedLookupExpr 0xa144ce8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                                      (DeclRefExpr 0xa144c7c <col:9> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                                      (CXXDependentScopeMemberExpr 0xa144cb0 <col:16, col:22> '<dependent type>' lvalue
                                        (DeclRefExpr 0xa144c94 <col:16> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *')))))))
                            (UnaryOperator 0xa144ed8 <line:329:11, col:42> '<dependent type>' prefix '!'
                              (ParenExpr 0xa144ec0 <col:12, col:42> '<dependent type>'
                                (CXXOperatorCallExpr 0xa144e98 <col:13, col:26> '<dependent type>'
                                  (UnresolvedLookupExpr 0xa144e38 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                                  (DeclRefExpr 0xa144dd0 <col:13> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
                                  (CXXDependentScopeMemberExpr 0xa144e00 <col:20, col:26> '<dependent type>' lvalue
                                    (DeclRefExpr 0xa144de8 <col:20> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))))))
                          (CXXOperatorCallExpr 0xa144fc0 <line:330:9, col:34> 'class std::basic_string<char>' lvalue
                            (ImplicitCastExpr 0xa144fb0 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                              (DeclRefExpr 0xa144f98 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                            (DeclRefExpr 0xa144f08 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa1408d0 '__xtrc' 'string &')
                            (ConditionalOperator 0xa144f78 <col:19, col:34> 'char'
                              (ImplicitCastExpr 0xa144f68 <col:19> '_Bool' <LValueToRValue>
                                (DeclRefExpr 0xa144f20 <col:19> 'const _Bool' lvalue Var 0xa144980 '__plus' 'const _Bool'))
                              (CharacterLiteral 0xa144f38 <col:28> 'char'43)
                              (CharacterLiteral 0xa144f50 <col:34> 'char'45)))
                          (ContinueStmt 0xa144fe8 <line:332:6>)))
                      (CompoundStmt 0xa145078 <line:335:9, line:338:9>
                        (BinaryOperator 0xa145058 <line:336:4, col:16> '_Bool' lvalue '='
                          (DeclRefExpr 0xa14502c <col:4> '_Bool' lvalue Var 0xa140fe0 '__testeof' '_Bool')
                          (CXXBoolLiteralExpr 0xa145048 <col:16> '_Bool' true))
                        (BreakStmt 0xa145070 <line:337:4>))))
                  (BreakStmt 0xa1450d0 <line:341:5>))))))
        (IfStmt 0xa1452d8 <line:344:6, line:347:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa145210 <line:344:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0xa1451b8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
            (UnaryOperator 0xa145188 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa14516c <col:12> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter'))
            (DeclRefExpr 0xa14519c <col:21> '_InIter' lvalue ParmVar 0xa1407c0 '__end' '_InIter'))
          (BinaryOperator 0xa145280 <line:345:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0xa145234 <col:8> 'char_type':'_CharT' lvalue Var 0xa140f70 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa145268 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa14524c <col:15> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter')))
          (BinaryOperator 0xa1452c0 <line:347:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa145298 <col:8> '_Bool' lvalue Var 0xa140fe0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa1452b0 <col:20> '_Bool' true))))))
  (IfStmt 0xa145728 <line:352:7, line:362:9>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1453b0 <line:352:11, col:33> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0xa145380 <col:11, col:33> 'size_type':'unsigned int'
        (MemberExpr 0xa14535c <col:11, col:28> '<bound member function type>' .size 0xa018710
          (ImplicitCastExpr 0xa1453a0 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0xa145344 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa142350 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0xa145710 <line:353:9, line:362:9>
      (IfStmt 0xa145518 <line:355:4, line:356:53>
        <<<NULL>>>
        (BinaryOperator 0xa145440 <line:355:8, col:25> '_Bool' '&&'
          (UnaryOperator 0xa1453e8 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa1453d8 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa1453bc <col:9> '_Bool' lvalue Var 0xa142290 '__found_dec' '_Bool')))
          (UnaryOperator 0xa145428 <col:24, col:25> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa145418 <col:25> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa1453fc <col:25> '_Bool' lvalue Var 0xa1422f0 '__found_sci' '_Bool'))))
        (CXXOperatorCallExpr 0xa1454f0 <line:356:6, col:53> 'class std::basic_string<char>' lvalue
          (ImplicitCastExpr 0xa1454e0 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1454c8 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
          (DeclRefExpr 0xa145458 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa142350 '__found_grouping' 'string':'class std::basic_string<char>')
          (CXXStaticCastExpr 0xa1454b0 <col:26, col:53> 'char' static_cast<char> <NoOp>
            (ImplicitCastExpr 0xa1454a0 <col:44> 'char' <IntegralCast>
              (ImplicitCastExpr 0xa145490 <col:44> 'int' <LValueToRValue>
                (DeclRefExpr 0xa145470 <col:44> 'int' lvalue Var 0xa141ad0 '__sep_pos' 'int')))))
        <<<NULL>>>)
      (IfStmt 0xa1456f0 <line:358:11, line:361:24>
        <<<NULL>>>
        (UnaryOperator 0xa145658 <line:358:15, line:360:27> '<dependent type>' prefix '!'
          (CallExpr 0xa145630 <line:358:16, line:360:27> '<dependent type>'
            (DeclRefExpr 0xa145558 <line:358:16, col:21> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0xa140430 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0xa145590 <col:39, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0xa145578 <col:39> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa1455e0 <line:359:11, col:17> '<dependent type>' lvalue
              (DeclRefExpr 0xa1455c4 <col:11> 'const __cache_type *' lvalue Var 0xa140e00 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0xa145614 <line:360:11> 'string':'class std::basic_string<char>' lvalue Var 0xa142350 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0xa1456d8 <line:361:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa14566c <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa140880 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa1456c8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1456a4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa145760 <line:364:7, col:14>
    (DeclRefExpr 0xa145744 <col:14> '_InIter' lvalue ParmVar 0xa140780 '__beg' '_InIter')))


    template <typename _ValueT> _InIter _M_extract_int(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, _ValueT &__v) const (CompoundStmt 0xa14afd8 </usr/include/c++/4.6/bits/locale_facets.tcc:373:7, line:584:7>
  (DeclStmt 0xa145ee0 <line:374:9, col:57>
    0xa145eb0 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0xa145f68 <line:375:2, col:33>
    0xa145f00 "Using__gnu_cxx::;")
  (DeclStmt 0xa1460f0 <line:376:2, col:66>
    0xa1460c0 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0xa1461e0 <line:377:2, col:67>
    0xa1461b0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa1462e8 <line:378:2, col:32>
    0xa1462b0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa1463b0 <line:379:2, col:40>
    0xa146310 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa146380 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa14635c <col:24, col:29> '<bound member function type>' ._M_getloc 0xa0a5fd0
          (ImplicitCastExpr 0xa1463a0 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa146344 <col:24> 'class std::ios_base' lvalue ParmVar 0xa145b60 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa146478 <line:380:2, col:40>
    0xa1463f0 "const __cache_type *__lc =
      (CallExpr 0xa146458 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa146424 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa1462b0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa14643c <col:34> 'const class std::locale' lvalue Var 0xa146310 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa146558 <line:381:2, col:41>
    0xa1464d0 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa146520 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0xa146504 <col:24> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa1465c8 <line:382:2, col:29>
    0xa146570 "char_type __c =
      (CXXUnresolvedConstructExpr 0xa1465b0 <col:18, col:28> 'char_type':'_CharT')")
  (DeclStmt 0xa1467b0 <line:385:2, line:386:62>
    0xa146630 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0xa146788 <line:385:41, line:386:53> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa146778 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa146760 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0xa1466e0 <line:385:41, col:52> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0xa1466bc <col:41, col:46> '<bound member function type>' .flags 0xa0a55d0
            (ImplicitCastExpr 0xa146700 <col:41> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa146664 <col:41> 'class std::ios_base' lvalue ParmVar 0xa145b60 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0xa146750 <line:386:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa14672c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3460 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0xa146920 <line:387:2, col:49>
    0xa1467d0 "const bool __oct =
      (BinaryOperator 0xa1468a0 <col:21, col:46> '_Bool' '=='
        (ImplicitCastExpr 0xa146880 <col:21> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa146860 <col:21> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa146804 <col:21> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa146630 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa146890 <col:36, col:46> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa146870 <col:36, col:46> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa14683c <col:36, col:46> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a30a0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
  (DeclStmt 0xa146b20 <line:388:2, col:67>
    0xa146940 "int __base =
      (ConditionalOperator 0xa146ad0 <col:15, col:66> 'int'
        (ImplicitCastExpr 0xa146ac0 <col:15> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa146974 <col:15> 'const _Bool' lvalue Var 0xa1467d0 '__oct' 'const _Bool'))
        (IntegerLiteral 0xa146990 <col:23> 'int' 8)
        (ParenExpr 0xa146aa8 <col:27, col:66> 'int'
          (ConditionalOperator 0xa146a88 <col:28, col:64> 'int'
            (BinaryOperator 0xa146a40 <col:28, col:53> '_Bool' '=='
              (ImplicitCastExpr 0xa146a20 <col:28> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa146a00 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa1469a8 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa146630 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
              (ImplicitCastExpr 0xa146a30 <col:43, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa146a10 <col:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa1469dc <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2f80 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (IntegerLiteral 0xa146a58 <col:59> 'int' 16)
            (IntegerLiteral 0xa146a70 <col:64> 'int' 10))))")
  (DeclStmt 0xa146c30 <line:391:2, col:33>
    0xa146b40 "bool __testeof =
      (CXXOperatorCallExpr 0xa146c08 <col:19, col:28> '<dependent type>'
        (UnresolvedLookupExpr 0xa146ba8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
        (DeclRefExpr 0xa146b74 <col:19> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter')
        (DeclRefExpr 0xa146b8c <col:28> '_InIter' lvalue ParmVar 0xa145b10 '__end' '_InIter'))")
  (DeclStmt 0xa146c98 <line:394:2, col:25>
    0xa146c50 "bool __negative =
      (CXXBoolLiteralExpr 0xa146c88 <col:20> '_Bool' false)")
  (IfStmt 0xa147498 <line:395:2, line:408:4>
    <<<NULL>>>
    (UnaryOperator 0xa146cd0 <line:395:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa146cc0 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa146ca8 <col:7> '_Bool' lvalue Var 0xa146b40 '__testeof' '_Bool')))
    (CompoundStmt 0xa147478 <line:396:4, line:408:4>
      (BinaryOperator 0xa146d30 <line:397:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa146ce4 <col:6> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
        (UnaryOperator 0xa146d18 <col:12, col:13> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa146cfc <col:13> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter')))
      (BinaryOperator 0xa146e70 <line:398:6, col:53> '<dependent type>' '='
        (DeclRefExpr 0xa146d48 <col:6> '_Bool' lvalue Var 0xa146c50 '__negative' '_Bool')
        (CXXOperatorCallExpr 0xa146e48 <col:19, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa146de8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
          (DeclRefExpr 0xa146d60 <col:19> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
          (ArraySubscriptExpr 0xa146dd0 <col:26, col:53> '<dependent type>' lvalue
            (DeclRefExpr 0xa146d78 <col:26> 'const _CharT *' lvalue Var 0xa1464d0 '__lit' 'const _CharT *')
            (DeclRefExpr 0xa146dac <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c2a0 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
      (IfStmt 0xa147458 <line:399:6, line:407:8>
        <<<NULL>>>
        (BinaryOperator 0xa1472a0 <line:399:10, line:401:37> '<dependent type>' '&&'
          (BinaryOperator 0xa147168 <line:399:10, line:400:62> '<dependent type>' '&&'
            (ParenExpr 0xa146fc8 <line:399:10, col:59> '<dependent type>'
              (BinaryOperator 0xa146fb0 <col:11, col:58> '<dependent type>' '||'
                (DeclRefExpr 0xa146e88 <col:11> '_Bool' lvalue Var 0xa146c50 '__negative' '_Bool')
                (CXXOperatorCallExpr 0xa146f88 <col:25, col:58> '<dependent type>'
                  (UnresolvedLookupExpr 0xa146f28 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                  (DeclRefExpr 0xa146ea0 <col:25> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0xa146f10 <col:32, col:58> '<dependent type>' lvalue
                    (DeclRefExpr 0xa146eb8 <col:32> 'const _CharT *' lvalue Var 0xa1464d0 '__lit' 'const _CharT *')
                    (DeclRefExpr 0xa146eec <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c2e0 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0xa147150 <line:400:6, col:62> '<dependent type>' prefix '!'
              (ParenExpr 0xa147138 <col:7, col:62> '<dependent type>'
                (BinaryOperator 0xa147120 <col:8, col:46> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0xa146ff8 <col:8, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0xa146fdc <col:8> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0xa1470f8 <col:33, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0xa147098 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                    (DeclRefExpr 0xa14702c <col:33> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0xa147060 <col:40, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0xa147044 <col:40> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0xa147288 <line:401:6, col:37> '<dependent type>' prefix '!'
            (ParenExpr 0xa147270 <col:7, col:37> '<dependent type>'
              (CXXOperatorCallExpr 0xa147248 <col:8, col:21> '<dependent type>'
                (UnresolvedLookupExpr 0xa1471e8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                (DeclRefExpr 0xa147180 <col:8> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa1471b0 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa147198 <col:15> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0xa147440 <line:402:8, line:407:8>
          (IfStmt 0xa147420 <line:403:3, line:406:17>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa147358 <line:403:7, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0xa147300 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
              (UnaryOperator 0xa1472d0 <col:7, col:9> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa1472b8 <col:9> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter'))
              (DeclRefExpr 0xa1472e4 <col:18> '_InIter' lvalue ParmVar 0xa145b10 '__end' '_InIter'))
            (BinaryOperator 0xa1473c8 <line:404:5, col:12> '<dependent type>' '='
              (DeclRefExpr 0xa14737c <col:5> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
              (UnaryOperator 0xa1473b0 <col:11, col:12> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa147394 <col:12> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter')))
            (BinaryOperator 0xa147408 <line:406:5, col:17> '_Bool' lvalue '='
              (DeclRefExpr 0xa1473e0 <col:5> '_Bool' lvalue Var 0xa146b40 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0xa1473f8 <col:17> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0xa147508 <line:412:2, col:27>
    0xa1474c0 "bool __found_zero =
      (CXXBoolLiteralExpr 0xa1474f8 <col:22> '_Bool' false)")
  (DeclStmt 0xa147580 <line:413:2, col:19>
    0xa147530 "int __sep_pos =
      (IntegerLiteral 0xa147568 <col:18> 'int' 0)")
  (WhileStmt 0xa148370 <line:414:2, line:454:4>
    <<<NULL>>>
    (UnaryOperator 0xa1475b8 <line:414:9, col:10> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa1475a8 <col:10> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa147590 <col:10> '_Bool' lvalue Var 0xa146b40 '__testeof' '_Bool')))
    (CompoundStmt 0xa148358 <line:415:4, line:454:4>
      (IfStmt 0xa148130 <line:416:6, line:444:8>
        <<<NULL>>>
        (BinaryOperator 0xa147830 <line:416:10, line:417:19> '<dependent type>' '||'
          (ParenExpr 0xa147728 <line:416:10, col:65> '<dependent type>'
            (BinaryOperator 0xa147710 <col:11, col:49> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0xa1475e8 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0xa1475cc <col:11> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0xa1476e8 <col:36, col:49> '<dependent type>'
                (UnresolvedLookupExpr 0xa147688 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                (DeclRefExpr 0xa14761c <col:36> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa147650 <col:43, col:49> '<dependent type>' lvalue
                  (DeclRefExpr 0xa147634 <col:43> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0xa147808 <line:417:6, col:19> '<dependent type>'
            (UnresolvedLookupExpr 0xa1477a8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
            (DeclRefExpr 0xa14773c <col:6> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0xa147770 <col:13, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa147754 <col:13> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *'))))
        (BreakStmt 0xa147848 <line:418:8>)
        (IfStmt 0xa148110 <line:419:11, line:444:8>
          <<<NULL>>>
          (BinaryOperator 0xa147a28 <line:419:15, line:420:41> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0xa147938 <line:419:15, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0xa1478d8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
              (DeclRefExpr 0xa147850 <col:15> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
              (ArraySubscriptExpr 0xa1478c0 <col:22, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0xa147868 <col:22> 'const _CharT *' lvalue Var 0xa1464d0 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa14789c <col:28, col:40> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c3a0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ParenExpr 0xa147a10 <line:420:11, col:41> '_Bool'
              (BinaryOperator 0xa1479f8 <col:12, col:39> '_Bool' '||'
                (UnaryOperator 0xa147988 <col:12, col:13> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa147978 <col:13> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa14795c <col:13> '_Bool' lvalue Var 0xa1474c0 '__found_zero' '_Bool')))
                (BinaryOperator 0xa1479e0 <col:29, col:39> '_Bool' '=='
                  (ImplicitCastExpr 0xa1479d0 <col:29> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa14799c <col:29> 'int' lvalue Var 0xa146940 '__base' 'int'))
                  (IntegerLiteral 0xa1479b8 <col:39> 'int' 10)))))
          (CompoundStmt 0xa147c40 <line:421:8, line:428:8>
            (BinaryOperator 0xa147a68 <line:422:3, col:18> '_Bool' lvalue '='
              (DeclRefExpr 0xa147a40 <col:3> '_Bool' lvalue Var 0xa1474c0 '__found_zero' '_Bool')
              (CXXBoolLiteralExpr 0xa147a58 <col:18> '_Bool' true))
            (UnaryOperator 0xa147a98 <line:423:3, col:5> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa147a80 <col:5> 'int' lvalue Var 0xa147530 '__sep_pos' 'int'))
            (IfStmt 0xa147b60 <line:424:3, line:425:14>
              <<<NULL>>>
              (BinaryOperator 0xa147b00 <line:424:7, col:22> '_Bool' '=='
                (ImplicitCastExpr 0xa147af0 <col:7> 'int' <IntegralCast>
                  (ImplicitCastExpr 0xa147ae0 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                    (DeclRefExpr 0xa147aac <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa146630 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                (IntegerLiteral 0xa147ac8 <col:22> 'int' 0))
              (BinaryOperator 0xa147b48 <line:425:5, col:14> 'int' lvalue '='
                (DeclRefExpr 0xa147b18 <col:5> 'int' lvalue Var 0xa146940 '__base' 'int')
                (IntegerLiteral 0xa147b30 <col:14> 'int' 8))
              <<<NULL>>>)
            (IfStmt 0xa147c20 <line:426:3, line:427:17>
              <<<NULL>>>
              (BinaryOperator 0xa147bc0 <line:426:7, col:17> '_Bool' '=='
                (ImplicitCastExpr 0xa147bb0 <col:7> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa147b7c <col:7> 'int' lvalue Var 0xa146940 '__base' 'int'))
                (IntegerLiteral 0xa147b98 <col:17> 'int' 8))
              (BinaryOperator 0xa147c08 <line:427:5, col:17> 'int' lvalue '='
                (DeclRefExpr 0xa147bd8 <col:5> 'int' lvalue Var 0xa147530 '__sep_pos' 'int')
                (IntegerLiteral 0xa147bf0 <col:17> 'int' 0))
              <<<NULL>>>))
          (IfStmt 0xa1480f0 <line:429:11, line:444:8>
            <<<NULL>>>
            (BinaryOperator 0xa147ec8 <line:429:15, line:431:39> '<dependent type>' '&&'
              (DeclRefExpr 0xa147c60 <line:429:15> '_Bool' lvalue Var 0xa1474c0 '__found_zero' '_Bool')
              (ParenExpr 0xa147eb0 <line:430:11, line:431:39> '<dependent type>'
                (BinaryOperator 0xa147e98 <line:430:12, line:431:38> '<dependent type>' '||'
                  (CXXOperatorCallExpr 0xa147d60 <line:430:12, col:42> '<dependent type>'
                    (UnresolvedLookupExpr 0xa147d00 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                    (DeclRefExpr 0xa147c78 <col:12> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0xa147ce8 <col:19, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0xa147c90 <col:19> 'const _CharT *' lvalue Var 0xa1464d0 '__lit' 'const _CharT *')
                      (DeclRefExpr 0xa147cc4 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c320 '_S_ix' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                  (CXXOperatorCallExpr 0xa147e70 <line:431:8, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0xa147e10 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                    (DeclRefExpr 0xa147d84 <col:8> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0xa147df8 <col:15, col:38> '<dependent type>' lvalue
                      (DeclRefExpr 0xa147d9c <col:15> 'const _CharT *' lvalue Var 0xa1464d0 '__lit' 'const _CharT *')
                      (DeclRefExpr 0xa147dd4 <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c360 '_S_iX' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))))
            (CompoundStmt 0xa1480d0 <line:432:8, line:442:8>
              (IfStmt 0xa147f90 <line:433:3, line:434:14>
                <<<NULL>>>
                (BinaryOperator 0xa147f30 <line:433:7, col:22> '_Bool' '=='
                  (ImplicitCastExpr 0xa147f20 <col:7> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa147f10 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa147ee0 <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa146630 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                  (IntegerLiteral 0xa147ef8 <col:22> 'int' 0))
                (BinaryOperator 0xa147f78 <line:434:5, col:14> 'int' lvalue '='
                  (DeclRefExpr 0xa147f48 <col:5> 'int' lvalue Var 0xa146940 '__base' 'int')
                  (IntegerLiteral 0xa147f60 <col:14> 'int' 16))
                <<<NULL>>>)
              (IfStmt 0xa1480b0 <line:435:3, line:441:5>
                <<<NULL>>>
                (BinaryOperator 0xa147ff0 <line:435:7, col:17> '_Bool' '=='
                  (ImplicitCastExpr 0xa147fe0 <col:7> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa147fac <col:7> 'int' lvalue Var 0xa146940 '__base' 'int'))
                  (IntegerLiteral 0xa147fc8 <col:17> 'int' 16))
                (CompoundStmt 0xa148090 <line:436:5, line:439:5>
                  (BinaryOperator 0xa148030 <line:437:7, col:22> '_Bool' lvalue '='
                    (DeclRefExpr 0xa148008 <col:7> '_Bool' lvalue Var 0xa1474c0 '__found_zero' '_Bool')
                    (CXXBoolLiteralExpr 0xa148020 <col:22> '_Bool' false))
                  (BinaryOperator 0xa148078 <line:438:7, col:19> 'int' lvalue '='
                    (DeclRefExpr 0xa148048 <col:7> 'int' lvalue Var 0xa147530 '__sep_pos' 'int')
                    (IntegerLiteral 0xa148060 <col:19> 'int' 0)))
                (BreakStmt 0xa1480a8 <line:441:5>)))
            (BreakStmt 0xa1480e8 <line:444:8>))))
      (IfStmt 0xa148338 <line:446:6, line:453:20>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1481f0 <line:446:10, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa148198 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
          (UnaryOperator 0xa148168 <col:10, col:12> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa14814c <col:12> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter'))
          (DeclRefExpr 0xa14817c <col:21> '_InIter' lvalue ParmVar 0xa145b10 '__end' '_InIter'))
        (CompoundStmt 0xa1482e0 <line:447:8, line:451:8>
          (BinaryOperator 0xa148260 <line:448:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa148214 <col:3> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa148248 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa14822c <col:10> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter')))
          (IfStmt 0xa1482c0 <line:449:3, line:450:5>
            <<<NULL>>>
            (UnaryOperator 0xa1482a0 <line:449:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa148290 <col:8> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa148278 <col:8> '_Bool' lvalue Var 0xa1474c0 '__found_zero' '_Bool')))
            (BreakStmt 0xa1482b8 <line:450:5>)
            <<<NULL>>>))
        (BinaryOperator 0xa148320 <line:453:8, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0xa1482f8 <col:8> '_Bool' lvalue Var 0xa146b40 '__testeof' '_Bool')
          (CXXBoolLiteralExpr 0xa148310 <col:20> '_Bool' true)))))
  (DeclStmt 0xa148548 <line:458:2, line:459:42>
    0xa148390 "const size_t __len =
      (ImplicitCastExpr 0xa148538 <line:458:23, line:459:41> 'const size_t':'const unsigned int' <IntegralCast>
        (ParenExpr 0xa148520 <line:458:23, line:459:41> 'int'
          (ConditionalOperator 0xa148500 <line:458:24, line:459:35> 'int'
            (BinaryOperator 0xa148408 <line:458:24, col:34> '_Bool' '=='
              (ImplicitCastExpr 0xa1483f8 <col:24> 'int' <LValueToRValue>
                (DeclRefExpr 0xa1483c4 <col:24> 'int' lvalue Var 0xa146940 '__base' 'int'))
              (IntegerLiteral 0xa1483e0 <col:34> 'int' 16))
            (BinaryOperator 0xa1484c0 <col:39, line:459:24> 'int' '-'
              (ImplicitCastExpr 0xa1484a0 <line:458:39, col:51> 'int' <IntegralCast>
                (DeclRefExpr 0xa14843c <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c4f0 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))
              (ImplicitCastExpr 0xa1484b0 <line:459:12, col:24> 'int' <IntegralCast>
                (DeclRefExpr 0xa14847c <col:12, col:24> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c3a0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ImplicitCastExpr 0xa1484f0 <col:35> 'int' <LValueToRValue>
              (DeclRefExpr 0xa1484d8 <col:35> 'int' lvalue Var 0xa146940 '__base' 'int')))))")
  (DeclStmt 0xa1485b8 <line:462:2, col:25>
    0xa148560 "string __found_grouping =
      (CXXConstructExpr 0xa148598 <col:9> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0xa148698 <line:463:2, line:464:31>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa1485e0 <line:463:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa1485c8 <col:6> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0xa148668 <line:464:4, col:31> 'void'
      (MemberExpr 0xa14862c <col:4, col:21> '<bound member function type>' .reserve 0xa019250
        (DeclRefExpr 0xa148614 <col:4> 'string':'class std::basic_string<char>' lvalue Var 0xa148560 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0xa148688 <col:29> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa148650 <col:29> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0xa148708 <line:465:2, col:25>
    0xa1486c0 "bool __testfail =
      (CXXBoolLiteralExpr 0xa1486f8 <col:20> '_Bool' false)")
  (DeclStmt 0xa148768 <line:466:2, col:29>
    0xa148720 "bool __testoverflow =
      (CXXBoolLiteralExpr 0xa148758 <col:24> '_Bool' false)")
  (DeclStmt 0xa148ba8 <line:467:2, line:470:49>
    0xa1487a0 "const __unsigned_type __max =
      (ConditionalOperator 0xa148b88 <line:468:4, line:470:44> '<dependent type>'
        (ParenExpr 0xa148930 <line:468:4, col:68> '<dependent type>'
          (BinaryOperator 0xa148918 <col:5, col:57> '<dependent type>' '&&'
            (DeclRefExpr 0xa1487d4 <col:5> '_Bool' lvalue Var 0xa146c50 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0xa1488e0 <col:19, col:57> '<dependent type>' lvalue)))
        (CXXOperatorCallExpr 0xa148a70 <line:469:6, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa148a38 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (CXXDependentScopeMemberExpr 0xa148a00 <col:7, col:45> '<dependent type>' lvalue))
        (CXXDependentScopeMemberExpr 0xa148b50 <line:470:6, col:44> '<dependent type>' lvalue))")
  (DeclStmt 0xa148c40 <line:471:2, col:47>
    0xa148bc0 "const __unsigned_type __smax =
      (BinaryOperator 0xa148c28 <col:33, col:41> '<dependent type>' '/'
        (DeclRefExpr 0xa148bf4 <col:33> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa1487a0 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0xa148c0c <col:41> 'int' lvalue Var 0xa146940 '__base' 'int'))")
  (DeclStmt 0xa148cb0 <line:472:2, col:30>
    0xa148c60 "__unsigned_type __result =
      (IntegerLiteral 0xa148c98 <col:29> 'int' 0)")
  (DeclStmt 0xa148d20 <line:473:2, col:17>
    0xa148cd0 "int __digit =
      (IntegerLiteral 0xa148d08 <col:16> 'int' 0)")
  (DeclStmt 0xa148e40 <line:474:2, col:60>
    0xa148d40 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0xa148e18 <col:32, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa148dd0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
        (DeclRefExpr 0xa148d74 <col:32> 'const _CharT *' lvalue Var 0xa1464d0 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa148dac <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa11c3a0 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0xa14a318 <line:476:2, line:546:6>
    <<<NULL>>>
    (UnaryOperator 0xa148ea0 <line:476:6, col:13> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0xa148e68 <col:7, col:13> '<dependent type>' lvalue
        (DeclRefExpr 0xa148e50 <col:7> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *')))
    (WhileStmt 0xa1495b0 <line:478:4, line:498:6>
      <<<NULL>>>
      (UnaryOperator 0xa148ee0 <line:478:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa148ed0 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa148eb4 <col:12> '_Bool' lvalue Var 0xa146b40 '__testeof' '_Bool')))
      (CompoundStmt 0xa149590 <line:479:6, line:498:6>
        (BinaryOperator 0xa148fd0 <line:480:8, col:48> '<dependent type>' '='
          (DeclRefExpr 0xa148ef4 <col:8> 'int' lvalue Var 0xa148cd0 '__digit' 'int')
          (CallExpr 0xa148fa8 <col:18, col:48> '<dependent type>'
            (UnresolvedMemberExpr 0xa148f20 <col:18> '<bound member function type>' lvalue)
            (DeclRefExpr 0xa148f60 <col:26> 'const char_type *' lvalue Var 0xa148d40 '__lit_zero' 'const char_type *')
            (DeclRefExpr 0xa148f78 <col:38> 'const size_t':'const unsigned int' lvalue Var 0xa148390 '__len' 'const size_t':'const unsigned int')
            (DeclRefExpr 0xa148f90 <col:45> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')))
        (IfStmt 0xa149060 <line:481:8, line:482:3>
          <<<NULL>>>
          (BinaryOperator 0xa149040 <line:481:12, col:24> '_Bool' '=='
            (ImplicitCastExpr 0xa149030 <col:12> 'int' <LValueToRValue>
              (DeclRefExpr 0xa148fe8 <col:12> 'int' lvalue Var 0xa148cd0 '__digit' 'int'))
            (UnaryOperator 0xa149018 <col:23, col:24> 'int' prefix '-'
              (IntegerLiteral 0xa149000 <col:24> 'int' 1)))
          (BreakStmt 0xa149058 <line:482:3>)
          <<<NULL>>>)
        (IfStmt 0xa1493e8 <line:484:8, line:492:3>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa1490f8 <line:484:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa1490b0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
            (DeclRefExpr 0xa14907c <col:12> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148c60 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
            (DeclRefExpr 0xa149094 <col:23> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148bc0 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
          (BinaryOperator 0xa149148 <line:485:3, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa14911c <col:3> '_Bool' lvalue Var 0xa148720 '__testoverflow' '_Bool')
            (CXXBoolLiteralExpr 0xa149138 <col:20> '_Bool' true))
          (CompoundStmt 0xa1493c8 <line:487:3, line:492:3>
            (CompoundAssignOperator 0xa149190 <line:488:5, col:17> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa149160 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148c60 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0xa149178 <col:17> 'int' lvalue Var 0xa146940 '__base' 'int'))
            (CXXOperatorCallExpr 0xa149320 <line:489:5, col:42> '<dependent type>'
              (UnresolvedLookupExpr 0xa1492e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f24360 0x9f25b60 0x9f26dd0)
              (DeclRefExpr 0xa1491b0 <col:5> '_Bool' lvalue Var 0xa148720 '__testoverflow' '_Bool')
              (CXXOperatorCallExpr 0xa1492b8 <col:23, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0xa149270 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
                (DeclRefExpr 0xa1491c8 <col:23> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148c60 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                (CXXOperatorCallExpr 0xa149248 <col:34, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa149210 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                  (DeclRefExpr 0xa1491e0 <col:34> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa1487a0 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0xa1491f8 <col:42> 'int' lvalue Var 0xa148cd0 '__digit' 'int'))))
            (CompoundAssignOperator 0xa149378 <line:490:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa149344 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148c60 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0xa14935c <col:17> 'int' lvalue Var 0xa148cd0 '__digit' 'int'))
            (UnaryOperator 0xa1493b0 <line:491:5, col:7> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa149398 <col:7> 'int' lvalue Var 0xa147530 '__sep_pos' 'int'))))
        (IfStmt 0xa149570 <line:494:8, line:497:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa1494a8 <line:494:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa149450 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
            (UnaryOperator 0xa149420 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa149404 <col:14> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter'))
            (DeclRefExpr 0xa149434 <col:23> '_InIter' lvalue ParmVar 0xa145b10 '__end' '_InIter'))
          (BinaryOperator 0xa149518 <line:495:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa1494cc <col:3> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa149500 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa1494e4 <col:10> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter')))
          (BinaryOperator 0xa149558 <line:497:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0xa149530 <col:3> '_Bool' lvalue Var 0xa146b40 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa149548 <col:15> '_Bool' true)))))
    (WhileStmt 0xa14a300 <line:500:4, line:546:6>
      <<<NULL>>>
      (UnaryOperator 0xa1495f0 <line:500:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa1495e0 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa1495c4 <col:12> '_Bool' lvalue Var 0xa146b40 '__testeof' '_Bool')))
      (CompoundStmt 0xa14a2e8 <line:501:6, line:546:6>
        (IfStmt 0xa14a140 <line:504:8, line:540:3>
          <<<NULL>>>
          (BinaryOperator 0xa149748 <line:504:12, col:50> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0xa149620 <col:12, col:18> '<dependent type>' lvalue
              (DeclRefExpr 0xa149604 <col:12> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0xa149720 <col:37, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0xa1496c0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
              (DeclRefExpr 0xa149654 <col:37> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa149688 <col:44, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0xa14966c <col:44> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0xa149938 <line:505:3, line:518:3>
            (IfStmt 0xa149918 <line:508:5, line:517:7>
              <<<NULL>>>
              (ImplicitCastExpr 0xa149788 <line:508:9> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa149778 <col:9> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa149760 <col:9> 'int' lvalue Var 0xa147530 '__sep_pos' 'int')))
              (CompoundStmt 0xa1498a0 <line:509:7, line:512:7>
                (CXXOperatorCallExpr 0xa149830 <line:510:9, col:56> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa149820 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa149808 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa149794 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa148560 '__found_grouping' 'string':'class std::basic_string<char>')
                  (CXXStaticCastExpr 0xa1497f0 <col:29, col:56> 'char' static_cast<char> <NoOp>
                    (ImplicitCastExpr 0xa1497e0 <col:47> 'char' <IntegralCast>
                      (ImplicitCastExpr 0xa1497d0 <col:47> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa1497ac <col:47> 'int' lvalue Var 0xa147530 '__sep_pos' 'int')))))
                (BinaryOperator 0xa149888 <line:511:9, col:21> 'int' lvalue '='
                  (DeclRefExpr 0xa149854 <col:9> 'int' lvalue Var 0xa147530 '__sep_pos' 'int')
                  (IntegerLiteral 0xa149870 <col:21> 'int' 0)))
              (CompoundStmt 0xa149900 <line:514:7, line:517:7>
                (BinaryOperator 0xa1498e0 <line:515:9, col:22> '_Bool' lvalue '='
                  (DeclRefExpr 0xa1498b8 <col:9> '_Bool' lvalue Var 0xa1486c0 '__testfail' '_Bool')
                  (CXXBoolLiteralExpr 0xa1498d0 <col:22> '_Bool' true))
                (BreakStmt 0xa1498f8 <line:516:9>))))
          (IfStmt 0xa14a120 <line:519:13, line:540:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa149a18 <line:519:17, col:30> '<dependent type>'
              (UnresolvedLookupExpr 0xa1499b8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
              (DeclRefExpr 0xa14994c <col:17> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa149980 <col:24, col:30> '<dependent type>' lvalue
                (DeclRefExpr 0xa149964 <col:24> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *')))
            (BreakStmt 0xa149a40 <line:520:3>)
            (CompoundStmt 0xa14a0f8 <line:522:3, line:540:3>
              (DeclStmt 0xa149b80 <line:523:5, line:524:50>
                0xa149a60 "const char_type *__q =
                  (CallExpr 0xa149b58 <col:7, col:49> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa149ad8 <col:7, col:22> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa149b0c <col:27> 'const char_type *' lvalue Var 0xa148d40 '__lit_zero' 'const char_type *')
                    (DeclRefExpr 0xa149b24 <col:39> 'const size_t':'const unsigned int' lvalue Var 0xa148390 '__len' 'const size_t':'const unsigned int')
                    (DeclRefExpr 0xa149b3c <col:46> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT'))")
              (IfStmt 0xa149bc8 <line:525:5, line:526:7>
                <<<NULL>>>
                (UnaryOperator 0xa149ba8 <line:525:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0xa149b90 <col:10> 'const char_type *' lvalue Var 0xa149a60 '__q' 'const char_type *'))
                (BreakStmt 0xa149bc0 <line:526:7>)
                <<<NULL>>>)
              (BinaryOperator 0xa149c90 <line:528:5, col:21> '<dependent type>' '='
                (DeclRefExpr 0xa149be4 <col:5> 'int' lvalue Var 0xa148cd0 '__digit' 'int')
                (CXXOperatorCallExpr 0xa149c68 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0xa149c30 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                  (DeclRefExpr 0xa149bfc <col:15> 'const char_type *' lvalue Var 0xa149a60 '__q' 'const char_type *')
                  (DeclRefExpr 0xa149c14 <col:21> 'const char_type *' lvalue Var 0xa148d40 '__lit_zero' 'const char_type *')))
              (IfStmt 0xa149d50 <line:529:5, line:530:18>
                <<<NULL>>>
                (BinaryOperator 0xa149ce8 <line:529:9, col:19> '_Bool' '>'
                  (ImplicitCastExpr 0xa149cd8 <col:9> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa149ca8 <col:9> 'int' lvalue Var 0xa148cd0 '__digit' 'int'))
                  (IntegerLiteral 0xa149cc0 <col:19> 'int' 15))
                (CompoundAssignOperator 0xa149d30 <line:530:7, col:18> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
                  (DeclRefExpr 0xa149d00 <col:7> 'int' lvalue Var 0xa148cd0 '__digit' 'int')
                  (IntegerLiteral 0xa149d18 <col:18> 'int' 6))
                <<<NULL>>>)
              (IfStmt 0xa14a0d8 <line:531:5, line:539:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa149de8 <line:531:9, col:20> '<dependent type>'
                  (UnresolvedLookupExpr 0xa149da0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
                  (DeclRefExpr 0xa149d6c <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148c60 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0xa149d84 <col:20> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148bc0 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
                (BinaryOperator 0xa149e38 <line:532:7, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0xa149e0c <col:7> '_Bool' lvalue Var 0xa148720 '__testoverflow' '_Bool')
                  (CXXBoolLiteralExpr 0xa149e28 <col:24> '_Bool' true))
                (CompoundStmt 0xa14a0b8 <line:534:7, line:539:7>
                  (CompoundAssignOperator 0xa149e80 <line:535:9, col:21> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa149e50 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148c60 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0xa149e68 <col:21> 'int' lvalue Var 0xa146940 '__base' 'int'))
                  (CXXOperatorCallExpr 0xa14a010 <line:536:9, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0xa149fd0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f24360 0x9f25b60 0x9f26dd0)
                    (DeclRefExpr 0xa149ea0 <col:9> '_Bool' lvalue Var 0xa148720 '__testoverflow' '_Bool')
                    (CXXOperatorCallExpr 0xa149fa8 <col:27, col:46> '<dependent type>'
                      (UnresolvedLookupExpr 0xa149f60 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
                      (DeclRefExpr 0xa149eb8 <col:27> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148c60 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                      (CXXOperatorCallExpr 0xa149f38 <col:38, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0xa149f00 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                        (DeclRefExpr 0xa149ed0 <col:38> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa1487a0 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                        (DeclRefExpr 0xa149ee8 <col:46> 'int' lvalue Var 0xa148cd0 '__digit' 'int'))))
                  (CompoundAssignOperator 0xa14a068 <line:537:9, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa14a034 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148c60 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0xa14a04c <col:21> 'int' lvalue Var 0xa148cd0 '__digit' 'int'))
                  (UnaryOperator 0xa14a0a0 <line:538:9, col:11> 'int' lvalue prefix '++'
                    (DeclRefExpr 0xa14a088 <col:11> 'int' lvalue Var 0xa147530 '__sep_pos' 'int')))))))
        (IfStmt 0xa14a2c8 <line:542:8, line:545:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa14a200 <line:542:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa14a1a8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
            (UnaryOperator 0xa14a178 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa14a15c <col:14> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter'))
            (DeclRefExpr 0xa14a18c <col:23> '_InIter' lvalue ParmVar 0xa145b10 '__end' '_InIter'))
          (BinaryOperator 0xa14a270 <line:543:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa14a224 <col:3> 'char_type':'_CharT' lvalue Var 0xa146570 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa14a258 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa14a23c <col:10> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter')))
          (BinaryOperator 0xa14a2b0 <line:545:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0xa14a288 <col:3> '_Bool' lvalue Var 0xa146b40 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa14a2a0 <col:15> '_Bool' true))))))
  (IfStmt 0xa14a668 <line:550:2, line:559:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa14a3a0 <line:550:6, col:28> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0xa14a370 <col:6, col:28> 'size_type':'unsigned int'
        (MemberExpr 0xa14a34c <col:6, col:23> '<bound member function type>' .size 0xa018710
          (ImplicitCastExpr 0xa14a390 <col:6> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0xa14a334 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa148560 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0xa14a650 <line:551:4, line:559:4>
      (CXXOperatorCallExpr 0xa14a448 <line:553:6, col:53> 'class std::basic_string<char>' lvalue
        (ImplicitCastExpr 0xa14a438 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa14a420 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa01a690 'operator+=' 'class std::basic_string<char> &(char)'))
        (DeclRefExpr 0xa14a3ac <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa148560 '__found_grouping' 'string':'class std::basic_string<char>')
        (CXXStaticCastExpr 0xa14a408 <col:26, col:53> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa14a3f8 <col:44> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa14a3e8 <col:44> 'int' <LValueToRValue>
              (DeclRefExpr 0xa14a3c4 <col:44> 'int' lvalue Var 0xa147530 '__sep_pos' 'int')))))
      (IfStmt 0xa14a630 <line:555:6, line:558:26>
        <<<NULL>>>
        (UnaryOperator 0xa14a598 <line:555:10, line:557:22> '<dependent type>' prefix '!'
          (CallExpr 0xa14a570 <line:555:11, line:557:22> '<dependent type>'
            (DeclRefExpr 0xa14a484 <line:555:11, col:16> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0xa140430 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0xa14a4d0 <col:34, col:40> '<dependent type>' lvalue
              (DeclRefExpr 0xa14a4a4 <col:34> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa14a520 <line:556:6, col:12> '<dependent type>' lvalue
              (DeclRefExpr 0xa14a504 <col:6> 'const __cache_type *' lvalue Var 0xa1463f0 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0xa14a554 <line:557:6> 'string':'class std::basic_string<char>' lvalue Var 0xa148560 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0xa14a618 <line:558:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa14a5ac <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa145bd0 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa14a608 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa14a5e4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa14ae78 <line:563:2, line:579:35>
    <<<NULL>>>
    (BinaryOperator 0xa14a818 <line:563:6, line:564:9> '_Bool' '||'
      (ParenExpr 0xa14a7d8 <line:563:6, col:62> '_Bool'
        (BinaryOperator 0xa14a7c0 <col:7, col:61> '_Bool' '&&'
          (BinaryOperator 0xa14a718 <col:7, col:22> '_Bool' '&&'
            (UnaryOperator 0xa14a6c0 <col:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa14a6b0 <col:8> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa14a6a0 <col:8> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa14a684 <col:8> 'int' lvalue Var 0xa147530 '__sep_pos' 'int'))))
            (UnaryOperator 0xa14a700 <col:21, col:22> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa14a6f0 <col:22> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa14a6d4 <col:22> '_Bool' lvalue Var 0xa1474c0 '__found_zero' '_Bool'))))
          (UnaryOperator 0xa14a7a8 <col:38, col:61> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa14a798 <col:39, col:61> '_Bool' <IntegralToBoolean>
              (CXXMemberCallExpr 0xa14a768 <col:39, col:61> 'size_type':'unsigned int'
                (MemberExpr 0xa14a748 <col:39, col:56> '<bound member function type>' .size 0xa018710
                  (ImplicitCastExpr 0xa14a788 <col:39> 'const class std::basic_string<char>' lvalue <NoOp>
                    (DeclRefExpr 0xa14a730 <col:39> 'string':'class std::basic_string<char>' lvalue Var 0xa148560 '__found_grouping' 'string':'class std::basic_string<char>'))))))))
      (ImplicitCastExpr 0xa14a808 <line:564:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa14a7ec <col:9> '_Bool' lvalue Var 0xa1486c0 '__testfail' '_Bool')))
    (CompoundStmt 0xa14a8f8 <line:565:4, line:568:4>
      (BinaryOperator 0xa14a860 <line:566:6, col:12> '<dependent type>' '='
        (DeclRefExpr 0xa14a830 <col:6> '_ValueT' lvalue ParmVar 0xa145c40 '__v' '_ValueT &')
        (IntegerLiteral 0xa14a848 <col:12> 'int' 0))
      (BinaryOperator 0xa14a8e0 <line:567:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa14a878 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa145bd0 '__err' 'class ios_base::iostate &')
        (ImplicitCastExpr 0xa14a8d0 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa14a8ac <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
    (IfStmt 0xa14ae58 <line:569:7, line:579:35>
      <<<NULL>>>
      (ImplicitCastExpr 0xa14a928 <line:569:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa14a910 <col:11> '_Bool' lvalue Var 0xa148720 '__testoverflow' '_Bool'))
      (CompoundStmt 0xa14ad40 <line:570:4, line:577:4>
        (IfStmt 0xa14aca0 <line:571:6, line:575:52>
          <<<NULL>>>
          (BinaryOperator 0xa14aa48 <line:571:10, line:572:44> '<dependent type>' '&&'
            (DeclRefExpr 0xa14a934 <line:571:10> '_Bool' lvalue Var 0xa146c50 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0xa14aa10 <line:572:6, col:44> '<dependent type>' lvalue))
          (BinaryOperator 0xa14ab68 <line:573:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0xa14aa60 <col:8> '_ValueT' lvalue ParmVar 0xa145c40 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0xa14ab30 <col:14, col:52> '<dependent type>' lvalue))
          (BinaryOperator 0xa14ac88 <line:575:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0xa14ab80 <col:8> '_ValueT' lvalue ParmVar 0xa145c40 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0xa14ac50 <col:14, col:52> '<dependent type>' lvalue)))
        (BinaryOperator 0xa14ad28 <line:576:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa14acbc <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa145bd0 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa14ad18 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa14acf4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
      (BinaryOperator 0xa14ae40 <line:579:4, col:35> '<dependent type>' '='
        (DeclRefExpr 0xa14ad58 <col:4> '_ValueT' lvalue ParmVar 0xa145c40 '__v' '_ValueT &')
        (ConditionalOperator 0xa14ae20 <col:10, col:35> '<dependent type>'
          (ImplicitCastExpr 0xa14ae10 <col:10> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa14ad70 <col:10> '_Bool' lvalue Var 0xa146c50 '__negative' '_Bool'))
          (CXXOperatorCallExpr 0xa14add8 <col:23, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa14ada0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0xa14ad88 <col:24> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148c60 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'))
          (DeclRefExpr 0xa14adf8 <col:35> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa148c60 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')))))
  (IfStmt 0xa14af90 <line:581:2, line:582:23>
    <<<NULL>>>
    (ImplicitCastExpr 0xa14aeb0 <line:581:6> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa14ae94 <col:6> '_Bool' lvalue Var 0xa146b40 '__testeof' '_Bool'))
    (CXXOperatorCallExpr 0xa14af68 <line:582:4, col:23> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa14af58 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa14af28 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa14aebc <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa145bd0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa14af18 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa14aef4 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa14afc8 <line:583:2, col:9>
    (DeclRefExpr 0xa14afac <col:9> '_InIter' lvalue ParmVar 0xa145ad0 '__beg' '_InIter')))

;
    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0xa14d9c8 </usr/include/c++/4.6/bits/locale_facets.tcc:593:5, line:682:5>
  (IfStmt 0xa14d980 <line:594:7, line:680:2>
    <<<NULL>>>
    (UnaryOperator 0xa14b728 <line:594:11, col:47> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa14b718 <col:12, col:47> '_Bool' <IntegralToBoolean>
        (ParenExpr 0xa14b700 <col:12, col:47> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa14b6d8 <col:13, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa14b6c8 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa14b6b0 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (CXXMemberCallExpr 0xa14b630 <col:13, col:24> 'fmtflags':'enum std::_Ios_Fmtflags'
              (MemberExpr 0xa14b60c <col:13, col:18> '<bound member function type>' .flags 0xa0a55d0
                (ImplicitCastExpr 0xa14b650 <col:13> 'const class std::ios_base' lvalue <NoOp>
                  (DeclRefExpr 0xa14b5b4 <col:13> 'class std::ios_base' lvalue ParmVar 0xa14b3a0 '__io' 'class std::ios_base &'))))
            (ImplicitCastExpr 0xa14b6a0 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa14b67c <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2e60 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
    (CompoundStmt 0xa14bd00 <line:595:9, line:612:9>
      (DeclStmt 0xa14b7c8 <line:599:4, col:17>
        0xa14b750 "long __l =
          (ImplicitCastExpr 0xa14b7b8 <col:15, col:16> 'long' <IntegralCast>
            (UnaryOperator 0xa14b7a0 <col:15, col:16> 'int' prefix '-'
              (IntegerLiteral 0xa14b788 <col:16> 'int' 1)))")
      (BinaryOperator 0xa14b8e8 <line:600:11, col:64> '<dependent type>' '='
        (DeclRefExpr 0xa14b7d8 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa14b310 '__beg' 'iter_type':'_InIter')
        (CallExpr 0xa14b8b8 <col:19, col:64> '<dependent type>'
          (UnresolvedMemberExpr 0xa14b800 <col:19> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa14b83c <col:34> 'iter_type':'_InIter' lvalue ParmVar 0xa14b310 '__beg' 'iter_type':'_InIter')
          (DeclRefExpr 0xa14b854 <col:41> 'iter_type':'_InIter' lvalue ParmVar 0xa14b350 '__end' 'iter_type':'_InIter')
          (DeclRefExpr 0xa14b86c <col:48> 'class std::ios_base' lvalue ParmVar 0xa14b3a0 '__io' 'class std::ios_base &')
          (DeclRefExpr 0xa14b884 <col:54> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14b410 '__err' 'class ios_base::iostate &')
          (DeclRefExpr 0xa14b89c <col:61> 'long' lvalue Var 0xa14b750 '__l' 'long')))
      (IfStmt 0xa14bce0 <line:601:4, line:611:6>
        <<<NULL>>>
        (BinaryOperator 0xa14b9d0 <line:601:8, col:27> '_Bool' '||'
          (BinaryOperator 0xa14b950 <col:8, col:15> '_Bool' '=='
            (ImplicitCastExpr 0xa14b930 <col:8> 'long' <LValueToRValue>
              (DeclRefExpr 0xa14b900 <col:8> 'long' lvalue Var 0xa14b750 '__l' 'long'))
            (ImplicitCastExpr 0xa14b940 <col:15> 'long' <IntegralCast>
              (IntegerLiteral 0xa14b918 <col:15> 'int' 0)))
          (BinaryOperator 0xa14b9b8 <col:20, col:27> '_Bool' '=='
            (ImplicitCastExpr 0xa14b998 <col:20> 'long' <LValueToRValue>
              (DeclRefExpr 0xa14b968 <col:20> 'long' lvalue Var 0xa14b750 '__l' 'long'))
            (ImplicitCastExpr 0xa14b9a8 <col:27> 'long' <IntegralCast>
              (IntegerLiteral 0xa14b980 <col:27> 'int' 1))))
        (BinaryOperator 0xa14ba58 <line:602:6, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0xa14b9e8 <col:6> '_Bool' lvalue ParmVar 0xa14b460 '__v' '_Bool &')
          (CXXFunctionalCastExpr 0xa14ba40 <col:12, col:20> '_Bool' functional cast to _Bool <NoOp>
            (ImplicitCastExpr 0xa14ba30 <col:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0xa14ba20 <col:17> 'long' <LValueToRValue>
                (DeclRefExpr 0xa14ba08 <col:17> 'long' lvalue Var 0xa14b750 '__l' 'long')))))
        (CompoundStmt 0xa14bcc0 <line:604:6, line:611:6>
          (BinaryOperator 0xa14ba98 <line:607:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0xa14ba70 <col:8> '_Bool' lvalue ParmVar 0xa14b460 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0xa14ba88 <col:14> '_Bool' true))
          (BinaryOperator 0xa14bb18 <line:608:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
            (DeclRefExpr 0xa14bab0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14b410 '__err' 'class ios_base::iostate &')
            (ImplicitCastExpr 0xa14bb08 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa14bae4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
          (IfStmt 0xa14bca0 <line:609:8, line:610:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa14bbc0 <line:609:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa14bb60 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
              (DeclRefExpr 0xa14bb30 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0xa14b310 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0xa14bb48 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0xa14b350 '__end' 'iter_type':'_InIter'))
            (CXXOperatorCallExpr 0xa14bc78 <line:610:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa14bc68 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa14bc50 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa14bbe4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14b410 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa14bc40 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa14bc1c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))))
    (CompoundStmt 0xa14d940 <line:614:9, line:680:2>
      (DeclStmt 0xa14be00 <line:616:4, col:50>
        0xa14bdd0 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0xa14bf08 <line:617:4, col:34>
        0xa14bed0 "__use_cache<__cache_type> __uc")
      (DeclStmt 0xa14bfd0 <line:618:4, col:42>
        0xa14bf30 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa14bfa0 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0xa14bf7c <col:26, col:31> '<bound member function type>' ._M_getloc 0xa0a5fd0
              (ImplicitCastExpr 0xa14bfc0 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa14bf64 <col:26> 'class std::ios_base' lvalue ParmVar 0xa14b3a0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa14c098 <line:619:4, col:42>
        0xa14c010 "const __cache_type *__lc =
          (CallExpr 0xa14c078 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0xa14c044 <col:31> '__use_cache<__cache_type>' lvalue Var 0xa14bed0 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0xa14c05c <col:36> 'const class std::locale' lvalue Var 0xa14bf30 '__loc' 'const class std::locale &'))")
      (DeclStmt 0xa14c0f8 <line:621:4, col:23>
        0xa14c0b0 "bool __testf =
          (CXXBoolLiteralExpr 0xa14c0e8 <col:19> '_Bool' true)")
      (DeclStmt 0xa14c158 <line:622:4, col:23>
        0xa14c110 "bool __testt =
          (CXXBoolLiteralExpr 0xa14c148 <col:19> '_Bool' true)")
      (DeclStmt 0xa14c298 <line:623:4, col:47>
        0xa14c170 "bool __donef =
          (CXXOperatorCallExpr 0xa14c270 <col:19, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0xa14c210 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
            (CXXDependentScopeMemberExpr 0xa14c1c0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa14c1a4 <col:19> 'const __cache_type *' lvalue Var 0xa14c010 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0xa14c1f8 <col:46> 'int' 0))")
      (DeclStmt 0xa14c3d8 <line:624:4, col:46>
        0xa14c2b0 "bool __donet =
          (CXXOperatorCallExpr 0xa14c3b0 <col:19, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa14c350 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
            (CXXDependentScopeMemberExpr 0xa14c300 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa14c2e4 <col:19> 'const __cache_type *' lvalue Var 0xa14c010 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0xa14c338 <col:45> 'int' 0))")
      (DeclStmt 0xa14c438 <line:625:4, col:26>
        0xa14c3f0 "bool __testeof =
          (CXXBoolLiteralExpr 0xa14c428 <col:21> '_Bool' false)")
      (DeclStmt 0xa14c4b0 <line:626:4, col:18>
        0xa14c450 "size_t __n =
          (ImplicitCastExpr 0xa14c4a0 <col:17> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa14c488 <col:17> 'int' 0))")
      (WhileStmt 0xa14cfe8 <line:627:4, line:657:6>
        <<<NULL>>>
        (BinaryOperator 0xa14c540 <line:627:11, col:24> '_Bool' '||'
          (UnaryOperator 0xa14c4e8 <col:11, col:12> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa14c4d8 <col:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa14c4c0 <col:12> '_Bool' lvalue Var 0xa14c170 '__donef' '_Bool')))
          (UnaryOperator 0xa14c528 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa14c518 <col:24> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa14c4fc <col:24> '_Bool' lvalue Var 0xa14c2b0 '__donet' '_Bool'))))
        (CompoundStmt 0xa14cfa8 <line:628:6, line:657:6>
          (IfStmt 0xa14c670 <line:629:8, line:633:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa14c5e8 <line:629:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa14c588 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
              (DeclRefExpr 0xa14c558 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0xa14b310 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0xa14c570 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0xa14b350 '__end' 'iter_type':'_InIter'))
            (CompoundStmt 0xa14c658 <line:630:3, line:633:3>
              (BinaryOperator 0xa14c638 <line:631:5, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0xa14c60c <col:5> '_Bool' lvalue Var 0xa14c3f0 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0xa14c628 <col:17> '_Bool' true))
              (BreakStmt 0xa14c650 <line:632:5>))
            <<<NULL>>>)
          (DeclStmt 0xa14c708 <line:635:8, col:36>
            0xa14c6a0 "const char_type __c =
              (UnaryOperator 0xa14c6f0 <col:30, col:31> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa14c6d4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa14b310 '__beg' 'iter_type':'_InIter'))")
          (IfStmt 0xa14c8a8 <line:637:8, line:638:42>
            <<<NULL>>>
            (UnaryOperator 0xa14c740 <line:637:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa14c730 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa14c718 <col:13> '_Bool' lvalue Var 0xa14c170 '__donef' '_Bool')))
            (BinaryOperator 0xa14c890 <line:638:3, col:42> '<dependent type>' '='
              (DeclRefExpr 0xa14c754 <col:3> '_Bool' lvalue Var 0xa14c0b0 '__testf' '_Bool')
              (CXXOperatorCallExpr 0xa14c868 <col:13, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0xa14c808 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                (DeclRefExpr 0xa14c76c <col:13> 'const char_type':'const _CharT' lvalue Var 0xa14c6a0 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0xa14c7f0 <col:20, col:42> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa14c7a0 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa14c784 <col:20> 'const __cache_type *' lvalue Var 0xa14c010 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0xa14c7d4 <col:39> 'size_t':'unsigned int' lvalue Var 0xa14c450 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0xa14c950 <line:640:8, line:641:3>
            <<<NULL>>>
            (BinaryOperator 0xa14c930 <line:640:12, col:24> '_Bool' '&&'
              (UnaryOperator 0xa14c8f0 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa14c8e0 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa14c8c4 <col:13> '_Bool' lvalue Var 0xa14c0b0 '__testf' '_Bool')))
              (ImplicitCastExpr 0xa14c920 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa14c904 <col:24> '_Bool' lvalue Var 0xa14c2b0 '__donet' '_Bool')))
            (BreakStmt 0xa14c948 <line:641:3>)
            <<<NULL>>>)
          (IfStmt 0xa14cb00 <line:643:8, line:644:41>
            <<<NULL>>>
            (UnaryOperator 0xa14c998 <line:643:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa14c988 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa14c96c <col:13> '_Bool' lvalue Var 0xa14c2b0 '__donet' '_Bool')))
            (BinaryOperator 0xa14cae8 <line:644:3, col:41> '<dependent type>' '='
              (DeclRefExpr 0xa14c9ac <col:3> '_Bool' lvalue Var 0xa14c110 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa14cac0 <col:13, col:41> '<dependent type>'
                (UnresolvedLookupExpr 0xa14ca60 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                (DeclRefExpr 0xa14c9c4 <col:13> 'const char_type':'const _CharT' lvalue Var 0xa14c6a0 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0xa14ca48 <col:20, col:41> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa14c9f8 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa14c9dc <col:20> 'const __cache_type *' lvalue Var 0xa14c010 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0xa14ca2c <col:38> 'size_t':'unsigned int' lvalue Var 0xa14c450 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0xa14cba8 <line:646:8, line:647:3>
            <<<NULL>>>
            (BinaryOperator 0xa14cb88 <line:646:12, col:24> '_Bool' '&&'
              (UnaryOperator 0xa14cb48 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa14cb38 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa14cb1c <col:13> '_Bool' lvalue Var 0xa14c110 '__testt' '_Bool')))
              (ImplicitCastExpr 0xa14cb78 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa14cb5c <col:24> '_Bool' lvalue Var 0xa14c170 '__donef' '_Bool')))
            (BreakStmt 0xa14cba0 <line:647:3>)
            <<<NULL>>>)
          (IfStmt 0xa14cc68 <line:649:8, line:650:3>
            <<<NULL>>>
            (BinaryOperator 0xa14cc48 <line:649:12, col:25> '_Bool' '&&'
              (UnaryOperator 0xa14cbf0 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa14cbe0 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa14cbc4 <col:13> '_Bool' lvalue Var 0xa14c110 '__testt' '_Bool')))
              (UnaryOperator 0xa14cc30 <col:24, col:25> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa14cc20 <col:25> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa14cc04 <col:25> '_Bool' lvalue Var 0xa14c0b0 '__testf' '_Bool'))))
            (BreakStmt 0xa14cc60 <line:650:3>)
            <<<NULL>>>)
          (UnaryOperator 0xa14cca0 <line:652:8, col:10> 'size_t':'unsigned int' lvalue prefix '++'
            (DeclRefExpr 0xa14cc84 <col:10> 'size_t':'unsigned int' lvalue Var 0xa14c450 '__n' 'size_t':'unsigned int'))
          (UnaryOperator 0xa14ccd0 <line:653:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa14ccb4 <col:10> 'iter_type':'_InIter' lvalue ParmVar 0xa14b310 '__beg' 'iter_type':'_InIter'))
          (BinaryOperator 0xa14ce30 <line:655:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0xa14cce4 <col:8> '_Bool' lvalue Var 0xa14c170 '__donef' '_Bool')
            (BinaryOperator 0xa14ce18 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0xa14cd28 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa14cd18 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa14ccfc <col:19> '_Bool' lvalue Var 0xa14c0b0 '__testf' '_Bool')))
              (CXXOperatorCallExpr 0xa14cdf0 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa14cda8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
                (DeclRefExpr 0xa14cd3c <col:30> 'size_t':'unsigned int' lvalue Var 0xa14c450 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa14cd70 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa14cd54 <col:37> 'const __cache_type *' lvalue Var 0xa14c010 '__lc' 'const __cache_type *')))))
          (BinaryOperator 0xa14cf90 <line:656:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0xa14ce48 <col:8> '_Bool' lvalue Var 0xa14c2b0 '__donet' '_Bool')
            (BinaryOperator 0xa14cf78 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0xa14ce88 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa14ce78 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa14ce60 <col:19> '_Bool' lvalue Var 0xa14c110 '__testt' '_Bool')))
              (CXXOperatorCallExpr 0xa14cf50 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa14cf08 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
                (DeclRefExpr 0xa14ce9c <col:30> 'size_t':'unsigned int' lvalue Var 0xa14c450 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa14ced0 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa14ceb4 <col:37> 'const __cache_type *' lvalue Var 0xa14c010 '__lc' 'const __cache_type *')))))))
      (IfStmt 0xa14d920 <line:658:4, line:679:6>
        <<<NULL>>>
        (BinaryOperator 0xa14d138 <line:658:8, col:53> '<dependent type>' '&&'
          (BinaryOperator 0xa14d108 <col:8, col:32> '<dependent type>' '&&'
            (DeclRefExpr 0xa14cffc <col:8> '_Bool' lvalue Var 0xa14c0b0 '__testf' '_Bool')
            (CXXOperatorCallExpr 0xa14d0e0 <col:19, col:32> '<dependent type>'
              (UnresolvedLookupExpr 0xa14d080 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
              (DeclRefExpr 0xa14d014 <col:19> 'size_t':'unsigned int' lvalue Var 0xa14c450 '__n' 'size_t':'unsigned int')
              (CXXDependentScopeMemberExpr 0xa14d048 <col:26, col:32> '<dependent type>' lvalue
                (DeclRefExpr 0xa14d02c <col:26> 'const __cache_type *' lvalue Var 0xa14c010 '__lc' 'const __cache_type *'))))
          (DeclRefExpr 0xa14d120 <col:53> 'size_t':'unsigned int' lvalue Var 0xa14c450 '__n' 'size_t':'unsigned int'))
        (CompoundStmt 0xa14d458 <line:659:6, line:665:6>
          (BinaryOperator 0xa14d178 <line:660:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0xa14d150 <col:8> '_Bool' lvalue ParmVar 0xa14b460 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0xa14d168 <col:14> '_Bool' false))
          (IfStmt 0xa14d438 <line:661:8, line:664:52>
            <<<NULL>>>
            (BinaryOperator 0xa14d298 <line:661:12, col:36> '<dependent type>' '&&'
              (DeclRefExpr 0xa14d190 <col:12> '_Bool' lvalue Var 0xa14c110 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa14d270 <col:23, col:36> '<dependent type>'
                (UnresolvedLookupExpr 0xa14d210 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                (DeclRefExpr 0xa14d1a8 <col:23> 'size_t':'unsigned int' lvalue Var 0xa14c450 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa14d1d8 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa14d1c0 <col:30> 'const __cache_type *' lvalue Var 0xa14c010 '__lc' 'const __cache_type *'))))
            (BinaryOperator 0xa14d318 <line:662:3, col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa14d2b0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14b410 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa14d308 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa14d2e4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0xa14d420 <line:664:3, col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa14d330 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14b410 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa14d410 <col:11, col:52> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0xa14d3f0 <col:11, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa14d3e0 <col:11> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa14d348 <col:11> '_Bool' lvalue Var 0xa14c3f0 '__testeof' '_Bool'))
                  (DeclRefExpr 0xa14d37c <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0xa14d3bc <col:42, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
        (IfStmt 0xa14d900 <line:666:9, line:679:6>
          <<<NULL>>>
          (BinaryOperator 0xa14d5a8 <line:666:13, col:57> '<dependent type>' '&&'
            (BinaryOperator 0xa14d578 <col:13, col:37> '<dependent type>' '&&'
              (DeclRefExpr 0xa14d470 <col:13> '_Bool' lvalue Var 0xa14c110 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa14d550 <col:24, col:37> '<dependent type>'
                (UnresolvedLookupExpr 0xa14d4f0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                (DeclRefExpr 0xa14d488 <col:24> 'size_t':'unsigned int' lvalue Var 0xa14c450 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa14d4b8 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0xa14d4a0 <col:31> 'const __cache_type *' lvalue Var 0xa14c010 '__lc' 'const __cache_type *'))))
            (DeclRefExpr 0xa14d590 <col:57> 'size_t':'unsigned int' lvalue Var 0xa14c450 '__n' 'size_t':'unsigned int'))
          (CompoundStmt 0xa14d708 <line:667:6, line:670:6>
            (BinaryOperator 0xa14d5e8 <line:668:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0xa14d5c0 <col:8> '_Bool' lvalue ParmVar 0xa14b460 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0xa14d5d8 <col:14> '_Bool' true))
            (BinaryOperator 0xa14d6f0 <line:669:8, col:57> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa14d600 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14b410 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa14d6e0 <col:16, col:57> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0xa14d6c0 <col:16, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa14d6b0 <col:16> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa14d618 <col:16> '_Bool' lvalue Var 0xa14c3f0 '__testeof' '_Bool'))
                  (DeclRefExpr 0xa14d64c <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0xa14d68c <col:47, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
          (CompoundStmt 0xa14d8e0 <line:672:6, line:679:6>
            (BinaryOperator 0xa14d748 <line:675:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0xa14d720 <col:8> '_Bool' lvalue ParmVar 0xa14b460 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0xa14d738 <col:14> '_Bool' false))
            (BinaryOperator 0xa14d7c8 <line:676:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa14d760 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14b410 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa14d7b8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa14d794 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0xa14d8c0 <line:677:8, line:678:22>
              <<<NULL>>>
              (ImplicitCastExpr 0xa14d7f8 <line:677:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa14d7e0 <col:12> '_Bool' lvalue Var 0xa14c3f0 '__testeof' '_Bool'))
              (CXXOperatorCallExpr 0xa14d898 <line:678:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa14d888 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa14d870 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa14d804 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14b410 '__err' 'class ios_base::iostate &')
                (ImplicitCastExpr 0xa14d860 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa14d83c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>))))))
  (ReturnStmt 0xa14d9b8 <line:681:7, col:14>
    (DeclRefExpr 0xa14d99c <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa14b310 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0xa14e520 </usr/include/c++/4.6/bits/locale_facets.tcc:689:5, line:697:5>
  (DeclStmt 0xa14df88 <line:690:7, col:20>
    0xa14df30 "string __xtrc =
      (CXXConstructExpr 0xa14df68 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa14dfe8 <line:691:7, col:24> 'void'
    (MemberExpr 0xa14dfb0 <col:7, col:14> '<bound member function type>' .reserve 0xa019250
      (DeclRefExpr 0xa14df98 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa14df30 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa14e008 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa14dfd0 <col:22> 'int' 32)))
  (BinaryOperator 0xa14e108 <line:692:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa14e014 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa14dc80 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa14e0d8 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa14e040 <col:15> '<bound member function type>' ->_M_extract_float 0xa140980
        (CXXThisExpr 0xa14e030 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa14e060 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa14dc80 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa14e078 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa14dcc0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa14e090 <col:46> 'class std::ios_base' lvalue ParmVar 0xa14dd10 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa14e0a8 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14dd80 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa14e0c0 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa14df30 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa14e308 <line:693:7, col:72> 'void'
    (ImplicitCastExpr 0xa14e2f8 <col:7, col:12> 'void (*)(const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa14e290 <col:7, col:12> 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa1043d0 '__convert_to_v' 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa1041a0 '__convert_to_v')))
    (CXXMemberCallExpr 0xa14e1b8 <col:27, col:40> 'const char *'
      (MemberExpr 0xa14e194 <col:27, col:34> '<bound member function type>' .c_str 0xa029050
        (ImplicitCastExpr 0xa14e1d8 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa14e17c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa14df30 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa14e1e4 <col:43> 'float' lvalue ParmVar 0xa14ddd0 '__v' 'float &')
    (DeclRefExpr 0xa14e1fc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14dd80 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa14e338 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa14e240 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa14e230 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa14e214 <col:55> '__c_locale (void)' lvalue CXXMethod 0xa078250 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa14e4d8 <line:694:7, line:695:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa14e3d8 <line:694:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa14e378 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
      (DeclRefExpr 0xa14e344 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa14dc80 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa14e35c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa14dcc0 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa14e490 <line:695:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa14e480 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa14e468 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa14e3fc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14dd80 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa14e458 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa14e434 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa14e510 <line:696:7, col:14>
    (DeclRefExpr 0xa14e4f4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa14dc80 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0xa14f070 </usr/include/c++/4.6/bits/locale_facets.tcc:704:5, line:712:5>
  (DeclStmt 0xa14eaf8 <line:705:7, col:20>
    0xa14eaa0 "string __xtrc =
      (CXXConstructExpr 0xa14ead8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa14eb58 <line:706:7, col:24> 'void'
    (MemberExpr 0xa14eb20 <col:7, col:14> '<bound member function type>' .reserve 0xa019250
      (DeclRefExpr 0xa14eb08 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa14eaa0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa14eb78 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa14eb40 <col:22> 'int' 32)))
  (BinaryOperator 0xa14ec78 <line:707:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa14eb84 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa14e7f0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa14ec48 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa14ebb0 <col:15> '<bound member function type>' ->_M_extract_float 0xa140980
        (CXXThisExpr 0xa14eba0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa14ebd0 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa14e7f0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa14ebe8 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa14e830 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa14ec00 <col:46> 'class std::ios_base' lvalue ParmVar 0xa14e880 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa14ec18 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14e8f0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa14ec30 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa14eaa0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa14ee78 <line:708:7, col:72> 'void'
    (ImplicitCastExpr 0xa14ee68 <col:7, col:12> 'void (*)(const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa14ee00 <col:7, col:12> 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa104950 '__convert_to_v' 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa1041a0 '__convert_to_v')))
    (CXXMemberCallExpr 0xa14ed28 <col:27, col:40> 'const char *'
      (MemberExpr 0xa14ed04 <col:27, col:34> '<bound member function type>' .c_str 0xa029050
        (ImplicitCastExpr 0xa14ed48 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa14ecec <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa14eaa0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa14ed54 <col:43> 'double' lvalue ParmVar 0xa14e940 '__v' 'double &')
    (DeclRefExpr 0xa14ed6c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14e8f0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa14eea8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa14edb0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa14eda0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa14ed84 <col:55> '__c_locale (void)' lvalue CXXMethod 0xa078250 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa14f028 <line:709:7, line:710:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa14ef48 <line:709:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa14eee8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
      (DeclRefExpr 0xa14eeb4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa14e7f0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa14eecc <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa14e830 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa14f000 <line:710:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa14eff0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa14efd8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa14ef6c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14e8f0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa14efc8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa14efa4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa14f060 <line:711:7, col:14>
    (DeclRefExpr 0xa14f044 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa14e7f0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0xa14fbc0 </usr/include/c++/4.6/bits/locale_facets.tcc:736:5, line:744:5>
  (DeclStmt 0xa14f648 <line:737:7, col:20>
    0xa14f5f0 "string __xtrc =
      (CXXConstructExpr 0xa14f628 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa14f6a8 <line:738:7, col:24> 'void'
    (MemberExpr 0xa14f670 <col:7, col:14> '<bound member function type>' .reserve 0xa019250
      (DeclRefExpr 0xa14f658 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa14f5f0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa14f6c8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa14f690 <col:22> 'int' 32)))
  (BinaryOperator 0xa14f7c8 <line:739:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa14f6d4 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa14f340 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa14f798 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa14f700 <col:15> '<bound member function type>' ->_M_extract_float 0xa140980
        (CXXThisExpr 0xa14f6f0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa14f720 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa14f340 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa14f738 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa14f380 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa14f750 <col:46> 'class std::ios_base' lvalue ParmVar 0xa14f3d0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa14f768 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14f440 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa14f780 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa14f5f0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa14f9c8 <line:740:7, col:72> 'void'
    (ImplicitCastExpr 0xa14f9b8 <col:7, col:12> 'void (*)(const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa14f950 <col:7, col:12> 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa104eb0 '__convert_to_v' 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa1041a0 '__convert_to_v')))
    (CXXMemberCallExpr 0xa14f878 <col:27, col:40> 'const char *'
      (MemberExpr 0xa14f854 <col:27, col:34> '<bound member function type>' .c_str 0xa029050
        (ImplicitCastExpr 0xa14f898 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa14f83c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa14f5f0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa14f8a4 <col:43> 'long double' lvalue ParmVar 0xa14f490 '__v' 'long double &')
    (DeclRefExpr 0xa14f8bc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14f440 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa14f9f8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa14f900 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa14f8f0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa14f8d4 <col:55> '__c_locale (void)' lvalue CXXMethod 0xa078250 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa14fb78 <line:741:7, line:742:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa14fa98 <line:741:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa14fa38 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
      (DeclRefExpr 0xa14fa04 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa14f340 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa14fa1c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa14f380 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa14fb50 <line:742:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa14fb40 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa14fb28 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa14fabc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14f440 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa14fb18 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa14faf4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa14fbb0 <line:743:7, col:14>
    (DeclRefExpr 0xa14fb94 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa14f340 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0xa150c08 </usr/include/c++/4.6/bits/locale_facets.tcc:751:5, line:769:5>
  (DeclStmt 0xa1501a0 <line:753:7, col:49>
    0xa150170 "typedef class ios_base::fmtflags fmtflags")
  (DeclStmt 0xa1502b0 <line:754:7, col:42>
    0xa1501d0 "const fmtflags __fmt =
      (CXXMemberCallExpr 0xa150280 <col:30, col:41> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa15025c <col:30, col:35> '<bound member function type>' .flags 0xa0a55d0
          (ImplicitCastExpr 0xa1502a0 <col:30> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa150204 <col:30> 'class std::ios_base' lvalue ParmVar 0xa14ff20 '__io' 'class std::ios_base &'))))")
  (CXXMemberCallExpr 0xa150500 <line:755:7, col:64> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa1504dc <col:7, col:12> '<bound member function type>' .flags 0xa0a56c0
      (DeclRefExpr 0xa1502c0 <col:7> 'class std::ios_base' lvalue ParmVar 0xa14ff20 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0xa1504b8 <col:18, col:61> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa1504a8 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa150490 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ce0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0xa150428 <col:18, col:47> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa150400 <col:19, col:38> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa1503f0 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1503d8 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa1503c8 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa150318 <col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1501d0 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (CXXOperatorCallExpr 0xa1503a8 <col:27, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa150398 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa150380 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9f24120 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa150370 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa15034c <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3460 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (ImplicitCastExpr 0xa150480 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa15045c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2f80 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
  (DeclStmt 0xa150900 <line:757:7, line:759:57>
    0xa1508d0 "typedef __gnu_cxx::__conditional_type<(sizeof(void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (DeclStmt 0xa150968 <line:761:7, col:24>
    0xa150930 "_UIntPtrType __ul")
  (BinaryOperator 0xa150a88 <line:762:7, col:61> '<dependent type>' '='
    (DeclRefExpr 0xa150978 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa14fe90 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa150a58 <col:15, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa1509a0 <col:15> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1509dc <col:30> 'iter_type':'_InIter' lvalue ParmVar 0xa14fe90 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa1509f4 <col:37> 'iter_type':'_InIter' lvalue ParmVar 0xa14fed0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa150a0c <col:44> 'class std::ios_base' lvalue ParmVar 0xa14ff20 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa150a24 <col:50> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa14ff90 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa150a3c <col:57> '_UIntPtrType':'unsigned long' lvalue Var 0xa150930 '__ul' '_UIntPtrType':'unsigned long')))
  (CXXMemberCallExpr 0xa150b30 <line:765:7, col:23> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa150b10 <col:7, col:12> '<bound member function type>' .flags 0xa0a56c0
      (DeclRefExpr 0xa150aa0 <col:7> 'class std::ios_base' lvalue ParmVar 0xa14ff20 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa150b50 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa150af8 <col:18> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1501d0 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (BinaryOperator 0xa150bc8 <line:767:7, col:41> 'void *' lvalue '='
    (DeclRefExpr 0xa150b5c <col:7> 'void *' lvalue ParmVar 0xa14ffe0 '__v' 'void *&')
    (CXXReinterpretCastExpr 0xa150bb0 <col:13, col:41> 'void *' reinterpret_cast<void *> <IntegralToPointer>
      (ImplicitCastExpr 0xa150ba0 <col:37> '_UIntPtrType':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa150b74 <col:37> '_UIntPtrType':'unsigned long' lvalue Var 0xa150930 '__ul' '_UIntPtrType':'unsigned long'))))
  (ReturnStmt 0xa150bf8 <line:768:7, col:14>
    (DeclRefExpr 0xa150be0 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa14fe90 '__beg' 'iter_type':'_InIter')))


    void _M_pad(_CharT __fill, streamsize __w, std::ios_base &__io, _CharT *__new, const _CharT *__cs, int &__len) const (CompoundStmt 0xa151568 </usr/include/c++/4.6/bits/locale_facets.tcc:778:5, line:784:5>
  (CallExpr 0xa1514b0 <line:781:7, line:782:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1513e8 <line:781:7, col:44> '<dependent type>' lvalue)
    (DeclRefExpr 0xa15141c <col:51> 'class std::ios_base' lvalue ParmVar 0xa150f70 '__io' 'class std::ios_base &')
    (DeclRefExpr 0xa151434 <col:57> '_CharT' lvalue ParmVar 0xa150ee0 '__fill' '_CharT')
    (DeclRefExpr 0xa15144c <col:65> '_CharT *' lvalue ParmVar 0xa150fe0 '__new' '_CharT *')
    (DeclRefExpr 0xa151464 <line:782:9> 'const _CharT *' lvalue ParmVar 0xa151050 '__cs' 'const _CharT *')
    (DeclRefExpr 0xa15147c <col:15> 'streamsize':'int' lvalue ParmVar 0xa150f20 '__w' 'streamsize':'int')
    (DeclRefExpr 0xa151494 <col:20> 'int' lvalue ParmVar 0xa1510a0 '__len' 'int &'))
  (BinaryOperator 0xa151550 <line:783:7, col:35> 'int' lvalue '='
    (DeclRefExpr 0xa1514e4 <col:7> 'int' lvalue ParmVar 0xa1510a0 '__len' 'int &')
    (CXXStaticCastExpr 0xa151538 <col:15, col:35> 'int' static_cast<int> <NoOp>
      (ImplicitCastExpr 0xa151528 <col:32> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa1514fc <col:32> 'streamsize':'int' lvalue ParmVar 0xa150f20 '__w' 'streamsize':'int')))))


    template <typename _CharT, typename _ValueT> int __int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags __flags, bool __dec) (CompoundStmt 0xa152838 </usr/include/c++/4.6/bits/locale_facets.tcc:792:5, line:828:5>
  (DeclStmt 0xa151990 <line:793:7, col:31>
    0xa151940 "_CharT *__buf =
      (DeclRefExpr 0xa151974 <col:23> '_CharT *' lvalue ParmVar 0xa151660 '__bufend' '_CharT *')")
  (IfStmt 0xa152778 <line:794:7, line:826:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa151a48 <line:794:11, col:39> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa1519f0 <col:11, col:39> 'long'
        (ImplicitCastExpr 0xa1519e0 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1519a0 <col:11> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa151a28 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa151a18 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa1519b8 <col:28> '_Bool' lvalue ParmVar 0xa1517c0 '__dec' '_Bool')))
        (ImplicitCastExpr 0xa151a38 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa1519d0 <col:35> '_Bool' true))))
    (CompoundStmt 0xa151d28 <line:795:2, line:803:2>
      (DoStmt 0xa151d10 <line:797:4, line:802:19>
        (CompoundStmt 0xa151c48 <line:798:6, line:801:6>
          (BinaryOperator 0xa151be0 <line:799:8, col:60> '<dependent type>' '='
            (UnaryOperator 0xa151a88 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0xa151a70 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0xa151a54 <col:11> '_CharT *' lvalue Var 0xa151940 '__buf' '_CharT *')))
            (ArraySubscriptExpr 0xa151bc8 <col:19, col:60> '<dependent type>' lvalue
              (DeclRefExpr 0xa151a9c <col:19> 'const _CharT *' lvalue ParmVar 0xa151710 '__lit' 'const _CharT *')
              (CXXOperatorCallExpr 0xa151ba0 <col:25, col:50> '<dependent type>'
                (UnresolvedLookupExpr 0xa151b58 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
                (ParenExpr 0xa151b00 <col:25, col:34> '<dependent type>'
                  (BinaryOperator 0xa151ae8 <col:26, col:32> '<dependent type>' '%'
                    (DeclRefExpr 0xa151ab4 <col:26> '_ValueT' lvalue ParmVar 0xa1516a0 '__v' '_ValueT')
                    (IntegerLiteral 0xa151ad0 <col:32> 'int' 10)))
                (DeclRefExpr 0xa151b34 <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa11be60 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
          (CompoundAssignOperator 0xa151c28 <line:800:8, col:15> '<dependent type>' lvalue '/=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa151bf8 <col:8> '_ValueT' lvalue ParmVar 0xa1516a0 '__v' '_ValueT')
            (IntegerLiteral 0xa151c10 <col:15> 'int' 10)))
        (CXXOperatorCallExpr 0xa151ce8 <line:802:11, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0xa151c90 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
          (DeclRefExpr 0xa151c60 <col:11> '_ValueT' lvalue ParmVar 0xa1516a0 '__v' '_ValueT')
          (IntegerLiteral 0xa151c78 <col:18> 'int' 0))))
    (IfStmt 0xa152758 <line:804:12, line:826:2>
      <<<NULL>>>
      (BinaryOperator 0xa151e90 <line:804:16, col:61> '_Bool' '=='
        (ImplicitCastExpr 0xa151e70 <col:16, col:46> 'int' <IntegralCast>
          (ParenExpr 0xa151e08 <col:16, col:46> 'enum std::_Ios_Fmtflags'
            (CXXOperatorCallExpr 0xa151de0 <col:17, col:37> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0xa151dd0 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa151db8 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0xa151d98 <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa151d3c <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa151780 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0xa151da8 <col:27, col:37> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa151d74 <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3460 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (ImplicitCastExpr 0xa151e80 <col:51, col:61> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa151e60 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa151e3c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a30a0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (CompoundStmt 0xa1521c8 <line:805:2, line:813:2>
        (DoStmt 0xa1521b0 <line:807:4, line:812:19>
          (CompoundStmt 0xa1520e8 <line:808:6, line:811:6>
            (BinaryOperator 0xa152080 <line:809:8, col:61> '<dependent type>' '='
              (UnaryOperator 0xa151ed8 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa151ec0 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa151ea8 <col:11> '_CharT *' lvalue Var 0xa151940 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0xa152068 <col:19, col:61> '<dependent type>' lvalue
                (DeclRefExpr 0xa151eec <col:19> 'const _CharT *' lvalue ParmVar 0xa151710 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0xa152040 <col:25, col:51> '<dependent type>'
                  (UnresolvedLookupExpr 0xa151ff8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
                  (ParenExpr 0xa151fa0 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0xa151f78 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0xa151f38 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
                      (DeclRefExpr 0xa151f04 <col:26> '_ValueT' lvalue ParmVar 0xa1516a0 '__v' '_ValueT')
                      (IntegerLiteral 0xa151f20 <col:32> 'int' 7)))
                  (DeclRefExpr 0xa151fd4 <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa11be60 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
            (CompoundAssignOperator 0xa1520c8 <line:810:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa152098 <col:8> '_ValueT' lvalue ParmVar 0xa1516a0 '__v' '_ValueT')
              (IntegerLiteral 0xa1520b0 <col:16> 'int' 3)))
          (CXXOperatorCallExpr 0xa152188 <line:812:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0xa152130 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
            (DeclRefExpr 0xa152100 <col:11> '_ValueT' lvalue ParmVar 0xa1516a0 '__v' '_ValueT')
            (IntegerLiteral 0xa152118 <col:18> 'int' 0))))
      (CompoundStmt 0xa152738 <line:815:2, line:826:2>
        (DeclStmt 0xa152300 <line:817:4, col:58>
          0xa1521f0 "const bool __uppercase =
            (ImplicitCastExpr 0xa1522f0 <col:29, col:49> '_Bool' <IntegralToBoolean>
              (CXXOperatorCallExpr 0xa1522c8 <col:29, col:49> 'enum std::_Ios_Fmtflags'
                (ImplicitCastExpr 0xa1522b8 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa1522a0 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                (ImplicitCastExpr 0xa152280 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa152224 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa151780 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
                (ImplicitCastExpr 0xa152290 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa15225c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a33a0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
        (DeclStmt 0xa152430 <line:818:4, line:819:66>
          0xa152320 "const int __case_offset =
            (ImplicitCastExpr 0xa152420 <line:818:30, line:819:56> 'const int' <IntegralCast>
              (ConditionalOperator 0xa152400 <line:818:30, line:819:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'
                (ImplicitCastExpr 0xa1523f0 <line:818:30> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa152354 <col:30> 'const _Bool' lvalue Var 0xa1521f0 '__uppercase' 'const _Bool'))
                (DeclRefExpr 0xa15238c <col:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa11bf30 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
                (DeclRefExpr 0xa1523cc <line:819:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa11be60 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))")
        (DoStmt 0xa152720 <line:820:4, line:825:19>
          (CompoundStmt 0xa152658 <line:821:6, line:824:6>
            (BinaryOperator 0xa1525f0 <line:822:8, col:52> '<dependent type>' '='
              (UnaryOperator 0xa152470 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa152458 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa152440 <col:11> '_CharT *' lvalue Var 0xa151940 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0xa1525d8 <col:19, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0xa152484 <col:19> 'const _CharT *' lvalue ParmVar 0xa151710 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0xa1525b0 <col:25, col:39> '<dependent type>'
                  (UnresolvedLookupExpr 0xa152568 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
                  (ParenExpr 0xa152538 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0xa152510 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0xa1524d0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
                      (DeclRefExpr 0xa15249c <col:26> '_ValueT' lvalue ParmVar 0xa1516a0 '__v' '_ValueT')
                      (IntegerLiteral 0xa1524b8 <col:32> 'int' 15)))
                  (DeclRefExpr 0xa15254c <col:39> 'const int' lvalue Var 0xa152320 '__case_offset' 'const int'))))
            (CompoundAssignOperator 0xa152638 <line:823:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa152608 <col:8> '_ValueT' lvalue ParmVar 0xa1516a0 '__v' '_ValueT')
              (IntegerLiteral 0xa152620 <col:16> 'int' 4)))
          (CXXOperatorCallExpr 0xa1526f8 <line:825:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0xa1526a0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
            (DeclRefExpr 0xa152670 <col:11> '_ValueT' lvalue ParmVar 0xa1516a0 '__v' '_ValueT')
            (IntegerLiteral 0xa152688 <col:18> 'int' 0))))))
  (ReturnStmt 0xa152828 <line:827:7, col:25>
    (CXXOperatorCallExpr 0xa152800 <col:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa1527c8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (DeclRefExpr 0xa152794 <col:14> '_CharT *' lvalue ParmVar 0xa151660 '__bufend' '_CharT *')
      (DeclRefExpr 0xa1527ac <col:25> '_CharT *' lvalue Var 0xa151940 '__buf' '_CharT *'))))

;
    void _M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, std::ios_base &, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0xa1530f8 </usr/include/c++/4.6/bits/locale_facets.tcc:837:5, line:841:5>
  (DeclStmt 0xa153028 <line:838:7, line:839:42>
    0xa152e50 "_CharT *__p =
      (CallExpr 0xa152ff0 <line:838:21, line:839:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa152ea0 <line:838:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0xa106390)
        (DeclRefExpr 0xa152ed4 <col:41> '_CharT *' lvalue ParmVar 0xa152c40 '__new' '_CharT *')
        (DeclRefExpr 0xa152eec <col:48> '_CharT' lvalue ParmVar 0xa152b80 '__sep' '_CharT')
        (DeclRefExpr 0xa152f04 <col:55> 'const char *' lvalue ParmVar 0xa152b00 '__grouping' 'const char *')
        (DeclRefExpr 0xa152f1c <line:839:6> 'size_t':'unsigned int' lvalue ParmVar 0xa152b40 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0xa152f34 <col:23> '_CharT *' lvalue ParmVar 0xa152c90 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa152fc8 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0xa152f80 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (DeclRefExpr 0xa152f4c <col:29> '_CharT *' lvalue ParmVar 0xa152c90 '__cs' '_CharT *')
          (DeclRefExpr 0xa152f64 <col:36> 'int' lvalue ParmVar 0xa152ce0 '__len' 'int &')))")
  (BinaryOperator 0xa1530e0 <line:840:7, col:21> '<dependent type>' '='
    (DeclRefExpr 0xa153038 <col:7> 'int' lvalue ParmVar 0xa152ce0 '__len' 'int &')
    (CXXOperatorCallExpr 0xa1530b8 <col:15, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa153080 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (DeclRefExpr 0xa153050 <col:15> '_CharT *' lvalue Var 0xa152e50 '__p' '_CharT *')
      (DeclRefExpr 0xa153068 <col:21> '_CharT *' lvalue ParmVar 0xa152c40 '__new' '_CharT *'))))


    template <typename _ValueT> _OutIter _M_insert_int(_OutIter __s, std::ios_base &__io, _CharT __fill, _ValueT __v) const (CompoundStmt 0xa156168 </usr/include/c++/4.6/bits/locale_facets.tcc:849:7, line:930:7>
  (DeclStmt 0xa1536f8 <line:850:2, col:33>
    0xa153690 "Using__gnu_cxx::;")
  (DeclStmt 0xa153820 <line:851:2, col:66>
    0xa1537f0 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0xa153910 <line:852:2, col:60>
    0xa1538e0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa153a18 <line:853:2, col:32>
    0xa1539e0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa153ae0 <line:854:2, col:40>
    0xa153a40 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa153ab0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa153a8c <col:24, col:29> '<bound member function type>' ._M_getloc 0xa0a5fd0
          (ImplicitCastExpr 0xa153ad0 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa153a74 <col:24> 'class std::ios_base' lvalue ParmVar 0xa153460 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa153ba8 <line:855:2, col:40>
    0xa153b20 "const __cache_type *__lc =
      (CallExpr 0xa153b88 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa153b54 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa1539e0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa153b6c <col:34> 'const class std::locale' lvalue Var 0xa153a40 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa153c78 <line:856:2, col:42>
    0xa153bf0 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa153c40 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0xa153c24 <col:24> 'const __cache_type *' lvalue Var 0xa153b20 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa153da0 <line:857:2, col:49>
    0xa153cc0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa153d70 <col:37, col:48> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa153d4c <col:37, col:42> '<bound member function type>' .flags 0xa0a55d0
          (ImplicitCastExpr 0xa153d90 <col:37> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa153cf4 <col:37> 'class std::ios_base' lvalue ParmVar 0xa153460 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa153e68 <line:860:2, col:40>
    0xa153dc0 "const int __ilen =
      (ImplicitCastExpr 0xa153e58 <col:21, col:39> 'const int' <IntegralCast>
        (BinaryOperator 0xa153e40 <col:21, col:39> 'unsigned int' '*'
          (ImplicitCastExpr 0xa153e30 <col:21> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa153df8 <col:21> 'int' 5))
          (UnaryExprOrTypeTraitExpr 0xa153e18 <col:25, col:39> 'unsigned int' sizeof '_ValueT')))")
  (DeclStmt 0xa1540a8 <line:861:2, line:862:23>
    0xa153eb0 "_CharT *__cs =
      (CXXStaticCastExpr 0xa154090 <line:861:17, line:862:22> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0xa154060 <line:861:38, line:862:21> 'void *'
          (ImplicitCastExpr 0xa154050 <line:861:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa153fc4 <col:38> 'void *(unsigned int)' lvalue Function 0xa153ef0 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0xa154038 <col:55, line:862:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa153fe8 <line:861:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0xa154028 <line:862:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa154018 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0xa154000 <col:15> 'const int' lvalue Var 0xa153dc0 '__ilen' 'const int'))))))")
  (DeclStmt 0xa1541f0 <line:866:2, col:70>
    0xa1540f0 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0xa1541c8 <col:41, col:61> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa1541b8 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1541a0 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0xa154180 <col:41> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa154124 <col:41> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa153cc0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0xa154190 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa15415c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3460 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0xa154410 <line:867:2, line:868:40>
    0xa154210 "const bool __dec =
      (ParenExpr 0xa1543c0 <line:867:21, line:868:39> '_Bool'
        (BinaryOperator 0xa1543a8 <line:867:22, line:868:36> '_Bool' '&&'
          (BinaryOperator 0xa1542e0 <line:867:22, col:47> '_Bool' '!='
            (ImplicitCastExpr 0xa1542c0 <col:22> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa1542a0 <col:22> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa154244 <col:22> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1540f0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa1542d0 <col:37, col:47> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa1542b0 <col:37, col:47> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa15427c <col:37, col:47> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a30a0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0xa154390 <line:868:11, col:36> '_Bool' '!='
            (ImplicitCastExpr 0xa154370 <col:11> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa154350 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa1542f8 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1540f0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa154380 <col:26, col:36> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa154360 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa15432c <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2f80 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))")
  (DeclStmt 0xa154698 <line:869:2, line:871:34>
    0xa154440 "const __unsigned_type __u =
      (ParenExpr 0xa154680 <line:869:30, line:871:33> '<dependent type>'
        (ConditionalOperator 0xa154660 <line:869:31, line:871:32> '<dependent type>'
          (ParenExpr 0xa154570 <line:869:31, col:49> '<dependent type>'
            (BinaryOperator 0xa154558 <col:32, col:44> '<dependent type>' '||'
              (CXXOperatorCallExpr 0xa1544f0 <col:32, col:38> '<dependent type>'
                (UnresolvedLookupExpr 0xa1544a8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
                (DeclRefExpr 0xa154474 <col:32> '_ValueT' lvalue ParmVar 0xa1534e0 '__v' '_ValueT')
                (IntegerLiteral 0xa154490 <col:38> 'int' 0))
              (UnaryOperator 0xa154540 <col:43, col:44> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa154530 <col:44> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa154514 <col:44> 'const _Bool' lvalue Var 0xa154210 '__dec' 'const _Bool')))))
          (CXXUnresolvedConstructExpr 0xa1545a8 <line:870:12, col:31> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
            (DeclRefExpr 0xa154590 <col:28> '_ValueT' lvalue ParmVar 0xa1534e0 '__v' '_ValueT'))
          (CXXOperatorCallExpr 0xa154640 <line:871:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa154608 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (CXXUnresolvedConstructExpr 0xa1545e8 <col:13, col:32> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
              (DeclRefExpr 0xa1545d0 <col:29> '_ValueT' lvalue ParmVar 0xa1534e0 '__v' '_ValueT')))))")
  (DeclStmt 0xa154860 <line:872:3, col:71>
    0xa1546c0 "int __len =
      (CallExpr 0xa154830 <col:15, col:70> '<dependent type>'
        (UnresolvedLookupExpr 0xa1546f8 <col:15> '<overloaded function type>' lvalue (ADL) = '1' 0xa1518f0)
        (CXXOperatorCallExpr 0xa1547a8 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0xa154760 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (DeclRefExpr 0xa15472c <col:29> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')
          (DeclRefExpr 0xa154744 <col:36> 'const int' lvalue Var 0xa153dc0 '__ilen' 'const int'))
        (DeclRefExpr 0xa1547cc <col:44> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa154440 '__u' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0xa1547e4 <col:49> 'const _CharT *' lvalue Var 0xa153bf0 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa1547fc <col:56> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa153cc0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')
        (DeclRefExpr 0xa154814 <col:65> 'const _Bool' lvalue Var 0xa154210 '__dec' 'const _Bool'))")
  (CompoundAssignOperator 0xa1548f0 <line:873:2, col:19> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0xa154870 <col:2> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')
    (BinaryOperator 0xa1548d8 <col:10, col:19> 'int' '-'
      (ImplicitCastExpr 0xa1548b8 <col:10> 'int' <LValueToRValue>
        (DeclRefExpr 0xa154888 <col:10> 'const int' lvalue Var 0xa153dc0 '__ilen' 'const int'))
      (ImplicitCastExpr 0xa1548c8 <col:19> 'int' <LValueToRValue>
        (DeclRefExpr 0xa1548a0 <col:19> 'int' lvalue Var 0xa1546c0 '__len' 'int'))))
  (IfStmt 0xa154e50 <line:876:2, line:886:4>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa154928 <line:876:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa154910 <col:6> 'const __cache_type *' lvalue Var 0xa153b20 '__lc' 'const __cache_type *'))
    (CompoundStmt 0xa154e30 <line:877:4, line:886:4>
      (DeclStmt 0xa154b10 <line:880:6, line:882:16>
        0xa154970 "_CharT *__cs2 =
          (CXXStaticCastExpr 0xa154af8 <line:880:22, line:882:15> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa154ac8 <line:880:43, line:882:14> 'void *'
              (ImplicitCastExpr 0xa154ab8 <line:880:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa1549a4 <col:43> 'void *(unsigned int)' lvalue Function 0xa153ef0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa154aa0 <col:60, line:882:13> 'unsigned int' '*'
                (BinaryOperator 0xa154a60 <line:880:60, line:881:23> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0xa1549c8 <line:880:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0xa154a50 <line:881:13, col:23> 'unsigned int' <IntegralCast>
                    (ParenExpr 0xa154a38 <col:13, col:23> 'int'
                      (BinaryOperator 0xa154a20 <col:14, col:22> 'int' '+'
                        (ImplicitCastExpr 0xa154a10 <col:14> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa1549e0 <col:14> 'int' lvalue Var 0xa1546c0 '__len' 'int'))
                        (IntegerLiteral 0xa1549f8 <col:22> 'int' 1)))))
                (ImplicitCastExpr 0xa154a90 <line:882:13> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa154a78 <col:13> 'int' 2)))))")
      (CallExpr 0xa154d28 <line:883:6, line:884:57> '<dependent type>'
        (MemberExpr 0xa154b30 <line:883:6> '<bound member function type>' ->_M_group_int 0xa152d90
          (CXXThisExpr 0xa154b20 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0xa154b68 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa154b50 <col:19> 'const __cache_type *' lvalue Var 0xa153b20 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa154bb8 <col:38, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0xa154b9c <col:38> 'const __cache_type *' lvalue Var 0xa153b20 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa154c08 <line:884:5, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0xa154bec <col:5> 'const __cache_type *' lvalue Var 0xa153b20 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0xa154c3c <col:29> 'class std::ios_base' lvalue ParmVar 0xa153460 '__io' 'class std::ios_base &')
        (CXXOperatorCallExpr 0xa154cd0 <col:35, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa154c88 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (DeclRefExpr 0xa154c54 <col:35> '_CharT *' lvalue Var 0xa154970 '__cs2' '_CharT *')
          (IntegerLiteral 0xa154c70 <col:43> 'int' 2))
        (DeclRefExpr 0xa154cf4 <col:46> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')
        (DeclRefExpr 0xa154d0c <col:52> 'int' lvalue Var 0xa1546c0 '__len' 'int'))
      (BinaryOperator 0xa154e18 <line:885:6, col:21> '<dependent type>' '='
        (DeclRefExpr 0xa154d60 <col:6> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa154df0 <col:13, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa154da8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (DeclRefExpr 0xa154d78 <col:13> '_CharT *' lvalue Var 0xa154970 '__cs2' '_CharT *')
          (IntegerLiteral 0xa154d90 <col:21> 'int' 2))))
    <<<NULL>>>)
  (IfStmt 0xa155b88 <line:889:2, line:914:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa154f18 <line:889:6, col:34> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa154ec0 <col:6, col:34> 'long'
        (ImplicitCastExpr 0xa154eb0 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa154e6c <col:6> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa154ef8 <col:23> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa154ee8 <col:23> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa154e84 <col:23> 'const _Bool' lvalue Var 0xa154210 '__dec' 'const _Bool')))
        (ImplicitCastExpr 0xa154f08 <col:30> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa154ea0 <col:30> '_Bool' true))))
    (CompoundStmt 0xa155488 <line:890:4, line:900:4>
      (IfStmt 0xa155468 <line:892:6, line:899:50>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa154fd8 <line:892:10, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa154f90 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
          (DeclRefExpr 0xa154f5c <col:10> '_ValueT' lvalue ParmVar 0xa1534e0 '__v' '_ValueT')
          (IntegerLiteral 0xa154f78 <col:17> 'int' 0))
        (CompoundStmt 0xa155338 <line:893:8, line:897:8>
          (IfStmt 0xa155318 <line:894:3, line:896:46>
            <<<NULL>>>
            (BinaryOperator 0xa1551e8 <line:894:7, line:895:48> '<dependent type>' '&&'
              (CXXFunctionalCastExpr 0xa1550e0 <line:894:7, col:39> '_Bool' functional cast to _Bool <NoOp>
                (ImplicitCastExpr 0xa1550d0 <col:12, col:32> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0xa1550a8 <col:12, col:32> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa155098 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa155080 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa155060 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa155008 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa153cc0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa155070 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa15503c <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3280 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (CXXDependentScopeMemberExpr 0xa1551b0 <line:895:10, col:48> '<dependent type>' lvalue))
            (BinaryOperator 0xa155300 <line:896:5, col:46> '<dependent type>' ','
              (BinaryOperator 0xa1552b8 <col:5, col:41> '<dependent type>' '='
                (UnaryOperator 0xa155230 <col:5, col:8> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa155218 <col:6, col:8> '<dependent type>' prefix '--'
                    (DeclRefExpr 0xa155200 <col:8> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')))
                (ArraySubscriptExpr 0xa1552a0 <col:15, col:41> '<dependent type>' lvalue
                  (DeclRefExpr 0xa155244 <col:15> 'const _CharT *' lvalue Var 0xa153bf0 '__lit' 'const _CharT *')
                  (DeclRefExpr 0xa15527c <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa11bda0 '_S_oplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
              (UnaryOperator 0xa1552e8 <col:44, col:46> 'int' lvalue prefix '++'
                (DeclRefExpr 0xa1552d0 <col:46> 'int' lvalue Var 0xa1546c0 '__len' 'int')))
            <<<NULL>>>))
        (BinaryOperator 0xa155450 <line:899:8, col:50> '<dependent type>' ','
          (BinaryOperator 0xa155408 <col:8, col:45> '<dependent type>' '='
            (UnaryOperator 0xa155380 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0xa155368 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0xa15534c <col:11> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')))
            (ArraySubscriptExpr 0xa1553f0 <col:18, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0xa155394 <col:18> 'const _CharT *' lvalue Var 0xa153bf0 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa1553cc <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa11bd60 '_S_ominus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
          (UnaryOperator 0xa155438 <col:48, col:50> 'int' lvalue prefix '++'
            (DeclRefExpr 0xa155420 <col:50> 'int' lvalue Var 0xa1546c0 '__len' 'int')))))
    (IfStmt 0xa155b68 <line:901:7, line:914:4>
      <<<NULL>>>
      (BinaryOperator 0xa1555b0 <line:901:11, col:49> '<dependent type>' '&&'
        (CXXFunctionalCastExpr 0xa155580 <col:11, col:44> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa155570 <col:16, col:36> '_Bool' <IntegralToBoolean>
            (CXXOperatorCallExpr 0xa155548 <col:16, col:36> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0xa155538 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa155520 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0xa155500 <col:16> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa1554a8 <col:16> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa153cc0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0xa155510 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa1554dc <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a31c0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (DeclRefExpr 0xa155598 <col:49> '_ValueT' lvalue ParmVar 0xa1534e0 '__v' '_ValueT'))
      (CompoundStmt 0xa155b50 <line:902:4, line:914:4>
        (IfStmt 0xa155b30 <line:903:6, line:913:8>
          <<<NULL>>>
          (BinaryOperator 0xa155660 <line:903:10, col:35> '_Bool' '=='
            (ImplicitCastExpr 0xa155640 <col:10> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa155620 <col:10> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa1555c8 <col:10> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1540f0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa155650 <col:25, col:35> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa155630 <col:25, col:35> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa1555fc <col:25, col:35> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a30a0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0xa155778 <line:904:8, col:51> '<dependent type>' ','
            (BinaryOperator 0xa155730 <col:8, col:46> '<dependent type>' '='
              (UnaryOperator 0xa1556a8 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa155690 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa155678 <col:11> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa155718 <col:18, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0xa1556bc <col:18> 'const _CharT *' lvalue Var 0xa153bf0 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa1556f4 <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa11be60 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (UnaryOperator 0xa155760 <col:49, col:51> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa155748 <col:51> 'int' lvalue Var 0xa1546c0 '__len' 'int')))
          (CompoundStmt 0xa155b10 <line:906:8, line:913:8>
            (DeclStmt 0xa1558b0 <line:908:3, col:57>
              0xa1557a0 "const bool __uppercase =
                (ImplicitCastExpr 0xa1558a0 <col:28, col:48> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0xa155878 <col:28, col:48> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa155868 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa155850 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa155830 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa1557d4 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa153cc0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa155840 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa15580c <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a33a0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
            (BinaryOperator 0xa1559d8 <line:909:3, col:50> '<dependent type>' '='
              (UnaryOperator 0xa1558f0 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0xa1558d8 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa1558c0 <col:6> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa1559c0 <col:13, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0xa155904 <col:13> 'const _CharT *' lvalue Var 0xa153bf0 '__lit' 'const _CharT *')
                (BinaryOperator 0xa1559a8 <col:19, col:39> 'int' '+'
                  (ImplicitCastExpr 0xa155978 <col:19, col:31> 'int' <IntegralCast>
                    (DeclRefExpr 0xa15593c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa11bde0 '_S_ox' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
                  (ImplicitCastExpr 0xa155998 <col:39> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa155988 <col:39> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa15595c <col:39> 'const _Bool' lvalue Var 0xa1557a0 '__uppercase' 'const _Bool'))))))
            (BinaryOperator 0xa155aa8 <line:911:3, col:41> '<dependent type>' '='
              (UnaryOperator 0xa155a20 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0xa155a08 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa1559f0 <col:6> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa155a90 <col:13, col:41> '<dependent type>' lvalue
                (DeclRefExpr 0xa155a34 <col:13> 'const _CharT *' lvalue Var 0xa153bf0 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa155a6c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa11be60 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (CompoundAssignOperator 0xa155af0 <line:912:3, col:12> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
              (DeclRefExpr 0xa155ac0 <col:3> 'int' lvalue Var 0xa1546c0 '__len' 'int')
              (IntegerLiteral 0xa155ad8 <col:12> 'int' 2)))))
      <<<NULL>>>))
  (DeclStmt 0xa155c90 <line:917:2, col:37>
    0xa155bb0 "const streamsize __w =
      (CXXMemberCallExpr 0xa155c60 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0xa155c3c <col:25, col:30> '<bound member function type>' .width 0xa0a5bf0
          (ImplicitCastExpr 0xa155c80 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa155be4 <col:25> 'class std::ios_base' lvalue ParmVar 0xa153460 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa155fc8 <line:918:2, line:924:4>
    <<<NULL>>>
    (BinaryOperator 0xa155d10 <line:918:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0xa155d00 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa155ca0 <col:6> 'const streamsize':'const int' lvalue Var 0xa155bb0 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0xa155ce8 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0xa155cd8 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0xa155cb8 <col:36> 'int' lvalue Var 0xa1546c0 '__len' 'int'))))
    (CompoundStmt 0xa155fa8 <line:919:4, line:924:4>
      (DeclStmt 0xa155e58 <line:920:6, line:921:18>
        0xa155d40 "_CharT *__cs3 =
          (CXXStaticCastExpr 0xa155e40 <line:920:22, line:921:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa155e10 <line:920:43, line:921:16> 'void *'
              (ImplicitCastExpr 0xa155e00 <line:920:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa155d74 <col:43> 'void *(unsigned int)' lvalue Function 0xa153ef0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa155de8 <col:60, line:921:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0xa155d98 <line:920:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0xa155dd8 <line:921:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa155dc8 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa155db0 <col:13> 'const streamsize':'const int' lvalue Var 0xa155bb0 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0xa155f28 <line:922:6, col:50> '<dependent type>'
        (MemberExpr 0xa155e78 <col:6> '<bound member function type>' ->_M_pad 0xa151140
          (CXXThisExpr 0xa155e68 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0xa155e98 <col:13> '_CharT' lvalue ParmVar 0xa1534a0 '__fill' '_CharT')
        (DeclRefExpr 0xa155eb0 <col:21> 'const streamsize':'const int' lvalue Var 0xa155bb0 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0xa155ec8 <col:26> 'class std::ios_base' lvalue ParmVar 0xa153460 '__io' 'class std::ios_base &')
        (DeclRefExpr 0xa155ee0 <col:32> '_CharT *' lvalue Var 0xa155d40 '__cs3' '_CharT *')
        (DeclRefExpr 0xa155ef8 <col:39> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')
        (DeclRefExpr 0xa155f10 <col:45> 'int' lvalue Var 0xa1546c0 '__len' 'int'))
      (BinaryOperator 0xa155f90 <line:923:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa155f5c <col:6> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')
        (DeclRefExpr 0xa155f74 <col:13> '_CharT *' lvalue Var 0xa155d40 '__cs3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa156078 <line:925:2, col:14> 'streamsize':'int'
    (MemberExpr 0xa156058 <col:2, col:7> '<bound member function type>' .width 0xa0a5cb0
      (DeclRefExpr 0xa155fe4 <col:2> 'class std::ios_base' lvalue ParmVar 0xa153460 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0xa156040 <col:13> 'int' 0))
  (ReturnStmt 0xa156158 <line:929:2, col:38>
    (CallExpr 0xa156130 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa1560b0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1068a0 0xa106c60)
      (DeclRefExpr 0xa1560e8 <col:22> '_OutIter' lvalue ParmVar 0xa153410 '__s' '_OutIter')
      (DeclRefExpr 0xa156100 <col:27> '_CharT *' lvalue Var 0xa153eb0 '__cs' '_CharT *')
      (DeclRefExpr 0xa156118 <col:33> 'int' lvalue Var 0xa1546c0 '__len' 'int'))))

;
    void _M_group_float(const char *__grouping, size_t __grouping_size, _CharT __sep, const _CharT *__p, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0xa158f78 </usr/include/c++/4.6/bits/locale_facets.tcc:938:5, line:955:5>
  (DeclStmt 0xa158978 <line:942:7, col:52>
    0xa158860 "const int __declen =
      (ConditionalOperator 0xa158958 <col:28, col:47> '<dependent type>'
        (DeclRefExpr 0xa158894 <col:28> 'const _CharT *' lvalue ParmVar 0xa1585e0 '__p' 'const _CharT *')
        (CXXOperatorCallExpr 0xa158918 <col:34, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0xa1588e0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (DeclRefExpr 0xa1588ac <col:34> 'const _CharT *' lvalue ParmVar 0xa1585e0 '__p' 'const _CharT *')
          (DeclRefExpr 0xa1588c4 <col:40> '_CharT *' lvalue ParmVar 0xa1586a0 '__cs' '_CharT *'))
        (DeclRefExpr 0xa15893c <col:47> 'int' lvalue ParmVar 0xa1586f0 '__len' 'int &'))")
  (DeclStmt 0xa158b78 <line:943:7, line:945:29>
    0xa1589a0 "_CharT *__p2 =
      (CallExpr 0xa158b40 <line:943:22, line:945:28> '<dependent type>'
        (UnresolvedLookupExpr 0xa1589f0 <line:943:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0xa106390)
        (DeclRefExpr 0xa158a24 <col:42> '_CharT *' lvalue ParmVar 0xa158650 '__new' '_CharT *')
        (DeclRefExpr 0xa158a3c <col:49> '_CharT' lvalue ParmVar 0xa158570 '__sep' '_CharT')
        (DeclRefExpr 0xa158a54 <col:56> 'const char *' lvalue ParmVar 0xa156470 '__grouping' 'const char *')
        (DeclRefExpr 0xa158a6c <line:944:7> 'size_t':'unsigned int' lvalue ParmVar 0xa158530 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0xa158a84 <line:945:7> '_CharT *' lvalue ParmVar 0xa1586a0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa158b18 <col:13, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa158ad0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (DeclRefExpr 0xa158a9c <col:13> '_CharT *' lvalue ParmVar 0xa1586a0 '__cs' '_CharT *')
          (DeclRefExpr 0xa158ab4 <col:20> 'const int' lvalue Var 0xa158860 '__declen' 'const int')))")
  (DeclStmt 0xa158c68 <line:948:7, col:34>
    0xa158ba0 "int __newlen =
      (CXXOperatorCallExpr 0xa158c40 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa158c08 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0xa158bd4 <col:22> '_CharT *' lvalue Var 0xa1589a0 '__p2' '_CharT *')
        (DeclRefExpr 0xa158bec <col:29> '_CharT *' lvalue ParmVar 0xa158650 '__new' '_CharT *'))")
  (IfStmt 0xa158f00 <line:949:7, line:953:2>
    <<<NULL>>>
    (DeclRefExpr 0xa158c78 <line:949:11> 'const _CharT *' lvalue ParmVar 0xa1585e0 '__p' 'const _CharT *')
    (CompoundStmt 0xa158ee8 <line:950:2, line:953:2>
      (CallExpr 0xa158e20 <line:951:4, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa158d50 <col:4, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0xa158d84 <col:30> '_CharT *' lvalue Var 0xa1589a0 '__p2' '_CharT *')
        (DeclRefExpr 0xa158d9c <col:36> 'const _CharT *' lvalue ParmVar 0xa1585e0 '__p' 'const _CharT *')
        (BinaryOperator 0xa158e08 <col:41, col:49> 'int' '-'
          (ImplicitCastExpr 0xa158de8 <col:41> 'int' <LValueToRValue>
            (DeclRefExpr 0xa158db4 <col:41> 'int' lvalue ParmVar 0xa1586f0 '__len' 'int &'))
          (ImplicitCastExpr 0xa158df8 <col:49> 'int' <LValueToRValue>
            (DeclRefExpr 0xa158dcc <col:49> 'const int' lvalue Var 0xa158860 '__declen' 'const int'))))
      (CompoundAssignOperator 0xa158ec8 <line:952:4, col:24> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa158e48 <col:4> 'int' lvalue Var 0xa158ba0 '__newlen' 'int')
        (BinaryOperator 0xa158eb0 <col:16, col:24> 'int' '-'
          (ImplicitCastExpr 0xa158e90 <col:16> 'int' <LValueToRValue>
            (DeclRefExpr 0xa158e60 <col:16> 'int' lvalue ParmVar 0xa1586f0 '__len' 'int &'))
          (ImplicitCastExpr 0xa158ea0 <col:24> 'int' <LValueToRValue>
            (DeclRefExpr 0xa158e78 <col:24> 'const int' lvalue Var 0xa158860 '__declen' 'const int')))))
    <<<NULL>>>)
  (BinaryOperator 0xa158f60 <line:954:7, col:15> 'int' lvalue '='
    (DeclRefExpr 0xa158f1c <col:7> 'int' lvalue ParmVar 0xa1586f0 '__len' 'int &')
    (ImplicitCastExpr 0xa158f50 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0xa158f34 <col:15> 'int' lvalue Var 0xa158ba0 '__newlen' 'int'))))


    template <typename _ValueT> _OutIter _M_insert_float(_OutIter __s, std::ios_base &__io, _CharT __fill, char __mod, _ValueT __v) const (CompoundStmt 0xa15c138 </usr/include/c++/4.6/bits/locale_facets.tcc:973:7, line:1085:7>
  (DeclStmt 0xa159650 <line:974:2, col:62>
    0xa159620 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa159758 <line:975:2, col:32>
    0xa159720 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa159820 <line:976:2, col:40>
    0xa159780 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa1597f0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa1597cc <col:24, col:29> '<bound member function type>' ._M_getloc 0xa0a5fd0
          (ImplicitCastExpr 0xa159810 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa1597b4 <col:24> 'class std::ios_base' lvalue ParmVar 0xa1592f0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa1598e8 <line:977:2, col:40>
    0xa159860 "const __cache_type *__lc =
      (CallExpr 0xa1598c8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa159894 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa159720 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa1598ac <col:34> 'const class std::locale' lvalue Var 0xa159780 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa159af0 <line:980:2, col:71>
    0xa159900 "const streamsize __prec =
      (ConditionalOperator 0xa159ad0 <col:28, col:70> 'int'
        (BinaryOperator 0xa1599f8 <col:28, col:47> '_Bool' '<'
          (CXXMemberCallExpr 0xa1599b0 <col:28, col:43> 'streamsize':'int'
            (MemberExpr 0xa15998c <col:28, col:33> '<bound member function type>' .precision 0xa0a5a80
              (ImplicitCastExpr 0xa1599d0 <col:28> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa159934 <col:28> 'class std::ios_base' lvalue ParmVar 0xa1592f0 '__io' 'class std::ios_base &'))))
          (IntegerLiteral 0xa1599e0 <col:47> 'int' 0))
        (IntegerLiteral 0xa159a10 <col:51> 'int' 6)
        (CXXMemberCallExpr 0xa159aa0 <col:55, col:70> 'streamsize':'int'
          (MemberExpr 0xa159a80 <col:55, col:60> '<bound member function type>' .precision 0xa0a5a80
            (ImplicitCastExpr 0xa159ac0 <col:55> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa159a28 <col:55> 'class std::ios_base' lvalue ParmVar 0xa1592f0 '__io' 'class std::ios_base &')))))")
  (DeclStmt 0xa159c38 <line:982:2, line:983:52>
    0xa159b10 "const int __max_digits =
      (CXXDependentScopeMemberExpr 0xa159c00 <col:4, col:42> '<dependent type>' lvalue)")
  (DeclStmt 0xa159c98 <line:986:2, col:11>
    0xa159c60 "int __len")
  (DeclStmt 0xa159d38 <line:988:2, col:17>
    0xa159d00 "char __fbuf[16]")
  (CallExpr 0xa159e28 <line:989:2, col:49> 'void'
    (ImplicitCastExpr 0xa159e18 <col:2, col:14> 'void (*)(const class std::ios_base &, char *, char) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa159d70 <col:2, col:14> 'void (const class std::ios_base &, char *, char) throw()' lvalue CXXMethod 0xa11c6c0 '_S_format_float' 'void (const class std::ios_base &, char *, char) throw()'))
    (ImplicitCastExpr 0xa159e50 <col:30> 'const class std::ios_base' lvalue <NoOp>
      (DeclRefExpr 0xa159d90 <col:30> 'class std::ios_base' lvalue ParmVar 0xa1592f0 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa159e60 <col:36> 'char *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa159da8 <col:36> 'char [16]' lvalue Var 0xa159d00 '__fbuf' 'char [16]'))
    (ImplicitCastExpr 0xa159e70 <col:44> 'char' <LValueToRValue>
      (DeclRefExpr 0xa159dc0 <col:44> 'char' lvalue ParmVar 0xa159370 '__mod' 'char')))
  (DeclStmt 0xa159f20 <line:994:2, col:34>
    0xa159e90 "int __cs_size =
      (BinaryOperator 0xa159f08 <col:18, col:33> 'int' '*'
        (ImplicitCastExpr 0xa159ef8 <col:18> 'int' <LValueToRValue>
          (DeclRefExpr 0xa159ec4 <col:18> 'const int' lvalue Var 0xa159b10 '__max_digits' 'const int'))
        (IntegerLiteral 0xa159ee0 <col:33> 'int' 3))")
  (DeclStmt 0xa15a020 <line:995:2, col:62>
    0xa159f40 "char *__cs =
      (CXXStaticCastExpr 0xa15a008 <col:15, col:61> 'char *' static_cast<char *> <BitCast>
        (CallExpr 0xa159fb8 <col:34, col:60> 'void *'
          (ImplicitCastExpr 0xa159fa8 <col:34> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa159f74 <col:34> 'void *(unsigned int)' lvalue Function 0xa153ef0 '__builtin_alloca' 'void *(unsigned int)'))
          (ImplicitCastExpr 0xa159fe8 <col:51> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa159fd8 <col:51> 'int' <LValueToRValue>
              (DeclRefExpr 0xa159f8c <col:51> 'int' lvalue Var 0xa159e90 '__cs_size' 'int')))))")
  (BinaryOperator 0xa15a178 <line:996:2, line:997:30> '<dependent type>' '='
    (DeclRefExpr 0xa15a030 <line:996:2> 'int' lvalue Var 0xa159c60 '__len' 'int')
    (CallExpr 0xa15a140 <col:10, line:997:30> '<dependent type>'
      (DeclRefExpr 0xa15a060 <line:996:10, col:15> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x9ef9c50 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
      (CallExpr 0xa15a0a8 <col:32, col:48> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa15a098 <col:32> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa15a080 <col:32> '__c_locale (void)' lvalue CXXMethod 0xa078250 '_S_get_c_locale' '__c_locale (void)')))
      (DeclRefExpr 0xa15a0c4 <col:51> 'char *' lvalue Var 0xa159f40 '__cs' 'char *')
      (DeclRefExpr 0xa15a0dc <col:57> 'int' lvalue Var 0xa159e90 '__cs_size' 'int')
      (DeclRefExpr 0xa15a0f4 <line:997:11> 'char [16]' lvalue Var 0xa159d00 '__fbuf' 'char [16]')
      (DeclRefExpr 0xa15a10c <col:19> 'const streamsize':'const int' lvalue Var 0xa159900 '__prec' 'const streamsize':'const int')
      (DeclRefExpr 0xa15a124 <col:27> '_ValueT' lvalue ParmVar 0xa1593b0 '__v' '_ValueT')))
  (IfStmt 0xa15a4d8 <line:1000:2, line:1006:4>
    <<<NULL>>>
    (BinaryOperator 0xa15a1e0 <line:1000:6, col:15> '_Bool' '>='
      (ImplicitCastExpr 0xa15a1c0 <col:6> 'int' <LValueToRValue>
        (DeclRefExpr 0xa15a190 <col:6> 'int' lvalue Var 0xa159c60 '__len' 'int'))
      (ImplicitCastExpr 0xa15a1d0 <col:15> 'int' <LValueToRValue>
        (DeclRefExpr 0xa15a1a8 <col:15> 'int' lvalue Var 0xa159e90 '__cs_size' 'int')))
    (CompoundStmt 0xa15a4b8 <line:1001:4, line:1006:4>
      (BinaryOperator 0xa15a268 <line:1002:6, col:26> 'int' lvalue '='
        (DeclRefExpr 0xa15a1f8 <col:6> 'int' lvalue Var 0xa159e90 '__cs_size' 'int')
        (BinaryOperator 0xa15a250 <col:18, col:26> 'int' '+'
          (ImplicitCastExpr 0xa15a240 <col:18> 'int' <LValueToRValue>
            (DeclRefExpr 0xa15a210 <col:18> 'int' lvalue Var 0xa159c60 '__len' 'int'))
          (IntegerLiteral 0xa15a228 <col:26> 'int' 1)))
      (BinaryOperator 0xa15a340 <line:1003:6, col:59> 'char *' lvalue '='
        (DeclRefExpr 0xa15a280 <col:6> 'char *' lvalue Var 0xa159f40 '__cs' 'char *')
        (CXXStaticCastExpr 0xa15a328 <col:13, col:59> 'char *' static_cast<char *> <BitCast>
          (CallExpr 0xa15a2d8 <col:32, col:58> 'void *'
            (ImplicitCastExpr 0xa15a2c8 <col:32> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa15a298 <col:32> 'void *(unsigned int)' lvalue Function 0xa153ef0 '__builtin_alloca' 'void *(unsigned int)'))
            (ImplicitCastExpr 0xa15a308 <col:49> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa15a2f8 <col:49> 'int' <LValueToRValue>
                (DeclRefExpr 0xa15a2b0 <col:49> 'int' lvalue Var 0xa159e90 '__cs_size' 'int'))))))
      (BinaryOperator 0xa15a4a0 <line:1004:6, line:1005:27> '<dependent type>' '='
        (DeclRefExpr 0xa15a358 <line:1004:6> 'int' lvalue Var 0xa159c60 '__len' 'int')
        (CallExpr 0xa15a468 <col:14, line:1005:27> '<dependent type>'
          (DeclRefExpr 0xa15a388 <line:1004:14, col:19> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x9ef9c50 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
          (CallExpr 0xa15a3d0 <col:36, col:52> '__c_locale':'struct __locale_struct *'
            (ImplicitCastExpr 0xa15a3c0 <col:36> '__c_locale (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa15a3a8 <col:36> '__c_locale (void)' lvalue CXXMethod 0xa078250 '_S_get_c_locale' '__c_locale (void)')))
          (DeclRefExpr 0xa15a3ec <col:55> 'char *' lvalue Var 0xa159f40 '__cs' 'char *')
          (DeclRefExpr 0xa15a404 <col:61> 'int' lvalue Var 0xa159e90 '__cs_size' 'int')
          (DeclRefExpr 0xa15a41c <line:1005:8> 'char [16]' lvalue Var 0xa159d00 '__fbuf' 'char [16]')
          (DeclRefExpr 0xa15a434 <col:16> 'const streamsize':'const int' lvalue Var 0xa159900 '__prec' 'const streamsize':'const int')
          (DeclRefExpr 0xa15a44c <col:24> '_ValueT' lvalue ParmVar 0xa1593b0 '__v' '_ValueT'))))
    <<<NULL>>>)
  (DeclStmt 0xa15a740 <line:1028:2, col:65>
    0xa15a5c0 "const ctype<_CharT> &__ctype =
      (CallExpr 0xa15a720 <col:33, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0xa15a6a0 <col:33, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
        (DeclRefExpr 0xa15a708 <col:59> 'const class std::locale' lvalue Var 0xa159780 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa15a898 <line:1030:2, line:1031:22>
    0xa15a780 "_CharT *__ws =
      (CXXStaticCastExpr 0xa15a880 <line:1030:17, line:1031:21> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0xa15a850 <line:1030:38, line:1031:20> 'void *'
          (ImplicitCastExpr 0xa15a840 <line:1030:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa15a7b4 <col:38> 'void *(unsigned int)' lvalue Function 0xa153ef0 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0xa15a828 <col:55, line:1031:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa15a7d8 <line:1030:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0xa15a818 <line:1031:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa15a808 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0xa15a7f0 <col:15> 'int' lvalue Var 0xa159c60 '__len' 'int'))))))")
  (CallExpr 0xa15a990 <line:1032:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa15a8c0 <col:2, col:10> '<dependent type>' lvalue
      (DeclRefExpr 0xa15a8a8 <col:2> 'const ctype<_CharT>' lvalue Var 0xa15a5c0 '__ctype' 'const ctype<_CharT> &'))
    (DeclRefExpr 0xa15a8f4 <col:16> 'char *' lvalue Var 0xa159f40 '__cs' 'char *')
    (BinaryOperator 0xa15a960 <col:22, col:29> 'char *' '+'
      (ImplicitCastExpr 0xa15a940 <col:22> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa15a90c <col:22> 'char *' lvalue Var 0xa159f40 '__cs' 'char *'))
      (ImplicitCastExpr 0xa15a950 <col:29> 'int' <LValueToRValue>
        (DeclRefExpr 0xa15a924 <col:29> 'int' lvalue Var 0xa159c60 '__len' 'int')))
    (DeclRefExpr 0xa15a978 <col:36> '_CharT *' lvalue Var 0xa15a780 '__ws' '_CharT *'))
  (DeclStmt 0xa15aa20 <line:1035:2, col:18>
    0xa15a9d0 "_CharT *__wp =
      (IntegerLiteral 0xa15aa08 <col:17> 'int' 0)")
  (DeclStmt 0xa15ac20 <line:1036:2, col:61>
    0xa15aa40 "const char *__p =
      (CallExpr 0xa15aba8 <col:20, col:60> 'const char_type *'
        (ImplicitCastExpr 0xa15ab98 <col:20, col:39> 'const char_type *(*)(const char_type *, size_t, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa15aaf0 <col:20, col:39> 'const char_type *(const char_type *, size_t, const char_type &)' lvalue CXXMethod 0x9ec7570 'find' 'const char_type *(const char_type *, size_t, const char_type &)'))
        (ImplicitCastExpr 0xa15abe0 <col:44> 'const char_type *' <NoOp>
          (ImplicitCastExpr 0xa15abd0 <col:44> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa15ab10 <col:44> 'char *' lvalue Var 0xa159f40 '__cs' 'char *')))
        (ImplicitCastExpr 0xa15ac00 <col:50> 'size_t':'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa15abf0 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0xa15ab28 <col:50> 'int' lvalue Var 0xa159c60 '__len' 'int')))
        (MaterializeTemporaryExpr 0xa15ac10 <col:57> 'const char_type':'const char' lvalue
          (CharacterLiteral 0xa15ab40 <col:57> 'char'46)))")
  (IfStmt 0xa15ae50 <line:1037:2, line:1041:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa15ac58 <line:1037:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0xa15ac48 <col:6> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa15ac30 <col:6> 'const char *' lvalue Var 0xa15aa40 '__p' 'const char *')))
    (CompoundStmt 0xa15ae38 <line:1038:4, line:1041:4>
      (BinaryOperator 0xa15ad88 <line:1039:6, col:31> '<dependent type>' '='
        (DeclRefExpr 0xa15ac64 <col:6> '_CharT *' lvalue Var 0xa15a9d0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0xa15ad60 <col:13, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0xa15ad18 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (DeclRefExpr 0xa15ac7c <col:13> '_CharT *' lvalue Var 0xa15a780 '__ws' '_CharT *')
          (ParenExpr 0xa15ad00 <col:20, col:31> 'int'
            (BinaryOperator 0xa15ace8 <col:21, col:27> 'int' '-'
              (ImplicitCastExpr 0xa15acc8 <col:21> 'const char *' <LValueToRValue>
                (DeclRefExpr 0xa15ac94 <col:21> 'const char *' lvalue Var 0xa15aa40 '__p' 'const char *'))
              (ImplicitCastExpr 0xa15acd8 <col:27> 'char *' <LValueToRValue>
                (DeclRefExpr 0xa15acac <col:27> 'char *' lvalue Var 0xa159f40 '__cs' 'char *'))))))
      (BinaryOperator 0xa15ae20 <line:1040:6, col:20> '<dependent type>' '='
        (UnaryOperator 0xa15adb8 <col:6, col:7> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa15ada0 <col:7> '_CharT *' lvalue Var 0xa15a9d0 '__wp' '_CharT *'))
        (CXXDependentScopeMemberExpr 0xa15ade8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa15adcc <col:14> 'const __cache_type *' lvalue Var 0xa159860 '__lc' 'const __cache_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa15bb50 <line:1046:2, line:1069:4>
    <<<NULL>>>
    (BinaryOperator 0xa15b2b8 <line:1046:6, line:1048:47> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa15ae88 <line:1046:6, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0xa15ae6c <col:6> 'const __cache_type *' lvalue Var 0xa159860 '__lc' 'const __cache_type *'))
      (ParenExpr 0xa15b2a0 <line:1047:9, line:1048:47> '<dependent type>'
        (BinaryOperator 0xa15b288 <line:1047:10, line:1048:46> '<dependent type>' '||'
          (BinaryOperator 0xa15af30 <line:1047:10, col:26> '<dependent type>' '||'
            (DeclRefExpr 0xa15aebc <col:10> '_CharT *' lvalue Var 0xa15a9d0 '__wp' '_CharT *')
            (BinaryOperator 0xa15af18 <col:18, col:26> '_Bool' '<'
              (ImplicitCastExpr 0xa15af08 <col:18> 'int' <LValueToRValue>
                (DeclRefExpr 0xa15aed4 <col:18> 'int' lvalue Var 0xa159c60 '__len' 'int'))
              (IntegerLiteral 0xa15aef0 <col:26> 'int' 3)))
          (ParenExpr 0xa15b270 <col:31, line:1048:46> '_Bool'
            (BinaryOperator 0xa15b258 <line:1047:32, line:1048:43> '_Bool' '&&'
              (BinaryOperator 0xa15b188 <line:1047:32, line:1048:25> '_Bool' '&&'
                (BinaryOperator 0xa15b0b8 <line:1047:32, col:61> '_Bool' '&&'
                  (BinaryOperator 0xa15afe8 <col:32, col:43> '_Bool' '<='
                    (ImplicitCastExpr 0xa15afc8 <col:32, col:38> 'int' <IntegralCast>
                      (ImplicitCastExpr 0xa15afb8 <col:32, col:38> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0xa15af88 <col:32, col:38> 'char' lvalue
                          (ImplicitCastExpr 0xa15af78 <col:32> 'char *' <LValueToRValue>
                            (DeclRefExpr 0xa15af48 <col:32> 'char *' lvalue Var 0xa159f40 '__cs' 'char *'))
                          (IntegerLiteral 0xa15af60 <col:37> 'int' 1))))
                    (ImplicitCastExpr 0xa15afd8 <col:43> 'int' <IntegralCast>
                      (CharacterLiteral 0xa15afa0 <col:43> 'char'57)))
                  (BinaryOperator 0xa15b0a0 <col:50, col:61> '_Bool' '<='
                    (ImplicitCastExpr 0xa15b080 <col:50, col:56> 'int' <IntegralCast>
                      (ImplicitCastExpr 0xa15b070 <col:50, col:56> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0xa15b040 <col:50, col:56> 'char' lvalue
                          (ImplicitCastExpr 0xa15b030 <col:50> 'char *' <LValueToRValue>
                            (DeclRefExpr 0xa15b000 <col:50> 'char *' lvalue Var 0xa159f40 '__cs' 'char *'))
                          (IntegerLiteral 0xa15b018 <col:55> 'int' 2))))
                    (ImplicitCastExpr 0xa15b090 <col:61> 'int' <IntegralCast>
                      (CharacterLiteral 0xa15b058 <col:61> 'char'57))))
                (BinaryOperator 0xa15b170 <line:1048:14, col:25> '_Bool' '>='
                  (ImplicitCastExpr 0xa15b150 <col:14, col:20> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa15b140 <col:14, col:20> 'char' <LValueToRValue>
                      (ArraySubscriptExpr 0xa15b110 <col:14, col:20> 'char' lvalue
                        (ImplicitCastExpr 0xa15b100 <col:14> 'char *' <LValueToRValue>
                          (DeclRefExpr 0xa15b0d0 <col:14> 'char *' lvalue Var 0xa159f40 '__cs' 'char *'))
                        (IntegerLiteral 0xa15b0e8 <col:19> 'int' 1))))
                  (ImplicitCastExpr 0xa15b160 <col:25> 'int' <IntegralCast>
                    (CharacterLiteral 0xa15b128 <col:25> 'char'48))))
              (BinaryOperator 0xa15b240 <col:32, col:43> '_Bool' '>='
                (ImplicitCastExpr 0xa15b220 <col:32, col:38> 'int' <IntegralCast>
                  (ImplicitCastExpr 0xa15b210 <col:32, col:38> 'char' <LValueToRValue>
                    (ArraySubscriptExpr 0xa15b1e0 <col:32, col:38> 'char' lvalue
                      (ImplicitCastExpr 0xa15b1d0 <col:32> 'char *' <LValueToRValue>
                        (DeclRefExpr 0xa15b1a0 <col:32> 'char *' lvalue Var 0xa159f40 '__cs' 'char *'))
                      (IntegerLiteral 0xa15b1b8 <col:37> 'int' 2))))
                (ImplicitCastExpr 0xa15b230 <col:43> 'int' <IntegralCast>
                  (CharacterLiteral 0xa15b1f8 <col:43> 'char'48))))))))
    (CompoundStmt 0xa15bb28 <line:1049:4, line:1069:4>
      (DeclStmt 0xa15b438 <line:1052:6, line:1053:24>
        0xa15b2e0 "_CharT *__ws2 =
          (CXXStaticCastExpr 0xa15b420 <line:1052:22, line:1053:23> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa15b3f0 <line:1052:43, line:1053:22> 'void *'
              (ImplicitCastExpr 0xa15b3e0 <line:1052:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa15b314 <col:43> 'void *(unsigned int)' lvalue Function 0xa153ef0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa15b3c8 <col:60, line:1053:21> 'unsigned int' '*'
                (BinaryOperator 0xa15b388 <line:1052:60, line:1053:13> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0xa15b338 <line:1052:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0xa15b378 <line:1053:13> 'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0xa15b368 <col:13> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa15b350 <col:13> 'int' lvalue Var 0xa159c60 '__len' 'int'))))
                (ImplicitCastExpr 0xa15b3b8 <col:21> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa15b3a0 <col:21> 'int' 2)))))")
      (DeclStmt 0xa15b4a0 <line:1055:6, col:26>
        0xa15b450 "streamsize __off =
          (IntegerLiteral 0xa15b488 <col:25> 'int' 0)")
      (IfStmt 0xa15b798 <line:1056:6, line:1061:8>
        <<<NULL>>>
        (BinaryOperator 0xa15b620 <line:1056:10, col:39> '_Bool' '||'
          (BinaryOperator 0xa15b550 <col:10, col:21> '_Bool' '=='
            (ImplicitCastExpr 0xa15b530 <col:10, col:16> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa15b520 <col:10, col:16> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0xa15b4f0 <col:10, col:16> 'char' lvalue
                  (ImplicitCastExpr 0xa15b4e0 <col:10> 'char *' <LValueToRValue>
                    (DeclRefExpr 0xa15b4b0 <col:10> 'char *' lvalue Var 0xa159f40 '__cs' 'char *'))
                  (IntegerLiteral 0xa15b4c8 <col:15> 'int' 0))))
            (ImplicitCastExpr 0xa15b540 <col:21> 'int' <IntegralCast>
              (CharacterLiteral 0xa15b508 <col:21> 'char'45)))
          (BinaryOperator 0xa15b608 <col:28, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa15b5e8 <col:28, col:34> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa15b5d8 <col:28, col:34> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0xa15b5a8 <col:28, col:34> 'char' lvalue
                  (ImplicitCastExpr 0xa15b598 <col:28> 'char *' <LValueToRValue>
                    (DeclRefExpr 0xa15b568 <col:28> 'char *' lvalue Var 0xa159f40 '__cs' 'char *'))
                  (IntegerLiteral 0xa15b580 <col:33> 'int' 0))))
            (ImplicitCastExpr 0xa15b5f8 <col:39> 'int' <IntegralCast>
              (CharacterLiteral 0xa15b5c0 <col:39> 'char'43))))
        (CompoundStmt 0xa15b778 <line:1057:8, line:1061:8>
          (BinaryOperator 0xa15b668 <line:1058:3, col:11> 'streamsize':'int' lvalue '='
            (DeclRefExpr 0xa15b638 <col:3> 'streamsize':'int' lvalue Var 0xa15b450 '__off' 'streamsize':'int')
            (IntegerLiteral 0xa15b650 <col:11> 'int' 1))
          (BinaryOperator 0xa15b710 <line:1059:3, col:20> '<dependent type>' '='
            (ArraySubscriptExpr 0xa15b6b0 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa15b680 <col:3> '_CharT *' lvalue Var 0xa15b2e0 '__ws2' '_CharT *')
              (IntegerLiteral 0xa15b698 <col:9> 'int' 0))
            (ArraySubscriptExpr 0xa15b6f8 <col:14, col:20> '<dependent type>' lvalue
              (DeclRefExpr 0xa15b6c4 <col:14> '_CharT *' lvalue Var 0xa15a780 '__ws' '_CharT *')
              (IntegerLiteral 0xa15b6e0 <col:19> 'int' 0)))
          (CompoundAssignOperator 0xa15b758 <line:1060:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa15b728 <col:3> 'int' lvalue Var 0xa159c60 '__len' 'int')
            (IntegerLiteral 0xa15b740 <col:12> 'int' 1)))
        <<<NULL>>>)
      (CallExpr 0xa15ba48 <line:1063:6, line:1065:26> '<dependent type>'
        (MemberExpr 0xa15b7c8 <line:1063:6> '<bound member function type>' ->_M_group_float 0xa1587a0
          (CXXThisExpr 0xa15b7b8 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0xa15b800 <col:21, col:27> '<dependent type>' lvalue
          (DeclRefExpr 0xa15b7e8 <col:21> 'const __cache_type *' lvalue Var 0xa159860 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa15b850 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0xa15b834 <col:40> 'const __cache_type *' lvalue Var 0xa159860 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa15b8a0 <line:1064:7, col:13> '<dependent type>' lvalue
          (DeclRefExpr 0xa15b884 <col:7> 'const __cache_type *' lvalue Var 0xa159860 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0xa15b8d4 <col:31> '_CharT *' lvalue Var 0xa15a9d0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0xa15b968 <col:37, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa15b920 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (DeclRefExpr 0xa15b8ec <col:37> '_CharT *' lvalue Var 0xa15b2e0 '__ws2' '_CharT *')
          (DeclRefExpr 0xa15b904 <col:45> 'streamsize':'int' lvalue Var 0xa15b450 '__off' 'streamsize':'int'))
        (CXXOperatorCallExpr 0xa15ba08 <line:1065:7, col:14> '<dependent type>'
          (UnresolvedLookupExpr 0xa15b9c0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (DeclRefExpr 0xa15b98c <col:7> '_CharT *' lvalue Var 0xa15a780 '__ws' '_CharT *')
          (DeclRefExpr 0xa15b9a4 <col:14> 'streamsize':'int' lvalue Var 0xa15b450 '__off' 'streamsize':'int'))
        (DeclRefExpr 0xa15ba2c <col:21> 'int' lvalue Var 0xa159c60 '__len' 'int'))
      (CompoundAssignOperator 0xa15bac0 <line:1066:6, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa15ba80 <col:6> 'int' lvalue Var 0xa159c60 '__len' 'int')
        (ImplicitCastExpr 0xa15bab0 <col:15> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa15ba98 <col:15> 'streamsize':'int' lvalue Var 0xa15b450 '__off' 'streamsize':'int')))
      (BinaryOperator 0xa15bb10 <line:1068:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa15bae0 <col:6> '_CharT *' lvalue Var 0xa15a780 '__ws' '_CharT *')
        (DeclRefExpr 0xa15baf8 <col:13> '_CharT *' lvalue Var 0xa15b2e0 '__ws2' '_CharT *')))
    <<<NULL>>>)
  (DeclStmt 0xa15bc60 <line:1072:2, col:37>
    0xa15bb80 "const streamsize __w =
      (CXXMemberCallExpr 0xa15bc30 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0xa15bc0c <col:25, col:30> '<bound member function type>' .width 0xa0a5bf0
          (ImplicitCastExpr 0xa15bc50 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa15bbb4 <col:25> 'class std::ios_base' lvalue ParmVar 0xa1592f0 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa15bf98 <line:1073:2, line:1079:4>
    <<<NULL>>>
    (BinaryOperator 0xa15bce0 <line:1073:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0xa15bcd0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa15bc70 <col:6> 'const streamsize':'const int' lvalue Var 0xa15bb80 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0xa15bcb8 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0xa15bca8 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0xa15bc88 <col:36> 'int' lvalue Var 0xa159c60 '__len' 'int'))))
    (CompoundStmt 0xa15bf78 <line:1074:4, line:1079:4>
      (DeclStmt 0xa15be28 <line:1075:6, line:1076:18>
        0xa15bd10 "_CharT *__ws3 =
          (CXXStaticCastExpr 0xa15be10 <line:1075:22, line:1076:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa15bde0 <line:1075:43, line:1076:16> 'void *'
              (ImplicitCastExpr 0xa15bdd0 <line:1075:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa15bd44 <col:43> 'void *(unsigned int)' lvalue Function 0xa153ef0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa15bdb8 <col:60, line:1076:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0xa15bd68 <line:1075:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0xa15bda8 <line:1076:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa15bd98 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa15bd80 <col:13> 'const streamsize':'const int' lvalue Var 0xa15bb80 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0xa15bef8 <line:1077:6, col:50> '<dependent type>'
        (MemberExpr 0xa15be48 <col:6> '<bound member function type>' ->_M_pad 0xa151140
          (CXXThisExpr 0xa15be38 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0xa15be68 <col:13> '_CharT' lvalue ParmVar 0xa159330 '__fill' '_CharT')
        (DeclRefExpr 0xa15be80 <col:21> 'const streamsize':'const int' lvalue Var 0xa15bb80 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0xa15be98 <col:26> 'class std::ios_base' lvalue ParmVar 0xa1592f0 '__io' 'class std::ios_base &')
        (DeclRefExpr 0xa15beb0 <col:32> '_CharT *' lvalue Var 0xa15bd10 '__ws3' '_CharT *')
        (DeclRefExpr 0xa15bec8 <col:39> '_CharT *' lvalue Var 0xa15a780 '__ws' '_CharT *')
        (DeclRefExpr 0xa15bee0 <col:45> 'int' lvalue Var 0xa159c60 '__len' 'int'))
      (BinaryOperator 0xa15bf60 <line:1078:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa15bf2c <col:6> '_CharT *' lvalue Var 0xa15a780 '__ws' '_CharT *')
        (DeclRefExpr 0xa15bf44 <col:13> '_CharT *' lvalue Var 0xa15bd10 '__ws3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa15c048 <line:1080:2, col:14> 'streamsize':'int'
    (MemberExpr 0xa15c028 <col:2, col:7> '<bound member function type>' .width 0xa0a5cb0
      (DeclRefExpr 0xa15bfb4 <col:2> 'class std::ios_base' lvalue ParmVar 0xa1592f0 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0xa15c010 <col:13> 'int' 0))
  (ReturnStmt 0xa15c128 <line:1084:2, col:38>
    (CallExpr 0xa15c100 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa15c080 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1068a0 0xa106c60)
      (DeclRefExpr 0xa15c0b8 <col:22> '_OutIter' lvalue ParmVar 0xa1592a0 '__s' '_OutIter')
      (DeclRefExpr 0xa15c0d0 <col:27> '_CharT *' lvalue Var 0xa15a780 '__ws' '_CharT *')
      (DeclRefExpr 0xa15c0e8 <col:33> 'int' lvalue Var 0xa159c60 '__len' 'int'))))

;
    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, bool __v) const (CompoundStmt 0xa15de60 </usr/include/c++/4.6/bits/locale_facets.tcc:1091:5, line:1137:5>
  (DeclStmt 0xa15c770 <line:1092:7, col:54>
    0xa15c690 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa15c740 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa15c71c <col:42, col:47> '<bound member function type>' .flags 0xa0a55d0
          (ImplicitCastExpr 0xa15c760 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa15c6c4 <col:42> 'class std::ios_base' lvalue ParmVar 0xa15c4a0 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa15de18 <line:1093:7, line:1135:2>
    <<<NULL>>>
    (BinaryOperator 0xa15c888 <line:1093:11, col:46> '_Bool' '=='
      (ImplicitCastExpr 0xa15c878 <col:11, col:41> 'int' <IntegralCast>
        (ParenExpr 0xa15c848 <col:11, col:41> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa15c820 <col:12, col:32> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa15c810 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa15c7f8 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa15c7d8 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa15c780 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa15c690 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0xa15c7e8 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa15c7b4 <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2e60 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (IntegerLiteral 0xa15c860 <col:46> 'int' 0))
    (CompoundStmt 0xa15ca40 <line:1094:9, line:1097:9>
      (DeclStmt 0xa15c920 <line:1095:11, col:31>
        0xa15c8b0 "const long __l =
          (ImplicitCastExpr 0xa15c910 <col:28> 'const long' <IntegralCast>
            (ImplicitCastExpr 0xa15c900 <col:28> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa15c8e4 <col:28> '_Bool' lvalue ParmVar 0xa15c520 '__v' '_Bool')))")
      (BinaryOperator 0xa15ca28 <line:1096:11, col:53> '<dependent type>' '='
        (DeclRefExpr 0xa15c930 <col:11> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
        (CallExpr 0xa15c9f8 <col:17, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0xa15c958 <col:17> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa15c994 <col:31> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0xa15c9ac <col:36> 'class std::ios_base' lvalue ParmVar 0xa15c4a0 '__io' 'class std::ios_base &')
          (DeclRefExpr 0xa15c9c4 <col:42> 'char_type':'_CharT' lvalue ParmVar 0xa15c4e0 '__fill' 'char_type':'_CharT')
          (DeclRefExpr 0xa15c9dc <col:50> 'const long' lvalue Var 0xa15c8b0 '__l' 'const long'))))
    (CompoundStmt 0xa15dde0 <line:1099:9, line:1135:2>
      (DeclStmt 0xa15cb30 <line:1100:4, col:62>
        0xa15cb00 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0xa15cc38 <line:1101:4, col:34>
        0xa15cc00 "__use_cache<__cache_type> __uc")
      (DeclStmt 0xa15cd00 <line:1102:4, col:42>
        0xa15cc60 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa15ccd0 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0xa15ccac <col:26, col:31> '<bound member function type>' ._M_getloc 0xa0a5fd0
              (ImplicitCastExpr 0xa15ccf0 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa15cc94 <col:26> 'class std::ios_base' lvalue ParmVar 0xa15c4a0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa15cdc8 <line:1103:4, col:42>
        0xa15cd40 "const __cache_type *__lc =
          (CallExpr 0xa15cda8 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0xa15cd74 <col:31> '__use_cache<__cache_type>' lvalue Var 0xa15cc00 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0xa15cd8c <col:36> 'const class std::locale' lvalue Var 0xa15cc60 '__loc' 'const class std::locale &'))")
      (DeclStmt 0xa15cf30 <line:1105:4, line:1106:51>
        0xa15ce10 "const _CharT *__name =
          (ConditionalOperator 0xa15cf10 <line:1105:27, line:1106:39> '<dependent type>'
            (ImplicitCastExpr 0xa15cf00 <line:1105:27> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa15ce44 <col:27> '_Bool' lvalue ParmVar 0xa15c520 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0xa15ce78 <col:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa15ce5c <col:33> 'const __cache_type *' lvalue Var 0xa15cd40 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa15cec8 <line:1106:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa15ceac <col:33> 'const __cache_type *' lvalue Var 0xa15cd40 '__lc' 'const __cache_type *')))")
      (DeclStmt 0xa15d070 <line:1107:4, line:1108:45>
        0xa15cf50 "int __len =
          (ConditionalOperator 0xa15d050 <line:1107:16, line:1108:28> '<dependent type>'
            (ImplicitCastExpr 0xa15d040 <line:1107:16> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa15cf84 <col:16> '_Bool' lvalue ParmVar 0xa15c520 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0xa15cfb8 <col:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa15cf9c <col:22> 'const __cache_type *' lvalue Var 0xa15cd40 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa15d008 <line:1108:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa15cfec <col:22> 'const __cache_type *' lvalue Var 0xa15cd40 '__lc' 'const __cache_type *')))")
      (DeclStmt 0xa15d170 <line:1110:4, col:39>
        0xa15d090 "const streamsize __w =
          (CXXMemberCallExpr 0xa15d140 <col:27, col:38> 'streamsize':'int'
            (MemberExpr 0xa15d11c <col:27, col:32> '<bound member function type>' .width 0xa0a5bf0
              (ImplicitCastExpr 0xa15d160 <col:27> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa15d0c4 <col:27> 'class std::ios_base' lvalue ParmVar 0xa15c4a0 '__io' 'class std::ios_base &'))))")
      (IfStmt 0xa15dc20 <line:1111:4, line:1132:6>
        <<<NULL>>>
        (BinaryOperator 0xa15d1f0 <line:1111:8, col:43> '_Bool' '>'
          (ImplicitCastExpr 0xa15d1e0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa15d180 <col:8> 'const streamsize':'const int' lvalue Var 0xa15d090 '__w' 'const streamsize':'const int'))
          (CXXStaticCastExpr 0xa15d1c8 <col:14, col:43> 'streamsize':'int' static_cast<streamsize> <NoOp>
            (ImplicitCastExpr 0xa15d1b8 <col:38> 'int' <LValueToRValue>
              (DeclRefExpr 0xa15d198 <col:38> 'int' lvalue Var 0xa15cf50 '__len' 'int'))))
        (CompoundStmt 0xa15dbf8 <line:1112:6, line:1132:6>
          (DeclStmt 0xa15d2b0 <line:1113:8, col:45>
            0xa15d210 "const streamsize __plen =
              (BinaryOperator 0xa15d298 <col:34, col:40> 'int' '-'
                (ImplicitCastExpr 0xa15d278 <col:34> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa15d244 <col:34> 'const streamsize':'const int' lvalue Var 0xa15d090 '__w' 'const streamsize':'const int'))
                (ImplicitCastExpr 0xa15d288 <col:40> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa15d25c <col:40> 'int' lvalue Var 0xa15cf50 '__len' 'int')))")
          (DeclStmt 0xa15d408 <line:1114:8, line:1116:18>
            0xa15d2f0 "_CharT *__ps =
              (CXXStaticCastExpr 0xa15d3f0 <line:1115:5, line:1116:17> '_CharT *' static_cast<_CharT *> <Dependent>
                (CallExpr 0xa15d3c0 <line:1115:26, line:1116:16> 'void *'
                  (ImplicitCastExpr 0xa15d3b0 <line:1115:26> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa15d324 <col:26> 'void *(unsigned int)' lvalue Function 0xa153ef0 '__builtin_alloca' 'void *(unsigned int)'))
                  (BinaryOperator 0xa15d398 <col:43, line:1116:10> 'unsigned int' '*'
                    (UnaryExprOrTypeTraitExpr 0xa15d348 <line:1115:43, col:56> 'unsigned int' sizeof '_CharT')
                    (ImplicitCastExpr 0xa15d388 <line:1116:10> 'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0xa15d378 <col:10> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0xa15d360 <col:10> 'const streamsize':'const int' lvalue Var 0xa15d210 '__plen' 'const streamsize':'const int'))))))")
          (CallExpr 0xa15d550 <line:1118:8, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa15d4d0 <col:8, col:29> '<dependent type>' lvalue)
            (DeclRefExpr 0xa15d504 <col:36> '_CharT *' lvalue Var 0xa15d2f0 '__ps' '_CharT *')
            (DeclRefExpr 0xa15d51c <col:42> 'const streamsize':'const int' lvalue Var 0xa15d210 '__plen' 'const streamsize':'const int')
            (DeclRefExpr 0xa15d534 <col:50> 'char_type':'_CharT' lvalue ParmVar 0xa15c4e0 '__fill' 'char_type':'_CharT'))
          (CXXMemberCallExpr 0xa15d608 <line:1119:8, col:20> 'streamsize':'int'
            (MemberExpr 0xa15d5e8 <col:8, col:13> '<bound member function type>' .width 0xa0a5cb0
              (DeclRefExpr 0xa15d578 <col:8> 'class std::ios_base' lvalue ParmVar 0xa15c4a0 '__io' 'class std::ios_base &'))
            (IntegerLiteral 0xa15d5d0 <col:19> 'int' 0))
          (IfStmt 0xa15dbb0 <line:1121:8, line:1130:3>
            <<<NULL>>>
            (BinaryOperator 0xa15d778 <line:1121:12, col:59> '_Bool' '=='
              (ImplicitCastExpr 0xa15d758 <col:12, col:44> 'int' <IntegralCast>
                (ParenExpr 0xa15d6f0 <col:12, col:44> 'enum std::_Ios_Fmtflags'
                  (CXXOperatorCallExpr 0xa15d6c8 <col:13, col:33> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa15d6b8 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa15d6a0 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa15d680 <col:13> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa15d628 <col:13> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa15c690 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa15d690 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa15d65c <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3400 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (ImplicitCastExpr 0xa15d768 <col:49, col:59> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa15d748 <col:49, col:59> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa15d724 <col:49, col:59> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3040 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (CompoundStmt 0xa15d9a0 <line:1122:3, line:1125:3>
              (BinaryOperator 0xa15d898 <line:1123:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0xa15d7bc <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa15d870 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa15d7f0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1068a0 0xa106c60)
                  (DeclRefExpr 0xa15d828 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa15d840 <col:29> 'const _CharT *' lvalue Var 0xa15ce10 '__name' 'const _CharT *')
                  (DeclRefExpr 0xa15d858 <col:37> 'int' lvalue Var 0xa15cf50 '__len' 'int')))
              (BinaryOperator 0xa15d988 <line:1124:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa15d8b0 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa15d960 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa15d8e0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1068a0 0xa106c60)
                  (DeclRefExpr 0xa15d918 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa15d930 <col:29> '_CharT *' lvalue Var 0xa15d2f0 '__ps' '_CharT *')
                  (DeclRefExpr 0xa15d948 <col:35> 'const streamsize':'const int' lvalue Var 0xa15d210 '__plen' 'const streamsize':'const int'))))
            (CompoundStmt 0xa15db98 <line:1127:3, line:1130:3>
              (BinaryOperator 0xa15da90 <line:1128:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa15d9b8 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa15da68 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa15d9e8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1068a0 0xa106c60)
                  (DeclRefExpr 0xa15da20 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa15da38 <col:29> '_CharT *' lvalue Var 0xa15d2f0 '__ps' '_CharT *')
                  (DeclRefExpr 0xa15da50 <col:35> 'const streamsize':'const int' lvalue Var 0xa15d210 '__plen' 'const streamsize':'const int')))
              (BinaryOperator 0xa15db80 <line:1129:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0xa15daa8 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa15db58 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa15dad8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1068a0 0xa106c60)
                  (DeclRefExpr 0xa15db10 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa15db28 <col:29> 'const _CharT *' lvalue Var 0xa15ce10 '__name' 'const _CharT *')
                  (DeclRefExpr 0xa15db40 <col:37> 'int' lvalue Var 0xa15cf50 '__len' 'int')))))
          (ReturnStmt 0xa15dbe8 <line:1131:8, col:15>
            (DeclRefExpr 0xa15dbcc <col:15> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')))
        <<<NULL>>>)
      (CXXMemberCallExpr 0xa15dcd0 <line:1133:4, col:16> 'streamsize':'int'
        (MemberExpr 0xa15dcb0 <col:4, col:9> '<bound member function type>' .width 0xa0a5cb0
          (DeclRefExpr 0xa15dc3c <col:4> 'class std::ios_base' lvalue ParmVar 0xa15c4a0 '__io' 'class std::ios_base &'))
        (IntegerLiteral 0xa15dc98 <col:15> 'int' 0))
      (BinaryOperator 0xa15ddc8 <line:1134:4, col:41> '<dependent type>' '='
        (DeclRefExpr 0xa15dcf0 <col:4> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
        (CallExpr 0xa15dda0 <col:10, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0xa15dd20 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1068a0 0xa106c60)
          (DeclRefExpr 0xa15dd58 <col:23> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0xa15dd70 <col:28> 'const _CharT *' lvalue Var 0xa15ce10 '__name' 'const _CharT *')
          (DeclRefExpr 0xa15dd88 <col:36> 'int' lvalue Var 0xa15cf50 '__len' 'int')))))
  (ReturnStmt 0xa15de50 <line:1136:7, col:14>
    (DeclRefExpr 0xa15de34 <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0xa15c450 '__s' 'iter_type':'_OutIter')))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, double __v) const (CompoundStmt 0xa15e448 </usr/include/c++/4.6/bits/locale_facets.tcc:1143:5, col:63>
  (ReturnStmt 0xa15e438 <col:7, col:60>
    (CallExpr 0xa15e408 <col:14, col:60> '<dependent type>'
      (UnresolvedMemberExpr 0xa15e350 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa15e38c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa15e120 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa15e3a4 <col:35> 'class std::ios_base' lvalue ParmVar 0xa15e170 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa15e3bc <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa15e1b0 '__fill' 'char_type':'_CharT')
      (CXXScalarValueInitExpr 0xa15e3e0 <col:49, col:54> 'char')
      (DeclRefExpr 0xa15e3f0 <col:57> 'double' lvalue ParmVar 0xa15e200 '__v' 'double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, long double __v) const (CompoundStmt 0xa15ea28 </usr/include/c++/4.6/bits/locale_facets.tcc:1158:5, col:60>
  (ReturnStmt 0xa15ea18 <col:7, col:57>
    (CallExpr 0xa15e9e8 <col:14, col:57> '<dependent type>'
      (UnresolvedMemberExpr 0xa15e930 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa15e96c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa15e700 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa15e984 <col:35> 'class std::ios_base' lvalue ParmVar 0xa15e750 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa15e99c <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa15e790 '__fill' 'char_type':'_CharT')
      (CharacterLiteral 0xa15e9b8 <col:49> 'char'76)
      (DeclRefExpr 0xa15e9cc <col:54> 'long double' lvalue ParmVar 0xa15e7e0 '__v' 'long double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, const void *__v) const (CompoundStmt 0xa15f8b8 </usr/include/c++/4.6/bits/locale_facets.tcc:1165:5, line:1179:5>
  (DeclStmt 0xa15f010 <line:1166:7, col:54>
    0xa15ef30 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa15efe0 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa15efbc <col:42, col:47> '<bound member function type>' .flags 0xa0a55d0
          (ImplicitCastExpr 0xa15f000 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa15ef64 <col:42> 'class std::ios_base' lvalue ParmVar 0xa15ed30 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa15f1e0 <line:1167:7, line:1168:29>
    0xa15f050 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa15f1c0 <line:1167:40, line:1168:28> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa15f1b0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa15f198 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x9f24120 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
        (ParenExpr 0xa15f180 <line:1167:41, line:1168:28> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa15f158 <line:1167:42, line:1168:19> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa15f148 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa15f130 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ce0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa15f110 <line:1167:42, col:52> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa15f0b0 <col:42, col:52> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3460 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0xa15f120 <line:1168:9, col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa15f0ec <col:9, col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a33a0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))")
  (CXXMemberCallExpr 0xa15f480 <line:1169:7, col:74> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa15f45c <col:7, col:12> '<bound member function type>' .flags 0xa0a56c0
      (DeclRefExpr 0xa15f1f0 <col:7> 'class std::ios_base' lvalue ParmVar 0xa15ed30 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0xa15f438 <col:18, col:73> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa15f428 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa15f410 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ce0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0xa15f2e8 <col:18, col:34> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa15f2c0 <col:19, col:29> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa15f2b0 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa15f298 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa15f278 <col:19> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa15f248 <col:19> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa15ef30 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0xa15f288 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa15f260 <col:29> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa15f050 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))))
      (ParenExpr 0xa15f3f8 <col:38, col:73> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa15f3d0 <col:39, col:65> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa15f3c0 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa15f3a8 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ce0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa15f388 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa15f328 <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2f80 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0xa15f398 <col:55, col:65> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa15f364 <col:55, col:65> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a31c0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
  (DeclStmt 0xa15f670 <line:1171:7, line:1173:57>
    0xa15f640 "typedef __gnu_cxx::__conditional_type<(sizeof(const void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (BinaryOperator 0xa15f7b8 <line:1175:7, line:1176:41> '<dependent type>' '='
    (DeclRefExpr 0xa15f680 <line:1175:7> 'iter_type':'_OutIter' lvalue ParmVar 0xa15ece0 '__s' 'iter_type':'_OutIter')
    (CallExpr 0xa15f788 <col:13, line:1176:41> '<dependent type>'
      (UnresolvedMemberExpr 0xa15f6a8 <line:1175:13> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa15f6e4 <col:27> 'iter_type':'_OutIter' lvalue ParmVar 0xa15ece0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa15f6fc <col:32> 'class std::ios_base' lvalue ParmVar 0xa15ed30 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa15f714 <col:38> 'char_type':'_CharT' lvalue ParmVar 0xa15ed70 '__fill' 'char_type':'_CharT')
      (CXXReinterpretCastExpr 0xa15f770 <line:1176:6, col:40> '_UIntPtrType':'unsigned long' reinterpret_cast<_UIntPtrType> <PointerToIntegral>
        (ImplicitCastExpr 0xa15f760 <col:37> 'const void *' <LValueToRValue>
          (DeclRefExpr 0xa15f740 <col:37> 'const void *' lvalue ParmVar 0xa15edc0 '__v' 'const void *')))))
  (CXXMemberCallExpr 0xa15f860 <line:1177:7, col:25> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa15f840 <col:7, col:12> '<bound member function type>' .flags 0xa0a56c0
      (DeclRefExpr 0xa15f7d0 <col:7> 'class std::ios_base' lvalue ParmVar 0xa15ed30 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa15f880 <col:18> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa15f828 <col:18> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa15ef30 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa15f8a8 <line:1178:7, col:14>
    (DeclRefExpr 0xa15f88c <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0xa15ece0 '__s' 'iter_type':'_OutIter')))


    static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen) (CompoundStmt 0xa162290 </usr/include/c++/4.6/bits/locale_facets.tcc:1195:5, line:1237:5>
  (DeclStmt 0xa15ff50 <line:1196:7, col:69>
    0xa15fe80 "const size_t __plen =
      (CXXStaticCastExpr 0xa15ff38 <col:29, col:68> 'size_t':'unsigned int' static_cast<size_t> <NoOp>
        (ImplicitCastExpr 0xa15ff28 <col:49, col:60> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0xa15ff08 <col:49, col:60> 'int' '-'
            (ImplicitCastExpr 0xa15fee8 <col:49> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa15feb4 <col:49> 'streamsize':'int' lvalue ParmVar 0xa15fcf0 '__newlen' 'streamsize':'int'))
            (ImplicitCastExpr 0xa15fef8 <col:60> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa15fecc <col:60> 'streamsize':'int' lvalue ParmVar 0xa15fd30 '__oldlen' 'streamsize':'int')))))")
  (DeclStmt 0xa160110 <line:1197:7, col:79>
    0xa15ff90 "const ios_base::fmtflags __adjust =
      (CXXOperatorCallExpr 0xa1600e8 <col:43, col:68> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa1600d8 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1600c0 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x9f23ab0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0xa160040 <col:43, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0xa16001c <col:43, col:48> '<bound member function type>' .flags 0xa0a55d0
            (ImplicitCastExpr 0xa160060 <col:43> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa15ffc4 <col:43> 'class std::ios_base' lvalue ParmVar 0xa15fb90 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0xa1600b0 <col:58, col:68> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa16008c <col:58, col:68> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3400 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (IfStmt 0xa160448 <line:1200:7, line:1205:2>
    <<<NULL>>>
    (BinaryOperator 0xa1601b8 <line:1200:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0xa160198 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa160178 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa160120 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa15ff90 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0xa1601a8 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa160188 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa160154 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3040 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0xa160428 <line:1201:2, line:1205:2>
      (CallExpr 0xa1602a8 <line:1202:4, col:42> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa160238 <col:4, col:13> '<dependent type>' lvalue)
        (DeclRefExpr 0xa16025c <col:18> '_CharT *' lvalue ParmVar 0xa15fc40 '__news' '_CharT *')
        (DeclRefExpr 0xa160274 <col:26> 'const _CharT *' lvalue ParmVar 0xa15fcb0 '__olds' 'const _CharT *')
        (DeclRefExpr 0xa16028c <col:34> 'streamsize':'int' lvalue ParmVar 0xa15fd30 '__oldlen' 'streamsize':'int'))
      (CallExpr 0xa1603f0 <line:1203:4, col:53> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa1602f8 <col:4, col:13> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa160398 <col:20, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa160350 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (DeclRefExpr 0xa16031c <col:20> '_CharT *' lvalue ParmVar 0xa15fc40 '__news' '_CharT *')
          (DeclRefExpr 0xa160334 <col:29> 'streamsize':'int' lvalue ParmVar 0xa15fd30 '__oldlen' 'streamsize':'int'))
        (DeclRefExpr 0xa1603bc <col:39> 'const size_t':'const unsigned int' lvalue Var 0xa15fe80 '__plen' 'const size_t':'const unsigned int')
        (DeclRefExpr 0xa1603d4 <col:47> '_CharT' lvalue ParmVar 0xa15fbd0 '__fill' '_CharT'))
      (ReturnStmt 0xa160418 <line:1204:4>))
    <<<NULL>>>)
  (DeclStmt 0xa1604d0 <line:1207:7, col:23>
    0xa160470 "size_t __mod =
      (ImplicitCastExpr 0xa1604c0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1604a8 <col:22> 'int' 0))")
  (IfStmt 0xa161f80 <line:1208:7, line:1234:2>
    <<<NULL>>>
    (BinaryOperator 0xa1610c0 <line:1208:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0xa1610a0 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa161080 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa1604e0 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa15ff90 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0xa1610b0 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa161090 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa161060 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2fe0 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0xa161f60 <line:1209:2, line:1234:2>
      (DeclStmt 0xa1611c0 <line:1213:11, col:49>
        0xa161120 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa161190 <col:33, col:48> 'const class std::locale' lvalue
            (MemberExpr 0xa16116c <col:33, col:38> '<bound member function type>' ._M_getloc 0xa0a5fd0
              (ImplicitCastExpr 0xa1611b0 <col:33> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa161154 <col:33> 'class std::ios_base' lvalue ParmVar 0xa15fb90 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa161420 <line:1214:4, col:67>
        0xa1612a0 "const ctype<_CharT> &__ctype =
          (CallExpr 0xa161400 <col:35, col:66> '<dependent type>'
            (UnresolvedLookupExpr 0xa161380 <col:35, col:59> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
            (DeclRefExpr 0xa1613e8 <col:61> 'const class std::locale' lvalue Var 0xa161120 '__loc' 'const class std::locale &'))")
      (IfStmt 0xa161f40 <line:1216:4, line:1232:6>
        <<<NULL>>>
        (BinaryOperator 0xa1616e0 <line:1216:8, line:1217:41> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa161560 <line:1216:8, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0xa161500 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
            (CallExpr 0xa161498 <col:8, col:25> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa161448 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa161430 <col:8> 'const ctype<_CharT>' lvalue Var 0xa1612a0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0xa161480 <col:22> 'char'45))
            (ArraySubscriptExpr 0xa1614e8 <col:30, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa1614b8 <col:30> 'const _CharT *' lvalue ParmVar 0xa15fcb0 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa1614d0 <col:37> 'int' 0)))
          (CXXOperatorCallExpr 0xa1616b8 <line:1217:11, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0xa161658 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
            (CallExpr 0xa1615f0 <col:11, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1615a0 <col:11, col:19> '<dependent type>' lvalue
                (DeclRefExpr 0xa161584 <col:11> 'const ctype<_CharT>' lvalue Var 0xa1612a0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0xa1615d8 <col:25> 'char'43))
            (ArraySubscriptExpr 0xa161640 <col:33, col:41> '<dependent type>' lvalue
              (DeclRefExpr 0xa161610 <col:33> 'const _CharT *' lvalue ParmVar 0xa15fcb0 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa161628 <col:40> 'int' 0))))
        (CompoundStmt 0xa161828 <line:1218:6, line:1222:6>
          (BinaryOperator 0xa161788 <line:1219:8, col:28> '<dependent type>' '='
            (ArraySubscriptExpr 0xa161728 <col:8, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa1616f8 <col:8> '_CharT *' lvalue ParmVar 0xa15fc40 '__news' '_CharT *')
              (IntegerLiteral 0xa161710 <col:15> 'int' 0))
            (ArraySubscriptExpr 0xa161770 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa16173c <col:20> 'const _CharT *' lvalue ParmVar 0xa15fcb0 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa161758 <col:27> 'int' 0)))
          (BinaryOperator 0xa1617e0 <line:1220:8, col:16> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0xa1617a0 <col:8> 'size_t':'unsigned int' lvalue Var 0xa160470 '__mod' 'size_t':'unsigned int')
            (ImplicitCastExpr 0xa1617d0 <col:16> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa1617b8 <col:16> 'int' 1)))
          (UnaryOperator 0xa161810 <line:1221:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa1617f8 <col:10> '_CharT *' lvalue ParmVar 0xa15fc40 '__news' '_CharT *')))
        (IfStmt 0xa161f20 <line:1223:9, line:1232:6>
          <<<NULL>>>
          (BinaryOperator 0xa161cf0 <line:1223:13, line:1226:44> '<dependent type>' '&&'
            (BinaryOperator 0xa1619f8 <line:1223:13, line:1224:20> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa161978 <line:1223:13, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa161918 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                (CallExpr 0xa1618b0 <col:13, col:30> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa161860 <col:13, col:21> '<dependent type>' lvalue
                    (DeclRefExpr 0xa161844 <col:13> 'const ctype<_CharT>' lvalue Var 0xa1612a0 '__ctype' 'const ctype<_CharT> &'))
                  (CharacterLiteral 0xa161898 <col:27> 'char'48))
                (ArraySubscriptExpr 0xa161900 <col:35, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1618d0 <col:35> 'const _CharT *' lvalue ParmVar 0xa15fcb0 '__olds' 'const _CharT *')
                  (IntegerLiteral 0xa1618e8 <col:42> 'int' 0)))
              (BinaryOperator 0xa1619e0 <line:1224:9, col:20> '_Bool' '>'
                (ImplicitCastExpr 0xa1619d0 <col:9> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa16199c <col:9> 'streamsize':'int' lvalue ParmVar 0xa15fd30 '__oldlen' 'streamsize':'int'))
                (IntegerLiteral 0xa1619b8 <col:20> 'int' 1)))
            (ParenExpr 0xa161cd8 <line:1225:9, line:1226:44> '<dependent type>'
              (BinaryOperator 0xa161cc0 <line:1225:10, line:1226:43> '<dependent type>' '||'
                (CXXOperatorCallExpr 0xa161b40 <line:1225:10, col:40> '<dependent type>'
                  (UnresolvedLookupExpr 0xa161ae0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                  (CallExpr 0xa161a78 <col:10, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa161a28 <col:10, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0xa161a10 <col:10> 'const ctype<_CharT>' lvalue Var 0xa1612a0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0xa161a60 <col:24> 'char'120))
                  (ArraySubscriptExpr 0xa161ac8 <col:32, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa161a98 <col:32> 'const _CharT *' lvalue ParmVar 0xa15fcb0 '__olds' 'const _CharT *')
                    (IntegerLiteral 0xa161ab0 <col:39> 'int' 1)))
                (CXXOperatorCallExpr 0xa161c98 <line:1226:13, col:43> '<dependent type>'
                  (UnresolvedLookupExpr 0xa161c38 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                  (CallExpr 0xa161bd0 <col:13, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa161b80 <col:13, col:21> '<dependent type>' lvalue
                      (DeclRefExpr 0xa161b64 <col:13> 'const ctype<_CharT>' lvalue Var 0xa1612a0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0xa161bb8 <col:27> 'char'88))
                  (ArraySubscriptExpr 0xa161c20 <col:35, col:43> '<dependent type>' lvalue
                    (DeclRefExpr 0xa161bf0 <col:35> 'const _CharT *' lvalue ParmVar 0xa15fcb0 '__olds' 'const _CharT *')
                    (IntegerLiteral 0xa161c08 <col:42> 'int' 1))))))
          (CompoundStmt 0xa161f00 <line:1227:6, line:1232:6>
            (BinaryOperator 0xa161d98 <line:1228:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0xa161d38 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa161d08 <col:8> '_CharT *' lvalue ParmVar 0xa15fc40 '__news' '_CharT *')
                (IntegerLiteral 0xa161d20 <col:15> 'int' 0))
              (ArraySubscriptExpr 0xa161d80 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa161d4c <col:20> 'const _CharT *' lvalue ParmVar 0xa15fcb0 '__olds' 'const _CharT *')
                (IntegerLiteral 0xa161d68 <col:27> 'int' 0)))
            (BinaryOperator 0xa161e40 <line:1229:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0xa161de0 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa161db0 <col:8> '_CharT *' lvalue ParmVar 0xa15fc40 '__news' '_CharT *')
                (IntegerLiteral 0xa161dc8 <col:15> 'int' 1))
              (ArraySubscriptExpr 0xa161e28 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa161df4 <col:20> 'const _CharT *' lvalue ParmVar 0xa15fcb0 '__olds' 'const _CharT *')
                (IntegerLiteral 0xa161e10 <col:27> 'int' 1)))
            (BinaryOperator 0xa161e98 <line:1230:8, col:16> 'size_t':'unsigned int' lvalue '='
              (DeclRefExpr 0xa161e58 <col:8> 'size_t':'unsigned int' lvalue Var 0xa160470 '__mod' 'size_t':'unsigned int')
              (ImplicitCastExpr 0xa161e88 <col:16> 'size_t':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa161e70 <col:16> 'int' 2)))
            (CompoundAssignOperator 0xa161ee0 <line:1231:8, col:18> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa161eb0 <col:8> '_CharT *' lvalue ParmVar 0xa15fc40 '__news' '_CharT *')
              (IntegerLiteral 0xa161ec8 <col:18> 'int' 2)))
          <<<NULL>>>)))
    <<<NULL>>>)
  (CallExpr 0xa162038 <line:1235:7, col:45> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa161fc8 <col:7, col:16> '<dependent type>' lvalue)
    (DeclRefExpr 0xa161fec <col:23> '_CharT *' lvalue ParmVar 0xa15fc40 '__news' '_CharT *')
    (DeclRefExpr 0xa162004 <col:31> 'const size_t':'const unsigned int' lvalue Var 0xa15fe80 '__plen' 'const size_t':'const unsigned int')
    (DeclRefExpr 0xa16201c <col:39> '_CharT' lvalue ParmVar 0xa15fbd0 '__fill' '_CharT'))
  (CallExpr 0xa162268 <line:1236:7, col:70> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa162088 <col:7, col:16> '<dependent type>' lvalue)
    (CXXOperatorCallExpr 0xa162128 <col:21, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa1620e0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
      (DeclRefExpr 0xa1620ac <col:21> '_CharT *' lvalue ParmVar 0xa15fc40 '__news' '_CharT *')
      (DeclRefExpr 0xa1620c4 <col:30> 'const size_t':'const unsigned int' lvalue Var 0xa15fe80 '__plen' 'const size_t':'const unsigned int'))
    (CXXOperatorCallExpr 0xa1621c8 <col:38, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0xa162180 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
      (DeclRefExpr 0xa16214c <col:38> 'const _CharT *' lvalue ParmVar 0xa15fcb0 '__olds' 'const _CharT *')
      (DeclRefExpr 0xa162164 <col:47> 'size_t':'unsigned int' lvalue Var 0xa160470 '__mod' 'size_t':'unsigned int'))
    (BinaryOperator 0xa162250 <col:54, col:65> 'unsigned int' '-'
      (ImplicitCastExpr 0xa162240 <col:54> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa162220 <col:54> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa1621ec <col:54> 'streamsize':'int' lvalue ParmVar 0xa15fd30 '__oldlen' 'streamsize':'int')))
      (ImplicitCastExpr 0xa162230 <col:65> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa162204 <col:65> 'size_t':'unsigned int' lvalue Var 0xa160470 '__mod' 'size_t':'unsigned int')))))


    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last) (CompoundStmt 0xa1635b0 </usr/include/c++/4.6/bits/locale_facets.tcc:1244:5, line:1274:5>
  (DeclStmt 0xa1626b0 <line:1245:7, col:23>
    0xa162650 "size_t __idx =
      (ImplicitCastExpr 0xa1626a0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa162688 <col:22> 'int' 0))")
  (DeclStmt 0xa162730 <line:1246:7, col:23>
    0xa1626d0 "size_t __ctr =
      (ImplicitCastExpr 0xa162720 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa162708 <col:22> 'int' 0))")
  (WhileStmt 0xa162d10 <line:1248:7, line:1254:2>
    <<<NULL>>>
    (BinaryOperator 0xa162b18 <line:1248:14, line:1250:62> '<dependent type>' '&&'
      (BinaryOperator 0xa162998 <line:1248:14, line:1249:52> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa162880 <line:1248:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa162838 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (CXXOperatorCallExpr 0xa1627a8 <col:14, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa162770 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (DeclRefExpr 0xa162740 <col:14> 'const _CharT *' lvalue ParmVar 0xa1624e0 '__last' 'const _CharT *')
            (DeclRefExpr 0xa162758 <col:23> 'const _CharT *' lvalue ParmVar 0xa162490 '__first' 'const _CharT *'))
          (ArraySubscriptExpr 0xa162820 <col:33, col:45> 'const char' lvalue
            (ImplicitCastExpr 0xa162800 <col:33> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa1627cc <col:33> 'const char *' lvalue ParmVar 0xa1623e0 '__gbeg' 'const char *'))
            (ImplicitCastExpr 0xa162810 <col:40> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa1627e4 <col:40> 'size_t':'unsigned int' lvalue Var 0xa162650 '__idx' 'size_t':'unsigned int'))))
        (BinaryOperator 0xa162980 <line:1249:10, col:52> '_Bool' '>'
          (ImplicitCastExpr 0xa162970 <col:10, col:48> 'int' <IntegralCast>
            (CXXStaticCastExpr 0xa162940 <col:10, col:48> 'signed char' static_cast<signed char> <NoOp>
              (ImplicitCastExpr 0xa162930 <col:35, col:47> 'signed char' <IntegralCast>
                (ImplicitCastExpr 0xa162920 <col:35, col:47> 'char' <LValueToRValue>
                  (ArraySubscriptExpr 0xa1628f8 <col:35, col:47> 'const char' lvalue
                    (ImplicitCastExpr 0xa1628d8 <col:35> 'const char *' <LValueToRValue>
                      (DeclRefExpr 0xa1628a4 <col:35> 'const char *' lvalue ParmVar 0xa1623e0 '__gbeg' 'const char *'))
                    (ImplicitCastExpr 0xa1628e8 <col:42> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa1628bc <col:42> 'size_t':'unsigned int' lvalue Var 0xa162650 '__idx' 'size_t':'unsigned int')))))))
          (IntegerLiteral 0xa162958 <col:52> 'int' 0)))
      (BinaryOperator 0xa162b00 <line:1250:10, col:62> '_Bool' '!='
        (ImplicitCastExpr 0xa162ad0 <col:10, col:22> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa162ac0 <col:10, col:22> 'char' <LValueToRValue>
            (ArraySubscriptExpr 0xa162a00 <col:10, col:22> 'const char' lvalue
              (ImplicitCastExpr 0xa1629e0 <col:10> 'const char *' <LValueToRValue>
                (DeclRefExpr 0xa1629b0 <col:10> 'const char *' lvalue ParmVar 0xa1623e0 '__gbeg' 'const char *'))
              (ImplicitCastExpr 0xa1629f0 <col:17> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa1629c8 <col:17> 'size_t':'unsigned int' lvalue Var 0xa162650 '__idx' 'size_t':'unsigned int')))))
        (ImplicitCastExpr 0xa162af0 <col:27, col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa162ae0 <col:27, col:62> 'char':'char' <LValueToRValue>
            (DeclRefExpr 0xa162aa0 <col:27, col:62> 'const char':'const char' lvalue Var 0xa13ec40 '__max' 'const char':'const char')))))
    (CompoundStmt 0xa162cf8 <line:1251:2, line:1254:2>
      (CompoundAssignOperator 0xa162bb0 <line:1252:4, col:26> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa162b30 <col:4> 'const _CharT *' lvalue ParmVar 0xa1624e0 '__last' 'const _CharT *')
        (ArraySubscriptExpr 0xa162b98 <col:14, col:26> 'const char' lvalue
          (ImplicitCastExpr 0xa162b78 <col:14> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa162b48 <col:14> 'const char *' lvalue ParmVar 0xa1623e0 '__gbeg' 'const char *'))
          (ImplicitCastExpr 0xa162b88 <col:21> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa162b60 <col:21> 'size_t':'unsigned int' lvalue Var 0xa162650 '__idx' 'size_t':'unsigned int'))))
      (ConditionalOperator 0xa162cd8 <line:1253:4, col:38> 'size_t':'unsigned int' lvalue
        (BinaryOperator 0xa162c60 <col:4, col:22> '_Bool' '<'
          (ImplicitCastExpr 0xa162c50 <col:4> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa162bd0 <col:4> 'size_t':'unsigned int' lvalue Var 0xa162650 '__idx' 'size_t':'unsigned int'))
          (BinaryOperator 0xa162c38 <col:12, col:22> 'unsigned int' '-'
            (ImplicitCastExpr 0xa162c18 <col:12> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa162be8 <col:12> 'size_t':'unsigned int' lvalue ParmVar 0xa162420 '__gsize' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0xa162c28 <col:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa162c00 <col:22> 'int' 1))))
        (UnaryOperator 0xa162c90 <col:26, col:28> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0xa162c78 <col:28> 'size_t':'unsigned int' lvalue Var 0xa162650 '__idx' 'size_t':'unsigned int'))
        (UnaryOperator 0xa162cc0 <col:36, col:38> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0xa162ca4 <col:38> 'size_t':'unsigned int' lvalue Var 0xa1626d0 '__ctr' 'size_t':'unsigned int')))))
  (WhileStmt 0xa162eb0 <line:1256:7, line:1257:19>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa162db0 <line:1256:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa162d58 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (DeclRefExpr 0xa162d24 <col:14> 'const _CharT *' lvalue ParmVar 0xa162490 '__first' 'const _CharT *')
      (DeclRefExpr 0xa162d3c <col:25> 'const _CharT *' lvalue ParmVar 0xa1624e0 '__last' 'const _CharT *'))
    (BinaryOperator 0xa162e98 <line:1257:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa162e20 <col:2, col:6> '<dependent type>' prefix '*'
        (UnaryOperator 0xa162e08 <col:3, col:6> '<dependent type>' postfix '++'
          (DeclRefExpr 0xa162dd4 <col:3> '_CharT *' lvalue ParmVar 0xa162350 '__s' '_CharT *')))
      (UnaryOperator 0xa162e80 <col:11, col:19> '<dependent type>' prefix '*'
        (UnaryOperator 0xa162e68 <col:12, col:19> '<dependent type>' postfix '++'
          (DeclRefExpr 0xa162e34 <col:12> 'const _CharT *' lvalue ParmVar 0xa162490 '__first' 'const _CharT *')))))
  (WhileStmt 0xa163210 <line:1259:7, line:1264:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa162ef8 <line:1259:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0xa162ee0 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0xa162ec4 <col:14> 'size_t':'unsigned int' lvalue Var 0xa1626d0 '__ctr' 'size_t':'unsigned int')))
    (CompoundStmt 0xa1631f8 <line:1260:2, line:1264:2>
      (BinaryOperator 0xa162f80 <line:1261:4, col:13> '<dependent type>' '='
        (UnaryOperator 0xa162f50 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0xa162f38 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa162f04 <col:5> '_CharT *' lvalue ParmVar 0xa162350 '__s' '_CharT *')))
        (DeclRefExpr 0xa162f64 <col:13> '_CharT' lvalue ParmVar 0xa162390 '__sep' '_CharT'))
      (ForStmt 0xa1631d0 <line:1262:4, line:1263:23>
        (DeclStmt 0xa163050 <line:1262:9, col:33>
          0xa162fa0 "char __i =
            (ImplicitCastExpr 0xa163040 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0xa163028 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0xa163008 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0xa162fd4 <col:20> 'const char *' lvalue ParmVar 0xa1623e0 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0xa163018 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa162fec <col:27> 'size_t':'unsigned int' lvalue Var 0xa162650 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0xa1630b0 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0xa1630a0 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa163090 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0xa163060 <col:35> 'char' lvalue Var 0xa162fa0 '__i' 'char')))
          (IntegerLiteral 0xa163078 <col:41> 'int' 0))
        (UnaryOperator 0xa1630e0 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0xa1630c8 <col:46> 'char' lvalue Var 0xa162fa0 '__i' 'char'))
        (BinaryOperator 0xa1631b8 <line:1263:6, col:23> '<dependent type>' '='
          (UnaryOperator 0xa163140 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0xa163128 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa1630f4 <col:7> '_CharT *' lvalue ParmVar 0xa162350 '__s' '_CharT *')))
          (UnaryOperator 0xa1631a0 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0xa163188 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa163154 <col:16> 'const _CharT *' lvalue ParmVar 0xa162490 '__first' 'const _CharT *')))))))
  (WhileStmt 0xa163570 <line:1266:7, line:1271:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa163258 <line:1266:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0xa163240 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0xa163224 <col:14> 'size_t':'unsigned int' lvalue Var 0xa162650 '__idx' 'size_t':'unsigned int')))
    (CompoundStmt 0xa163558 <line:1267:2, line:1271:2>
      (BinaryOperator 0xa1632e0 <line:1268:4, col:13> '<dependent type>' '='
        (UnaryOperator 0xa1632b0 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0xa163298 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa163264 <col:5> '_CharT *' lvalue ParmVar 0xa162350 '__s' '_CharT *')))
        (DeclRefExpr 0xa1632c4 <col:13> '_CharT' lvalue ParmVar 0xa162390 '__sep' '_CharT'))
      (ForStmt 0xa163530 <line:1269:4, line:1270:23>
        (DeclStmt 0xa1633b0 <line:1269:9, col:33>
          0xa163300 "char __i =
            (ImplicitCastExpr 0xa1633a0 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0xa163388 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0xa163368 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0xa163334 <col:20> 'const char *' lvalue ParmVar 0xa1623e0 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0xa163378 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa16334c <col:27> 'size_t':'unsigned int' lvalue Var 0xa162650 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0xa163410 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0xa163400 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa1633f0 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0xa1633c0 <col:35> 'char' lvalue Var 0xa163300 '__i' 'char')))
          (IntegerLiteral 0xa1633d8 <col:41> 'int' 0))
        (UnaryOperator 0xa163440 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0xa163428 <col:46> 'char' lvalue Var 0xa163300 '__i' 'char'))
        (BinaryOperator 0xa163518 <line:1270:6, col:23> '<dependent type>' '='
          (UnaryOperator 0xa1634a0 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0xa163488 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa163454 <col:7> '_CharT *' lvalue ParmVar 0xa162350 '__s' '_CharT *')))
          (UnaryOperator 0xa163500 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0xa1634e8 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa1634b4 <col:16> 'const _CharT *' lvalue ParmVar 0xa162490 '__first' 'const _CharT *')))))))
  (ReturnStmt 0xa1635a0 <line:1273:7, col:14>
    (DeclRefExpr 0xa163584 <col:14> '_CharT *' lvalue ParmVar 0xa162350 '__s' '_CharT *')))

;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    };
    class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    };
    class ctype_byname;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    };
    class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    };
    class ctype_byname;
}
extern void *__builtin_alloca(unsigned int);
namespace std {
    template <typename _Facet> inline const _Facet &__check_facet(const _Facet *__f) (CompoundStmt 0xa187430 </usr/include/c++/4.6/bits/basic_ios.h:48:5, line:52:5>
  (IfStmt 0xa1873d0 <line:49:7, line:50:19>
    <<<NULL>>>
    (UnaryOperator 0xa187338 <line:49:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa18731c <col:12> 'const _Facet *' lvalue ParmVar 0xa1871d0 '__f' 'const _Facet *'))
    (CallExpr 0xa1873b0 <line:50:2, col:19> 'void'
      (ImplicitCastExpr 0xa1873a0 <col:2> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa187384 <col:2> 'void (void) __attribute__((noreturn))' lvalue Function 0x9e22a60 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa187420 <line:51:7, col:15>
    (UnaryOperator 0xa187408 <col:14, col:15> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa1873ec <col:15> 'const _Facet *' lvalue ParmVar 0xa1871d0 '__f' 'const _Facet *'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef ctype<_CharT> __ctype_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
    protected:
    protected:
        basic_ostream<_CharT, _Traits> *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<_CharT, _Traits> *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const (CompoundStmt 0xa18a4b0 </usr/include/c++/4.6/bits/basic_ios.h:113:7, col:65>
  (ReturnStmt 0xa18a4a0 <col:9, col:62>
    (ConditionalOperator 0xa18a480 <col:16, col:62> '<dependent type>'
      (CallExpr 0xa18a3f0 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18a3b8 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa18a3a8 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa18a410 <col:31> 'int' 0)
      (CXXConstCastExpr 0xa18a468 <col:35, col:62> 'basic_ios<_CharT, _Traits> *' const_cast<basic_ios<_CharT, _Traits> *> <NoOp>
        (CXXThisExpr 0xa18a428 <col:58> 'const basic_ios<_CharT, _Traits> *' this)))))


        bool operator!() const (CompoundStmt 0xa18a540 </usr/include/c++/4.6/bits/basic_ios.h:117:7, col:30>
  (ReturnStmt 0xa18a530 <col:9, col:27>
    (CallExpr 0xa18a510 <col:16, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa18a4d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa18a4c8 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))))


        iostate rdstate() const (CompoundStmt 0xa18a598 </usr/include/c++/4.6/bits/basic_ios.h:129:7, col:36>
  (ReturnStmt 0xa18a588 <col:9, col:16>
    (MemberExpr 0xa18a568 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa0a4290
      (CXXThisExpr 0xa18a558 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void clear(iostate __state = (ImplicitCastExpr 0xa18a380 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0xa18a364 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
);
        void setstate(iostate __state) (CompoundStmt 0xa18a700 </usr/include/c++/4.6/bits/basic_ios.h:149:7, col:49>
  (CallExpr 0xa18a6e0 <col:9, col:46> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa18a5c0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa18a5b0 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa18a6b8 <col:21, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0xa18a678 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ce0 0x9f254e0 0x9f26750)
      (CallExpr 0xa18a640 <col:21, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18a608 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0xa18a5f8 <col:21> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa18a65c <col:39> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa1887c0 '__state' 'iostate':'enum std::_Ios_Iostate'))))


        void _M_setstate(iostate __state) (CompoundStmt 0xa18a8d8 </usr/include/c++/4.6/bits/basic_ios.h:156:7, line:162:7>
  (CXXOperatorCallExpr 0xa18a798 <line:159:2, col:24> '<dependent type>'
    (UnresolvedLookupExpr 0xa18a760 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f26dd0)
    (MemberExpr 0xa18a728 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa0a4290
      (CXXThisExpr 0xa18a718 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa18a748 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa188880 '__state' 'iostate':'enum std::_Ios_Iostate'))
  (IfStmt 0xa18a8b8 <line:160:2, line:161:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa18a880 <line:160:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa18a840 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (CallExpr 0xa18a808 <col:6, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18a7d0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa18a7c0 <col:6> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa18a824 <col:27> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa188880 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (NullStmt 0xa18a8a8 <line:161:27>)
    <<<NULL>>>))


        bool good() const (CompoundStmt 0xa18aa08 </usr/include/c++/4.6/bits/basic_ios.h:172:7, col:38>
  (ReturnStmt 0xa18a9f8 <col:9, col:35>
    (CXXOperatorCallExpr 0xa18a9d0 <col:16, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa18a970 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
      (CallExpr 0xa18a938 <col:16, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18a900 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa18a8f0 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa18a958 <col:35> 'int' 0))))


        bool eof() const (CompoundStmt 0xa18abc8 </usr/include/c++/4.6/bits/basic_ios.h:182:7, col:49>
  (ReturnStmt 0xa18abb8 <col:9, col:46>
    (CXXOperatorCallExpr 0xa18ab90 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa18ab38 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (ParenExpr 0xa18ab08 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0xa18aae0 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa18aaa0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
          (CallExpr 0xa18aa68 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa18aa30 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa18aa20 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa18aa84 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0xa18ab20 <col:46> 'int' 0))))


        bool fail() const (CompoundStmt 0xa18e940 </usr/include/c++/4.6/bits/basic_ios.h:193:7, col:61>
  (ReturnStmt 0xa18e930 <col:9, col:58>
    (CXXOperatorCallExpr 0xa18e908 <col:16, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0xa18e8b0 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (ParenExpr 0xa18e880 <col:16, col:53> '<dependent type>'
        (CXXOperatorCallExpr 0xa18e858 <col:17, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa18e818 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
          (CallExpr 0xa18e740 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa18e708 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa18abe0 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (ParenExpr 0xa18e800 <col:35, col:52> 'enum std::_Ios_Iostate'
            (CXXOperatorCallExpr 0xa18e7d8 <col:36, col:45> 'enum std::_Ios_Iostate'
              (ImplicitCastExpr 0xa18e7c8 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa18e7b0 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9f26750 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
              (ImplicitCastExpr 0xa18e790 <col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa18e75c <col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
              (ImplicitCastExpr 0xa18e7a0 <col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa18e774 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
      (IntegerLiteral 0xa18e898 <col:58> 'int' 0))))


        bool bad() const (CompoundStmt 0xa18eb00 </usr/include/c++/4.6/bits/basic_ios.h:203:7, col:49>
  (ReturnStmt 0xa18eaf0 <col:9, col:46>
    (CXXOperatorCallExpr 0xa18eac8 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa18ea70 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (ParenExpr 0xa18ea40 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0xa18ea18 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa18e9d8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
          (CallExpr 0xa18e9a0 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa18e968 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa18e958 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa18e9bc <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0xa18ea58 <col:46> 'int' 0))))


        iostate exceptions() const (CompoundStmt 0xa18eb58 </usr/include/c++/4.6/bits/basic_ios.h:214:7, col:30>
  (ReturnStmt 0xa18eb48 <col:9, col:16>
    (MemberExpr 0xa18eb28 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_exception 0xa0a4250
      (CXXThisExpr 0xa18eb18 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void exceptions(iostate __except) (CompoundStmt 0xa18ec68 </usr/include/c++/4.6/bits/basic_ios.h:249:7, line:252:7>
  (BinaryOperator 0xa18ebb8 <line:250:9, col:24> '<dependent type>' '='
    (MemberExpr 0xa18eb80 <col:9> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0xa0a4250
      (CXXThisExpr 0xa18eb70 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa18eba0 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa188bc0 '__except' 'iostate':'enum std::_Ios_Iostate'))
  (CallExpr 0xa18ec48 <line:251:9, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa18ebe0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa18ebd0 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0xa18ec28 <col:21> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa0a4290
      (CXXThisExpr 0xa18ec18 <col:21> 'basic_ios<_CharT, _Traits> *' this))))


        basic_ios<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : std::ios_base(), _M_tie((IntegerLiteral 0xa18ecd8 </usr/include/c++/4.6/bits/basic_ios.h:262:28> 'int' 0)
), _M_fill(), _M_fill_init((CXXBoolLiteralExpr 0xa18ed58 </usr/include/c++/4.6/bits/basic_ios.h:262:56> '_Bool' false)
), _M_streambuf((IntegerLiteral 0xa18eda8 </usr/include/c++/4.6/bits/basic_ios.h:262:77> 'int' 0)
), _M_ctype((IntegerLiteral 0xa18edf8 </usr/include/c++/4.6/bits/basic_ios.h:263:11> 'int' 0)
), _M_num_put((IntegerLiteral 0xa18ee48 </usr/include/c++/4.6/bits/basic_ios.h:263:26> 'int' 0)
), _M_num_get((IntegerLiteral 0xa18ee98 </usr/include/c++/4.6/bits/basic_ios.h:263:41> 'int' 0)
) (CompoundStmt 0xa18ef88 </usr/include/c++/4.6/bits/basic_ios.h:264:7, col:27>
  (CallExpr 0xa18ef68 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa18ef18 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa18ef08 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa18ef4c <col:20> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa188db0 '__sb' 'basic_streambuf<_CharT, _Traits> *')))


        virtual void ~basic_ios<_CharT, _Traits>() (CompoundStmt 0xa18efa0 </usr/include/c++/4.6/bits/basic_ios.h:273:20, col:22>)


        basic_ostream<_CharT, _Traits> *tie() const (CompoundStmt 0xa18eff0 </usr/include/c++/4.6/bits/basic_ios.h:287:7, col:24>
  (ReturnStmt 0xa18efe0 <col:9, col:16>
    (MemberExpr 0xa18efc0 <col:16> 'basic_ostream<_CharT, _Traits> *const' lvalue ->_M_tie 0xa1880b0
      (CXXThisExpr 0xa18efb0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_ostream<_CharT, _Traits> *tie(basic_ostream<_CharT, _Traits> *__tiestr) (CompoundStmt 0xa18f240 </usr/include/c++/4.6/bits/basic_ios.h:299:7, line:303:7>
  (DeclStmt 0xa18f1a8 <line:300:9, col:55>
    0xa18f140 "basic_ostream<_CharT, _Traits> *__old =
      (MemberExpr 0xa18f188 <col:49> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa1880b0
        (CXXThisExpr 0xa18f178 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0xa18f200 <line:301:9, col:18> '<dependent type>' '='
    (MemberExpr 0xa18f1c8 <col:9> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa1880b0
      (CXXThisExpr 0xa18f1b8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa18f1e8 <col:18> 'basic_ostream<_CharT, _Traits> *' lvalue ParmVar 0xa189340 '__tiestr' 'basic_ostream<_CharT, _Traits> *'))
  (ReturnStmt 0xa18f230 <line:302:9, col:16>
    (DeclRefExpr 0xa18f218 <col:16> 'basic_ostream<_CharT, _Traits> *' lvalue Var 0xa18f140 '__old' 'basic_ostream<_CharT, _Traits> *')))


        basic_streambuf<_CharT, _Traits> *rdbuf() const (CompoundStmt 0xa18f2a0 </usr/include/c++/4.6/bits/basic_ios.h:313:7, col:30>
  (ReturnStmt 0xa18f290 <col:9, col:16>
    (MemberExpr 0xa18f270 <col:16> 'basic_streambuf<_CharT, _Traits> *const' lvalue ->_M_streambuf 0xa1882a0
      (CXXThisExpr 0xa18f260 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb);
        basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs);
        char_type fill() const (CompoundStmt 0xa18f4a8 </usr/include/c++/4.6/bits/basic_ios.h:362:7, line:369:7>
  (IfStmt 0xa18f448 <line:363:2, line:367:4>
    <<<NULL>>>
    (UnaryOperator 0xa18f2f8 <line:363:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa18f2e8 <col:7> '_Bool' <LValueToRValue>
        (MemberExpr 0xa18f2c8 <col:7> '_Bool' lvalue ->_M_fill_init 0xa188140
          (CXXThisExpr 0xa18f2b8 <col:7> 'const basic_ios<_CharT, _Traits> *' this))))
    (CompoundStmt 0xa18f430 <line:364:4, line:367:4>
      (BinaryOperator 0xa18f3c0 <line:365:6, col:31> '<dependent type>' '='
        (MemberExpr 0xa18f320 <col:6> 'char_type':'_CharT' lvalue ->_M_fill 0xa188100
          (CXXThisExpr 0xa18f310 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa18f3a0 <col:16, col:31> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa18f350 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0xa18f340 <col:16> 'const basic_ios<_CharT, _Traits> *' this))
          (CharacterLiteral 0xa18f388 <col:28> 'char'32)))
      (BinaryOperator 0xa18f418 <line:366:6, col:21> '<dependent type>' '='
        (MemberExpr 0xa18f3e8 <col:6> '_Bool' lvalue ->_M_fill_init 0xa188140
          (CXXThisExpr 0xa18f3d8 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa18f408 <col:21> '_Bool' true)))
    <<<NULL>>>)
  (ReturnStmt 0xa18f498 <line:368:2, col:9>
    (MemberExpr 0xa18f478 <col:9> 'char_type':'_CharT' lvalue ->_M_fill 0xa188100
      (CXXThisExpr 0xa18f468 <col:9> 'const basic_ios<_CharT, _Traits> *' this))))


        char_type fill(char_type __ch) (CompoundStmt 0xa18f608 </usr/include/c++/4.6/bits/basic_ios.h:382:7, line:386:7>
  (DeclStmt 0xa18f570 <line:383:2, col:32>
    0xa18f4d0 "char_type __old =
      (CallExpr 0xa18f550 <col:20, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18f518 <col:20, col:26> '<dependent type>' lvalue
          (CXXThisExpr 0xa18f508 <col:20> 'basic_ios<_CharT, _Traits> *' this)))")
  (BinaryOperator 0xa18f5c8 <line:384:2, col:12> '<dependent type>' '='
    (MemberExpr 0xa18f590 <col:2> 'char_type':'_CharT' lvalue ->_M_fill 0xa188100
      (CXXThisExpr 0xa18f580 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa18f5b0 <col:12> 'char_type':'_CharT' lvalue ParmVar 0xa189bd0 '__ch' 'char_type':'_CharT'))
  (ReturnStmt 0xa18f5f8 <line:385:2, col:9>
    (DeclRefExpr 0xa18f5e0 <col:9> 'char_type':'_CharT' lvalue Var 0xa18f4d0 '__old' 'char_type':'_CharT')))


        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa18f750 </usr/include/c++/4.6/bits/basic_ios.h:422:7, col:63>
  (ReturnStmt 0xa18f740 <col:9, col:60>
    (CallExpr 0xa18f718 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa18f6b0 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0xa18f690 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa18f628 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0xa1872f0)
          (MemberExpr 0xa18f670 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0xa188330
            (CXXThisExpr 0xa18f660 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa18f6e4 <col:47> 'char_type':'_CharT' lvalue ParmVar 0xa189d90 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0xa18f6fc <col:52> 'char' lvalue ParmVar 0xa189dd0 '__dfault' 'char'))))


        char_type widen(char __c) const (CompoundStmt 0xa18f870 </usr/include/c++/4.6/bits/basic_ios.h:441:7, col:52>
  (ReturnStmt 0xa18f860 <col:9, col:49>
    (CallExpr 0xa18f840 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa18f7f0 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0xa18f7d0 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa18f768 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0xa1872f0)
          (MemberExpr 0xa18f7b0 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0xa188330
            (CXXThisExpr 0xa18f7a0 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa18f824 <col:46> 'char' lvalue ParmVar 0xa189ec0 '__c' 'char'))))


    protected:
    protected:
        basic_ios<_CharT, _Traits>() : std::ios_base(), _M_tie((IntegerLiteral 0xa18f8e8 </usr/include/c++/4.6/bits/basic_ios.h:452:28> 'int' 0)
), _M_fill((CXXUnresolvedConstructExpr 0xa18f940 </usr/include/c++/4.6/bits/basic_ios.h:452:40, col:50> 'char_type':'_CharT')
), _M_fill_init((CXXBoolLiteralExpr 0xa18f998 </usr/include/c++/4.6/bits/basic_ios.h:452:67> '_Bool' false)
), _M_streambuf((IntegerLiteral 0xa18f9e8 </usr/include/c++/4.6/bits/basic_ios.h:453:15> 'int' 0)
), _M_ctype((IntegerLiteral 0xa18fa38 </usr/include/c++/4.6/bits/basic_ios.h:453:28> 'int' 0)
), _M_num_put((IntegerLiteral 0xa18fa88 </usr/include/c++/4.6/bits/basic_ios.h:453:43> 'int' 0)
), _M_num_get((IntegerLiteral 0xa18fad8 </usr/include/c++/4.6/bits/basic_ios.h:453:58> 'int' 0)
) (CompoundStmt 0xa18fb48 </usr/include/c++/4.6/bits/basic_ios.h:454:7, col:9>)


        void init(basic_streambuf<_CharT, _Traits> *__sb);
        void _M_cache_locale(const std::locale &__loc);
    };
}
namespace std {
    void clear(iostate __state = (ImplicitCastExpr 0xa18a380 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0xa18a364 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
) (CompoundStmt 0xa190390 </usr/include/c++/4.6/bits/basic_ios.tcc:42:5, line:49:5>
  (IfStmt 0xa190148 <line:43:7, line:46:35>
    <<<NULL>>>
    (CallExpr 0xa18ffe0 <line:43:11, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa18ffa8 <col:11, col:17> '<dependent type>' lvalue
        (CXXThisExpr 0xa18ff98 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
    (BinaryOperator 0xa190048 <line:44:2, col:23> '<dependent type>' '='
      (MemberExpr 0xa190010 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa0a4290
        (CXXThisExpr 0xa190000 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa190030 <col:23> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa18feb0 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (BinaryOperator 0xa190130 <line:46:4, col:35> '<dependent type>' '='
      (MemberExpr 0xa190070 <col:4> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa0a4290
        (CXXThisExpr 0xa190060 <col:4> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa190108 <col:25, col:35> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa1900f8 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1900e0 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9f26750 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa1900c0 <col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa190090 <col:25> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa18feb0 '__state' 'iostate':'enum std::_Ios_Iostate'))
        (ImplicitCastExpr 0xa1900d0 <col:35> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa1900a8 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (IfStmt 0xa190370 <line:47:7, line:48:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa190278 <line:47:11, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa190238 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (CallExpr 0xa1901b0 <col:11, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa190178 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa190168 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0xa190218 <col:32, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1901e0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa1901d0 <col:32> 'basic_ios<_CharT, _Traits> *' this))))
    (CallExpr 0xa190340 <line:48:2, col:45> 'void'
      (ImplicitCastExpr 0xa190330 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa190314 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e268a0 '__throw_ios_failure' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa190360 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa190300 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa1902d4 </usr/include/c++/4.6/bits/basic_ios.tcc:48:26> 'const char [17]' lvalue "basic_ios::clear"))))
    <<<NULL>>>))


    basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0xa190d38 </usr/include/c++/4.6/bits/basic_ios.tcc:54:5, line:59:5>
  (DeclStmt 0xa190c38 <line:55:7, col:61>
    0xa190bd0 "basic_streambuf<_CharT, _Traits> *__old =
      (MemberExpr 0xa190c18 <col:49> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa1882a0
        (CXXThisExpr 0xa190c08 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0xa190c90 <line:56:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa190c58 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa1882a0
      (CXXThisExpr 0xa190c48 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa190c78 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa190850 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (CallExpr 0xa190cf0 <line:57:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa190cb8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa190ca8 <col:7> 'basic_ios<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa190d28 <line:58:7, col:14>
    (DeclRefExpr 0xa190d0c <col:14> 'basic_streambuf<_CharT, _Traits> *' lvalue Var 0xa190bd0 '__old' 'basic_streambuf<_CharT, _Traits> *')))


    basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs) (CompoundStmt 0xa192760 </usr/include/c++/4.6/bits/basic_ios.tcc:64:5, line:109:5>
  (IfStmt 0xa192708 <line:67:7, line:107:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa191408 <line:67:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa1913b0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (CXXThisExpr 0xa191328 <col:11> 'basic_ios<_CharT, _Traits> *' this)
      (CXXOperatorCallExpr 0xa191390 <col:19, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa191350 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (DeclRefExpr 0xa191338 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
    (CompoundStmt 0xa1926a8 <line:68:2, line:107:2>
      (DeclStmt 0xa191810 <line:73:4, line:74:69>
        0xa191440 "std::ios_base::_Words *__words =
          (ConditionalOperator 0xa1917f0 <line:73:22, line:74:43> '<dependent type>'
            (ParenExpr 0xa191550 <line:73:22, col:63> '<dependent type>'
              (CXXOperatorCallExpr 0xa191528 <col:23, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa1914e0 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
                (CXXDependentScopeMemberExpr 0xa191490 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa191474 <col:23> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
                (DeclRefExpr 0xa1914c4 <col:45> 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>' EnumConstant 0xa0a4d60 '_S_local_word_size' 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>')))
            (MemberExpr 0xa191578 <line:74:23> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0xa0a4e90
              (CXXThisExpr 0xa191568 <col:23> 'basic_ios<_CharT, _Traits> *' this))
            (CXXNewExpr 0xa1917b0 <col:39, col:43> 'struct std::ios_base::_Words *'
              (CXXDependentScopeMemberExpr 0xa1915b0 <col:50, col:56> '<dependent type>' lvalue
                (DeclRefExpr 0xa191598 <col:50> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))")
      (DeclStmt 0xa1918b8 <line:77:4, col:45>
        0xa191830 "std::ios_base::_Callback_list *__cb =
          (CXXDependentScopeMemberExpr 0xa191880 <col:27, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0xa191864 <col:27> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))")
      (IfStmt 0xa191968 <line:78:4, line:79:29>
        <<<NULL>>>
        (ImplicitCastExpr 0xa1918f0 <line:78:8> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0xa1918e0 <col:8> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
            (DeclRefExpr 0xa1918c8 <col:8> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa191830 '__cb' 'struct std::ios_base::_Callback_list *')))
        (CXXMemberCallExpr 0xa191948 <line:79:6, col:29> 'void'
          (MemberExpr 0xa191924 <col:6, col:12> '<bound member function type>' ->_M_add_reference 0xa0a4780
            (ImplicitCastExpr 0xa191918 <col:6> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
              (DeclRefExpr 0xa1918fc <col:6> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa191830 '__cb' 'struct std::ios_base::_Callback_list *'))))
        <<<NULL>>>)
      (CallExpr 0xa1919d0 <line:80:4, col:33> '<dependent type>'
        (MemberExpr 0xa191998 <col:4> '<bound member function type>' ->_M_call_callbacks 0xa0a4950
          (CXXThisExpr 0xa191988 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa1919b8 <col:22> 'enum std::ios_base::event' EnumConstant 0xa0a3d10 'erase_event' 'enum std::ios_base::event'))
      (IfStmt 0xa191b90 <line:81:4, line:85:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa191aa8 <line:81:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa191a50 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
          (MemberExpr 0xa191a00 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa0a4f30
            (CXXThisExpr 0xa1919f0 <col:8> 'basic_ios<_CharT, _Traits> *' this))
          (MemberExpr 0xa191a30 <col:19> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0xa0a4e90
            (CXXThisExpr 0xa191a20 <col:19> 'basic_ios<_CharT, _Traits> *' this)))
        (CompoundStmt 0xa191b78 <line:82:6, line:85:6>
          (CXXDeleteExpr 0xa191b00 <line:83:8, col:18> 'void'
            (MemberExpr 0xa191ae0 <col:18> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa0a4f30
              (CXXThisExpr 0xa191ad0 <col:18> 'basic_ios<_CharT, _Traits> *' this)))
          (BinaryOperator 0xa191b60 <line:84:8, col:18> '<dependent type>' '='
            (MemberExpr 0xa191b28 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa0a4f30
              (CXXThisExpr 0xa191b18 <col:8> 'basic_ios<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa191b48 <col:18> 'int' 0)))
        <<<NULL>>>)
      (CallExpr 0xa191be0 <line:86:4, col:25> '<dependent type>'
        (MemberExpr 0xa191bc0 <col:4> '<bound member function type>' ->_M_dispose_callbacks 0xa0a4a10
          (CXXThisExpr 0xa191bb0 <col:4> 'basic_ios<_CharT, _Traits> *' this)))
      (BinaryOperator 0xa191c48 <line:89:4, col:19> '<dependent type>' '='
        (MemberExpr 0xa191c10 <col:4> 'struct std::ios_base::_Callback_list *' lvalue ->_M_callbacks 0xa0a4870
          (CXXThisExpr 0xa191c00 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa191c30 <col:19> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa191830 '__cb' 'struct std::ios_base::_Callback_list *'))
      (ForStmt 0xa191ed8 <line:90:4, line:91:38>
        (DeclStmt 0xa191cc0 <line:90:9, col:20>
          0xa191c70 "int __i =
            (IntegerLiteral 0xa191ca8 <col:19> 'int' 0)")
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa191d80 <col:22, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa191d38 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
          (DeclRefExpr 0xa191cd0 <col:22> 'int' lvalue Var 0xa191c70 '__i' 'int')
          (CXXDependentScopeMemberExpr 0xa191d00 <col:28, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0xa191ce8 <col:28> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
        (UnaryOperator 0xa191dc0 <col:48, col:50> 'int' lvalue prefix '++'
          (DeclRefExpr 0xa191da4 <col:50> 'int' lvalue Var 0xa191c70 '__i' 'int'))
        (BinaryOperator 0xa191ec0 <line:91:6, col:38> '<dependent type>' '='
          (ArraySubscriptExpr 0xa191e28 <col:6, col:17> 'struct std::ios_base::_Words' lvalue
            (ImplicitCastExpr 0xa191e08 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
              (DeclRefExpr 0xa191dd4 <col:6> 'struct std::ios_base::_Words *' lvalue Var 0xa191440 '__words' 'struct std::ios_base::_Words *'))
            (ImplicitCastExpr 0xa191e18 <col:14> 'int' <LValueToRValue>
              (DeclRefExpr 0xa191dec <col:14> 'int' lvalue Var 0xa191c70 '__i' 'int')))
          (ArraySubscriptExpr 0xa191ea8 <col:21, col:38> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa191e58 <col:21, col:27> '<dependent type>' lvalue
              (DeclRefExpr 0xa191e3c <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
            (DeclRefExpr 0xa191e8c <col:35> 'int' lvalue Var 0xa191c70 '__i' 'int'))))
      (BinaryOperator 0xa191f48 <line:92:4, col:14> '<dependent type>' '='
        (MemberExpr 0xa191f10 <col:4> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa0a4f30
          (CXXThisExpr 0xa191f00 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa191f30 <col:14> 'struct std::ios_base::_Words *' lvalue Var 0xa191440 '__words' 'struct std::ios_base::_Words *'))
      (BinaryOperator 0xa191fe0 <line:93:4, col:25> '<dependent type>' '='
        (MemberExpr 0xa191f70 <col:4> 'int' lvalue ->_M_word_size 0xa0a4ed0
          (CXXThisExpr 0xa191f60 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CXXDependentScopeMemberExpr 0xa191fa8 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa191f90 <col:19> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
      (CallExpr 0xa1920b0 <line:95:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa192008 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa191ff8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa192090 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa192058 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa19203c <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa192188 <line:96:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1920e0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa1920d0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa192168 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa192130 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa192114 <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa192260 <line:97:4, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1921b8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa1921a8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa192240 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa192208 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0xa1921ec <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa192338 <line:98:4, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa192290 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa192280 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa192318 <col:14, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1922e0 <col:14, col:20> '<dependent type>' lvalue
            (DeclRefExpr 0xa1922c4 <col:14> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa192410 <line:99:4, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa192368 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa192358 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa1923f0 <col:15, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1923b8 <col:15, col:21> '<dependent type>' lvalue
            (DeclRefExpr 0xa19239c <col:15> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (BinaryOperator 0xa1924d0 <line:100:4, col:33> '<dependent type>' '='
        (MemberExpr 0xa192440 <col:4> 'class std::locale' lvalue ->_M_ios_locale 0xa0a50c0
          (CXXThisExpr 0xa192430 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa1924b0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa192478 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0xa192460 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa192548 <line:101:4, col:33> '<dependent type>'
        (MemberExpr 0xa1924f8 <col:4> '<bound member function type>' ->_M_cache_locale 0xa18a300
          (CXXThisExpr 0xa1924e8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (MemberExpr 0xa192528 <col:20> 'class std::locale' lvalue ->_M_ios_locale 0xa0a50c0
          (CXXThisExpr 0xa192518 <col:20> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0xa1925b0 <line:103:4, col:35> '<dependent type>'
        (MemberExpr 0xa192578 <col:4> '<bound member function type>' ->_M_call_callbacks 0xa0a4950
          (CXXThisExpr 0xa192568 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa192598 <col:22> 'enum std::ios_base::event' EnumConstant 0xa0a3d90 'copyfmt_event' 'enum std::ios_base::event'))
      (CallExpr 0xa192688 <line:106:4, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1925e0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa1925d0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa192668 <col:21, col:38> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa192630 <col:21, col:27> '<dependent type>' lvalue
            (DeclRefExpr 0xa192614 <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa1910e0 '__rhs' 'const basic_ios<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (ReturnStmt 0xa192750 <line:108:7, col:15>
    (UnaryOperator 0xa192738 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa192728 <col:15> 'basic_ios<_CharT, _Traits> *' this))))


    std::locale imbue(const std::locale &__loc) (CompoundStmt 0xa192f40 </usr/include/c++/4.6/bits/basic_ios.tcc:115:5, line:122:5>
  (DeclStmt 0xa192bd0 <line:116:7, col:35>
    0xa192b10 "std::locale __old =
      (ParenListExpr 0xa192bb0 <col:19, col:34> 'class std::locale'
        (CallExpr 0xa192b90 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa192b58 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa192b48 <col:20> 'basic_ios<_CharT, _Traits> *' this))))")
  (CallExpr 0xa192c60 <line:117:7, col:28> '<dependent type>'
    (MemberExpr 0xa192c18 <col:7, col:17> '<bound member function type>' ->imbue 0xa0a5ea0
      (CXXThisExpr 0xa192c08 <col:17> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa192c44 <col:23> 'const class std::locale' lvalue ParmVar 0xa192a20 '__loc' 'const class std::locale &'))
  (CallExpr 0xa192cc8 <line:118:7, col:28> '<dependent type>'
    (MemberExpr 0xa192c90 <col:7> '<bound member function type>' ->_M_cache_locale 0xa18a300
      (CXXThisExpr 0xa192c80 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa192cb0 <col:23> 'const class std::locale' lvalue ParmVar 0xa192a20 '__loc' 'const class std::locale &'))
  (IfStmt 0xa192ec0 <line:119:7, line:120:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa192dc0 <line:119:11, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa192d68 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (CallExpr 0xa192d30 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa192cf8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa192ce8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa192d50 <col:28> 'int' 0))
    (CallExpr 0xa192ea0 <line:120:2, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa192e50 <col:2, col:17> '<dependent type>' lvalue
        (CallExpr 0xa192e30 <col:2, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa192df8 <col:2, col:8> '<dependent type>' lvalue
            (CXXThisExpr 0xa192de8 <col:2> 'basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa192e84 <col:26> 'const class std::locale' lvalue ParmVar 0xa192a20 '__loc' 'const class std::locale &'))
    <<<NULL>>>)
  (ReturnStmt 0xa192f30 <line:121:7, col:14>
    (CXXConstructExpr 0xa192f08 <col:14> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0xa192ef8 <col:14> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0xa192edc <col:14> 'class std::locale' lvalue Var 0xa192b10 '__old' 'class std::locale')))))


    void init(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0xa1937e0 </usr/include/c++/4.6/bits/basic_ios.tcc:127:5, line:153:5>
  (CallExpr 0xa1934b0 <line:129:7, col:25> '<dependent type>'
    (MemberExpr 0xa193480 <col:7, col:17> '<bound member function type>' ->_M_init 0xa0a5110
      (CXXThisExpr 0xa193470 <col:17> 'basic_ios<_CharT, _Traits> *' this)))
  (CallExpr 0xa193530 <line:132:7, col:36> '<dependent type>'
    (MemberExpr 0xa1934e0 <col:7> '<bound member function type>' ->_M_cache_locale 0xa18a300
      (CXXThisExpr 0xa1934d0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0xa193510 <col:23> 'class std::locale' lvalue ->_M_ios_locale 0xa0a50c0
      (CXXThisExpr 0xa193500 <col:23> 'basic_ios<_CharT, _Traits> *' this)))
  (BinaryOperator 0xa1935a0 <line:146:7, col:24> '<dependent type>' '='
    (MemberExpr 0xa193560 <col:7> 'char_type':'_CharT' lvalue ->_M_fill 0xa188100
      (CXXThisExpr 0xa193550 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXUnresolvedConstructExpr 0xa193588 <col:17, col:24> '_CharT'))
  (BinaryOperator 0xa1935f8 <line:147:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa1935c8 <col:7> '_Bool' lvalue ->_M_fill_init 0xa188140
      (CXXThisExpr 0xa1935b8 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXBoolLiteralExpr 0xa1935e8 <col:22> '_Bool' false))
  (BinaryOperator 0xa193658 <line:149:7, col:16> '<dependent type>' '='
    (MemberExpr 0xa193620 <col:7> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa1880b0
      (CXXThisExpr 0xa193610 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa193640 <col:16> 'int' 0))
  (BinaryOperator 0xa1936b8 <line:150:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa193680 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0xa0a4250
      (CXXThisExpr 0xa193670 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa1936a0 <col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
  (BinaryOperator 0xa193718 <line:151:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa1936e0 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa1882a0
      (CXXThisExpr 0xa1936d0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa193700 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa193330 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (BinaryOperator 0xa1937c8 <line:152:7, col:45> '<dependent type>' '='
    (MemberExpr 0xa193740 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa0a4290
      (CXXThisExpr 0xa193730 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (ConditionalOperator 0xa1937a8 <col:28, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue
      (DeclRefExpr 0xa193760 <col:28> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa193330 '__sb' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa193778 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')
      (DeclRefExpr 0xa193790 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    void _M_cache_locale(const std::locale &__loc) (CompoundStmt 0xa1943f0 </usr/include/c++/4.6/bits/basic_ios.tcc:158:5, line:173:5>
  (IfStmt 0xa193e40 <line:159:7, line:162:13>
    <<<NULL>>>
    (CallExpr 0xa193c68 <line:159:11, col:64> '<dependent type>'
      (DeclRefExpr 0xa193b94 <col:11> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa193c38 <col:28, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa193bb8 <col:28, col:50> '<dependent type>' lvalue (ADL) = '1' 0xa0897f0)
        (DeclRefExpr 0xa193c20 <col:52> 'const class std::locale' lvalue ParmVar 0xa193ab0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa193c58 <col:60> '_Bool' true))
    (BinaryOperator 0xa193dc8 <line:160:2, col:43> '<dependent type>' '='
      (MemberExpr 0xa193ca0 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0xa188330
        (CXXThisExpr 0xa193c90 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa193da8 <col:13, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa193d68 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (CallExpr 0xa193d48 <col:14, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa193cc8 <col:14, col:36> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa193d30 <col:38> 'const class std::locale' lvalue ParmVar 0xa193ab0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa193e28 <line:162:2, col:13> '<dependent type>' '='
      (MemberExpr 0xa193df0 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0xa188330
        (CXXThisExpr 0xa193de0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa193e10 <col:13> 'int' 0)))
  (IfStmt 0xa194108 <line:164:7, line:167:15>
    <<<NULL>>>
    (CallExpr 0xa193f30 <line:164:11, col:66> '<dependent type>'
      (DeclRefExpr 0xa193e5c <col:11> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa193f00 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa193e80 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0xa0897f0)
        (DeclRefExpr 0xa193ee8 <col:54> 'const class std::locale' lvalue ParmVar 0xa193ab0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa193f20 <col:62> '_Bool' true))
    (BinaryOperator 0xa194090 <line:165:2, col:47> '<dependent type>' '='
      (MemberExpr 0xa193f68 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0xa1883c0
        (CXXThisExpr 0xa193f58 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa194070 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa194030 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (CallExpr 0xa194010 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0xa193f90 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa193ff8 <col:42> 'const class std::locale' lvalue ParmVar 0xa193ab0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa1940f0 <line:167:2, col:15> '<dependent type>' '='
      (MemberExpr 0xa1940b8 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0xa1883c0
        (CXXThisExpr 0xa1940a8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa1940d8 <col:15> 'int' 0)))
  (IfStmt 0xa1943d0 <line:169:7, line:172:15>
    <<<NULL>>>
    (CallExpr 0xa1941f8 <line:169:11, col:66> '<dependent type>'
      (DeclRefExpr 0xa194124 <col:11> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa1941c8 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa194148 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0xa0897f0)
        (DeclRefExpr 0xa1941b0 <col:54> 'const class std::locale' lvalue ParmVar 0xa193ab0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa1941e8 <col:62> '_Bool' true))
    (BinaryOperator 0xa194358 <line:170:2, col:47> '<dependent type>' '='
      (MemberExpr 0xa194230 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0xa188450
        (CXXThisExpr 0xa194220 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa194338 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa1942f8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (CallExpr 0xa1942d8 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0xa194258 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
          (DeclRefExpr 0xa1942c0 <col:42> 'const class std::locale' lvalue ParmVar 0xa193ab0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa1943b8 <line:172:2, col:15> '<dependent type>' '='
      (MemberExpr 0xa194380 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0xa188450
        (CXXThisExpr 0xa194370 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa1943a0 <col:15> 'int' 0))))


    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    };
    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream : virtual public basic_ios<_CharT, _Traits> {
        class basic_ostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef ctype<_CharT> __ctype_type;
        basic_ostream<_CharT, _Traits>(__streambuf_type *__sb) (CompoundStmt 0xa19fcc8 </usr/include/c++/4.6/ostream:84:7, col:27>
  (CallExpr 0xa19fca8 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa19fc58 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa19fc48 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa19fc8c <col:20> '__streambuf_type *' lvalue ParmVar 0xa19d8c0 '__sb' '__streambuf_type *')))


        virtual void ~basic_ostream<_CharT, _Traits>() (CompoundStmt 0xa19fce0 </usr/include/c++/4.6/ostream:92:24, col:26>)


        class sentry;
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &)) (CompoundStmt 0xa19fd60 </usr/include/c++/4.6/ostream:110:7, line:115:7>
  (ReturnStmt 0xa19fd50 <line:114:2, col:19>
    (CallExpr 0xa19fd30 <col:9, col:19> '<dependent type>'
      (DeclRefExpr 0xa19fcf0 <col:9> '__ostream_type &(*)(__ostream_type &)' lvalue ParmVar 0xa19dc80 '__pf' '__ostream_type &(*)(__ostream_type &)')
      (UnaryOperator 0xa19fd18 <col:14, col:15> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa19fd08 <col:15> 'basic_ostream<_CharT, _Traits> *' this)))))


        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0xa19fe10 </usr/include/c++/4.6/ostream:119:7, line:125:7>
  (CallExpr 0xa19fdb8 <line:123:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa19fd74 <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0xa19def0 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0xa19fda0 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa19fd90 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa19fe00 <line:124:2, col:10>
    (UnaryOperator 0xa19fde8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa19fdd8 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0xa19fec0 </usr/include/c++/4.6/ostream:129:7, line:135:7>
  (CallExpr 0xa19fe68 <line:133:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa19fe28 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0xa19e0d0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0xa19fe50 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa19fe40 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa19feb0 <line:134:2, col:10>
    (UnaryOperator 0xa19fe98 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa19fe88 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(long __n) (CompoundStmt 0xa19ff70 </usr/include/c++/4.6/ostream:167:7, col:32>
  (ReturnStmt 0xa19ff60 <col:9, col:29>
    (CallExpr 0xa19ff40 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa19fee8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa19ff24 <col:26> 'long' lvalue ParmVar 0xa19e1f0 '__n' 'long'))))


        __ostream_type &operator<<(unsigned long __n) (CompoundStmt 0xa1a0020 </usr/include/c++/4.6/ostream:171:7, col:32>
  (ReturnStmt 0xa1a0010 <col:9, col:29>
    (CallExpr 0xa19fff0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa19ff98 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa19ffd4 <col:26> 'unsigned long' lvalue ParmVar 0xa19e310 '__n' 'unsigned long'))))


        __ostream_type &operator<<(bool __n) (CompoundStmt 0xa1a00d0 </usr/include/c++/4.6/ostream:175:7, col:32>
  (ReturnStmt 0xa1a00c0 <col:9, col:29>
    (CallExpr 0xa1a00a0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa1a0048 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1a0084 <col:26> '_Bool' lvalue ParmVar 0xa19e420 '__n' '_Bool'))))


        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n) (CompoundStmt 0xa1a01c8 </usr/include/c++/4.6/ostream:182:7, line:186:7>
  (ReturnStmt 0xa1a01b8 <line:185:2, col:50>
    (CallExpr 0xa1a0198 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0xa1a00f8 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa1a0180 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0xa1a0170 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0xa1a0160 <col:46> 'unsigned short' <LValueToRValue>
            (DeclRefExpr 0xa1a0134 <col:46> 'unsigned short' lvalue ParmVar 0xa19e660 '__n' 'unsigned short')))))))


        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n) (CompoundStmt 0xa1a02c0 </usr/include/c++/4.6/ostream:193:7, line:197:7>
  (ReturnStmt 0xa1a02b0 <line:196:2, col:50>
    (CallExpr 0xa1a0290 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0xa1a01f0 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa1a0278 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0xa1a0268 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0xa1a0258 <col:46> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa1a022c <col:46> 'unsigned int' lvalue ParmVar 0xa19e8a0 '__n' 'unsigned int')))))))


        __ostream_type &operator<<(long long __n) (CompoundStmt 0xa1a0370 </usr/include/c++/4.6/ostream:202:7, col:32>
  (ReturnStmt 0xa1a0360 <col:9, col:29>
    (CallExpr 0xa1a0340 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa1a02e8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1a0324 <col:26> 'long long' lvalue ParmVar 0xa19e9c0 '__n' 'long long'))))


        __ostream_type &operator<<(unsigned long long __n) (CompoundStmt 0xa1a0420 </usr/include/c++/4.6/ostream:206:7, col:32>
  (ReturnStmt 0xa1a0410 <col:9, col:29>
    (CallExpr 0xa1a03f0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa1a0398 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1a03d4 <col:26> 'unsigned long long' lvalue ParmVar 0xa19eae0 '__n' 'unsigned long long'))))


        __ostream_type &operator<<(double __f) (CompoundStmt 0xa1a04d0 </usr/include/c++/4.6/ostream:211:7, col:32>
  (ReturnStmt 0xa1a04c0 <col:9, col:29>
    (CallExpr 0xa1a04a0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa1a0448 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1a0484 <col:26> 'double' lvalue ParmVar 0xa19ec00 '__f' 'double'))))


        __ostream_type &operator<<(float __f) (CompoundStmt 0xa1a05c8 </usr/include/c++/4.6/ostream:215:7, line:219:7>
  (ReturnStmt 0xa1a05b8 <line:218:2, col:43>
    (CallExpr 0xa1a0598 <col:9, col:43> '<dependent type>'
      (UnresolvedMemberExpr 0xa1a04f8 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa1a0580 <col:19, col:42> 'double' static_cast<double> <NoOp>
        (ImplicitCastExpr 0xa1a0570 <col:39> 'double' <FloatingCast>
          (ImplicitCastExpr 0xa1a0560 <col:39> 'float' <LValueToRValue>
            (DeclRefExpr 0xa1a0534 <col:39> 'float' lvalue ParmVar 0xa19ed20 '__f' 'float')))))))


        __ostream_type &operator<<(long double __f) (CompoundStmt 0xa1a0678 </usr/include/c++/4.6/ostream:223:7, col:32>
  (ReturnStmt 0xa1a0668 <col:9, col:29>
    (CallExpr 0xa1a0648 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa1a05f0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1a062c <col:26> 'long double' lvalue ParmVar 0xa19ee40 '__f' 'long double'))))


        __ostream_type &operator<<(const void *__p) (CompoundStmt 0xa1a0728 </usr/include/c++/4.6/ostream:227:7, col:32>
  (ReturnStmt 0xa1a0718 <col:9, col:29>
    (CallExpr 0xa1a06f8 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa1a06a0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1a06dc <col:26> 'const void *' lvalue ParmVar 0xa19ef60 '__p' 'const void *'))))


        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n) (CompoundStmt 0xa1a09c0 </usr/include/c++/4.6/ostream:289:7, line:293:7>
  (DeclStmt 0xa1a0880 <line:290:2, col:57>
    0xa1a0750 "const streamsize __put =
      (CallExpr 0xa1a0858 <col:27, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1a07f0 <col:27, col:42> '<dependent type>' lvalue
          (CallExpr 0xa1a07d0 <col:27, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1a0798 <col:27, col:33> '<dependent type>' lvalue
              (CXXThisExpr 0xa1a0788 <col:27> 'basic_ostream<_CharT, _Traits> *' this))))
        (DeclRefExpr 0xa1a0824 <col:48> 'const char_type *' lvalue ParmVar 0xa19f2f0 '__s' 'const char_type *')
        (DeclRefExpr 0xa1a083c <col:53> 'streamsize':'int' lvalue ParmVar 0xa19f330 '__n' 'streamsize':'int'))")
  (IfStmt 0xa1a09a0 <line:291:2, line:292:35>
    <<<NULL>>>
    (BinaryOperator 0xa1a08e0 <line:291:6, col:15> '_Bool' '!='
      (ImplicitCastExpr 0xa1a08c0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa1a0890 <col:6> 'const streamsize':'const int' lvalue Var 0xa1a0750 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0xa1a08d0 <col:15> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa1a08a8 <col:15> 'streamsize':'int' lvalue ParmVar 0xa19f330 '__n' 'streamsize':'int')))
    (CallExpr 0xa1a0980 <line:292:4, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1a0908 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa1a08f8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa1a095c <col:19, col:29> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>))


        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream<_CharT, _Traits>() (CompoundStmt 0xa1a0a58 </usr/include/c++/4.6/ostream:363:7, col:24>
  (CallExpr 0xa1a0a38 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1a09e8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa1a09d8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa1a0a20 <col:20> 'int' 0)))


        template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
    };
    class sentry {
        class sentry;
        bool _M_ok;
        basic_ostream<_CharT, _Traits> &_M_os;
    public:
    public:
        sentry(basic_ostream<_CharT, _Traits> &__os);
        void ~sentry() (CompoundStmt 0xa1a4110 </usr/include/c++/4.6/ostream:407:7, line:415:7>
  (IfStmt 0xa1a40f0 <line:409:2, line:414:4>
    <<<NULL>>>
    (BinaryOperator 0xa1a3da0 <line:409:6, col:69> '_Bool' '&&'
      (CXXUnresolvedConstructExpr 0xa1a3ca8 <col:6, col:44> '_Bool'
        (CXXOperatorCallExpr 0xa1a3c80 <col:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa1a3c40 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
          (CallExpr 0xa1a3be0 <col:11, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1a3ba8 <col:11, col:17> '<dependent type>' lvalue
              (MemberExpr 0xa1a3b88 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa1a3760
                (CXXThisExpr 0xa1a3b78 <col:11> 'class std::basic_ostream::sentry *' this))))
          (DeclRefExpr 0xa1a3c1c <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3340 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
      (UnaryOperator 0xa1a3d88 <col:49, col:69> '_Bool' prefix '!'
        (CallExpr 0xa1a3d68 <col:50, col:69> '_Bool'
          (ImplicitCastExpr 0xa1a3d58 <col:50> '_Bool (*)(void) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1a3cfc <col:50> '_Bool (void) throw()' lvalue Function 0x9ecefd0 'uncaught_exception' '_Bool (void) throw()')))))
    (CompoundStmt 0xa1a40d8 <line:410:4, line:414:4>
      (IfStmt 0xa1a40b8 <line:412:6, line:413:39>
        <<<NULL>>>
        (BinaryOperator 0xa1a3fd8 <line:412:10, col:56> '<dependent type>' '&&'
          (CallExpr 0xa1a3e20 <col:10, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1a3de8 <col:10, col:16> '<dependent type>' lvalue
              (MemberExpr 0xa1a3dc8 <col:10> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa1a3760
                (CXXThisExpr 0xa1a3db8 <col:10> 'class std::basic_ostream::sentry *' this))))
          (CXXOperatorCallExpr 0xa1a3fb0 <col:27, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa1a3f50 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
            (CallExpr 0xa1a3f00 <col:27, col:50> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1a3ec8 <col:27, col:42> '<dependent type>' lvalue
                (CallExpr 0xa1a3ea8 <col:27, col:39> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1a3e70 <col:27, col:33> '<dependent type>' lvalue
                    (MemberExpr 0xa1a3e50 <col:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa1a3760
                      (CXXThisExpr 0xa1a3e40 <col:27> 'class std::basic_ostream::sentry *' this))))))
            (UnaryOperator 0xa1a3f38 <col:55, col:56> 'int' prefix '-'
              (IntegerLiteral 0xa1a3f20 <col:56> 'int' 1))))
        (CallExpr 0xa1a4098 <line:413:8, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1a4020 <col:8, col:14> '<dependent type>' lvalue
            (MemberExpr 0xa1a4000 <col:8> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa1a3760
              (CXXThisExpr 0xa1a3ff0 <col:8> 'class std::basic_ostream::sentry *' this)))
          (DeclRefExpr 0xa1a4074 <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>))


        bool operator _Bool() const (CompoundStmt 0xa1a4188 </usr/include/c++/4.6/ostream:428:7, col:23>
  (ReturnStmt 0xa1a4178 <col:9, col:16>
    (MemberExpr 0xa1a4158 <col:16> 'const _Bool' lvalue ->_M_ok 0xa1a3600
      (CXXThisExpr 0xa1a4148 <col:16> 'const class std::basic_ostream::sentry *' this))))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, wchar_t __c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, _CharT __c) (CompoundStmt 0xa1a4738 </usr/include/c++/4.6/ostream:451:5, col:48>
  (ReturnStmt 0xa1a4728 <col:7, col:45>
    (CallExpr 0xa1a4700 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a4620 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9f19180)
      (DeclRefExpr 0xa1a4654 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a4460 '__out' 'basic_ostream<_CharT, _Traits> &')
      (CXXOperatorCallExpr 0xa1a46c8 <col:38, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a4688 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (DeclRefExpr 0xa1a466c <col:39> '_CharT' lvalue ParmVar 0xa1a44a0 '__c' '_CharT'))
      (IntegerLiteral 0xa1a46e8 <col:44> 'int' 1))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, char __c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, char __c) (CompoundStmt 0xa1a4d00 </usr/include/c++/4.6/ostream:456:5, col:43>
  (ReturnStmt 0xa1a4cf0 <col:7, col:40>
    (ParenExpr 0xa1a4cd8 <col:14, col:40> '<dependent type>'
      (CXXOperatorCallExpr 0xa1a4cb0 <col:15, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a4c70 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1a4ba0 0xa1a45f0 0x9fdcd10)
        (DeclRefExpr 0xa1a4bd0 <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a4a10 '__out' 'basic_ostream<_CharT, _Traits> &')
        (CallExpr 0xa1a4c50 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1a4c00 <col:24, col:30> '<dependent type>' lvalue
            (DeclRefExpr 0xa1a4be8 <col:24> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a4a10 '__out' 'basic_ostream<_CharT, _Traits> &'))
          (DeclRefExpr 0xa1a4c34 <col:36> 'char' lvalue ParmVar 0xa1a4a50 '__c' 'char'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, char __c) (CompoundStmt 0xa1a5290 </usr/include/c++/4.6/ostream:462:5, col:48>
  (ReturnStmt 0xa1a5280 <col:7, col:45>
    (CallExpr 0xa1a5258 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a51c0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x9f19180)
      (DeclRefExpr 0xa1a51f4 <col:31> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa1a5000 '__out' 'basic_ostream<char, _Traits> &')
      (UnaryOperator 0xa1a5228 <col:38, col:39> 'char *' prefix '&'
        (DeclRefExpr 0xa1a520c <col:39> 'char' lvalue ParmVar 0xa1a5040 '__c' 'char'))
      (IntegerLiteral 0xa1a5240 <col:44> 'int' 1))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, signed char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, signed char __c) (CompoundStmt 0xa1a57f8 </usr/include/c++/4.6/ostream:468:5, col:49>
  (ReturnStmt 0xa1a57e8 <col:7, col:46>
    (ParenExpr 0xa1a57d0 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0xa1a57a8 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a5760 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1a56c0 0xa1a5190 0xa1a4ba0 0xa1a45f0 0x9fdcd10)
        (DeclRefExpr 0xa1a56f0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa1a5520 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0xa1a5748 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa1a5738 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa1a5728 <col:42> 'signed char' <LValueToRValue>
              (DeclRefExpr 0xa1a5708 <col:42> 'signed char' lvalue ParmVar 0xa1a5570 '__c' 'signed char'))))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, unsigned char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, unsigned char __c) (CompoundStmt 0xa1a5d58 </usr/include/c++/4.6/ostream:473:5, col:49>
  (ReturnStmt 0xa1a5d48 <col:7, col:46>
    (ParenExpr 0xa1a5d30 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0xa1a5d08 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a5cc0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1a5c20 0xa1a56c0 0xa1a5190 0xa1a4ba0 0xa1a45f0 0x9fdcd10)
        (DeclRefExpr 0xa1a5c50 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa1a5a80 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0xa1a5ca8 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa1a5c98 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa1a5c88 <col:42> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0xa1a5c68 <col:42> 'unsigned char' lvalue ParmVar 0xa1a5ad0 '__c' 'unsigned char'))))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s) (CompoundStmt 0xa1a6480 </usr/include/c++/4.6/ostream:493:5, line:500:5>
  (IfStmt 0xa1a6438 <line:494:7, line:498:50>
    <<<NULL>>>
    (UnaryOperator 0xa1a6238 <line:494:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa1a6220 <col:12> 'const _CharT *' lvalue ParmVar 0xa1a60a0 '__s' 'const _CharT *'))
    (CallExpr 0xa1a62e0 <line:495:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1a6268 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa1a624c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a6030 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa1a62bc <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0xa1a6410 <line:497:2, line:498:50> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a6300 <line:497:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9f19180)
      (DeclRefExpr 0xa1a6334 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a6030 '__out' 'basic_ostream<_CharT, _Traits> &')
      (DeclRefExpr 0xa1a634c <col:26> 'const _CharT *' lvalue ParmVar 0xa1a60a0 '__s' 'const _CharT *')
      (CXXStaticCastExpr 0xa1a63f8 <line:498:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0xa1a63d0 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa1a6390 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0xa1a63b4 <col:45> 'const _CharT *' lvalue ParmVar 0xa1a60a0 '__s' 'const _CharT *')))))
  (ReturnStmt 0xa1a6470 <line:499:7, col:14>
    (DeclRefExpr 0xa1a6454 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a6030 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const char *__s) (CompoundStmt 0xa1a6ff0 </usr/include/c++/4.6/ostream:510:5, line:517:5>
  (IfStmt 0xa1a6fa8 <line:511:7, line:515:50>
    <<<NULL>>>
    (UnaryOperator 0xa1a6da8 <line:511:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa1a6d98 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa1a6d88 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa1a6d70 <col:12> 'const char *' lvalue ParmVar 0xa1a6bf0 '__s' 'const char *'))))
    (CallExpr 0xa1a6e50 <line:512:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1a6dd8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa1a6dbc <col:2> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa1a6ba0 '__out' 'basic_ostream<char, _Traits> &'))
      (DeclRefExpr 0xa1a6e2c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0xa1a6f80 <line:514:2, line:515:50> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a6e70 <line:514:2> '<overloaded function type>' lvalue (ADL) = '1' 0x9f19180)
      (DeclRefExpr 0xa1a6ea4 <col:19> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa1a6ba0 '__out' 'basic_ostream<char, _Traits> &')
      (DeclRefExpr 0xa1a6ebc <col:26> 'const char *' lvalue ParmVar 0xa1a6bf0 '__s' 'const char *')
      (CXXStaticCastExpr 0xa1a6f68 <line:515:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0xa1a6f40 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa1a6f00 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0xa1a6f24 <col:45> 'const char *' lvalue ParmVar 0xa1a6bf0 '__s' 'const char *')))))
  (ReturnStmt 0xa1a6fe0 <line:516:7, col:14>
    (DeclRefExpr 0xa1a6fc4 <col:14> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa1a6ba0 '__out' 'basic_ostream<char, _Traits> &')))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const signed char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const signed char *__s) (CompoundStmt 0xa1a7580 </usr/include/c++/4.6/ostream:523:5, col:61>
  (ReturnStmt 0xa1a7570 <col:7, col:58>
    (ParenExpr 0xa1a7558 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0xa1a7530 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a74d8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1a7440 0xa1a6d40 0xa1a6900 0xa1a61f0 0xa1a5c20 0xa1a56c0 0xa1a5190 0xa1a4ba0 0xa1a45f0 0x9fdcd10)
        (DeclRefExpr 0xa1a7470 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa1a7280 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa1a74c0 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0xa1a74b0 <col:54> 'const signed char *' <LValueToRValue>
            (DeclRefExpr 0xa1a7488 <col:54> 'const signed char *' lvalue ParmVar 0xa1a72f0 '__s' 'const signed char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const unsigned char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const unsigned char *__s) (CompoundStmt 0xa1a7b18 </usr/include/c++/4.6/ostream:528:5, col:61>
  (ReturnStmt 0xa1a7b08 <col:7, col:58>
    (ParenExpr 0xa1a7af0 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0xa1a7ac8 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa1a7a68 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1a79d0 0xa1a7440 0xa1a6d40 0xa1a6900 0xa1a61f0 0xa1a5c20 0xa1a56c0 0xa1a5190 0xa1a4ba0 0xa1a45f0 0x9fdcd10)
        (DeclRefExpr 0xa1a7a00 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa1a7810 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa1a7a50 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0xa1a7a40 <col:54> 'const unsigned char *' <LValueToRValue>
            (DeclRefExpr 0xa1a7a18 <col:54> 'const unsigned char *' lvalue ParmVar 0xa1a7880 '__s' 'const unsigned char *')))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &endl(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &endl(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa1a80c8 </usr/include/c++/4.6/ostream:543:5, col:49>
  (ReturnStmt 0xa1a80b8 <col:7, col:46>
    (CallExpr 0xa1a8098 <col:14, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa1a7f70 <col:14> '<overloaded function type>' lvalue (ADL) = '1' empty)
      (CallExpr 0xa1a8078 <col:20, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1a7fb8 <col:20, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa1a7fa0 <col:20> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a7df0 '__os' 'basic_ostream<_CharT, _Traits> &'))
        (CallExpr 0xa1a8058 <col:29, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1a8008 <col:29, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0xa1a7fec <col:29> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a7df0 '__os' 'basic_ostream<_CharT, _Traits> &'))
          (CharacterLiteral 0xa1a8040 <col:40> 'char'10))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &ends(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &ends(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &ends(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa1a85a0 </usr/include/c++/4.6/ostream:554:5, col:34>
  (ReturnStmt 0xa1a8590 <col:7, col:31>
    (CallExpr 0xa1a8570 <col:14, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1a8518 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa1a84fc <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a83a0 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (CXXUnresolvedConstructExpr 0xa1a8558 <col:23, col:30> '_CharT'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &flush(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &flush(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa1a8a60 </usr/include/c++/4.6/ostream:564:5, col:28>
  (ReturnStmt 0xa1a8a50 <col:7, col:25>
    (CallExpr 0xa1a8a30 <col:14, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1a89f8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa1a89dc <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a8880 '__os' 'basic_ostream<_CharT, _Traits> &')))))

;
}
namespace std {
    basic_ostream<_CharT, _Traits>::class sentry::sentry(basic_ostream<_CharT, _Traits> &__os) : _M_ok((CXXBoolLiteralExpr 0xa1a9198 </usr/include/c++/4.6/bits/ostream.tcc:49:13> '_Bool' false)
), _M_os((DeclRefExpr 0xa1a91e8 </usr/include/c++/4.6/bits/ostream.tcc:49:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a9070 '__os' 'basic_ostream<_CharT, _Traits> &')
) (CompoundStmt 0xa1a95b8 </usr/include/c++/4.6/bits/ostream.tcc:50:5, line:59:5>
  (IfStmt 0xa1a9400 <line:52:7, line:53:20>
    <<<NULL>>>
    (BinaryOperator 0xa1a9320 <line:52:11, col:35> '<dependent type>' '&&'
      (CallExpr 0xa1a9290 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1a9258 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0xa1a9240 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a9070 '__os' 'basic_ostream<_CharT, _Traits> &')))
      (CallExpr 0xa1a9300 <col:25, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1a92c8 <col:25, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa1a92ac <col:25> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a9070 '__os' 'basic_ostream<_CharT, _Traits> &'))))
    (CallExpr 0xa1a93e0 <line:53:2, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1a93a8 <col:2, col:14> '<dependent type>' lvalue
        (CallExpr 0xa1a9388 <col:2, col:11> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1a9350 <col:2, col:7> '<dependent type>' lvalue
            (DeclRefExpr 0xa1a9338 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a9070 '__os' 'basic_ostream<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (IfStmt 0xa1a9598 <line:55:7, line:58:33>
    <<<NULL>>>
    (CallExpr 0xa1a9470 <line:55:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1a9438 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0xa1a941c <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a9070 '__os' 'basic_ostream<_CharT, _Traits> &')))
    (BinaryOperator 0xa1a94d0 <line:56:2, col:10> '<dependent type>' '='
      (MemberExpr 0xa1a94a0 <col:2> '_Bool' lvalue ->_M_ok 0xa1a3600
        (CXXThisExpr 0xa1a9490 <col:2> 'class std::basic_ostream::sentry *' this))
      (CXXBoolLiteralExpr 0xa1a94c0 <col:10> '_Bool' true))
    (CallExpr 0xa1a9578 <line:58:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1a9500 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa1a94e8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa1a9070 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa1a9554 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    template <typename _ValueT> basic_ostream<_CharT, _Traits> &_M_insert(_ValueT __v) (CompoundStmt 0xa1aa548 </usr/include/c++/4.6/bits/ostream.tcc:66:7, line:88:7>
  (DeclStmt 0xa1a9cf0 <line:67:2, col:22>
    0xa1a9c70 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa1a9cd0 <col:15, col:21> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa1a9cb8 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa1a9ca8 <col:17> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa1aa4f0 <line:68:2, line:86:4>
    <<<NULL>>>
    (DeclRefExpr 0xa1a9d00 <line:68:6> 'class std::basic_ostream::sentry' lvalue Var 0xa1a9c70 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0xa1aa4c8 <line:69:4, line:86:4>
      (DeclStmt 0xa1a9dd8 <line:70:6, col:49>
        0xa1a9d50 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa1a9dc8 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1a9da4 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa1aa1e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:76:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1a9de8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa1aa1c8 </usr/include/c++/4.6/bits/ostream.tcc:72:8, line:76:8>
          (DeclStmt 0xa1a9f38 <line:73:3, col:63>
            0xa1a9e60 "const __num_put_type &__np =
              (CallExpr 0xa1a9f18 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa1a9e98 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0xa1872f0)
                (CXXDependentScopeMemberExpr 0xa1a9ee0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0xa1a9ed0 <col:46> 'basic_ostream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa1aa1a8 <line:74:3, line:75:24>
            <<<NULL>>>
            (CallExpr 0xa1aa0d0 <line:74:7, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1aa098 <col:7, col:49> '<dependent type>' lvalue
                (CallExpr 0xa1aa068 <col:7, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1a9f60 <col:7, col:12> '<dependent type>' lvalue
                    (DeclRefExpr 0xa1a9f48 <col:7> 'const __num_put_type':'const num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa1a9e60 '__np' 'const __num_put_type &'))
                  (UnaryOperator 0xa1a9fa8 <col:16, col:17> '<dependent type>' prefix '*'
                    (CXXThisExpr 0xa1a9f98 <col:17> 'basic_ostream<_CharT, _Traits> *' this))
                  (UnaryOperator 0xa1a9fd0 <col:23, col:24> '<dependent type>' prefix '*'
                    (CXXThisExpr 0xa1a9fc0 <col:24> 'basic_ostream<_CharT, _Traits> *' this))
                  (CallExpr 0xa1aa030 <col:30, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa1a9ff8 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0xa1a9fe8 <col:30> 'basic_ostream<_CharT, _Traits> *' this)))
                  (DeclRefExpr 0xa1aa04c <col:44> '_ValueT' lvalue ParmVar 0xa1a99b0 '__v' '_ValueT'))))
            (CXXOperatorCallExpr 0xa1aa180 <line:75:5, col:24> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa1aa170 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa1aa158 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa1aa0ec <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1a9d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa1aa148 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa1aa124 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa1aa2e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:81:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1aa200 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1aa2c8 </usr/include/c++/4.6/bits/ostream.tcc:78:8, line:81:8>
          (CallExpr 0xa1aa298 <line:79:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1aa220 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa1aa210 <col:3> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1aa274 <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa1aa2b8 <line:80:26>))
        <<<NULL>>>)
      (IfStmt 0xa1aa3d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:83:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1aa300 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1aa3b8 </usr/include/c++/4.6/bits/ostream.tcc:83:8, col:47>
          (CallExpr 0xa1aa398 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1aa320 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa1aa310 <col:10> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1aa374 <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa1aa4a8 <line:84:6, line:85:28>
        <<<NULL>>>
        (ImplicitCastExpr 0xa1aa418 <line:84:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa1aa408 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1aa3ec <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1a9d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa1aa488 <line:85:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1aa438 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa1aa428 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa1aa46c <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1a9d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa1aa538 <line:87:2, col:10>
    (UnaryOperator 0xa1aa520 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1aa510 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))

;
    basic_ostream<_CharT, _Traits> &operator<<(short __n) (CompoundStmt 0xa1ab058 </usr/include/c++/4.6/bits/ostream.tcc:94:5, line:102:5>
  (DeclStmt 0xa1aacb8 <line:97:7, col:75>
    0xa1aab70 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa1aac90 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa1aac50 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (CallExpr 0xa1aabf0 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1aabb8 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa1aaba8 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa1aac2c <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3460 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0xa1ab038 <line:98:7, line:101:41>
    <<<NULL>>>
    (BinaryOperator 0xa1aae28 <line:98:11, col:56> '_Bool' '||'
      (BinaryOperator 0xa1aad60 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa1aad40 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1aad20 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa1aacc8 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1aab70 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa1aad50 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1aad30 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa1aacfc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a30a0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0xa1aae10 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0xa1aadf0 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1aadd0 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa1aad78 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa1aab70 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa1aae00 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1aade0 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa1aadac <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2f80 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0xa1aaf48 <line:99:2, col:70>
      (CallExpr 0xa1aaf28 <col:9, col:70> '<dependent type>'
        (UnresolvedMemberExpr 0xa1aae50 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa1aaf10 <col:19, col:69> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa1aaf00 <col:37, col:68> 'long' <IntegralCast>
            (CXXStaticCastExpr 0xa1aaed8 <col:37, col:68> 'unsigned short' static_cast<unsigned short> <NoOp>
              (ImplicitCastExpr 0xa1aaec8 <col:65> 'unsigned short' <IntegralCast>
                (ImplicitCastExpr 0xa1aaeb8 <col:65> 'short' <LValueToRValue>
                  (DeclRefExpr 0xa1aae8c <col:65> 'short' lvalue ParmVar 0xa1aa8f0 '__n' 'short'))))))))
    (ReturnStmt 0xa1ab028 <line:101:2, col:41>
      (CallExpr 0xa1ab008 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0xa1aaf68 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa1aaff0 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa1aafe0 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0xa1aafd0 <col:37> 'short' <LValueToRValue>
              (DeclRefExpr 0xa1aafa4 <col:37> 'short' lvalue ParmVar 0xa1aa8f0 '__n' 'short'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(int __n) (CompoundStmt 0x9cf83d8 </usr/include/c++/4.6/bits/ostream.tcc:108:5, line:116:5>
  (DeclStmt 0x9cf8038 <line:111:7, col:75>
    0x9cf7ef0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9cf8010 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9cf7fd0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (CallExpr 0x9cf7f70 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cf7f38 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x9cf7f28 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x9cf7fac <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a3460 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x9cf83b8 <line:112:7, line:115:41>
    <<<NULL>>>
    (BinaryOperator 0x9cf81a8 <line:112:11, col:56> '_Bool' '||'
      (BinaryOperator 0x9cf80e0 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x9cf80c0 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9cf80a0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9cf8048 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9cf7ef0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9cf80d0 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9cf80b0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9cf807c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a30a0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x9cf8190 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x9cf8170 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9cf8150 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9cf80f8 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9cf7ef0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9cf8180 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9cf8160 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9cf812c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a2f80 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x9cf82c8 <line:113:2, col:68>
      (CallExpr 0x9cf82a8 <col:9, col:68> '<dependent type>'
        (UnresolvedMemberExpr 0x9cf81d0 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9cf8290 <col:19, col:67> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9cf8280 <col:37, col:66> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x9cf8258 <col:37, col:66> 'unsigned int' static_cast<unsigned int> <NoOp>
              (ImplicitCastExpr 0x9cf8248 <col:63> 'unsigned int' <IntegralCast>
                (ImplicitCastExpr 0x9cf8238 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0x9cf820c <col:63> 'int' lvalue ParmVar 0x9cf7c70 '__n' 'int'))))))))
    (ReturnStmt 0x9cf83a8 <line:115:2, col:41>
      (CallExpr 0x9cf8388 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x9cf82e8 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x9cf8370 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x9cf8360 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x9cf8350 <col:37> 'int' <LValueToRValue>
              (DeclRefExpr 0x9cf8324 <col:37> 'int' lvalue ParmVar 0x9cf7c70 '__n' 'int'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(__streambuf_type *__sbin) (CompoundStmt 0x9cf91c8 </usr/include/c++/4.6/bits/ostream.tcc:122:5, line:145:5>
  (DeclStmt 0x9cf8a78 <line:123:7, col:50>
    0x9cf89f0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9cf8a68 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9cf8a44 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9cf8b10 <line:124:7, col:27>
    0x9cf8a90 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9cf8af0 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9cf8ad8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9cf8ac8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9cf9098 <line:125:7, line:141:21>
    <<<NULL>>>
    (BinaryOperator 0x9cf8b50 <line:125:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9cf8b20 <col:11> 'class std::basic_ostream::sentry' lvalue Var 0x9cf8a90 '__cerb' 'class std::basic_ostream::sentry')
      (DeclRefExpr 0x9cf8b38 <col:21> '__streambuf_type *' lvalue ParmVar 0x9cf8770 '__sbin' '__streambuf_type *'))
    (CompoundStmt 0x9cf8f70 <line:126:2, line:139:2>
      (IfStmt 0x9cf8d60 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:131:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf8b68 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9cf8d48 </usr/include/c++/4.6/bits/ostream.tcc:128:6, line:131:6>
          (IfStmt 0x9cf8d28 <line:129:8, line:130:22>
            <<<NULL>>>
            (UnaryOperator 0x9cf8c58 <line:129:12, col:52> '<dependent type>' prefix '!'
              (CallExpr 0x9cf8c30 <col:13, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x9cf8b78 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0xa0cb3a0)
                (DeclRefExpr 0x9cf8bac <col:31> '__streambuf_type *' lvalue ParmVar 0x9cf8770 '__sbin' '__streambuf_type *')
                (CallExpr 0x9cf8c10 <col:39, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9cf8bd8 <col:39, col:45> '<dependent type>' lvalue
                    (CXXThisExpr 0x9cf8bc8 <col:39> 'basic_ostream<_CharT, _Traits> *' this)))))
            (CXXOperatorCallExpr 0x9cf8d00 <line:130:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9cf8cf0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9cf8cd8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9cf8c6c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cf89f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9cf8cc8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9cf8ca4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9cf8e60 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:136:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf8d80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cf8e48 </usr/include/c++/4.6/bits/ostream.tcc:133:6, line:136:6>
          (CallExpr 0x9cf8e18 <line:134:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf8da0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9cf8d90 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9cf8df4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9cf8e38 <line:135:31>))
        <<<NULL>>>)
      (IfStmt 0x9cf8f50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:138:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf8e80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cf8f38 </usr/include/c++/4.6/bits/ostream.tcc:138:6, col:46>
          (CallExpr 0x9cf8f18 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf8ea0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9cf8e90 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9cf8ef4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0x9cf9078 <line:140:12, line:141:21>
      <<<NULL>>>
      (UnaryOperator 0x9cf8fa8 <line:140:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0x9cf8f8c <col:17> '__streambuf_type *' lvalue ParmVar 0x9cf8770 '__sbin' '__streambuf_type *'))
      (CXXOperatorCallExpr 0x9cf9050 <line:141:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9cf9040 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9cf9028 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9cf8fbc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cf89f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9cf9018 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9cf8ff4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0x9cf9170 <line:142:7, line:143:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9cf90e0 <line:142:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9cf90d0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9cf90b4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cf89f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9cf9150 <line:143:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cf9100 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9cf90f0 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9cf9134 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cf89f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9cf91b8 <line:144:7, col:15>
    (UnaryOperator 0x9cf91a0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cf9190 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &put(char_type __c) (CompoundStmt 0x9cfa020 </usr/include/c++/4.6/bits/ostream.tcc:151:5, line:179:5>
  (DeclStmt 0x9cf9840 <line:158:7, col:27>
    0x9cf97c0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9cf9820 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9cf9808 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9cf97f8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9cf9fc8 <line:159:7, line:177:2>
    <<<NULL>>>
    (DeclRefExpr 0x9cf9850 <line:159:11> 'class std::basic_ostream::sentry' lvalue Var 0x9cf97c0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9cf9fa0 <line:160:2, line:177:2>
      (DeclStmt 0x9cf9928 <line:161:4, col:47>
        0x9cf98a0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9cf9918 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9cf98f4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9cf9cb8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:167:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf9938 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9cf9ca0 </usr/include/c++/4.6/bits/ostream.tcc:163:6, line:167:6>
          (DeclStmt 0x9cf9a80 <line:164:8, col:56>
            0x9cf9970 "const int_type __put =
              (CallExpr 0x9cf9a60 <col:31, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cf9a10 <col:31, col:46> '<dependent type>' lvalue
                  (CallExpr 0x9cf99f0 <col:31, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9cf99b8 <col:31, col:37> '<dependent type>' lvalue
                      (CXXThisExpr 0x9cf99a8 <col:31> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9cf9a44 <col:52> 'char_type':'_CharT' lvalue ParmVar 0x9cf9570 '__c' 'char_type':'_CharT'))")
          (IfStmt 0x9cf9c80 <line:165:8, line:166:22>
            <<<NULL>>>
            (CallExpr 0x9cf9ba0 <line:165:12, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cf9ad8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9cf9b0c <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9cf9970 '__put' 'const int_type':'const typename _Traits::int_type')
              (CallExpr 0x9cf9b80 <col:44, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cf9b48 <col:44, col:57> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0x9cf9c58 <line:166:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9cf9c48 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9cf9c30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9cf9bc4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cf98a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9cf9c20 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9cf9bfc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9cf9db8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:172:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf9cd8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cf9da0 </usr/include/c++/4.6/bits/ostream.tcc:169:6, line:172:6>
          (CallExpr 0x9cf9d70 <line:170:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf9cf8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9cf9ce8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9cf9d4c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9cf9d90 <line:171:31>))
        <<<NULL>>>)
      (IfStmt 0x9cf9ea8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:174:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cf9dd8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cf9e90 </usr/include/c++/4.6/bits/ostream.tcc:174:6, col:45>
          (CallExpr 0x9cf9e70 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cf9df8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9cf9de8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9cf9e4c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9cf9f80 <line:175:4, line:176:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9cf9ef0 <line:175:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9cf9ee0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9cf9ec4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cf98a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9cf9f60 <line:176:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9cf9f10 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9cf9f00 <col:6> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9cf9f44 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cf98a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9cfa010 <line:178:7, col:15>
    (UnaryOperator 0x9cf9ff8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cf9fe8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &write(const _CharT *__s, streamsize __n) (CompoundStmt 0x9cfaa50 </usr/include/c++/4.6/bits/ostream.tcc:185:5, line:207:5>
  (DeclStmt 0x9cfa6f0 <line:193:7, col:27>
    0x9cfa670 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x9cfa6d0 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x9cfa6b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9cfa6a8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x9cfa9f8 <line:194:7, line:205:2>
    <<<NULL>>>
    (DeclRefExpr 0x9cfa700 <line:194:11> 'class std::basic_ostream::sentry' lvalue Var 0x9cfa670 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x9cfa9d8 <line:195:2, line:205:2>
      (IfStmt 0x9cfa7c8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:197:28>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cfa718 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9cfa7b0 </usr/include/c++/4.6/bits/ostream.tcc:197:6, col:28>
          (CallExpr 0x9cfa788 <col:8, col:25> '<dependent type>'
            (MemberExpr 0x9cfa738 <col:8> '<bound member function type>' ->_M_write 0xa19f3d0
              (CXXThisExpr 0x9cfa728 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9cfa758 <col:17> 'const _CharT *' lvalue ParmVar 0x9cfa3e0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9cfa770 <col:22> 'streamsize':'int' lvalue ParmVar 0x9cfa420 '__n' 'streamsize':'int')))
        <<<NULL>>>)
      (IfStmt 0x9cfa8c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:202:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cfa7e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cfa8b0 </usr/include/c++/4.6/bits/ostream.tcc:199:6, line:202:6>
          (CallExpr 0x9cfa880 <line:200:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cfa808 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9cfa7f8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9cfa85c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9cfa8a0 <line:201:31>))
        <<<NULL>>>)
      (IfStmt 0x9cfa9b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:204:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cfa8e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cfa9a0 </usr/include/c++/4.6/bits/ostream.tcc:204:6, col:45>
          (CallExpr 0x9cfa980 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cfa908 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9cfa8f8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9cfa95c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9cfaa40 <line:206:7, col:15>
    (UnaryOperator 0x9cfaa28 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cfaa18 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &flush() (CompoundStmt 0x9cfb6b0 </usr/include/c++/4.6/bits/ostream.tcc:213:5, line:233:5>
  (DeclStmt 0x9cfb088 <line:217:7, col:50>
    0x9cfb000 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9cfb078 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9cfb054 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9cfb390 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:222:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfb098 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9cfb378 </usr/include/c++/4.6/bits/ostream.tcc:219:2, line:222:2>
      (IfStmt 0x9cfb358 <line:220:4, line:221:25>
        <<<NULL>>>
        (BinaryOperator 0x9cfb288 <line:220:8, col:54> '<dependent type>' '&&'
          (CallExpr 0x9cfb0f0 <col:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cfb0b8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9cfb0a8 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
          (CXXOperatorCallExpr 0x9cfb260 <col:25, col:54> '<dependent type>'
            (UnresolvedLookupExpr 0x9cfb200 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
            (CallExpr 0x9cfb1b0 <col:25, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9cfb178 <col:25, col:40> '<dependent type>' lvalue
                (CallExpr 0x9cfb158 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9cfb120 <col:25, col:31> '<dependent type>' lvalue
                    (CXXThisExpr 0x9cfb110 <col:25> 'basic_ostream<_CharT, _Traits> *' this)))))
            (UnaryOperator 0x9cfb1e8 <col:53, col:54> 'int' prefix '-'
              (IntegerLiteral 0x9cfb1d0 <col:54> 'int' 1))))
        (CXXOperatorCallExpr 0x9cfb330 <line:221:6, col:25> 'const enum std::_Ios_Iostate' lvalue
          (ImplicitCastExpr 0x9cfb320 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9cfb308 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
          (DeclRefExpr 0x9cfb2a0 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cfb000 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
          (ImplicitCastExpr 0x9cfb2f8 <col:15, col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9cfb2d4 <col:15, col:25> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9cfb490 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:227:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfb3b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9cfb478 </usr/include/c++/4.6/bits/ostream.tcc:224:2, line:227:2>
      (CallExpr 0x9cfb448 <line:225:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cfb3d0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9cfb3c0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9cfb424 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9cfb468 <line:226:27>))
    <<<NULL>>>)
  (IfStmt 0x9cfb580 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:229:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfb4b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9cfb568 </usr/include/c++/4.6/bits/ostream.tcc:229:2, col:41>
      (CallExpr 0x9cfb548 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cfb4d0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9cfb4c0 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9cfb524 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9cfb658 <line:230:7, line:231:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9cfb5c8 <line:230:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9cfb5b8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9cfb59c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cfb000 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9cfb638 <line:231:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cfb5e8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9cfb5d8 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9cfb61c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cfb000 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9cfb6a0 <line:232:7, col:15>
    (UnaryOperator 0x9cfb688 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cfb678 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    typename basic_ostream<_CharT, _Traits>::pos_type tellp() (CompoundStmt 0x9cfc1e0 </usr/include/c++/4.6/bits/ostream.tcc:239:5, line:254:5>
  (DeclStmt 0x9cfbd40 <line:240:7, col:36>
    0x9cfbcb0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9cfbd20 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0x9cfbd08 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0x9cfbcf0 <col:34> 'int' 1)))")
  (IfStmt 0x9cfbfa8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:245:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfbd50 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9cfbf90 </usr/include/c++/4.6/bits/ostream.tcc:242:2, line:245:2>
      (IfStmt 0x9cfbf70 <line:243:4, line:244:71>
        <<<NULL>>>
        (UnaryOperator 0x9cfbdc8 <line:243:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9cfbda8 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cfbd70 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9cfbd60 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (BinaryOperator 0x9cfbf58 <line:244:6, col:71> '<dependent type>' '='
          (DeclRefExpr 0x9cfbddc <col:6> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9cfbcb0 '__ret' 'pos_type':'typename _Traits::pos_type')
          (CallExpr 0x9cfbf30 <col:14, col:71> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cfbe60 <col:14, col:29> '<dependent type>' lvalue
              (CallExpr 0x9cfbe40 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cfbe08 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0x9cfbdf8 <col:14> 'basic_ostream<_CharT, _Traits> *' this))))
            (IntegerLiteral 0x9cfbe98 <col:40> 'int' 0)
            (DeclRefExpr 0x9cfbecc <col:43, col:53> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa0a3a30 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
            (DeclRefExpr 0x9cfbf0c <col:58, col:68> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9cfc0a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:250:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfbfc8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9cfc090 </usr/include/c++/4.6/bits/ostream.tcc:247:2, line:250:2>
      (CallExpr 0x9cfc060 <line:248:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cfbfe8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9cfbfd8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9cfc03c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9cfc080 <line:249:27>))
    <<<NULL>>>)
  (IfStmt 0x9cfc198 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:252:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfc0c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9cfc180 </usr/include/c++/4.6/bits/ostream.tcc:252:2, col:41>
      (CallExpr 0x9cfc160 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cfc0e8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9cfc0d8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9cfc13c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9cfc1d0 <line:253:7, col:14>
    (DeclRefExpr 0x9cfc1b4 <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x9cfbcb0 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_ostream<_CharT, _Traits> &seekp(pos_type __pos) (CompoundStmt 0x9cfd010 </usr/include/c++/4.6/bits/ostream.tcc:260:5, line:286:5>
  (DeclStmt 0x9cfc898 <line:261:7, col:50>
    0x9cfc810 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9cfc888 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9cfc864 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9cfccf0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:275:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfc8a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9cfccd8 </usr/include/c++/4.6/bits/ostream.tcc:263:2, line:275:2>
      (IfStmt 0x9cfccb8 <line:264:4, line:274:6>
        <<<NULL>>>
        (UnaryOperator 0x9cfc920 <line:264:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9cfc900 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cfc8c8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9cfc8b8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x9cfcca0 <line:265:6, line:274:6>
          (DeclStmt 0x9cfca98 <line:268:8, line:269:27>
            0x9cfc940 "const pos_type __p =
              (CallExpr 0x9cfca70 <line:268:29, line:269:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cfc9e0 <line:268:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x9cfc9c0 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9cfc988 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x9cfc978 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9cfca14 <col:55> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0x9cfc590 '__pos' 'pos_type':'typename _Traits::pos_type')
                (DeclRefExpr 0x9cfca4c <line:269:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9cfcc80 <line:272:8, line:273:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9cfcba0 <line:272:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9cfcb40 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
              (DeclRefExpr 0x9cfcaa8 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9cfc940 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x9cfcb20 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x9cfcb00 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x9cfcae8 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x9cfcad0 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x9cfcc58 <line:273:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9cfcc48 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9cfcc30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9cfcbc4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cfc810 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9cfcc20 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9cfcbfc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9cfcdf0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:280:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfcd10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9cfcdd8 </usr/include/c++/4.6/bits/ostream.tcc:277:2, line:280:2>
      (CallExpr 0x9cfcda8 <line:278:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cfcd30 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9cfcd20 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9cfcd84 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9cfcdc8 <line:279:27>))
    <<<NULL>>>)
  (IfStmt 0x9cfcee0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:282:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfce10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9cfcec8 </usr/include/c++/4.6/bits/ostream.tcc:282:2, col:41>
      (CallExpr 0x9cfcea8 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cfce30 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9cfce20 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9cfce84 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9cfcfb8 <line:283:7, line:284:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9cfcf28 <line:283:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9cfcf18 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9cfcefc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cfc810 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9cfcf98 <line:284:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cfcf48 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9cfcf38 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9cfcf7c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cfc810 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9cfd000 <line:285:7, col:15>
    (UnaryOperator 0x9cfcfe8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cfcfd8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &seekp(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0x9cfdec8 </usr/include/c++/4.6/bits/ostream.tcc:292:5, line:318:5>
  (DeclStmt 0x9cfd738 <line:293:7, col:50>
    0x9cfd6b0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9cfd728 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9cfd704 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x9cfdba8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfd748 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9cfdb90 </usr/include/c++/4.6/bits/ostream.tcc:295:2, line:307:2>
      (IfStmt 0x9cfdb70 <line:296:4, line:306:6>
        <<<NULL>>>
        (UnaryOperator 0x9cfd7c0 <line:296:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x9cfd7a0 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cfd768 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x9cfd758 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x9cfdb58 <line:297:6, line:306:6>
          (DeclStmt 0x9cfd950 <line:300:8, line:301:27>
            0x9cfd7e0 "const pos_type __p =
              (CallExpr 0x9cfd928 <line:300:29, line:301:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cfd880 <line:300:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x9cfd860 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9cfd828 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x9cfd818 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x9cfd8b4 <col:55> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0x9cfd3c0 '__off' 'off_type':'typename _Traits::off_type')
                (DeclRefExpr 0x9cfd8cc <col:62> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9cfd430 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                (DeclRefExpr 0x9cfd904 <line:301:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9cfdb38 <line:304:8, line:305:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9cfda58 <line:304:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9cfd9f8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
              (DeclRefExpr 0x9cfd960 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9cfd7e0 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x9cfd9d8 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x9cfd9b8 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x9cfd9a0 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x9cfd988 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x9cfdb10 <line:305:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9cfdb00 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9cfdae8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9cfda7c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cfd6b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9cfdad8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9cfdab4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9cfdca8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfdbc8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9cfdc90 </usr/include/c++/4.6/bits/ostream.tcc:309:2, line:312:2>
      (CallExpr 0x9cfdc60 <line:310:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cfdbe8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9cfdbd8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9cfdc3c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x9cfdc80 <line:311:27>))
    <<<NULL>>>)
  (IfStmt 0x9cfdd98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:314:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9cfdcc8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9cfdd80 </usr/include/c++/4.6/bits/ostream.tcc:314:2, col:41>
      (CallExpr 0x9cfdd60 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9cfdce8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9cfdcd8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x9cfdd3c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9cfde70 <line:315:7, line:316:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9cfdde0 <line:315:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9cfddd0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9cfddb4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cfd6b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9cfde50 <line:316:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cfde00 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9cfddf0 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9cfde34 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9cfd6b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9cfdeb8 <line:317:7, col:15>
    (UnaryOperator 0x9cfdea0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9cfde90 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s) (CompoundStmt 0x9cff2c8 </usr/include/c++/4.6/bits/ostream.tcc:323:5, line:355:5>
  (IfStmt 0x9cff280 <line:324:7, line:353:2>
    <<<NULL>>>
    (UnaryOperator 0x9cfe3b8 <line:324:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9cfe3a8 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x9cfe398 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9cfe37c <col:12> 'const char *' lvalue ParmVar 0x9cfe200 '__s' 'const char *'))))
    (CallExpr 0x9cfe460 <line:325:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9cfe3e8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x9cfe3cc <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9cfe1b0 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x9cfe43c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CompoundStmt 0x9cff260 <line:327:2, line:353:2>
      (DeclStmt 0x9cfe5d8 <line:330:4, col:56>
        0x9cfe490 "const size_t __clen =
          (CallExpr 0x9cfe5a8 <col:26, col:55> 'size_t':'unsigned int'
            (ImplicitCastExpr 0x9cfe598 <col:26, col:45> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9cfe540 <col:26, col:45> 'size_t (const char_type *)' lvalue CXXMethod 0x9ec73a0 'length' 'size_t (const char_type *)'))
            (ImplicitCastExpr 0x9cfe5c8 <col:52> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9cfe560 <col:52> 'const char *' lvalue ParmVar 0x9cfe200 '__s' 'const char *')))")
      (IfStmt 0x9cff040 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:345:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cfe5e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9cff020 </usr/include/c++/4.6/bits/ostream.tcc:332:6, line:345:6>
          (DeclStmt 0x9cfec28 <line:333:8, line:339:35>
            0x9cfe600 "struct __ptr_guard;"
            0x9cfeb30 "struct __ptr_guard __pg =
              (ParenListExpr 0x9cfec00 <col:15, col:34> 'struct __ptr_guard':'struct std::__ptr_guard'
                (CXXNewExpr 0x9cfebc0 <col:16, col:20> '_CharT *'
                  (DeclRefExpr 0x9cfeb64 <col:27> 'const size_t':'const unsigned int' lvalue Var 0x9cfe490 '__clen' 'const size_t':'const unsigned int')))")
          (DeclStmt 0x9cfecf8 <line:341:8, col:35>
            0x9cfec50 "_CharT *__ws =
              (CallExpr 0x9cfecd8 <col:23, col:34> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cfeca0 <col:23, col:28> '<dependent type>' lvalue
                  (DeclRefExpr 0x9cfec84 <col:23> 'struct __ptr_guard':'struct std::__ptr_guard' lvalue Var 0x9cfeb30 '__pg' 'struct __ptr_guard':'struct std::__ptr_guard')))")
          (ForStmt 0x9cfef50 <line:342:8, line:343:35>
            (DeclStmt 0x9cfed70 <line:342:13, col:28>
              0x9cfed10 "size_t __i =
                (ImplicitCastExpr 0x9cfed60 <col:27> 'size_t':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9cfed48 <col:27> 'int' 0))")
            <<<NULL>>>
            (BinaryOperator 0x9cfedd0 <col:30, col:36> '_Bool' '<'
              (ImplicitCastExpr 0x9cfedb0 <col:30> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9cfed80 <col:30> 'size_t':'unsigned int' lvalue Var 0x9cfed10 '__i' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9cfedc0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9cfed98 <col:36> 'const size_t':'const unsigned int' lvalue Var 0x9cfe490 '__clen' 'const size_t':'const unsigned int')))
            (UnaryOperator 0x9cfee00 <col:44, col:46> 'size_t':'unsigned int' lvalue prefix '++'
              (DeclRefExpr 0x9cfede8 <col:46> 'size_t':'unsigned int' lvalue Var 0x9cfed10 '__i' 'size_t':'unsigned int'))
            (BinaryOperator 0x9cfef38 <line:343:3, col:35> '<dependent type>' '='
              (ArraySubscriptExpr 0x9cfee48 <col:3, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0x9cfee14 <col:3> '_CharT *' lvalue Var 0x9cfec50 '__ws' '_CharT *')
                (DeclRefExpr 0x9cfee2c <col:8> 'size_t':'unsigned int' lvalue Var 0x9cfed10 '__i' 'size_t':'unsigned int'))
              (CallExpr 0x9cfef18 <col:15, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9cfee78 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x9cfee5c <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9cfe1b0 '__out' 'basic_ostream<_CharT, _Traits> &'))
                (ArraySubscriptExpr 0x9cfef00 <col:27, col:34> 'const char' lvalue
                  (ImplicitCastExpr 0x9cfeee0 <col:27> 'const char *' <LValueToRValue>
                    (DeclRefExpr 0x9cfeeac <col:27> 'const char *' lvalue ParmVar 0x9cfe200 '__s' 'const char *'))
                  (ImplicitCastExpr 0x9cfeef0 <col:31> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x9cfeec4 <col:31> 'size_t':'unsigned int' lvalue Var 0x9cfed10 '__i' 'size_t':'unsigned int'))))))
          (CallExpr 0x9cfeff8 <line:344:8, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9cfef78 <col:8> '<overloaded function type>' lvalue (ADL) = '1' 0x9f19180)
            (DeclRefExpr 0x9cfefac <col:25> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9cfe1b0 '__out' 'basic_ostream<_CharT, _Traits> &')
            (DeclRefExpr 0x9cfefc4 <col:32> '_CharT *' lvalue Var 0x9cfec50 '__ws' '_CharT *')
            (DeclRefExpr 0x9cfefdc <col:38> 'const size_t':'const unsigned int' lvalue Var 0x9cfe490 '__clen' 'const size_t':'const unsigned int')))
        <<<NULL>>>)
      (IfStmt 0x9cff148 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:350:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cff060 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cff130 </usr/include/c++/4.6/bits/ostream.tcc:347:6, line:350:6>
          (CallExpr 0x9cff100 <line:348:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cff088 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9cff070 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9cfe1b0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9cff0dc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9cff120 <line:349:31>))
        <<<NULL>>>)
      (IfStmt 0x9cff240 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:352:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9cff168 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9cff228 </usr/include/c++/4.6/bits/ostream.tcc:352:6, col:45>
          (CallExpr 0x9cff208 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9cff190 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x9cff178 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9cfe1b0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x9cff1e4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)))
  (ReturnStmt 0x9cff2b8 <line:354:7, col:14>
    (DeclRefExpr 0x9cff29c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x9cfe1b0 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    };
    class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream : virtual public basic_ios<_CharT, _Traits> {
        class basic_istream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
        typedef ctype<_CharT> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream<_CharT, _Traits>(__streambuf_type *__sb) : _M_gcount((CXXFunctionalCastExpr 0xa1dffb0 </usr/include/c++/4.6/istream:93:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0xa1dff98 <col:30> 'int' 0))
) (CompoundStmt 0xa1e00a8 </usr/include/c++/4.6/istream:94:7, col:27>
  (CallExpr 0xa1e0088 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e0038 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa1e0028 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa1e006c <col:20> '__streambuf_type *' lvalue ParmVar 0xa1dceb0 '__sb' '__streambuf_type *')))


        virtual void ~basic_istream<_CharT, _Traits>() (CompoundStmt 0xa1e0140 </usr/include/c++/4.6/istream:103:7, col:36>
  (BinaryOperator 0xa1e0128 <col:9, col:33> '<dependent type>' '='
    (MemberExpr 0xa1e00d0 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa1e00c0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (CXXFunctionalCastExpr 0xa1e0110 <col:21, col:33> 'streamsize':'int' functional cast to streamsize <NoOp>
      (IntegerLiteral 0xa1e00f8 <col:32> 'int' 0))))


        class sentry;
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &)) (CompoundStmt 0xa1e01c8 </usr/include/c++/4.6/istream:122:7, col:29>
  (ReturnStmt 0xa1e01b8 <col:9, col:26>
    (CallExpr 0xa1e0198 <col:16, col:26> '<dependent type>'
      (DeclRefExpr 0xa1e0154 <col:16> '__istream_type &(*)(__istream_type &)' lvalue ParmVar 0xa1dd270 '__pf' '__istream_type &(*)(__istream_type &)')
      (UnaryOperator 0xa1e0180 <col:21, col:22> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa1e0170 <col:22> 'basic_istream<_CharT, _Traits> *' this)))))


        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0xa1e0278 </usr/include/c++/4.6/istream:126:7, line:129:7>
  (CallExpr 0xa1e0220 <line:127:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa1e01dc <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0xa1dd480 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0xa1e0208 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1e01f8 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa1e0268 <line:128:2, col:10>
    (UnaryOperator 0xa1e0250 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1e0240 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0xa1e0328 </usr/include/c++/4.6/istream:133:7, line:136:7>
  (CallExpr 0xa1e02d0 <line:134:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa1e0290 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0xa1dd600 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0xa1e02b8 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1e02a8 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa1e0318 <line:135:2, col:10>
    (UnaryOperator 0xa1e0300 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1e02f0 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(bool &__n) (CompoundStmt 0xa1e03d8 </usr/include/c++/4.6/istream:169:7, col:33>
  (ReturnStmt 0xa1e03c8 <col:9, col:30>
    (CallExpr 0xa1e03a8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e0350 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e038c <col:27> '_Bool' lvalue ParmVar 0xa1dd720 '__n' '_Bool &'))))


        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n) (CompoundStmt 0xa1e0488 </usr/include/c++/4.6/istream:176:7, col:33>
  (ReturnStmt 0xa1e0478 <col:9, col:30>
    (CallExpr 0xa1e0458 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e0400 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e043c <col:27> 'unsigned short' lvalue ParmVar 0xa1dd960 '__n' 'unsigned short &'))))


        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n) (CompoundStmt 0xa1e0538 </usr/include/c++/4.6/istream:183:7, col:33>
  (ReturnStmt 0xa1e0528 <col:9, col:30>
    (CallExpr 0xa1e0508 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e04b0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e04ec <col:27> 'unsigned int' lvalue ParmVar 0xa1ddba0 '__n' 'unsigned int &'))))


        __istream_type &operator>>(long &__n) (CompoundStmt 0xa1e05e8 </usr/include/c++/4.6/istream:187:7, col:33>
  (ReturnStmt 0xa1e05d8 <col:9, col:30>
    (CallExpr 0xa1e05b8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e0560 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e059c <col:27> 'long' lvalue ParmVar 0xa1ddcc0 '__n' 'long &'))))


        __istream_type &operator>>(unsigned long &__n) (CompoundStmt 0xa1e0698 </usr/include/c++/4.6/istream:191:7, col:33>
  (ReturnStmt 0xa1e0688 <col:9, col:30>
    (CallExpr 0xa1e0668 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e0610 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e064c <col:27> 'unsigned long' lvalue ParmVar 0xa1ddde0 '__n' 'unsigned long &'))))


        __istream_type &operator>>(long long &__n) (CompoundStmt 0xa1e0748 </usr/include/c++/4.6/istream:196:7, col:33>
  (ReturnStmt 0xa1e0738 <col:9, col:30>
    (CallExpr 0xa1e0718 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e06c0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e06fc <col:27> 'long long' lvalue ParmVar 0xa1ddf00 '__n' 'long long &'))))


        __istream_type &operator>>(unsigned long long &__n) (CompoundStmt 0xa1e07f8 </usr/include/c++/4.6/istream:200:7, col:33>
  (ReturnStmt 0xa1e07e8 <col:9, col:30>
    (CallExpr 0xa1e07c8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e0770 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e07ac <col:27> 'unsigned long long' lvalue ParmVar 0xa1de020 '__n' 'unsigned long long &'))))


        __istream_type &operator>>(float &__f) (CompoundStmt 0xa1e08a8 </usr/include/c++/4.6/istream:205:7, col:33>
  (ReturnStmt 0xa1e0898 <col:9, col:30>
    (CallExpr 0xa1e0878 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e0820 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e085c <col:27> 'float' lvalue ParmVar 0xa1de140 '__f' 'float &'))))


        __istream_type &operator>>(double &__f) (CompoundStmt 0xa1e0958 </usr/include/c++/4.6/istream:209:7, col:33>
  (ReturnStmt 0xa1e0948 <col:9, col:30>
    (CallExpr 0xa1e0928 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e08d0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e090c <col:27> 'double' lvalue ParmVar 0xa1de260 '__f' 'double &'))))


        __istream_type &operator>>(long double &__f) (CompoundStmt 0xa1e0a08 </usr/include/c++/4.6/istream:213:7, col:33>
  (ReturnStmt 0xa1e09f8 <col:9, col:30>
    (CallExpr 0xa1e09d8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e0980 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e09bc <col:27> 'long double' lvalue ParmVar 0xa1de380 '__f' 'long double &'))))


        __istream_type &operator>>(void *&__p) (CompoundStmt 0xa1e0ab8 </usr/include/c++/4.6/istream:217:7, col:33>
  (ReturnStmt 0xa1e0aa8 <col:9, col:30>
    (CallExpr 0xa1e0a88 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa1e0a30 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa1e0a6c <col:27> 'void *' lvalue ParmVar 0xa1de4a0 '__p' 'void *&'))))


        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const (CompoundStmt 0xa1e0b28 </usr/include/c++/4.6/istream:251:7, col:27>
  (ReturnStmt 0xa1e0b18 <col:9, col:16>
    (MemberExpr 0xa1e0af8 <col:16> 'const streamsize':'const int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa1e0ae8 <col:16> 'const basic_istream<_CharT, _Traits> *' this))))


        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n) (CompoundStmt 0xa1e0c70 </usr/include/c++/4.6/istream:335:7, col:56>
  (ReturnStmt 0xa1e0c60 <col:9, col:53>
    (CallExpr 0xa1e0c38 <col:16, col:53> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1e0b50 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1e0b40 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa1e0b84 <col:26> 'char_type *' lvalue ParmVar 0xa1deb20 '__s' 'char_type *')
      (DeclRefExpr 0xa1e0b9c <col:31> 'streamsize':'int' lvalue ParmVar 0xa1deb60 '__n' 'streamsize':'int')
      (CallExpr 0xa1e0c18 <col:36, col:52> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e0bc8 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa1e0bb8 <col:36> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa1e0c00 <col:48> 'char'10)))))


        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb) (CompoundStmt 0xa1e0da0 </usr/include/c++/4.6/istream:368:7, col:52>
  (ReturnStmt 0xa1e0d90 <col:9, col:49>
    (CallExpr 0xa1e0d68 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1e0c98 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1e0c88 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa1e0ccc <col:26> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa1dee20 '__sb' '__streambuf_type &')
      (CallExpr 0xa1e0d48 <col:32, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e0cf8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa1e0ce8 <col:32> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa1e0d30 <col:44> 'char'10)))))


        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n) (CompoundStmt 0xa1e0ee8 </usr/include/c++/4.6/istream:408:7, col:60>
  (ReturnStmt 0xa1e0ed8 <col:9, col:57>
    (CallExpr 0xa1e0eb0 <col:16, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1e0dc8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa1e0db8 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa1e0dfc <col:30> 'char_type *' lvalue ParmVar 0xa1df0a0 '__s' 'char_type *')
      (DeclRefExpr 0xa1e0e14 <col:35> 'streamsize':'int' lvalue ParmVar 0xa1df0e0 '__n' 'streamsize':'int')
      (CallExpr 0xa1e0e90 <col:40, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1e0e40 <col:40, col:46> '<dependent type>' lvalue
          (CXXThisExpr 0xa1e0e30 <col:40> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa1e0e78 <col:52> 'char'10)))))


        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream<_CharT, _Traits>() : _M_gcount((CXXFunctionalCastExpr 0xa1e0f20 </usr/include/c++/4.6/istream:587:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0xa1e0f08 <col:30> 'int' 0))
) (CompoundStmt 0xa1e1000 </usr/include/c++/4.6/istream:588:7, col:24>
  (CallExpr 0xa1e0fe0 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa1e0f90 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa1e0f80 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa1e0fc8 <col:20> 'int' 0)))


        template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
    };
    basic_istream<char> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<char> &ignore(streamsize __n);
    basic_istream<char> &ignore(streamsize __n, int_type __delim);
    basic_istream<wchar_t> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<wchar_t> &ignore(streamsize __n);
    basic_istream<wchar_t> &ignore(streamsize __n, int_type __delim);
    class sentry {
        class sentry;
        bool _M_ok;
    public:
    public:
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef typename __istream_type::__ctype_type __ctype_type;
        typedef typename _Traits::int_type __int_type;
        sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws = (CXXBoolLiteralExpr 0xa1f2d30 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
);
        bool operator _Bool() const (CompoundStmt 0xa1f2db8 </usr/include/c++/4.6/istream:686:7, col:23>
  (ReturnStmt 0xa1f2da8 <col:9, col:16>
    (MemberExpr 0xa1f2d84 <col:16> 'const _Bool' lvalue ->_M_ok 0xa1f25a0
      (CXXThisExpr 0xa1f2d58 <col:16> 'const class std::basic_istream::sentry *' this))))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c) (CompoundStmt 0xa1f3830 </usr/include/c++/4.6/istream:709:5, col:54>
  (ReturnStmt 0xa1f3820 <col:7, col:51>
    (ParenExpr 0xa1f3808 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa1f37e0 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1f37a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1f3700 0xa1f3250 0xa0d96f0 0xa0d9100)
        (DeclRefExpr 0xa1f3730 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa1f3560 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa1f3788 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0xa1f3748 <col:47> 'unsigned char' lvalue ParmVar 0xa1f35b0 '__c' 'unsigned char &'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char &__c) (CompoundStmt 0xa1f3d98 </usr/include/c++/4.6/istream:714:5, col:54>
  (ReturnStmt 0xa1f3d88 <col:7, col:51>
    (ParenExpr 0xa1f3d70 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa1f3d48 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1f3d00 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1f3c60 0xa1f3700 0xa1f3250 0xa0d96f0 0xa0d9100)
        (DeclRefExpr 0xa1f3c90 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa1f3ac0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa1f3ce8 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0xa1f3ca8 <col:47> 'signed char' lvalue ParmVar 0xa1f3b10 '__c' 'signed char &'))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s);
    basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s) (CompoundStmt 0xa1f4ea0 </usr/include/c++/4.6/istream:756:5, col:54>
  (ReturnStmt 0xa1f4e90 <col:7, col:51>
    (ParenExpr 0xa1f4e78 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa1f4e50 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1f4e08 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1f4d70 0xa1f4210 0xa1f3c60 0xa1f3700 0xa1f3250 0xa0d96f0)
        (DeclRefExpr 0xa1f4da0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa1f4bd0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa1f4df0 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0xa1f4de0 <col:47> 'unsigned char *' <LValueToRValue>
            (DeclRefExpr 0xa1f4db8 <col:47> 'unsigned char *' lvalue ParmVar 0xa1f4c20 '__s' 'unsigned char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char *__s) (CompoundStmt 0xa1f5408 </usr/include/c++/4.6/istream:761:5, col:54>
  (ReturnStmt 0xa1f53f8 <col:7, col:51>
    (ParenExpr 0xa1f53e0 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa1f53b8 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa1f5368 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1f52d0 0xa1f4d70 0xa1f4210 0xa1f3c60 0xa1f3700 0xa1f3250 0xa0d96f0)
        (DeclRefExpr 0xa1f5300 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa1f5130 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa1f5350 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0xa1f5340 <col:47> 'signed char *' <LValueToRValue>
            (DeclRefExpr 0xa1f5318 <col:47> 'signed char *' lvalue ParmVar 0xa1f5180 '__s' 'signed char *')))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {
        class basic_iostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : __istream_type((DeclRefExpr 0xa1f60f8 </usr/include/c++/4.6/istream:799:24> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa1f5e90 '__sb' 'basic_streambuf<_CharT, _Traits> *')
), __ostream_type((DeclRefExpr 0xa1f6168 </usr/include/c++/4.6/istream:799:46> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa1f5e90 '__sb' 'basic_streambuf<_CharT, _Traits> *')
) (CompoundStmt 0xa1f61e0 </usr/include/c++/4.6/istream:799:52, col:54>)


        virtual void ~basic_iostream<_CharT, _Traits>() (CompoundStmt 0xa1f61f0 </usr/include/c++/4.6/istream:805:25, col:27>)


    protected:
    protected:
        basic_iostream<_CharT, _Traits>() : __istream_type(), __ostream_type() (CompoundStmt 0xa1f6280 </usr/include/c++/4.6/istream:809:44, col:46>)


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__is);
}
namespace std {
    basic_istream<_CharT, _Traits>::class sentry::sentry(basic_istream<_CharT, _Traits> &__in, bool __noskip = (CXXBoolLiteralExpr 0xa1f2d30 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
) : _M_ok((CXXBoolLiteralExpr 0xa1f6e28 </usr/include/c++/4.6/bits/istream.tcc:48:73> '_Bool' false)
) (CompoundStmt 0xa1f7e98 </usr/include/c++/4.6/bits/istream.tcc:49:5, line:82:5>
  (DeclStmt 0xa1f6f38 <line:50:7, col:50>
    0xa1f6eb0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa1f6f28 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa1f6f04 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa1f7b70 <line:51:7, line:73:2>
    <<<NULL>>>
    (CallExpr 0xa1f6f98 <line:51:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1f6f60 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0xa1f6f48 <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6cc0 '__in' 'basic_istream<_CharT, _Traits> &')))
    (CompoundStmt 0xa1f7b58 <line:52:2, line:73:2>
      (IfStmt 0xa1f70f0 <line:53:4, line:54:24>
        <<<NULL>>>
        (CallExpr 0xa1f7008 <line:53:8, col:17> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1f6fd0 <col:8, col:13> '<dependent type>' lvalue
            (DeclRefExpr 0xa1f6fb4 <col:8> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6cc0 '__in' 'basic_istream<_CharT, _Traits> &')))
        (CallExpr 0xa1f70d0 <line:54:6, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1f7098 <col:6, col:18> '<dependent type>' lvalue
            (CallExpr 0xa1f7078 <col:6, col:15> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1f7040 <col:6, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0xa1f7024 <col:6> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6cc0 '__in' 'basic_istream<_CharT, _Traits> &')))))
        <<<NULL>>>)
      (IfStmt 0xa1f7b38 <line:55:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0xa1f7290 <line:55:8, col:57> '_Bool' '&&'
          (UnaryOperator 0xa1f7138 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa1f7128 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa1f710c <col:9> '_Bool' lvalue ParmVar 0xa1f6d00 '__noskip' '_Bool')))
          (CXXUnresolvedConstructExpr 0xa1f7270 <col:21, col:57> '_Bool'
            (CXXOperatorCallExpr 0xa1f7248 <col:26, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa1f7208 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
              (CallExpr 0xa1f71a8 <col:26, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f7170 <col:26, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1f7158 <col:26> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6cc0 '__in' 'basic_istream<_CharT, _Traits> &')))
              (DeclRefExpr 0xa1f71e4 <col:41, col:51> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa0a32e0 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
        (CompoundStmt 0xa1f7b10 <line:56:6, line:72:6>
          (DeclStmt 0xa1f73a0 <line:57:8, col:51>
            0xa1f72d0 "const __int_type __eof =
              (CallExpr 0xa1f7380 <col:33, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f7348 <col:33, col:46> '<dependent type>' lvalue))")
          (DeclStmt 0xa1f7498 <line:58:8, col:45>
            0xa1f73f0 "__streambuf_type *__sb =
              (CallExpr 0xa1f7478 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f7440 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1f7424 <col:33> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6cc0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa1f7558 <line:59:8, col:38>
            0xa1f74b0 "__int_type __c =
              (CallExpr 0xa1f7538 <col:25, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f7500 <col:25, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1f74e4 <col:25> '__streambuf_type *' lvalue Var 0xa1f73f0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa1f7690 <line:61:8, col:63>
            0xa1f75b0 "const __ctype_type &__ct =
              (CallExpr 0xa1f7670 <col:35, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa1f75e8 <col:35> '<overloaded function type>' lvalue (ADL) = '1' 0xa1872f0)
                (CXXDependentScopeMemberExpr 0xa1f7638 <col:49, col:54> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1f761c <col:49> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6cc0 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (WhileStmt 0xa1f7968 <line:62:8, line:65:22>
            <<<NULL>>>
            (BinaryOperator 0xa1f78b0 <line:62:15, line:64:35> '<dependent type>' '&&'
              (UnaryOperator 0xa1f7750 <line:62:15, col:51> '<dependent type>' prefix '!'
                (CallExpr 0xa1f7728 <col:16, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1f76c0 <col:16, col:29> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa1f76f4 <col:41> '__int_type':'typename _Traits::int_type' lvalue Var 0xa1f74b0 '__c' '__int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa1f770c <col:46> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0xa1f72d0 '__eof' 'const __int_type':'const typename _Traits::int_type')))
              (CallExpr 0xa1f7888 <line:63:11, line:64:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f7780 <line:63:11, col:16> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1f7764 <col:11> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa1f75b0 '__ct' 'const __ctype_type &'))
                (DeclRefExpr 0xa1f77d4 <col:19, col:31> 'const mask':'const unsigned short' lvalue Var 0xa0f2fb0 'space' 'const mask':'const unsigned short')
                (CallExpr 0xa1f7868 <line:64:5, col:34> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1f7818 <col:5, col:18> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa1f784c <col:31> '__int_type':'typename _Traits::int_type' lvalue Var 0xa1f74b0 '__c' '__int_type':'typename _Traits::int_type'))))
            (BinaryOperator 0xa1f7950 <line:65:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0xa1f78c8 <col:3> '__int_type':'typename _Traits::int_type' lvalue Var 0xa1f74b0 '__c' '__int_type':'typename _Traits::int_type')
              (CallExpr 0xa1f7930 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa1f78f8 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1f78e0 <col:9> '__streambuf_type *' lvalue Var 0xa1f73f0 '__sb' '__streambuf_type *')))))
          (IfStmt 0xa1f7af0 <line:70:8, line:71:22>
            <<<NULL>>>
            (CallExpr 0xa1f7a10 <line:70:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa1f79a8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa1f79dc <col:37> '__int_type':'typename _Traits::int_type' lvalue Var 0xa1f74b0 '__c' '__int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa1f79f4 <col:42> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0xa1f72d0 '__eof' 'const __int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa1f7ac8 <line:71:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa1f7ab8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa1f7aa0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa1f7a34 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f6eb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa1f7a90 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa1f7a6c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa1f7e78 <line:75:7, line:81:2>
    <<<NULL>>>
    (BinaryOperator 0xa1f7cb0 <line:75:11, col:45> '<dependent type>' '&&'
      (CallExpr 0xa1f7be0 <col:11, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f7ba8 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0xa1f7b8c <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6cc0 '__in' 'basic_istream<_CharT, _Traits> &')))
      (BinaryOperator 0xa1f7c98 <col:26, col:45> '_Bool' '=='
        (ImplicitCastExpr 0xa1f7c78 <col:26> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1f7c58 <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1f7bfc <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f6eb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (ImplicitCastExpr 0xa1f7c88 <col:35, col:45> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1f7c68 <col:35, col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1f7c34 <col:35, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
    (BinaryOperator 0xa1f7d08 <line:76:2, col:10> '<dependent type>' '='
      (MemberExpr 0xa1f7cd8 <col:2> '_Bool' lvalue ->_M_ok 0xa1f25a0
        (CXXThisExpr 0xa1f7cc8 <col:2> 'class std::basic_istream::sentry *' this))
      (CXXBoolLiteralExpr 0xa1f7cf8 <col:10> '_Bool' true))
    (CompoundStmt 0xa1f7e60 <line:78:2, line:81:2>
      (CXXOperatorCallExpr 0xa1f7db0 <line:79:4, col:23> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa1f7da0 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1f7d88 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa1f7d20 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f6eb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa1f7d78 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa1f7d54 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (CallExpr 0xa1f7e40 <line:80:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f7df0 <col:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa1f7dd4 <col:4> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa1f6cc0 '__in' 'basic_istream<_CharT, _Traits> &'))
        (DeclRefExpr 0xa1f7e24 <col:18> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f6eb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))))


    template <typename _ValueT> basic_istream<_CharT, _Traits> &_M_extract(_ValueT &__v) (CompoundStmt 0xa1f8d00 </usr/include/c++/4.6/bits/istream.tcc:89:7, line:110:7>
  (DeclStmt 0xa1f8610 <line:90:2, col:29>
    0xa1f8580 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa1f85f0 <col:15, col:28> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa1f85c8 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa1f85b8 <col:17> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa1f85e0 <col:23> '_Bool' false))")
  (IfStmt 0xa1f8ca8 <line:91:2, line:108:4>
    <<<NULL>>>
    (DeclRefExpr 0xa1f8620 <line:91:6> 'class std::basic_istream::sentry' lvalue Var 0xa1f8580 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa1f8c80 <line:92:4, line:108:4>
      (DeclStmt 0xa1f86f8 <line:93:6, col:49>
        0xa1f8670 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa1f86e8 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1f86c4 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa1f8998 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:98:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1f8708 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa1f8980 </usr/include/c++/4.6/bits/istream.tcc:95:8, line:98:8>
          (DeclStmt 0xa1f8858 <line:96:3, col:63>
            0xa1f8780 "const __num_get_type &__ng =
              (CallExpr 0xa1f8838 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa1f87b8 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0xa1872f0)
                (CXXDependentScopeMemberExpr 0xa1f8800 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0xa1f87f0 <col:46> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa1f8950 <line:97:3, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f8880 <col:3, col:8> '<dependent type>' lvalue
              (DeclRefExpr 0xa1f8868 <col:3> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa1f8780 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa1f88c8 <col:12, col:13> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa1f88b8 <col:13> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa1f88e0 <col:19> 'int' 0)
            (UnaryOperator 0xa1f8908 <col:22, col:23> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa1f88f8 <col:23> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1f891c <col:29> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f8670 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa1f8934 <col:36> '_ValueT' lvalue ParmVar 0xa1f82c0 '__v' '_ValueT &')))
        <<<NULL>>>)
      (IfStmt 0xa1f8a98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:103:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1f89b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1f8a80 </usr/include/c++/4.6/bits/istream.tcc:100:8, line:103:8>
          (CallExpr 0xa1f8a50 <line:101:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f89d8 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa1f89c8 <col:3> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1f8a2c <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa1f8a70 <line:102:26>))
        <<<NULL>>>)
      (IfStmt 0xa1f8b88 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:105:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1f8ab8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1f8b70 </usr/include/c++/4.6/bits/istream.tcc:105:8, col:47>
          (CallExpr 0xa1f8b50 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f8ad8 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa1f8ac8 <col:10> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1f8b2c <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa1f8c60 <line:106:6, line:107:28>
        <<<NULL>>>
        (ImplicitCastExpr 0xa1f8bd0 <line:106:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa1f8bc0 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1f8ba4 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f8670 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa1f8c40 <line:107:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1f8bf0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa1f8be0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa1f8c24 <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f8670 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa1f8cf0 <line:109:2, col:10>
    (UnaryOperator 0xa1f8cd8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1f8cc8 <col:10> 'basic_istream<_CharT, _Traits> *' this))))

;
    basic_istream<_CharT, _Traits> &operator>>(short &__n) (CompoundStmt 0xa1fb208 </usr/include/c++/4.6/bits/istream.tcc:116:5, line:155:5>
  (DeclStmt 0xa1f9380 <line:119:7, col:34>
    0xa1f92f0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa1f9360 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa1f9338 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa1f9328 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa1f9350 <col:28> '_Bool' false))")
  (IfStmt 0xa1fb1b0 <line:120:7, line:153:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1f9390 <line:120:11> 'class std::basic_istream::sentry' lvalue Var 0xa1f92f0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa1fb188 <line:121:2, line:153:2>
      (DeclStmt 0xa1f9468 <line:122:4, col:47>
        0xa1f93e0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa1f9458 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1f9434 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa1faea0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:143:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1f9478 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa1fae80 </usr/include/c++/4.6/bits/istream.tcc:124:6, line:143:6>
          (DeclStmt 0xa1f94d8 <line:125:8, col:16>
            0xa1f94a0 "long __l")
          (DeclStmt 0xa1f95d8 <line:126:8, col:68>
            0xa1f9500 "const __num_get_type &__ng =
              (CallExpr 0xa1f95b8 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0xa1f9538 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0xa1872f0)
                (CXXDependentScopeMemberExpr 0xa1f9580 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0xa1f9570 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa1f96d0 <line:127:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1f9600 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa1f95e8 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa1f9500 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa1f9648 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa1f9638 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa1f9660 <col:24> 'int' 0)
            (UnaryOperator 0xa1f9688 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa1f9678 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1f969c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f93e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa1f96b4 <col:41> 'long' lvalue Var 0xa1f94a0 '__l' 'long'))
          (IfStmt 0xa1fae60 <line:131:8, line:142:18>
            <<<NULL>>>
            (BinaryOperator 0xa1fa898 <line:131:12, col:54> '_Bool' '<'
              (ImplicitCastExpr 0xa1fa868 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0xa1f9700 <col:12> 'long' lvalue Var 0xa1f94a0 '__l' 'long'))
              (ImplicitCastExpr 0xa1fa888 <col:18, col:54> 'long' <IntegralCast>
                (ImplicitCastExpr 0xa1fa878 <col:18, col:54> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0xa1fa848 <col:18, col:54> 'const short':'const short' lvalue Var 0xa1f9f60 '__min' 'const short':'const short'))))
            (CompoundStmt 0xa1faa88 <line:132:3, line:135:3>
              (CXXOperatorCallExpr 0xa1fa970 <line:133:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa1fa960 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa1fa948 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa1fa8dc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f93e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa1fa938 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa1fa914 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0xa1faa70 <line:134:5, col:47> 'short' lvalue '='
                (DeclRefExpr 0xa1fa994 <col:5> 'short' lvalue ParmVar 0xa1f90a0 '__n' 'short &')
                (ImplicitCastExpr 0xa1faa60 <col:11, col:47> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0xa1faa40 <col:11, col:47> 'const short':'const short' lvalue Var 0xa1f9f60 '__min' 'const short':'const short'))))
            (IfStmt 0xa1fae40 <line:136:13, line:142:18>
              <<<NULL>>>
              (BinaryOperator 0xa1faba0 <line:136:17, col:59> '_Bool' '>'
                (ImplicitCastExpr 0xa1fab70 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa1faaa0 <col:17> 'long' lvalue Var 0xa1f94a0 '__l' 'long'))
                (ImplicitCastExpr 0xa1fab90 <col:23, col:59> 'long' <IntegralCast>
                  (ImplicitCastExpr 0xa1fab80 <col:23, col:59> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0xa1fab50 <col:23, col:59> 'const short':'const short' lvalue Var 0xa1fa200 '__max' 'const short':'const short'))))
              (CompoundStmt 0xa1fad98 <line:137:3, line:140:3>
                (CXXOperatorCallExpr 0xa1fac80 <line:138:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa1fac70 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa1fac58 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa1fabec <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f93e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa1fac48 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa1fac24 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa1fad80 <line:139:5, col:47> 'short' lvalue '='
                  (DeclRefExpr 0xa1faca4 <col:5> 'short' lvalue ParmVar 0xa1f90a0 '__n' 'short &')
                  (ImplicitCastExpr 0xa1fad70 <col:11, col:47> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0xa1fad50 <col:11, col:47> 'const short':'const short' lvalue Var 0xa1fa200 '__max' 'const short':'const short'))))
              (BinaryOperator 0xa1fae28 <line:142:3, col:18> 'short' lvalue '='
                (DeclRefExpr 0xa1fadb0 <col:3> 'short' lvalue ParmVar 0xa1f90a0 '__n' 'short &')
                (CXXFunctionalCastExpr 0xa1fae10 <col:9, col:18> 'short' functional cast to short <NoOp>
                  (ImplicitCastExpr 0xa1fae00 <col:15> 'short' <IntegralCast>
                    (ImplicitCastExpr 0xa1fadf0 <col:15> 'long' <LValueToRValue>
                      (DeclRefExpr 0xa1fadd4 <col:15> 'long' lvalue Var 0xa1f94a0 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0xa1fafa0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:148:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1faec0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1faf88 </usr/include/c++/4.6/bits/istream.tcc:145:6, line:148:6>
          (CallExpr 0xa1faf58 <line:146:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1faee0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa1faed0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1faf34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa1faf78 <line:147:31>))
        <<<NULL>>>)
      (IfStmt 0xa1fb090 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:150:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1fafc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1fb078 </usr/include/c++/4.6/bits/istream.tcc:150:6, col:45>
          (CallExpr 0xa1fb058 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1fafe0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa1fafd0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1fb034 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa1fb168 <line:151:4, line:152:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa1fb0d8 <line:151:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa1fb0c8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1fb0ac <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f93e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa1fb148 <line:152:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1fb0f8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa1fb0e8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa1fb12c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1f93e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa1fb1f8 <line:154:7, col:15>
    (UnaryOperator 0xa1fb1e0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1fb1d0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(int &__n) (CompoundStmt 0xa1fc688 </usr/include/c++/4.6/bits/istream.tcc:161:5, line:200:5>
  (DeclStmt 0xa1fb890 <line:164:7, col:34>
    0xa1fb800 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa1fb870 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa1fb848 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa1fb838 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa1fb860 <col:28> '_Bool' false))")
  (IfStmt 0xa1fc630 <line:165:7, line:198:2>
    <<<NULL>>>
    (DeclRefExpr 0xa1fb8a0 <line:165:11> 'class std::basic_istream::sentry' lvalue Var 0xa1fb800 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa1fc608 <line:166:2, line:198:2>
      (DeclStmt 0xa1fb978 <line:167:4, col:47>
        0xa1fb8f0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa1fb968 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1fb944 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa1fc320 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:188:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1fb988 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa1fc300 </usr/include/c++/4.6/bits/istream.tcc:169:6, line:188:6>
          (DeclStmt 0xa1fb9e8 <line:170:8, col:16>
            0xa1fb9b0 "long __l")
          (DeclStmt 0xa1fbae8 <line:171:8, col:68>
            0xa1fba10 "const __num_get_type &__ng =
              (CallExpr 0xa1fbac8 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0xa1fba48 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0xa1872f0)
                (CXXDependentScopeMemberExpr 0xa1fba90 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0xa1fba80 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa1fbbe0 <line:172:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1fbb10 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa1fbaf8 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa1fba10 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa1fbb58 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa1fbb48 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa1fbb70 <col:24> 'int' 0)
            (UnaryOperator 0xa1fbb98 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa1fbb88 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1fbbac <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1fb8f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa1fbbc4 <col:41> 'long' lvalue Var 0xa1fb9b0 '__l' 'long'))
          (IfStmt 0xa1fc2e0 <line:176:8, line:187:16>
            <<<NULL>>>
            (BinaryOperator 0xa1fbd10 <line:176:12, col:52> '_Bool' '<'
              (ImplicitCastExpr 0xa1fbce0 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0xa1fbc10 <col:12> 'long' lvalue Var 0xa1fb9b0 '__l' 'long'))
              (ImplicitCastExpr 0xa1fbd00 <col:18, col:52> 'long' <IntegralCast>
                (ImplicitCastExpr 0xa1fbcf0 <col:18, col:52> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0xa1fbcc0 <col:18, col:52> 'const int':'const int' lvalue Var 0x9fc1320 '__min' 'const int':'const int'))))
            (CompoundStmt 0xa1fbf08 <line:177:3, line:180:3>
              (CXXOperatorCallExpr 0xa1fbdf0 <line:178:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa1fbde0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa1fbdc8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa1fbd5c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1fb8f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa1fbdb8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa1fbd94 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0xa1fbef0 <line:179:5, col:45> 'int' lvalue '='
                (DeclRefExpr 0xa1fbe14 <col:5> 'int' lvalue ParmVar 0xa1fb5b0 '__n' 'int &')
                (ImplicitCastExpr 0xa1fbee0 <col:11, col:45> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0xa1fbec0 <col:11, col:45> 'const int':'const int' lvalue Var 0x9fc1320 '__min' 'const int':'const int'))))
            (IfStmt 0xa1fc2c0 <line:181:13, line:187:16>
              <<<NULL>>>
              (BinaryOperator 0xa1fc020 <line:181:17, col:57> '_Bool' '>'
                (ImplicitCastExpr 0xa1fbff0 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa1fbf20 <col:17> 'long' lvalue Var 0xa1fb9b0 '__l' 'long'))
                (ImplicitCastExpr 0xa1fc010 <col:23, col:57> 'long' <IntegralCast>
                  (ImplicitCastExpr 0xa1fc000 <col:23, col:57> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0xa1fbfd0 <col:23, col:57> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int'))))
              (CompoundStmt 0xa1fc218 <line:182:3, line:185:3>
                (CXXOperatorCallExpr 0xa1fc100 <line:183:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa1fc0f0 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa1fc0d8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa1fc06c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1fb8f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa1fc0c8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa1fc0a4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa1fc200 <line:184:5, col:45> 'int' lvalue '='
                  (DeclRefExpr 0xa1fc124 <col:5> 'int' lvalue ParmVar 0xa1fb5b0 '__n' 'int &')
                  (ImplicitCastExpr 0xa1fc1f0 <col:11, col:45> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0xa1fc1d0 <col:11, col:45> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int'))))
              (BinaryOperator 0xa1fc2a8 <line:187:3, col:16> 'int' lvalue '='
                (DeclRefExpr 0xa1fc230 <col:3> 'int' lvalue ParmVar 0xa1fb5b0 '__n' 'int &')
                (CXXFunctionalCastExpr 0xa1fc290 <col:9, col:16> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa1fc280 <col:13> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa1fc270 <col:13> 'long' <LValueToRValue>
                      (DeclRefExpr 0xa1fc254 <col:13> 'long' lvalue Var 0xa1fb9b0 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0xa1fc420 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:193:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1fc340 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1fc408 </usr/include/c++/4.6/bits/istream.tcc:190:6, line:193:6>
          (CallExpr 0xa1fc3d8 <line:191:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1fc360 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa1fc350 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1fc3b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa1fc3f8 <line:192:31>))
        <<<NULL>>>)
      (IfStmt 0xa1fc510 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:195:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1fc440 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1fc4f8 </usr/include/c++/4.6/bits/istream.tcc:195:6, col:45>
          (CallExpr 0xa1fc4d8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1fc460 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa1fc450 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1fc4b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa1fc5e8 <line:196:4, line:197:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa1fc558 <line:196:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa1fc548 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa1fc52c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1fb8f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa1fc5c8 <line:197:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa1fc578 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa1fc568 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa1fc5ac <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1fb8f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa1fc678 <line:199:7, col:15>
    (UnaryOperator 0xa1fc660 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1fc650 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(__streambuf_type *__sbout) (CompoundStmt 0xa1fd608 </usr/include/c++/4.6/bits/istream.tcc:206:5, line:232:5>
  (DeclStmt 0xa1fcd38 <line:207:7, col:50>
    0xa1fccb0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa1fcd28 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa1fcd04 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa1fcde0 <line:208:7, col:34>
    0xa1fcd50 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa1fcdc0 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa1fcd98 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa1fcd88 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa1fcdb0 <col:28> '_Bool' false))")
  (IfStmt 0xa1fd4d8 <line:209:7, line:228:21>
    <<<NULL>>>
    (BinaryOperator 0xa1fce20 <line:209:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa1fcdf0 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa1fcd50 '__cerb' 'class std::basic_istream::sentry')
      (DeclRefExpr 0xa1fce08 <col:21> '__streambuf_type *' lvalue ParmVar 0xa1fca30 '__sbout' '__streambuf_type *'))
    (CompoundStmt 0xa1fd3b0 <line:210:2, line:226:2>
      (IfStmt 0xa1fd1a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:218:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1fce38 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa1fd180 </usr/include/c++/4.6/bits/istream.tcc:212:6, line:218:6>
          (DeclStmt 0xa1fce88 <line:213:8, col:20>
            0xa1fce50 "bool __ineof")
          (IfStmt 0xa1fd060 <line:214:8, line:215:22>
            <<<NULL>>>
            (UnaryOperator 0xa1fcf90 <line:214:12, col:66> '<dependent type>' prefix '!'
              (CallExpr 0xa1fcf68 <col:13, col:66> '<dependent type>'
                (UnresolvedLookupExpr 0xa1fce98 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0xa0ca840)
                (CallExpr 0xa1fcf18 <col:35, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa1fcee0 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa1fced0 <col:35> 'basic_istream<_CharT, _Traits> *' this)))
                (DeclRefExpr 0xa1fcf34 <col:50> '__streambuf_type *' lvalue ParmVar 0xa1fca30 '__sbout' '__streambuf_type *')
                (DeclRefExpr 0xa1fcf4c <col:59> '_Bool' lvalue Var 0xa1fce50 '__ineof' '_Bool')))
            (CXXOperatorCallExpr 0xa1fd038 <line:215:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa1fd028 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa1fd010 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa1fcfa4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1fccb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa1fd000 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa1fcfdc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (IfStmt 0xa1fd160 <line:216:8, line:217:22>
            <<<NULL>>>
            (ImplicitCastExpr 0xa1fd098 <line:216:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa1fd07c <col:12> '_Bool' lvalue Var 0xa1fce50 '__ineof' '_Bool'))
            (CXXOperatorCallExpr 0xa1fd138 <line:217:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa1fd128 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa1fd110 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa1fd0a4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1fccb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa1fd100 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa1fd0dc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa1fd2a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:223:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1fd1c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1fd288 </usr/include/c++/4.6/bits/istream.tcc:220:6, line:223:6>
          (CallExpr 0xa1fd258 <line:221:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1fd1e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa1fd1d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1fd234 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa1fd278 <line:222:31>))
        <<<NULL>>>)
      (IfStmt 0xa1fd390 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:225:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa1fd2c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa1fd378 </usr/include/c++/4.6/bits/istream.tcc:225:6, col:46>
          (CallExpr 0xa1fd358 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa1fd2e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa1fd2d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa1fd334 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0xa1fd4b8 <line:227:12, line:228:21>
      <<<NULL>>>
      (UnaryOperator 0xa1fd3e8 <line:227:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0xa1fd3cc <col:17> '__streambuf_type *' lvalue ParmVar 0xa1fca30 '__sbout' '__streambuf_type *'))
      (CXXOperatorCallExpr 0xa1fd490 <line:228:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa1fd480 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1fd468 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa1fd3fc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1fccb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa1fd458 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa1fd434 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0xa1fd5b0 <line:229:7, line:230:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1fd520 <line:229:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa1fd510 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa1fd4f4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1fccb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa1fd590 <line:230:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa1fd540 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa1fd530 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa1fd574 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa1fccb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa1fd5f8 <line:231:7, col:15>
    (UnaryOperator 0xa1fd5e0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1fd5d0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type get() (CompoundStmt 0xa2018b0 </usr/include/c++/4.6/bits/istream.tcc:238:5, line:268:5>
  (DeclStmt 0xa200ea0 <line:239:7, col:48>
    0xa1fdc30 "const int_type __eof =
      (CallExpr 0xa200e80 <col:30, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa200e48 <col:30, col:43> '<dependent type>' lvalue))")
  (DeclStmt 0xa200f10 <line:240:7, col:27>
    0xa200ec0 "int_type __c =
      (DeclRefExpr 0xa200ef4 <col:22> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa1fdc30 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (BinaryOperator 0xa200f68 <line:241:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa200f30 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa200f20 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa200f50 <col:19> 'int' 0))
  (DeclStmt 0xa201038 <line:242:7, col:50>
    0xa200fb0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa201028 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa201004 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa2010e0 <line:243:7, col:33>
    0xa201050 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa2010c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa201098 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa201088 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa2010b0 <col:28> '_Bool' true))")
  (IfStmt 0xa201650 <line:244:7, line:262:2>
    <<<NULL>>>
    (DeclRefExpr 0xa2010f0 <line:244:11> 'class std::basic_istream::sentry' lvalue Var 0xa201050 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa201630 <line:245:2, line:262:2>
      (IfStmt 0xa201420 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:254:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa201108 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa201408 </usr/include/c++/4.6/bits/istream.tcc:247:6, line:254:6>
          (BinaryOperator 0xa2011f0 <line:248:8, col:36> '<dependent type>' '='
            (DeclRefExpr 0xa201118 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa200ec0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0xa2011d0 <col:14, col:36> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa201198 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0xa201178 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa201140 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0xa201130 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0xa2013e8 <line:250:8, line:253:22>
            <<<NULL>>>
            (UnaryOperator 0xa2012b8 <line:250:12, col:48> '<dependent type>' prefix '!'
              (CallExpr 0xa201290 <col:13, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa201228 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa20125c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa200ec0 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0xa201274 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa1fdc30 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (BinaryOperator 0xa201318 <line:251:3, col:15> '<dependent type>' '='
              (MemberExpr 0xa2012e0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                (CXXThisExpr 0xa2012d0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0xa201300 <col:15> 'int' 1))
            (CXXOperatorCallExpr 0xa2013c0 <line:253:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa2013b0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa201398 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa201330 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa200fb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa201388 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa201364 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0xa201520 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:259:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa201440 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa201508 </usr/include/c++/4.6/bits/istream.tcc:256:6, line:259:6>
          (CallExpr 0xa2014d8 <line:257:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa201460 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa201450 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2014b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2014f8 <line:258:31>))
        <<<NULL>>>)
      (IfStmt 0xa201610 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:261:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa201540 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2015f8 </usr/include/c++/4.6/bits/istream.tcc:261:6, col:45>
          (CallExpr 0xa2015d8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa201560 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa201550 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2015b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa201790 <line:263:7, line:264:21>
    <<<NULL>>>
    (UnaryOperator 0xa2016c0 <line:263:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2016b0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa2016a0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa201680 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
            (CXXThisExpr 0xa201670 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa201768 <line:264:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa201758 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa201740 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa2016d4 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa200fb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa201730 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa20170c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa201868 <line:265:7, line:266:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2017d8 <line:265:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2017c8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2017ac <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa200fb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa201848 <line:266:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2017f8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa2017e8 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa20182c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa200fb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa2018a0 <line:267:7, col:14>
    (DeclRefExpr 0xa201884 <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0xa200ec0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &get(char_type &__c) (CompoundStmt 0xa2029b8 </usr/include/c++/4.6/bits/istream.tcc:274:5, line:305:5>
  (BinaryOperator 0xa201f00 <line:275:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa201ec8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa201eb8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa201ee8 <col:19> 'int' 0))
  (DeclStmt 0xa201fd8 <line:276:7, col:50>
    0xa201f50 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa201fc8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa201fa4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa202080 <line:277:7, col:33>
    0xa201ff0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa202060 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa202038 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa202028 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa202050 <col:28> '_Bool' true))")
  (IfStmt 0xa202748 <line:278:7, line:299:2>
    <<<NULL>>>
    (DeclRefExpr 0xa202090 <line:278:11> 'class std::basic_istream::sentry' lvalue Var 0xa201ff0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa202728 <line:279:2, line:299:2>
      (IfStmt 0xa202518 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:291:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2020a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa202500 </usr/include/c++/4.6/bits/istream.tcc:281:6, line:291:6>
          (DeclStmt 0xa2021b8 <line:282:8, col:53>
            0xa2020c0 "const int_type __cb =
              (CallExpr 0xa202198 <col:30, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa202160 <col:30, col:45> '<dependent type>' lvalue
                  (CallExpr 0xa202140 <col:30, col:42> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa202108 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2020f8 <col:30> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0xa2024e0 <line:284:8, line:290:22>
            <<<NULL>>>
            (UnaryOperator 0xa2022d8 <line:284:12, col:62> '<dependent type>' prefix '!'
              (CallExpr 0xa2022b0 <col:13, col:62> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2021e8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa20221c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2020c0 '__cb' 'const int_type':'const typename _Traits::int_type')
                (CallExpr 0xa202290 <col:44, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa202258 <col:44, col:57> '<dependent type>' lvalue))))
            (CompoundStmt 0xa202410 <line:285:3, line:288:3>
              (BinaryOperator 0xa202338 <line:286:5, col:17> '<dependent type>' '='
                (MemberExpr 0xa202300 <col:5> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                  (CXXThisExpr 0xa2022f0 <col:5> 'basic_istream<_CharT, _Traits> *' this))
                (IntegerLiteral 0xa202320 <col:17> 'int' 1))
              (BinaryOperator 0xa2023f8 <line:287:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa202350 <col:5> 'char_type':'_CharT' lvalue ParmVar 0xa201c70 '__c' 'char_type &')
                (CallExpr 0xa2023d8 <col:11, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa202388 <col:11, col:24> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa2023bc <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2020c0 '__cb' 'const int_type':'const typename _Traits::int_type'))))
            (CXXOperatorCallExpr 0xa2024b8 <line:290:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa2024a8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa202490 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa202428 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa201f50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa202480 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa20245c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0xa202618 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:296:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa202538 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa202600 </usr/include/c++/4.6/bits/istream.tcc:293:6, line:296:6>
          (CallExpr 0xa2025d0 <line:294:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa202558 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa202548 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2025ac <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2025f0 <line:295:31>))
        <<<NULL>>>)
      (IfStmt 0xa202708 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:298:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa202638 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2026f0 </usr/include/c++/4.6/bits/istream.tcc:298:6, col:45>
          (CallExpr 0xa2026d0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa202658 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa202648 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa2026ac <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa202888 <line:300:7, line:301:21>
    <<<NULL>>>
    (UnaryOperator 0xa2027b8 <line:300:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2027a8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa202798 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa202778 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
            (CXXThisExpr 0xa202768 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa202860 <line:301:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa202850 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa202838 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa2027cc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa201f50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa202828 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa202804 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa202960 <line:302:7, line:303:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2028d0 <line:302:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2028c0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2028a4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa201f50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa202940 <line:303:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2028f0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa2028e0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa202924 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa201f50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa2029a8 <line:304:7, col:15>
    (UnaryOperator 0xa202990 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa202980 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0xa2041d8 </usr/include/c++/4.6/bits/istream.tcc:311:5, line:352:5>
  (BinaryOperator 0xa203098 <line:312:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa203060 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa203050 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa203080 <col:19> 'int' 0))
  (DeclStmt 0xa203168 <line:313:7, col:50>
    0xa2030e0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa203158 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa203134 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa203210 <line:314:7, col:33>
    0xa203180 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa2031f0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa2031c8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2031b8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa2031e0 <col:28> '_Bool' true))")
  (IfStmt 0xa203e88 <line:315:7, line:342:2>
    <<<NULL>>>
    (DeclRefExpr 0xa203220 <line:315:11> 'class std::basic_istream::sentry' lvalue Var 0xa203180 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa203e68 <line:316:2, line:342:2>
      (IfStmt 0xa203c58 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:334:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa203238 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa203c30 </usr/include/c++/4.6/bits/istream.tcc:318:6, line:334:6>
          (DeclStmt 0xa203318 <line:319:8, col:67>
            0xa203250 "const int_type __idelim =
              (CallExpr 0xa2032f8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2032a8 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0xa2032dc <col:59> 'char_type':'_CharT' lvalue ParmVar 0xa202df0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa2033e0 <line:320:8, col:49>
            0xa203330 "const int_type __eof =
              (CallExpr 0xa2033c0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa203388 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa2034a0 <line:321:8, col:46>
            0xa203400 "__streambuf_type *__sb =
              (CallExpr 0xa203480 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa203448 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa203438 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa203568 <line:322:8, col:36>
            0xa2034c0 "int_type __c =
              (CallExpr 0xa203548 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa203510 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2034f4 <col:23> '__streambuf_type *' lvalue Var 0xa203400 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa203a88 <line:324:8, line:331:3>
            <<<NULL>>>
            (BinaryOperator 0xa203860 <line:324:15, line:326:50> '<dependent type>' '&&'
              (BinaryOperator 0xa203780 <line:324:15, line:325:47> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa203690 <line:324:15, col:31> '<dependent type>'
                  (UnresolvedLookupExpr 0xa203648 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
                  (CXXOperatorCallExpr 0xa203608 <col:15, col:27> '<dependent type>'
                    (UnresolvedLookupExpr 0xa2035c0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
                    (MemberExpr 0xa203588 <col:15> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                      (CXXThisExpr 0xa203578 <col:15> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0xa2035a8 <col:27> 'int' 1))
                  (DeclRefExpr 0xa20362c <col:31> 'streamsize':'int' lvalue ParmVar 0xa202db0 '__n' 'streamsize':'int'))
                (UnaryOperator 0xa203768 <line:325:11, col:47> '<dependent type>' prefix '!'
                  (CallExpr 0xa203740 <col:12, col:47> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2036d8 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa20370c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa2034c0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa203724 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa203330 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa203848 <line:326:11, col:50> '<dependent type>' prefix '!'
                (CallExpr 0xa203820 <col:12, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2037b8 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa2037ec <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa2034c0 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa203804 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa203250 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa203a68 <line:327:3, line:331:3>
              (BinaryOperator 0xa203968 <line:328:5, col:43> '<dependent type>' '='
                (UnaryOperator 0xa2038c0 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa2038a8 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa203878 <col:6> 'char_type *' lvalue ParmVar 0xa202d70 '__s' 'char_type *')))
                (CallExpr 0xa203948 <col:14, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2038f8 <col:14, col:27> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa20392c <col:40> 'int_type':'typename _Traits::int_type' lvalue Var 0xa2034c0 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0xa2039b0 <line:329:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0xa203990 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                  (CXXThisExpr 0xa203980 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0xa203a50 <line:330:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa2039c4 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa2034c0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa203a30 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2039f8 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2039dc <col:11> '__streambuf_type *' lvalue Var 0xa203400 '__sb' '__streambuf_type *'))))))
          (IfStmt 0xa203c10 <line:332:8, line:333:22>
            <<<NULL>>>
            (CallExpr 0xa203b30 <line:332:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa203ac8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa203afc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa2034c0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa203b14 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa203330 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa203be8 <line:333:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa203bd8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa203bc0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa203b54 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2030e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa203bb0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa203b8c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa203d58 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:339:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa203c78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa203d40 </usr/include/c++/4.6/bits/istream.tcc:336:6, line:339:6>
          (CallExpr 0xa203d10 <line:337:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa203c98 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa203c88 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa203cec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa203d30 <line:338:31>))
        <<<NULL>>>)
      (IfStmt 0xa203e48 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:341:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa203d78 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa203e30 </usr/include/c++/4.6/bits/istream.tcc:341:6, col:45>
          (CallExpr 0xa203e10 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa203d98 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa203d88 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa203dec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa203f68 <line:345:7, line:346:19>
    <<<NULL>>>
    (BinaryOperator 0xa203ee8 <line:345:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0xa203ed8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa203ea4 <col:11> 'streamsize':'int' lvalue ParmVar 0xa202db0 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa203ec0 <col:17> 'int' 0))
    (BinaryOperator 0xa203f50 <line:346:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa203f18 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa203f00 <col:3> 'char_type *' lvalue ParmVar 0xa202d70 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0xa203f38 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0xa2040a8 <line:347:7, line:348:21>
    <<<NULL>>>
    (UnaryOperator 0xa203fd8 <line:347:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa203fc8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa203fb8 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa203f98 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
            (CXXThisExpr 0xa203f88 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa204080 <line:348:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa204070 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa204058 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa203fec <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2030e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa204048 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa204024 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa204180 <line:349:7, line:350:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2040f0 <line:349:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2040e0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2040c4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2030e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa204160 <line:350:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa204110 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa204100 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa204144 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2030e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa2041c8 <line:351:7, col:15>
    (UnaryOperator 0xa2041b0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2041a0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(__streambuf_type &__sb, char_type __delim) (CompoundStmt 0xa205960 </usr/include/c++/4.6/bits/istream.tcc:358:5, line:396:5>
  (BinaryOperator 0xa204860 <line:359:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa204828 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa204818 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa204848 <col:19> 'int' 0))
  (DeclStmt 0xa204938 <line:360:7, col:50>
    0xa2048b0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa204928 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa204904 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa2049e0 <line:361:7, col:33>
    0xa204950 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa2049c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa204998 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa204988 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa2049b0 <col:28> '_Bool' true))")
  (IfStmt 0xa2056f0 <line:362:7, line:390:2>
    <<<NULL>>>
    (DeclRefExpr 0xa2049f0 <line:362:11> 'class std::basic_istream::sentry' lvalue Var 0xa204950 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa2056d0 <line:363:2, line:390:2>
      (IfStmt 0xa2054c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:382:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa204a08 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa205490 </usr/include/c++/4.6/bits/istream.tcc:365:6, line:382:6>
          (DeclStmt 0xa204ae8 <line:366:8, col:67>
            0xa204a20 "const int_type __idelim =
              (CallExpr 0xa204ac8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa204a78 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0xa204aac <col:59> 'char_type':'_CharT' lvalue ParmVar 0xa2045d0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa204bb0 <line:367:8, col:49>
            0xa204b00 "const int_type __eof =
              (CallExpr 0xa204b90 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa204b58 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa204c70 <line:368:8, col:51>
            0xa204bd0 "__streambuf_type *__this_sb =
              (CallExpr 0xa204c50 <col:38, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa204c18 <col:38, col:44> '<dependent type>' lvalue
                  (CXXThisExpr 0xa204c08 <col:38> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa204d38 <line:369:8, col:41>
            0xa204c90 "int_type __c =
              (CallExpr 0xa204d18 <col:23, col:40> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa204ce0 <col:23, col:34> '<dependent type>' lvalue
                  (DeclRefExpr 0xa204cc4 <col:23> '__streambuf_type *' lvalue Var 0xa204bd0 '__this_sb' '__streambuf_type *')))")
          (DeclStmt 0xa204e18 <line:370:8, col:55>
            0xa204d50 "char_type __c2 =
              (CallExpr 0xa204df8 <col:25, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa204da8 <col:25, col:38> '<dependent type>' lvalue)
                (DeclRefExpr 0xa204ddc <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa204c90 '__c' 'int_type':'typename _Traits::int_type'))")
          (WhileStmt 0xa2052e8 <line:372:8, line:379:3>
            <<<NULL>>>
            (BinaryOperator 0xa205108 <line:372:15, line:374:60> '<dependent type>' '&&'
              (BinaryOperator 0xa204fb8 <line:372:15, line:373:50> '<dependent type>' '&&'
                (UnaryOperator 0xa204ed8 <line:372:15, col:51> '<dependent type>' prefix '!'
                  (CallExpr 0xa204eb0 <col:16, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa204e48 <col:16, col:29> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa204e7c <col:41> 'int_type':'typename _Traits::int_type' lvalue Var 0xa204c90 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa204e94 <col:46> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa204b00 '__eof' 'const int_type':'const typename _Traits::int_type')))
                (UnaryOperator 0xa204fa0 <line:373:11, col:50> '<dependent type>' prefix '!'
                  (CallExpr 0xa204f78 <col:12, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa204f10 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa204f44 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa204c90 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa204f5c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa204a20 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa2050f0 <line:374:11, col:60> '<dependent type>' prefix '!'
                (CallExpr 0xa2050c8 <col:12, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa204ff0 <col:12, col:25> '<dependent type>' lvalue)
                  (CallExpr 0xa205090 <col:37, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa205040 <col:37, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0xa205024 <col:37> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa204590 '__sb' '__streambuf_type &'))
                    (DeclRefExpr 0xa205074 <col:48> 'char_type':'_CharT' lvalue Var 0xa204d50 '__c2' 'char_type':'_CharT'))
                  (DeclRefExpr 0xa2050b0 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa204b00 '__eof' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa2052c8 <line:375:3, line:379:3>
              (UnaryOperator 0xa205150 <line:376:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0xa205130 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                  (CXXThisExpr 0xa205120 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0xa2051f0 <line:377:5, col:29> '<dependent type>' '='
                (DeclRefExpr 0xa205164 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa204c90 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa2051d0 <col:11, col:29> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa205198 <col:11, col:22> '<dependent type>' lvalue
                    (DeclRefExpr 0xa20517c <col:11> '__streambuf_type *' lvalue Var 0xa204bd0 '__this_sb' '__streambuf_type *'))))
              (BinaryOperator 0xa2052b0 <line:378:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa205208 <col:5> 'char_type':'_CharT' lvalue Var 0xa204d50 '__c2' 'char_type':'_CharT')
                (CallExpr 0xa205290 <col:12, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa205240 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa205274 <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa204c90 '__c' 'int_type':'typename _Traits::int_type')))))
          (IfStmt 0xa205470 <line:380:8, line:381:22>
            <<<NULL>>>
            (CallExpr 0xa205390 <line:380:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa205328 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa20535c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa204c90 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa205374 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa204b00 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa205448 <line:381:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa205438 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa205420 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa2053b4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2048b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa205410 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa2053ec <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa2055c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:387:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2054e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2055a8 </usr/include/c++/4.6/bits/istream.tcc:384:6, line:387:6>
          (CallExpr 0xa205578 <line:385:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa205500 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2054f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa205554 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa205598 <line:386:31>))
        <<<NULL>>>)
      (IfStmt 0xa2056b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:389:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2055e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa205698 </usr/include/c++/4.6/bits/istream.tcc:389:6, col:45>
          (CallExpr 0xa205678 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa205600 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2055f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa205654 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa205830 <line:391:7, line:392:21>
    <<<NULL>>>
    (UnaryOperator 0xa205760 <line:391:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa205750 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa205740 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa205720 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
            (CXXThisExpr 0xa205710 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa205808 <line:392:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa2057f8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2057e0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa205774 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2048b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa2057d0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2057ac <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa205908 <line:393:7, line:394:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa205878 <line:393:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa205868 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa20584c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2048b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa2058e8 <line:394:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa205898 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa205888 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa2058cc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2048b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa205950 <line:395:7, col:15>
    (UnaryOperator 0xa205938 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa205928 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &getline(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0xa2073f0 </usr/include/c++/4.6/bits/istream.tcc:402:5, line:453:5>
  (BinaryOperator 0xa206038 <line:403:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa206000 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa205ff0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa206020 <col:19> 'int' 0))
  (DeclStmt 0xa206108 <line:404:7, col:50>
    0xa206080 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa2060f8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2060d4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa2061b0 <line:405:7, col:33>
    0xa206120 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa206190 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa206168 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa206158 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa206180 <col:28> '_Bool' true))")
  (IfStmt 0xa2070a0 <line:406:7, line:443:9>
    <<<NULL>>>
    (DeclRefExpr 0xa2061c0 <line:406:11> 'class std::basic_istream::sentry' lvalue Var 0xa206120 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa207080 <line:407:9, line:443:9>
      (IfStmt 0xa206e70 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:435:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2061d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa206e48 </usr/include/c++/4.6/bits/istream.tcc:409:13, line:435:13>
          (DeclStmt 0xa2062b8 <line:410:15, col:74>
            0xa2061f0 "const int_type __idelim =
              (CallExpr 0xa206298 <col:41, col:73> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa206248 <col:41, col:54> '<dependent type>' lvalue)
                (DeclRefExpr 0xa20627c <col:66> 'char_type':'_CharT' lvalue ParmVar 0xa205d90 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa206380 <line:411:15, col:56>
            0xa2062d0 "const int_type __eof =
              (CallExpr 0xa206360 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa206328 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa206440 <line:412:15, col:53>
            0xa2063a0 "__streambuf_type *__sb =
              (CallExpr 0xa206420 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2063e8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2063d8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa206508 <line:413:15, col:43>
            0xa206460 "int_type __c =
              (CallExpr 0xa2064e8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2064b0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa206494 <col:30> '__streambuf_type *' lvalue Var 0xa2063a0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa206a28 <line:415:15, line:422:17>
            <<<NULL>>>
            (BinaryOperator 0xa206800 <line:415:22, line:417:64> '<dependent type>' '&&'
              (BinaryOperator 0xa206720 <line:415:22, line:416:61> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa206630 <line:415:22, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2065e8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
                  (CXXOperatorCallExpr 0xa2065a8 <col:22, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0xa206560 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
                    (MemberExpr 0xa206528 <col:22> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                      (CXXThisExpr 0xa206518 <col:22> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0xa206548 <col:34> 'int' 1))
                  (DeclRefExpr 0xa2065cc <col:38> 'streamsize':'int' lvalue ParmVar 0xa205d50 '__n' 'streamsize':'int'))
                (UnaryOperator 0xa206708 <line:416:25, col:61> '<dependent type>' prefix '!'
                  (CallExpr 0xa2066e0 <col:26, col:61> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa206678 <col:26, col:39> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa2066ac <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa206460 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa2066c4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2062d0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa2067e8 <line:417:25, col:64> '<dependent type>' prefix '!'
                (CallExpr 0xa2067c0 <col:26, col:64> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa206758 <col:26, col:39> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa20678c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa206460 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa2067a4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2061f0 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa206a08 <line:418:17, line:422:17>
              (BinaryOperator 0xa206908 <line:419:19, col:57> '<dependent type>' '='
                (UnaryOperator 0xa206860 <col:19, col:23> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa206848 <col:20, col:23> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa206818 <col:20> 'char_type *' lvalue ParmVar 0xa205d10 '__s' 'char_type *')))
                (CallExpr 0xa2068e8 <col:28, col:57> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa206898 <col:28, col:41> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa2068cc <col:54> 'int_type':'typename _Traits::int_type' lvalue Var 0xa206460 '__c' 'int_type':'typename _Traits::int_type')))
              (BinaryOperator 0xa2069a8 <line:420:19, col:38> '<dependent type>' '='
                (DeclRefExpr 0xa206920 <col:19> 'int_type':'typename _Traits::int_type' lvalue Var 0xa206460 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa206988 <col:25, col:38> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa206950 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0xa206938 <col:25> '__streambuf_type *' lvalue Var 0xa2063a0 '__sb' '__streambuf_type *'))))
              (UnaryOperator 0xa2069f0 <line:421:19, col:21> '<dependent type>' prefix '++'
                (MemberExpr 0xa2069d0 <col:21> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                  (CXXThisExpr 0xa2069c0 <col:21> 'basic_istream<_CharT, _Traits> *' this)))))
          (IfStmt 0xa206e28 <line:423:15, line:434:17>
            <<<NULL>>>
            (CallExpr 0xa206ad0 <line:423:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa206a68 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0xa206a9c <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0xa206460 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa206ab4 <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2062d0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa206b88 <line:424:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa206b78 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa206b60 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa206af4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa206080 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa206b50 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa206b2c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (CompoundStmt 0xa206e10 <line:426:17, line:434:17>
              (IfStmt 0xa206df0 <line:427:19, line:433:40>
                <<<NULL>>>
                (CallExpr 0xa206c40 <line:427:23, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa206bd8 <col:23, col:36> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa206c0c <col:48> 'int_type':'typename _Traits::int_type' lvalue Var 0xa206460 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa206c24 <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa2061f0 '__idelim' 'const int_type':'const typename _Traits::int_type'))
                (CompoundStmt 0xa206d20 <line:428:21, line:431:21>
                  (CallExpr 0xa206cb8 <line:429:23, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa206c80 <col:23, col:29> '<dependent type>' lvalue
                      (DeclRefExpr 0xa206c64 <col:23> '__streambuf_type *' lvalue Var 0xa2063a0 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0xa206d08 <line:430:23, col:25> '<dependent type>' prefix '++'
                    (MemberExpr 0xa206ce8 <col:25> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                      (CXXThisExpr 0xa206cd8 <col:25> 'basic_istream<_CharT, _Traits> *' this))))
                (CXXOperatorCallExpr 0xa206dc8 <line:433:21, col:40> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa206db8 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa206da0 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa206d38 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa206080 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa206d90 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa206d6c <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0xa206f70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:440:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa206e90 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa206f58 </usr/include/c++/4.6/bits/istream.tcc:437:6, line:440:6>
          (CallExpr 0xa206f28 <line:438:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa206eb0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa206ea0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa206f04 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa206f48 <line:439:31>))
        <<<NULL>>>)
      (IfStmt 0xa207060 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:442:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa206f90 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa207048 </usr/include/c++/4.6/bits/istream.tcc:442:13, col:52>
          (CallExpr 0xa207028 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa206fb0 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa206fa0 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa207004 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa207180 <line:446:7, line:447:19>
    <<<NULL>>>
    (BinaryOperator 0xa207100 <line:446:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0xa2070f0 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa2070bc <col:11> 'streamsize':'int' lvalue ParmVar 0xa205d50 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa2070d8 <col:17> 'int' 0))
    (BinaryOperator 0xa207168 <line:447:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa207130 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa207118 <col:3> 'char_type *' lvalue ParmVar 0xa205d10 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0xa207150 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0xa2072c0 <line:448:7, line:449:28>
    <<<NULL>>>
    (UnaryOperator 0xa2071f0 <line:448:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2071e0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa2071d0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa2071b0 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
            (CXXThisExpr 0xa2071a0 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa207298 <line:449:9, col:28> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa207288 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa207270 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa207204 <col:9> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa206080 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa207260 <col:18, col:28> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa20723c <col:18, col:28> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa207398 <line:450:7, line:451:29>
    <<<NULL>>>
    (ImplicitCastExpr 0xa207308 <line:450:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa2072f8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2072dc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa206080 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa207378 <line:451:9, col:29> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa207328 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa207318 <col:9> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa20735c <col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa206080 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa2073e0 <line:452:7, col:15>
    (UnaryOperator 0xa2073c8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2073b8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore() (CompoundStmt 0xa208330 </usr/include/c++/4.6/bits/istream.tcc:462:5, line:489:5>
  (BinaryOperator 0xa207a18 <line:463:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa2079e0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa2079d0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa207a00 <col:19> 'int' 0))
  (DeclStmt 0xa207ad0 <line:464:7, col:33>
    0xa207a40 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa207ab0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa207a88 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa207a78 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa207aa0 <col:28> '_Bool' true))")
  (IfStmt 0xa2082d8 <line:465:7, line:487:2>
    <<<NULL>>>
    (DeclRefExpr 0xa207ae0 <line:465:11> 'class std::basic_istream::sentry' lvalue Var 0xa207a40 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa2082b0 <line:466:2, line:487:2>
      (DeclStmt 0xa207bb8 <line:467:4, col:47>
        0xa207b30 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa207ba8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa207b84 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa207fc8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:477:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa207bc8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa207fa8 </usr/include/c++/4.6/bits/istream.tcc:469:6, line:477:6>
          (DeclStmt 0xa207c90 <line:470:8, col:49>
            0xa207be0 "const int_type __eof =
              (CallExpr 0xa207c70 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa207c38 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa207d50 <line:471:8, col:46>
            0xa207cb0 "__streambuf_type *__sb =
              (CallExpr 0xa207d30 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa207cf8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa207ce8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa207f88 <line:473:8, line:476:15>
            <<<NULL>>>
            (CallExpr 0xa207e48 <line:473:12, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa207d88 <col:12, col:25> '<dependent type>' lvalue)
              (CallExpr 0xa207e10 <col:37, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa207dd8 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa207dbc <col:37> '__streambuf_type *' lvalue Var 0xa207cb0 '__sb' '__streambuf_type *')))
              (DeclRefExpr 0xa207e2c <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa207be0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa207f00 <line:474:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa207ef0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa207ed8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa207e6c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa207b30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa207ec8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa207ea4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0xa207f70 <line:476:3, col:15> '<dependent type>' '='
              (MemberExpr 0xa207f38 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                (CXXThisExpr 0xa207f28 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0xa207f58 <col:15> 'int' 1))))
        <<<NULL>>>)
      (IfStmt 0xa2080c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:482:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa207fe8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2080b0 </usr/include/c++/4.6/bits/istream.tcc:479:6, line:482:6>
          (CallExpr 0xa208080 <line:480:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa208008 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa207ff8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20805c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2080a0 <line:481:31>))
        <<<NULL>>>)
      (IfStmt 0xa2081b8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:484:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2080e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2081a0 </usr/include/c++/4.6/bits/istream.tcc:484:6, col:45>
          (CallExpr 0xa208180 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa208108 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2080f8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20815c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa208290 <line:485:4, line:486:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa208200 <line:485:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa2081f0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa2081d4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa207b30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa208270 <line:486:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa208220 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa208210 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa208254 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa207b30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa208320 <line:488:7, col:15>
    (UnaryOperator 0xa208308 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2082f8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n) (CompoundStmt 0xa20a540 </usr/include/c++/4.6/bits/istream.tcc:495:5, line:551:5>
  (BinaryOperator 0xa208960 <line:496:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa208928 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa208918 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa208948 <col:19> 'int' 0))
  (DeclStmt 0xa208a10 <line:497:7, col:33>
    0xa208980 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa2089f0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa2089c8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2089b8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa2089e0 <col:28> '_Bool' true))")
  (IfStmt 0xa20a4e8 <line:498:7, line:549:9>
    <<<NULL>>>
    (BinaryOperator 0xa208a90 <line:498:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0xa208a20 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa208980 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0xa208a78 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0xa208a68 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa208a38 <col:21> 'streamsize':'int' lvalue ParmVar 0xa2086d0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa208a50 <col:27> 'int' 0)))
    (CompoundStmt 0xa20a4c0 <line:499:9, line:549:9>
      (DeclStmt 0xa208b68 <line:500:11, col:54>
        0xa208ae0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa208b58 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa208b34 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa20a1d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:539:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa208b78 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa20a1a8 </usr/include/c++/4.6/bits/istream.tcc:502:13, line:539:13>
          (DeclStmt 0xa208c40 <line:503:15, col:56>
            0xa208b90 "const int_type __eof =
              (CallExpr 0xa208c20 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa208be8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa208d00 <line:504:15, col:53>
            0xa208c60 "__streambuf_type *__sb =
              (CallExpr 0xa208ce0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa208ca8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa208c98 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa208dc8 <line:505:15, col:43>
            0xa208d20 "int_type __c =
              (CallExpr 0xa208da8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa208d70 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa208d54 <col:30> '__streambuf_type *' lvalue Var 0xa208c60 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa209888 <line:514:8, col:35>
            0xa209840 "bool __large_ignore =
              (CXXBoolLiteralExpr 0xa209878 <col:30> '_Bool' false)")
          (WhileStmt 0xa209ec0 <line:515:8, line:532:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa209898 <line:515:15> '_Bool' true)
            (CompoundStmt 0xa209ea8 <line:516:3, line:532:3>
              (WhileStmt 0xa209b40 <line:517:5, line:522:7>
                <<<NULL>>>
                (BinaryOperator 0xa209a28 <line:517:12, line:518:44> '<dependent type>' '&&'
                  (CXXOperatorCallExpr 0xa209938 <line:517:12, col:24> '<dependent type>'
                    (UnresolvedLookupExpr 0xa2098f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
                    (MemberExpr 0xa2098b8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                      (CXXThisExpr 0xa2098a8 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa2098d8 <col:24> 'streamsize':'int' lvalue ParmVar 0xa2086d0 '__n' 'streamsize':'int'))
                  (UnaryOperator 0xa209a10 <line:518:8, col:44> '<dependent type>' prefix '!'
                    (CallExpr 0xa2099e8 <col:9, col:44> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa209980 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa2099b4 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa208d20 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa2099cc <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa208b90 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0xa209b28 <line:519:7, line:522:7>
                  (UnaryOperator 0xa209a70 <line:520:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0xa209a50 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                      (CXXThisExpr 0xa209a40 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0xa209b10 <line:521:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0xa209a84 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa208d20 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0xa209af0 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa209ab8 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0xa209a9c <col:15> '__streambuf_type *' lvalue Var 0xa208c60 '__sb' '__streambuf_type *'))))))
              (IfStmt 0xa209e88 <line:523:5, line:531:7>
                <<<NULL>>>
                (BinaryOperator 0xa209d20 <line:523:9, line:524:48> '<dependent type>' '&&'
                  (BinaryOperator 0xa209c40 <line:523:9, col:57> '_Bool' '=='
                    (ImplicitCastExpr 0xa209c20 <col:9> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa209b54 <col:9> 'streamsize':'int' lvalue ParmVar 0xa2086d0 '__n' 'streamsize':'int'))
                    (ImplicitCastExpr 0xa209c30 <col:16, col:57> 'int':'int' <LValueToRValue>
                      (DeclRefExpr 0xa209c00 <col:16, col:57> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int')))
                  (UnaryOperator 0xa209d08 <line:524:12, col:48> '<dependent type>' prefix '!'
                    (CallExpr 0xa209ce0 <col:13, col:48> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa209c78 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa209cac <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa208d20 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa209cc4 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa208b90 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0xa209e68 <line:525:7, line:529:7>
                  (BinaryOperator 0xa209e10 <line:526:9, line:527:45> '<dependent type>' '='
                    (MemberExpr 0xa209d48 <line:526:9> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                      (CXXThisExpr 0xa209d38 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa209df0 <line:527:4, col:45> 'const int':'const int' lvalue Var 0x9fc1320 '__min' 'const int':'const int'))
                  (BinaryOperator 0xa209e50 <line:528:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa209e28 <col:9> '_Bool' lvalue Var 0xa209840 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0xa209e40 <col:26> '_Bool' true)))
                (BreakStmt 0xa209e80 <line:531:7>))))
          (IfStmt 0xa209ff8 <line:534:8, line:535:56>
            <<<NULL>>>
            (ImplicitCastExpr 0xa209ef0 <line:534:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa209ed4 <col:12> '_Bool' lvalue Var 0xa209840 '__large_ignore' '_Bool'))
            (BinaryOperator 0xa209fe0 <line:535:3, col:56> '<dependent type>' '='
              (MemberExpr 0xa209f10 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                (CXXThisExpr 0xa209f00 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa209fc0 <col:15, col:56> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0xa20a188 <line:537:8, line:538:36>
            <<<NULL>>>
            (CallExpr 0xa20a0a8 <line:537:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa20a040 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa20a074 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa208d20 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa20a08c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa208b90 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa20a160 <line:538:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa20a150 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa20a138 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa20a0cc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa208ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa20a128 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa20a104 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa20a2d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:544:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20a1f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20a2c0 </usr/include/c++/4.6/bits/istream.tcc:541:6, line:544:6>
          (CallExpr 0xa20a290 <line:542:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20a218 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa20a208 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20a26c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa20a2b0 <line:543:31>))
        <<<NULL>>>)
      (IfStmt 0xa20a3c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:546:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20a2f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20a3b0 </usr/include/c++/4.6/bits/istream.tcc:546:13, col:52>
          (CallExpr 0xa20a390 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20a318 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa20a308 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20a36c <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa20a4a0 <line:547:11, line:548:33>
        <<<NULL>>>
        (ImplicitCastExpr 0xa20a410 <line:547:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa20a400 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20a3e4 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa208ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa20a480 <line:548:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20a430 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0xa20a420 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa20a464 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa208ae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa20a530 <line:550:7, col:15>
    (UnaryOperator 0xa20a518 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa20a508 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n, int_type __delim) (CompoundStmt 0xa20c208 </usr/include/c++/4.6/bits/istream.tcc:557:5, line:616:5>
  (BinaryOperator 0xa20abb0 <line:558:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa20ab78 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa20ab68 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa20ab98 <col:19> 'int' 0))
  (DeclStmt 0xa20ac60 <line:559:7, col:33>
    0xa20abd0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa20ac40 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa20ac18 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa20ac08 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa20ac30 <col:28> '_Bool' true))")
  (IfStmt 0xa20c1b0 <line:560:7, line:614:9>
    <<<NULL>>>
    (BinaryOperator 0xa20ace0 <line:560:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0xa20ac70 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa20abd0 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0xa20acc8 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0xa20acb8 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa20ac88 <col:21> 'streamsize':'int' lvalue ParmVar 0xa20a8e0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa20aca0 <col:27> 'int' 0)))
    (CompoundStmt 0xa20c188 <line:561:9, line:614:9>
      (DeclStmt 0xa20adb8 <line:562:11, col:54>
        0xa20ad30 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa20ada8 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20ad84 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa20bea0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:604:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20adc8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa20be70 </usr/include/c++/4.6/bits/istream.tcc:564:13, line:604:13>
          (DeclStmt 0xa20ae90 <line:565:15, col:56>
            0xa20ade0 "const int_type __eof =
              (CallExpr 0xa20ae70 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa20ae38 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa20af50 <line:566:15, col:53>
            0xa20aeb0 "__streambuf_type *__sb =
              (CallExpr 0xa20af30 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa20aef8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa20aee8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa20b018 <line:567:15, col:43>
            0xa20af70 "int_type __c =
              (CallExpr 0xa20aff8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa20afc0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa20afa4 <col:30> '__streambuf_type *' lvalue Var 0xa20aeb0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa20b078 <line:570:8, col:35>
            0xa20b030 "bool __large_ignore =
              (CXXBoolLiteralExpr 0xa20b068 <col:30> '_Bool' false)")
          (WhileStmt 0xa20b870 <line:571:8, line:590:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa20b088 <line:571:15> '_Bool' true)
            (CompoundStmt 0xa20b858 <line:572:3, line:590:3>
              (WhileStmt 0xa20b410 <line:573:5, line:579:7>
                <<<NULL>>>
                (BinaryOperator 0xa20b2f8 <line:573:12, line:575:46> '<dependent type>' '&&'
                  (BinaryOperator 0xa20b218 <line:573:12, line:574:44> '<dependent type>' '&&'
                    (CXXOperatorCallExpr 0xa20b128 <line:573:12, col:24> '<dependent type>'
                      (UnresolvedLookupExpr 0xa20b0e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
                      (MemberExpr 0xa20b0a8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                        (CXXThisExpr 0xa20b098 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                      (DeclRefExpr 0xa20b0c8 <col:24> 'streamsize':'int' lvalue ParmVar 0xa20a8e0 '__n' 'streamsize':'int'))
                    (UnaryOperator 0xa20b200 <line:574:8, col:44> '<dependent type>' prefix '!'
                      (CallExpr 0xa20b1d8 <col:9, col:44> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa20b170 <col:9, col:22> '<dependent type>' lvalue)
                        (DeclRefExpr 0xa20b1a4 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa20af70 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0xa20b1bc <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa20ade0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0xa20b2e0 <line:575:8, col:46> '<dependent type>' prefix '!'
                    (CallExpr 0xa20b2b8 <col:9, col:46> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa20b250 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa20b284 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa20af70 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa20b29c <col:39> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa20a920 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0xa20b3f8 <line:576:7, line:579:7>
                  (UnaryOperator 0xa20b340 <line:577:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0xa20b320 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                      (CXXThisExpr 0xa20b310 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0xa20b3e0 <line:578:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0xa20b354 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa20af70 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0xa20b3c0 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa20b388 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0xa20b36c <col:15> '__streambuf_type *' lvalue Var 0xa20aeb0 '__sb' '__streambuf_type *'))))))
              (IfStmt 0xa20b838 <line:580:5, line:589:7>
                <<<NULL>>>
                (BinaryOperator 0xa20b6d0 <line:580:9, line:582:50> '<dependent type>' '&&'
                  (BinaryOperator 0xa20b5f0 <line:580:9, line:581:48> '<dependent type>' '&&'
                    (BinaryOperator 0xa20b510 <line:580:9, col:57> '_Bool' '=='
                      (ImplicitCastExpr 0xa20b4f0 <col:9> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0xa20b424 <col:9> 'streamsize':'int' lvalue ParmVar 0xa20a8e0 '__n' 'streamsize':'int'))
                      (ImplicitCastExpr 0xa20b500 <col:16, col:57> 'int':'int' <LValueToRValue>
                        (DeclRefExpr 0xa20b4d0 <col:16, col:57> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int')))
                    (UnaryOperator 0xa20b5d8 <line:581:12, col:48> '<dependent type>' prefix '!'
                      (CallExpr 0xa20b5b0 <col:13, col:48> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa20b548 <col:13, col:26> '<dependent type>' lvalue)
                        (DeclRefExpr 0xa20b57c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa20af70 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0xa20b594 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa20ade0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0xa20b6b8 <line:582:12, col:50> '<dependent type>' prefix '!'
                    (CallExpr 0xa20b690 <col:13, col:50> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa20b628 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa20b65c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa20af70 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa20b674 <col:43> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa20a920 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0xa20b818 <line:583:7, line:587:7>
                  (BinaryOperator 0xa20b7c0 <line:584:9, line:585:45> '<dependent type>' '='
                    (MemberExpr 0xa20b6f8 <line:584:9> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                      (CXXThisExpr 0xa20b6e8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa20b7a0 <line:585:4, col:45> 'const int':'const int' lvalue Var 0x9fc1320 '__min' 'const int':'const int'))
                  (BinaryOperator 0xa20b800 <line:586:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa20b7d8 <col:9> '_Bool' lvalue Var 0xa20b030 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0xa20b7f0 <col:26> '_Bool' true)))
                (BreakStmt 0xa20b830 <line:589:7>))))
          (IfStmt 0xa20b9a8 <line:592:8, line:593:56>
            <<<NULL>>>
            (ImplicitCastExpr 0xa20b8a0 <line:592:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa20b884 <col:12> '_Bool' lvalue Var 0xa20b030 '__large_ignore' '_Bool'))
            (BinaryOperator 0xa20b990 <line:593:3, col:56> '<dependent type>' '='
              (MemberExpr 0xa20b8c0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                (CXXThisExpr 0xa20b8b0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa20b970 <col:15, col:56> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0xa20be50 <line:595:15, line:603:3>
            <<<NULL>>>
            (CallExpr 0xa20ba58 <line:595:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa20b9f0 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0xa20ba24 <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0xa20af70 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa20ba3c <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa20ade0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa20bb10 <line:596:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa20bb00 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa20bae8 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa20ba7c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20ad30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa20bad8 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa20bab4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0xa20be30 <line:597:13, line:603:3>
              <<<NULL>>>
              (CallExpr 0xa20bbc8 <line:597:17, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa20bb60 <col:17, col:30> '<dependent type>' lvalue)
                (DeclRefExpr 0xa20bb94 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0xa20af70 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0xa20bbac <col:47> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa20a920 '__delim' 'int_type':'typename _Traits::int_type'))
              (CompoundStmt 0xa20be18 <line:598:3, line:603:3>
                (IfStmt 0xa20bd88 <line:599:5, line:601:9>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0xa20bd18 <line:599:9, line:600:52> '<dependent type>'
                    (UnresolvedLookupExpr 0xa20bcd0 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
                    (MemberExpr 0xa20bc00 <line:599:9> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                      (CXXThisExpr 0xa20bbf0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa20bcb0 <line:600:11, col:52> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int'))
                  (UnaryOperator 0xa20bd70 <line:601:7, col:9> '<dependent type>' prefix '++'
                    (MemberExpr 0xa20bd50 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                      (CXXThisExpr 0xa20bd40 <col:9> 'basic_istream<_CharT, _Traits> *' this)))
                  <<<NULL>>>)
                (CallExpr 0xa20bdf8 <line:602:5, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa20bdc0 <col:5, col:11> '<dependent type>' lvalue
                    (DeclRefExpr 0xa20bda4 <col:5> '__streambuf_type *' lvalue Var 0xa20aeb0 '__sb' '__streambuf_type *'))))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0xa20bfa0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:609:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20bec0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20bf88 </usr/include/c++/4.6/bits/istream.tcc:606:6, line:609:6>
          (CallExpr 0xa20bf58 <line:607:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20bee0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa20bed0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20bf34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa20bf78 <line:608:31>))
        <<<NULL>>>)
      (IfStmt 0xa20c090 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:611:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20bfc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20c078 </usr/include/c++/4.6/bits/istream.tcc:611:13, col:52>
          (CallExpr 0xa20c058 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20bfe0 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa20bfd0 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20c034 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa20c168 <line:612:11, line:613:33>
        <<<NULL>>>
        (ImplicitCastExpr 0xa20c0d8 <line:612:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa20c0c8 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20c0ac <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20ad30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa20c148 <line:613:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20c0f8 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0xa20c0e8 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa20c12c <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20ad30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa20c1f8 <line:615:7, col:15>
    (UnaryOperator 0xa20c1e0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa20c1d0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type peek() (CompoundStmt 0xa20d148 </usr/include/c++/4.6/bits/istream.tcc:622:5, line:646:5>
  (DeclStmt 0xa20c8e0 <line:623:7, col:40>
    0xa20c830 "int_type __c =
      (CallExpr 0xa20c8c0 <col:22, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20c888 <col:22, col:35> '<dependent type>' lvalue))")
  (BinaryOperator 0xa20c938 <line:624:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa20c900 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa20c8f0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa20c920 <col:19> 'int' 0))
  (DeclStmt 0xa20c9f0 <line:625:7, col:33>
    0xa20c960 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa20c9d0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa20c9a8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa20c998 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa20c9c0 <col:28> '_Bool' true))")
  (IfStmt 0xa20d100 <line:626:7, line:644:2>
    <<<NULL>>>
    (DeclRefExpr 0xa20ca00 <line:626:11> 'class std::basic_istream::sentry' lvalue Var 0xa20c960 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa20d0d8 <line:627:2, line:644:2>
      (DeclStmt 0xa20cad8 <line:628:4, col:47>
        0xa20ca50 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa20cac8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20caa4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa20cdf0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:634:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20cae8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa20cdd8 </usr/include/c++/4.6/bits/istream.tcc:630:6, line:634:6>
          (BinaryOperator 0xa20cbd0 <line:631:8, col:35> '<dependent type>' '='
            (DeclRefExpr 0xa20caf8 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa20c830 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0xa20cbb0 <col:14, col:35> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa20cb78 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0xa20cb58 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa20cb20 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0xa20cb10 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0xa20cdb8 <line:632:8, line:633:22>
            <<<NULL>>>
            (CallExpr 0xa20ccd8 <line:632:12, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa20cc10 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa20cc44 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa20c830 '__c' 'int_type':'typename _Traits::int_type')
              (CallExpr 0xa20ccb8 <col:42, col:59> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa20cc80 <col:42, col:55> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0xa20cd90 <line:633:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa20cd80 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa20cd68 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa20ccfc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20ca50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa20cd58 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa20cd34 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa20cef0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:639:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20ce10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20ced8 </usr/include/c++/4.6/bits/istream.tcc:636:6, line:639:6>
          (CallExpr 0xa20cea8 <line:637:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20ce30 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa20ce20 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20ce84 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa20cec8 <line:638:31>))
        <<<NULL>>>)
      (IfStmt 0xa20cfe0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:641:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20cf10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20cfc8 </usr/include/c++/4.6/bits/istream.tcc:641:6, col:45>
          (CallExpr 0xa20cfa8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20cf30 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa20cf20 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20cf84 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa20d0b8 <line:642:4, line:643:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa20d028 <line:642:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa20d018 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20cffc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20ca50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa20d098 <line:643:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20d048 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa20d038 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa20d07c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20ca50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa20d138 <line:645:7, col:14>
    (DeclRefExpr 0xa20d11c <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0xa20c830 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &read(char_type *__s, streamsize __n) (CompoundStmt 0xa20e098 </usr/include/c++/4.6/bits/istream.tcc:652:5, line:675:5>
  (BinaryOperator 0xa20d7c0 <line:653:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa20d788 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa20d778 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa20d7a8 <col:19> 'int' 0))
  (DeclStmt 0xa20d870 <line:654:7, col:33>
    0xa20d7e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa20d850 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa20d828 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa20d818 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa20d840 <col:28> '_Bool' true))")
  (IfStmt 0xa20e040 <line:655:7, line:673:2>
    <<<NULL>>>
    (DeclRefExpr 0xa20d880 <line:655:11> 'class std::basic_istream::sentry' lvalue Var 0xa20d7e0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa20e018 <line:656:2, line:673:2>
      (DeclStmt 0xa20d958 <line:657:4, col:47>
        0xa20d8d0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa20d948 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20d924 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa20dd30 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:663:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20d968 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa20dd18 </usr/include/c++/4.6/bits/istream.tcc:659:6, line:663:6>
          (BinaryOperator 0xa20daa0 <line:660:8, col:49> '<dependent type>' '='
            (MemberExpr 0xa20d988 <col:8> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
              (CXXThisExpr 0xa20d978 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (CallExpr 0xa20da78 <col:20, col:49> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa20da10 <col:20, col:35> '<dependent type>' lvalue
                (CallExpr 0xa20d9f0 <col:20, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa20d9b8 <col:20, col:26> '<dependent type>' lvalue
                    (CXXThisExpr 0xa20d9a8 <col:20> 'basic_istream<_CharT, _Traits> *' this))))
              (DeclRefExpr 0xa20da44 <col:41> 'char_type *' lvalue ParmVar 0xa20d4f0 '__s' 'char_type *')
              (DeclRefExpr 0xa20da5c <col:46> 'streamsize':'int' lvalue ParmVar 0xa20d530 '__n' 'streamsize':'int')))
          (IfStmt 0xa20dcf8 <line:661:8, line:662:49>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa20db58 <line:661:12, col:25> '<dependent type>'
              (UnresolvedLookupExpr 0xa20db00 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
              (MemberExpr 0xa20dac8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                (CXXThisExpr 0xa20dab8 <col:12> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa20dae8 <col:25> 'streamsize':'int' lvalue ParmVar 0xa20d530 '__n' 'streamsize':'int'))
            (CXXOperatorCallExpr 0xa20dcd0 <line:662:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa20dcc0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa20dca8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa20db7c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20d8d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0xa20dc90 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0xa20dc68 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0xa20dc58 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa20dc40 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9f26750 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0xa20dc20 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa20dbc0 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0xa20dc30 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa20dbfc <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa20de30 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:668:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20dd50 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20de18 </usr/include/c++/4.6/bits/istream.tcc:665:6, line:668:6>
          (CallExpr 0xa20dde8 <line:666:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20dd70 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa20dd60 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20ddc4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa20de08 <line:667:31>))
        <<<NULL>>>)
      (IfStmt 0xa20df20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:670:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20de50 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20df08 </usr/include/c++/4.6/bits/istream.tcc:670:6, col:45>
          (CallExpr 0xa20dee8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20de70 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa20de60 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20dec4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa20dff8 <line:671:4, line:672:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa20df68 <line:671:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa20df58 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20df3c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20d8d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa20dfd8 <line:672:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20df88 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa20df78 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa20dfbc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20d8d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa20e088 <line:674:7, col:15>
    (UnaryOperator 0xa20e070 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa20e060 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    streamsize readsome(char_type *__s, streamsize __n) (CompoundStmt 0xa20ef40 </usr/include/c++/4.6/bits/istream.tcc:681:5, line:707:5>
  (BinaryOperator 0xa20e4e0 <line:682:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa20e4a8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa20e498 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa20e4c8 <col:19> 'int' 0))
  (DeclStmt 0xa20e590 <line:683:7, col:33>
    0xa20e500 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa20e570 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa20e548 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa20e538 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa20e560 <col:28> '_Bool' true))")
  (IfStmt 0xa20eee0 <line:684:7, line:705:2>
    <<<NULL>>>
    (DeclRefExpr 0xa20e5a0 <line:684:11> 'class std::basic_istream::sentry' lvalue Var 0xa20e500 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa20eeb8 <line:685:2, line:705:2>
      (DeclStmt 0xa20e678 <line:686:4, col:47>
        0xa20e5f0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa20e668 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20e644 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa20ebd0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:695:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20e688 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa20ebb8 </usr/include/c++/4.6/bits/istream.tcc:688:6, line:695:6>
          (DeclStmt 0xa20e798 <line:690:8, col:58>
            0xa20e6a0 "const streamsize __num =
              (CallExpr 0xa20e778 <col:33, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa20e740 <col:33, col:48> '<dependent type>' lvalue
                  (CallExpr 0xa20e720 <col:33, col:45> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa20e6e8 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa20e6d8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0xa20eb98 <line:691:8, line:694:22>
            <<<NULL>>>
            (BinaryOperator 0xa20e7e8 <line:691:12, col:20> '_Bool' '>'
              (ImplicitCastExpr 0xa20e7d8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa20e7a8 <col:12> 'const streamsize':'const int' lvalue Var 0xa20e6a0 '__num' 'const streamsize':'const int'))
              (IntegerLiteral 0xa20e7c0 <col:20> 'int' 0))
            (BinaryOperator 0xa20ea38 <line:692:3, col:61> '<dependent type>' '='
              (MemberExpr 0xa20e810 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
                (CXXThisExpr 0xa20e800 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (CallExpr 0xa20ea10 <col:15, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa20e898 <col:15, col:30> '<dependent type>' lvalue
                  (CallExpr 0xa20e878 <col:15, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa20e840 <col:15, col:21> '<dependent type>' lvalue
                      (CXXThisExpr 0xa20e830 <col:15> 'basic_istream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa20e8cc <col:36> 'char_type *' lvalue ParmVar 0xa20e360 '__s' 'char_type *')
                (CallExpr 0xa20e9d8 <col:41, col:60> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa20e9c8 <col:41, col:46> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa20e9a0 <col:41, col:46> 'const int &(const int &, const int &)' lvalue Function 0xa0c8b20 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x9e8ec70 'min')))
                  (DeclRefExpr 0xa20e940 <col:50> 'const streamsize':'const int' lvalue Var 0xa20e6a0 '__num' 'const streamsize':'const int')
                  (ImplicitCastExpr 0xa20ea00 <col:57> 'const int':'const int' lvalue <NoOp>
                    (DeclRefExpr 0xa20e958 <col:57> 'streamsize':'int' lvalue ParmVar 0xa20e3a0 '__n' 'streamsize':'int')))))
            (IfStmt 0xa20eb78 <line:693:13, line:694:22>
              <<<NULL>>>
              (BinaryOperator 0xa20eaa8 <line:693:17, col:27> '_Bool' '=='
                (ImplicitCastExpr 0xa20ea98 <col:17> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa20ea50 <col:17> 'const streamsize':'const int' lvalue Var 0xa20e6a0 '__num' 'const streamsize':'const int'))
                (UnaryOperator 0xa20ea80 <col:26, col:27> 'int' prefix '-'
                  (IntegerLiteral 0xa20ea68 <col:27> 'int' 1)))
              (CXXOperatorCallExpr 0xa20eb50 <line:694:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa20eb40 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa20eb28 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa20eac0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20e5f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa20eb18 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa20eaf4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0xa20ecd0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:700:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20ebf0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20ecb8 </usr/include/c++/4.6/bits/istream.tcc:697:6, line:700:6>
          (CallExpr 0xa20ec88 <line:698:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20ec10 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa20ec00 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20ec64 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa20eca8 <line:699:31>))
        <<<NULL>>>)
      (IfStmt 0xa20edc0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:702:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20ecf0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20eda8 </usr/include/c++/4.6/bits/istream.tcc:702:6, col:45>
          (CallExpr 0xa20ed88 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20ed10 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa20ed00 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20ed64 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa20ee98 <line:703:4, line:704:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa20ee08 <line:703:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa20edf8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20eddc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20e5f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa20ee78 <line:704:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20ee28 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa20ee18 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa20ee5c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20e5f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa20ef30 <line:706:7, col:14>
    (MemberExpr 0xa20ef10 <col:14> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa20ef00 <col:14> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &putback(char_type __c) (CompoundStmt 0xa210068 </usr/include/c++/4.6/bits/istream.tcc:713:5, line:742:5>
  (BinaryOperator 0xa20f570 <line:716:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa20f538 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa20f528 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa20f558 <col:19> 'int' 0))
  (CallExpr 0xa20f750 <line:718:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa20f598 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa20f588 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa20f728 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa20f6e8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (CallExpr 0xa20f618 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa20f5e0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa20f5d0 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa20f6c8 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa20f6b8 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa20f688 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9f26b90 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa20f678 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa20f654 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa20f810 <line:719:7, col:33>
    0xa20f780 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa20f7f0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa20f7c8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa20f7b8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa20f7e0 <col:28> '_Bool' true))")
  (IfStmt 0xa210010 <line:720:7, line:740:2>
    <<<NULL>>>
    (DeclRefExpr 0xa20f820 <line:720:11> 'class std::basic_istream::sentry' lvalue Var 0xa20f780 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa20ffe8 <line:721:2, line:740:2>
      (DeclStmt 0xa20f8f8 <line:722:4, col:47>
        0xa20f870 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa20f8e8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20f8c4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa20fd00 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:730:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20f908 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa20fce0 </usr/include/c++/4.6/bits/istream.tcc:724:6, line:730:6>
          (DeclStmt 0xa20f9d0 <line:725:8, col:49>
            0xa20f920 "const int_type __eof =
              (CallExpr 0xa20f9b0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa20f978 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa20fa90 <line:726:8, col:46>
            0xa20f9f0 "__streambuf_type *__sb =
              (CallExpr 0xa20fa70 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa20fa38 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa20fa28 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa20fcc0 <line:727:8, line:729:22>
            <<<NULL>>>
            (BinaryOperator 0xa20fbf0 <line:727:12, line:728:60> '<dependent type>' '||'
              (UnaryOperator 0xa20fab8 <line:727:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0xa20faa0 <col:13> '__streambuf_type *' lvalue Var 0xa20f9f0 '__sb' '__streambuf_type *'))
              (CallExpr 0xa20fbc8 <line:728:8, col:60> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa20faf0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0xa20fb90 <col:33, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa20fb40 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa20fb24 <col:33> '__streambuf_type *' lvalue Var 0xa20f9f0 '__sb' '__streambuf_type *'))
                  (DeclRefExpr 0xa20fb74 <col:49> 'char_type':'_CharT' lvalue ParmVar 0xa20f2e0 '__c' 'char_type':'_CharT'))
                (DeclRefExpr 0xa20fbb0 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa20f920 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0xa20fc98 <line:729:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa20fc88 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa20fc70 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa20fc08 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20f870 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa20fc60 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa20fc3c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa20fe00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:735:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20fd20 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20fde8 </usr/include/c++/4.6/bits/istream.tcc:732:6, line:735:6>
          (CallExpr 0xa20fdb8 <line:733:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20fd40 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa20fd30 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20fd94 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa20fdd8 <line:734:31>))
        <<<NULL>>>)
      (IfStmt 0xa20fef0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:737:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa20fe20 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa20fed8 </usr/include/c++/4.6/bits/istream.tcc:737:6, col:45>
          (CallExpr 0xa20feb8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa20fe40 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa20fe30 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa20fe94 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa20ffc8 <line:738:4, line:739:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa20ff38 <line:738:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa20ff28 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa20ff0c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20f870 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa20ffa8 <line:739:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa20ff58 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa20ff48 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa20ff8c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa20f870 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa210058 <line:741:7, col:15>
    (UnaryOperator 0xa210040 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa210030 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &unget() (CompoundStmt 0xa211150 </usr/include/c++/4.6/bits/istream.tcc:748:5, line:777:5>
  (BinaryOperator 0xa210688 <line:751:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa210650 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa1dce00
      (CXXThisExpr 0xa210640 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa210670 <col:19> 'int' 0))
  (CallExpr 0xa210850 <line:753:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2106b0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa2106a0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa210828 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa2107e8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (CallExpr 0xa210730 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2106f8 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa2106e8 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa2107c8 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa2107b8 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2107a0 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9f26b90 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa210790 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa21076c <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa210910 <line:754:7, col:33>
    0xa210880 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa2108f0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa2108c8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2108b8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa2108e0 <col:28> '_Bool' true))")
  (IfStmt 0xa2110f8 <line:755:7, line:775:2>
    <<<NULL>>>
    (DeclRefExpr 0xa210920 <line:755:11> 'class std::basic_istream::sentry' lvalue Var 0xa210880 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa2110d0 <line:756:2, line:775:2>
      (DeclStmt 0xa2109f8 <line:757:4, col:47>
        0xa210970 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa2109e8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa2109c4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa210de8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:765:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa210a08 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa210dc8 </usr/include/c++/4.6/bits/istream.tcc:759:6, line:765:6>
          (DeclStmt 0xa210ad0 <line:760:8, col:49>
            0xa210a20 "const int_type __eof =
              (CallExpr 0xa210ab0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa210a78 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa210b90 <line:761:8, col:46>
            0xa210af0 "__streambuf_type *__sb =
              (CallExpr 0xa210b70 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa210b38 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa210b28 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa210da8 <line:762:8, line:764:22>
            <<<NULL>>>
            (BinaryOperator 0xa210cd8 <line:762:12, line:763:55> '<dependent type>' '||'
              (UnaryOperator 0xa210bb8 <line:762:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0xa210ba0 <col:13> '__streambuf_type *' lvalue Var 0xa210af0 '__sb' '__streambuf_type *'))
              (CallExpr 0xa210cb0 <line:763:8, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa210bf0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0xa210c78 <col:33, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa210c40 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa210c24 <col:33> '__streambuf_type *' lvalue Var 0xa210af0 '__sb' '__streambuf_type *')))
                (DeclRefExpr 0xa210c94 <col:50> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa210a20 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0xa210d80 <line:764:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa210d70 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa210d58 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa210cf0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa210970 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa210d48 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa210d24 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa210ee8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:770:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa210e08 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa210ed0 </usr/include/c++/4.6/bits/istream.tcc:767:6, line:770:6>
          (CallExpr 0xa210ea0 <line:768:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa210e28 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa210e18 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa210e7c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa210ec0 <line:769:31>))
        <<<NULL>>>)
      (IfStmt 0xa210fd8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:772:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa210f08 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa210fc0 </usr/include/c++/4.6/bits/istream.tcc:772:6, col:45>
          (CallExpr 0xa210fa0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa210f28 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa210f18 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa210f7c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa2110b0 <line:773:4, line:774:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa211020 <line:773:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa211010 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa210ff4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa210970 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa211090 <line:774:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa211040 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa211030 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa211074 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa210970 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa211140 <line:776:7, col:15>
    (UnaryOperator 0xa211128 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa211118 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    int sync() (CompoundStmt 0xa213c70 </usr/include/c++/4.6/bits/istream.tcc:783:5, line:813:5>
  (DeclStmt 0xa211578 <line:786:7, col:21>
    0xa211510 "int __ret =
      (UnaryOperator 0xa211560 <col:19, col:20> 'int' prefix '-'
        (IntegerLiteral 0xa211548 <col:20> 'int' 1))")
  (DeclStmt 0xa211620 <line:787:7, col:33>
    0xa211590 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa211600 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa2115d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2115c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa2115f0 <col:28> '_Bool' true))")
  (IfStmt 0xa213c18 <line:788:7, line:811:2>
    <<<NULL>>>
    (DeclRefExpr 0xa211630 <line:788:11> 'class std::basic_istream::sentry' lvalue Var 0xa211590 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa213bf0 <line:789:2, line:811:2>
      (DeclStmt 0xa211708 <line:790:4, col:47>
        0xa211680 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa2116f8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa2116d4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa213908 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:801:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa211718 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2138f0 </usr/include/c++/4.6/bits/istream.tcc:792:6, line:801:6>
          (DeclStmt 0xa2117e0 <line:793:8, col:46>
            0xa211740 "__streambuf_type *__sb =
              (CallExpr 0xa2117c0 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa211788 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa211778 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa2138d0 <line:794:8, line:800:3>
            <<<NULL>>>
            (DeclRefExpr 0xa2117f0 <line:794:12> '__streambuf_type *' lvalue Var 0xa211740 '__sb' '__streambuf_type *')
            (CompoundStmt 0xa2138b8 <line:795:3, line:800:3>
              (IfStmt 0xa213898 <line:796:5, line:799:15>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa213770 <line:796:9, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa213710 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                  (CallExpr 0xa2136c0 <col:9, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa213688 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0xa211808 <col:9> '__streambuf_type *' lvalue Var 0xa211740 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0xa2136f8 <col:28, col:29> 'int' prefix '-'
                    (IntegerLiteral 0xa2136e0 <col:29> 'int' 1)))
                (CXXOperatorCallExpr 0xa213828 <line:797:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa213818 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa213800 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa213794 <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa211680 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa2137f0 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa2137cc <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa213880 <line:799:7, col:15> 'int' lvalue '='
                  (DeclRefExpr 0xa21384c <col:7> 'int' lvalue Var 0xa211510 '__ret' 'int')
                  (IntegerLiteral 0xa213868 <col:15> 'int' 0))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa213a08 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:806:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa213928 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2139f0 </usr/include/c++/4.6/bits/istream.tcc:803:6, line:806:6>
          (CallExpr 0xa2139c0 <line:804:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa213948 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa213938 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa21399c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2139e0 <line:805:31>))
        <<<NULL>>>)
      (IfStmt 0xa213af8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:808:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa213a28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa213ae0 </usr/include/c++/4.6/bits/istream.tcc:808:6, col:45>
          (CallExpr 0xa213ac0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa213a48 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa213a38 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa213a9c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa213bd0 <line:809:4, line:810:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa213b40 <line:809:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa213b30 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa213b14 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa211680 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa213bb0 <line:810:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa213b60 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa213b50 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa213b94 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa211680 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa213c60 <line:812:7, col:14>
    (ImplicitCastExpr 0xa213c50 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa213c34 <col:14> 'int' lvalue Var 0xa211510 '__ret' 'int'))))


    typename basic_istream<_CharT, _Traits>::pos_type tellg() (CompoundStmt 0xa2148e8 </usr/include/c++/4.6/bits/istream.tcc:819:5, line:841:5>
  (DeclStmt 0xa214340 <line:822:7, col:36>
    0xa2142b0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa214320 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0xa214308 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0xa2142f0 <col:34> 'int' 1)))")
  (DeclStmt 0xa2143f0 <line:823:7, col:33>
    0xa214360 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa2143d0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa2143a8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa214398 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa2143c0 <col:28> '_Bool' true))")
  (IfStmt 0xa2148a0 <line:824:7, line:839:2>
    <<<NULL>>>
    (DeclRefExpr 0xa214400 <line:824:11> 'class std::basic_istream::sentry' lvalue Var 0xa214360 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa214880 <line:825:2, line:839:2>
      (IfStmt 0xa214670 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:831:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa214418 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa214658 </usr/include/c++/4.6/bits/istream.tcc:827:6, line:831:6>
          (IfStmt 0xa214638 <line:828:8, line:830:21>
            <<<NULL>>>
            (UnaryOperator 0xa214490 <line:828:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa214470 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa214438 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa214428 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (BinaryOperator 0xa214620 <line:829:3, line:830:21> '<dependent type>' '='
              (DeclRefExpr 0xa2144a4 <line:829:3> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa2142b0 '__ret' 'pos_type':'typename _Traits::pos_type')
              (CallExpr 0xa2145f8 <col:11, line:830:21> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa214528 <line:829:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0xa214508 <col:11, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2144d0 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2144c0 <col:11> 'basic_istream<_CharT, _Traits> *' this))))
                (IntegerLiteral 0xa214560 <col:37> 'int' 0)
                (DeclRefExpr 0xa214594 <col:40, col:50> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa0a3a30 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
                (DeclRefExpr 0xa2145d4 <line:830:9, col:19> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa214770 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:836:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa214690 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa214758 </usr/include/c++/4.6/bits/istream.tcc:833:6, line:836:6>
          (CallExpr 0xa214728 <line:834:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2146b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2146a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa214704 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa214748 <line:835:31>))
        <<<NULL>>>)
      (IfStmt 0xa214860 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:838:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa214790 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa214848 </usr/include/c++/4.6/bits/istream.tcc:838:6, col:45>
          (CallExpr 0xa214828 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2147b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2147a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa214804 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa2148d8 <line:840:7, col:14>
    (DeclRefExpr 0xa2148bc <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa2142b0 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_istream<_CharT, _Traits> &seekg(pos_type __pos) (CompoundStmt 0xa2159e8 </usr/include/c++/4.6/bits/istream.tcc:847:5, line:880:5>
  (CallExpr 0xa215088 <line:851:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa214ee8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa214ed8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa215060 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa215020 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (CallExpr 0xa214f68 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa214f30 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa214f20 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa215000 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa214ff0 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa214fd8 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9f26b90 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa214fc8 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa214fa4 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa215140 <line:852:7, col:33>
    0xa2150b0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa215120 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa2150f8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2150e8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa215110 <col:28> '_Bool' true))")
  (IfStmt 0xa215990 <line:853:7, line:878:2>
    <<<NULL>>>
    (DeclRefExpr 0xa215150 <line:853:11> 'class std::basic_istream::sentry' lvalue Var 0xa2150b0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa215968 <line:854:2, line:878:2>
      (DeclStmt 0xa215228 <line:855:4, col:47>
        0xa2151a0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa215218 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa2151f4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa215680 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:868:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa215238 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa215668 </usr/include/c++/4.6/bits/istream.tcc:857:6, line:868:6>
          (IfStmt 0xa215648 <line:858:8, line:867:3>
            <<<NULL>>>
            (UnaryOperator 0xa2152b0 <line:858:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa215290 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa215258 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa215248 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0xa215630 <line:859:3, line:867:3>
              (DeclStmt 0xa215428 <line:861:5, line:862:23>
                0xa2152d0 "const pos_type __p =
                  (CallExpr 0xa215400 <line:861:26, line:862:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa215370 <line:861:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0xa215350 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa215318 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0xa215308 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0xa2153a4 <col:52> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0xa214c90 '__pos' 'pos_type':'typename _Traits::pos_type')
                    (DeclRefExpr 0xa2153dc <line:862:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0xa215610 <line:865:5, line:866:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa215530 <line:865:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2154d0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                  (DeclRefExpr 0xa215438 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa2152d0 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0xa2154b0 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0xa215490 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0xa215478 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0xa215460 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0xa2155e8 <line:866:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa2155d8 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa2155c0 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa215554 <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2151a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa2155b0 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa21558c <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa215780 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:873:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2156a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa215768 </usr/include/c++/4.6/bits/istream.tcc:870:6, line:873:6>
          (CallExpr 0xa215738 <line:871:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2156c0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2156b0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa215714 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa215758 <line:872:31>))
        <<<NULL>>>)
      (IfStmt 0xa215870 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:875:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2157a0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa215858 </usr/include/c++/4.6/bits/istream.tcc:875:6, col:45>
          (CallExpr 0xa215838 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2157c0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2157b0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa215814 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa215948 <line:876:4, line:877:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa2158b8 <line:876:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa2158a8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa21588c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2151a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa215928 <line:877:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2158d8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa2158c8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa21590c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa2151a0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa2159d8 <line:879:7, col:15>
    (UnaryOperator 0xa2159c0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2159b0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &seekg(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0xa216b70 </usr/include/c++/4.6/bits/istream.tcc:886:5, line:919:5>
  (CallExpr 0xa2161f8 <line:890:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa216058 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa216048 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa2161d0 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa216190 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (CallExpr 0xa2160d8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2160a0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa216090 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa216170 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa216160 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa216148 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x9f26b90 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa216138 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa216114 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa2162b0 <line:891:7, col:33>
    0xa216220 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa216290 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa216268 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa216258 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa216280 <col:28> '_Bool' true))")
  (IfStmt 0xa216b18 <line:892:7, line:917:2>
    <<<NULL>>>
    (DeclRefExpr 0xa2162c0 <line:892:11> 'class std::basic_istream::sentry' lvalue Var 0xa216220 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa216af0 <line:893:2, line:917:2>
      (DeclStmt 0xa216398 <line:894:4, col:47>
        0xa216310 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa216388 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa216364 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa216808 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:907:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2163a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2167f0 </usr/include/c++/4.6/bits/istream.tcc:896:6, line:907:6>
          (IfStmt 0xa2167d0 <line:897:8, line:906:3>
            <<<NULL>>>
            (UnaryOperator 0xa216420 <line:897:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa216400 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2163c8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2163b8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0xa2167b8 <line:898:3, line:906:3>
              (DeclStmt 0xa2165b0 <line:900:5, line:901:23>
                0xa216440 "const pos_type __p =
                  (CallExpr 0xa216588 <line:900:26, line:901:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2164e0 <line:900:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0xa2164c0 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa216488 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0xa216478 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0xa216514 <col:52> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0xa215d90 '__off' 'off_type':'typename _Traits::off_type')
                    (DeclRefExpr 0xa21652c <col:59> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa215e00 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                    (DeclRefExpr 0xa216564 <line:901:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0xa216798 <line:904:5, line:905:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa2166b8 <line:904:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0xa216658 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
                  (DeclRefExpr 0xa2165c0 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa216440 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0xa216638 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0xa216618 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0xa216600 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0xa2165e8 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0xa216770 <line:905:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa216760 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa216748 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa2166dc <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa216310 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa216738 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa216714 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa216908 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:912:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa216828 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2168f0 </usr/include/c++/4.6/bits/istream.tcc:909:6, line:912:6>
          (CallExpr 0xa2168c0 <line:910:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa216848 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa216838 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa21689c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2168e0 <line:911:31>))
        <<<NULL>>>)
      (IfStmt 0xa2169f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:914:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa216928 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2169e0 </usr/include/c++/4.6/bits/istream.tcc:914:6, col:45>
          (CallExpr 0xa2169c0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa216948 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa216938 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa21699c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa216ad0 <line:915:4, line:916:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa216a40 <line:915:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa216a30 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa216a14 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa216310 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa216ab0 <line:916:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa216a60 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa216a50 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa216a94 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa216310 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa216b60 <line:918:7, col:15>
    (UnaryOperator 0xa216b48 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa216b38 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c) (CompoundStmt 0xa217c50 </usr/include/c++/4.6/bits/istream.tcc:925:5, line:952:5>
  (DeclStmt 0xa217180 <line:926:7, col:61>
    0xa217150 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa217240 <line:927:7, col:67>
    0xa217210 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa217330 <line:929:7, col:58>
    0xa2172b0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa217310 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa2172e4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa216e50 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa217300 <col:52> '_Bool' false))")
  (IfStmt 0xa217c08 <line:930:7, line:950:2>
    <<<NULL>>>
    (DeclRefExpr 0xa217340 <line:930:11> 'typename __istream_type::sentry' lvalue Var 0xa2172b0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa217be0 <line:931:2, line:950:2>
      (DeclStmt 0xa217418 <line:932:4, col:47>
        0xa217390 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa217408 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa2173e4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa2178e0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:940:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa217428 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2178c8 </usr/include/c++/4.6/bits/istream.tcc:934:6, line:940:6>
          (DeclStmt 0xa217560 <line:935:8, col:54>
            0xa217460 "const __int_type __cb =
              (CallExpr 0xa217540 <col:32, col:53> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa217508 <col:32, col:46> '<dependent type>' lvalue
                  (CallExpr 0xa2174e8 <col:32, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2174b0 <col:32, col:37> '<dependent type>' lvalue
                      (DeclRefExpr 0xa217494 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa216e50 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (IfStmt 0xa2178a8 <line:936:8, line:939:49>
            <<<NULL>>>
            (UnaryOperator 0xa217668 <line:936:12, col:54> '<dependent type>' prefix '!'
              (CallExpr 0xa217640 <col:13, col:54> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa217598 <col:13, col:22> '<dependent type>' lvalue)
                (DeclRefExpr 0xa2175bc <col:34> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa217460 '__cb' 'const __int_type':'const typename __istream_type::int_type')
                (CallExpr 0xa217620 <col:40, col:53> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa2175f8 <col:40, col:49> '<dependent type>' lvalue))))
            (BinaryOperator 0xa217718 <line:937:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0xa21767c <col:3> '_CharT' lvalue ParmVar 0xa216ec0 '__c' '_CharT &')
              (CallExpr 0xa2176f8 <col:9, col:35> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa2176b8 <col:9, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0xa2176dc <col:31> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa217460 '__cb' 'const __int_type':'const typename __istream_type::int_type')))
            (CXXOperatorCallExpr 0xa217880 <line:939:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa217870 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa217858 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa217730 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa217390 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0xa217840 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0xa217818 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0xa217808 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa2177f0 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x9f26750 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0xa2177d0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa217770 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0xa2177e0 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa2177ac <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0xa2179e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:945:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa217900 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2179d0 </usr/include/c++/4.6/bits/istream.tcc:942:6, line:945:6>
          (CallExpr 0xa2179a0 <line:943:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa217928 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa217910 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa216e50 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa21797c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2179c0 <line:944:31>))
        <<<NULL>>>)
      (IfStmt 0xa217ae0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:947:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa217a08 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa217ac8 </usr/include/c++/4.6/bits/istream.tcc:947:6, col:44>
          (CallExpr 0xa217aa8 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa217a30 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa217a18 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa216e50 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa217a84 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa217bc0 <line:948:4, line:949:25>
        <<<NULL>>>
        (ImplicitCastExpr 0xa217b28 <line:948:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa217b18 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa217afc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa217390 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa217ba0 <line:949:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa217b50 <col:6, col:11> '<dependent type>' lvalue
            (DeclRefExpr 0xa217b34 <col:6> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa216e50 '__in' 'basic_istream<_CharT, _Traits> &'))
          (DeclRefExpr 0xa217b84 <col:20> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa217390 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa217c40 <line:951:7, col:14>
    (DeclRefExpr 0xa217c24 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa216e50 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s) (CompoundStmt 0xa219a78 </usr/include/c++/4.6/bits/istream.tcc:957:5, line:1012:5>
  (DeclStmt 0xa218250 <line:958:7, col:61>
    0xa218220 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa2183a0 <line:959:7, col:73>
    0xa218370 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0xa218450 <line:960:7, col:51>
    0xa218420 "typedef typename _Traits::int_type int_type")
  (DeclStmt 0xa2184a0 <line:961:7, col:35>
    0xa218470 "typedef _CharT char_type")
  (DeclStmt 0xa218590 <line:962:7, col:44>
    0xa218560 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa218600 <line:964:7, col:33>
    0xa2185b0 "streamsize __extracted =
      (IntegerLiteral 0xa2185e8 <col:32> 'int' 0)")
  (DeclStmt 0xa2186c8 <line:965:7, col:50>
    0xa218640 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa2186b8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa218694 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3690 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa2187e0 <line:966:7, col:58>
    0xa218760 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa2187c0 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa218794 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa217f40 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa2187b0 <col:52> '_Bool' false))")
  (IfStmt 0xa219828 <line:967:7, line:1006:2>
    <<<NULL>>>
    (DeclRefExpr 0xa2187f0 <line:967:11> 'typename __istream_type::sentry' lvalue Var 0xa218760 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa219808 <line:968:2, line:1006:2>
      (IfStmt 0xa2195e8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:998:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa218808 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2195b0 </usr/include/c++/4.6/bits/istream.tcc:970:6, line:998:6>
          (DeclStmt 0xa2188c8 <line:972:8, col:39>
            0xa218820 "streamsize __num =
              (CallExpr 0xa2188a8 <col:27, col:38> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa218870 <col:27, col:32> '<dependent type>' lvalue
                  (DeclRefExpr 0xa218854 <col:27> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa217f40 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (IfStmt 0xa218a18 <line:973:8, line:974:52>
            <<<NULL>>>
            (BinaryOperator 0xa218918 <line:973:12, col:21> '_Bool' '<='
              (ImplicitCastExpr 0xa218908 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa2188d8 <col:12> 'streamsize':'int' lvalue Var 0xa218820 '__num' 'streamsize':'int'))
              (IntegerLiteral 0xa2188f0 <col:21> 'int' 0))
            (BinaryOperator 0xa218a00 <line:974:3, col:52> 'streamsize':'int' lvalue '='
              (DeclRefExpr 0xa218930 <col:3> 'streamsize':'int' lvalue Var 0xa218820 '__num' 'streamsize':'int')
              (ImplicitCastExpr 0xa2189f0 <col:11, col:52> 'int':'int' <LValueToRValue>
                (DeclRefExpr 0xa2189d0 <col:11, col:52> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int')))
            <<<NULL>>>)
          (DeclStmt 0xa218bb8 <line:976:8, col:73>
            0xa218a80 "const __ctype_type &__ct =
              (CallExpr 0xa218b98 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0xa218ac0 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
                (CallExpr 0xa218b78 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa218b40 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0xa218b28 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa217f40 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0xa218c90 <line:978:8, col:45>
            0xa218bf0 "const int_type __eof =
              (CallExpr 0xa218c70 <col:31, col:44> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa218c48 <col:31, col:40> '<dependent type>' lvalue))")
          (DeclStmt 0xa218d88 <line:979:8, col:45>
            0xa218ce0 "__streambuf_type *__sb =
              (CallExpr 0xa218d68 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa218d30 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0xa218d14 <col:33> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa217f40 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa218e48 <line:980:8, col:36>
            0xa218da0 "int_type __c =
              (CallExpr 0xa218e28 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa218df0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa218dd4 <col:23> '__streambuf_type *' lvalue Var 0xa218ce0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa219310 <line:982:8, line:990:3>
            <<<NULL>>>
            (BinaryOperator 0xa219110 <line:982:15, line:985:32> '<dependent type>' '&&'
              (BinaryOperator 0xa218fa8 <line:982:15, line:983:43> '<dependent type>' '&&'
                (BinaryOperator 0xa218ed8 <line:982:15, col:37> '_Bool' '<'
                  (ImplicitCastExpr 0xa218ec8 <col:15> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa218e58 <col:15> 'streamsize':'int' lvalue Var 0xa2185b0 '__extracted' 'streamsize':'int'))
                  (BinaryOperator 0xa218eb0 <col:29, col:37> 'int' '-'
                    (ImplicitCastExpr 0xa218ea0 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa218e70 <col:29> 'streamsize':'int' lvalue Var 0xa218820 '__num' 'streamsize':'int'))
                    (IntegerLiteral 0xa218e88 <col:37> 'int' 1)))
                (UnaryOperator 0xa218f90 <line:983:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa218f68 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa218f10 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa218f34 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0xa218da0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa218f4c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa218bf0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa2190f8 <line:984:11, line:985:32> '<dependent type>' prefix '!'
                (CallExpr 0xa2190d0 <line:984:12, line:985:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa218fd8 <line:984:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa218fc0 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa218a80 '__ct' 'const __ctype_type &'))
                  (DeclRefExpr 0xa21902c <col:20, col:32> 'const mask':'const unsigned short' lvalue Var 0xa0f2fb0 'space' 'const mask':'const unsigned short')
                  (CallExpr 0xa2190b0 <line:985:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa219070 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa219094 <col:28> 'int_type':'typename _Traits::int_type' lvalue Var 0xa218da0 '__c' 'int_type':'typename _Traits::int_type')))))
            (CompoundStmt 0xa2192f0 <line:986:3, line:990:3>
              (BinaryOperator 0xa219208 <line:987:5, col:39> '<dependent type>' '='
                (UnaryOperator 0xa219170 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa219158 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa219128 <col:6> '_CharT *' lvalue ParmVar 0xa217fb0 '__s' '_CharT *')))
                (CallExpr 0xa2191e8 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa2191a8 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa2191cc <col:36> 'int_type':'typename _Traits::int_type' lvalue Var 0xa218da0 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0xa219238 <line:988:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa219220 <col:7> 'streamsize':'int' lvalue Var 0xa2185b0 '__extracted' 'streamsize':'int'))
              (BinaryOperator 0xa2192d8 <line:989:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa21924c <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa218da0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa2192b8 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa219280 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa219264 <col:11> '__streambuf_type *' lvalue Var 0xa218ce0 '__sb' '__streambuf_type *'))))))
          (IfStmt 0xa219488 <line:991:8, line:992:22>
            <<<NULL>>>
            (CallExpr 0xa2193a8 <line:991:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa219350 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa219374 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0xa218da0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa21938c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa218bf0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa219460 <line:992:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa219450 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa219438 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa2193cc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa218640 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa219428 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa219404 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (BinaryOperator 0xa219510 <line:996:8, col:25> '<dependent type>' '='
            (UnaryOperator 0xa2194c0 <col:8, col:9> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa2194a4 <col:9> '_CharT *' lvalue ParmVar 0xa217fb0 '__s' '_CharT *'))
            (CXXUnresolvedConstructExpr 0xa2194f8 <col:15, col:25> 'char_type':'_CharT'))
          (CallExpr 0xa219590 <line:997:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa219540 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa219528 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa217f40 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa219578 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa2196f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1003:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa219608 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2196d8 </usr/include/c++/4.6/bits/istream.tcc:1000:6, line:1003:6>
          (CallExpr 0xa2196a8 <line:1001:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa219630 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa219618 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa217f40 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa219684 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa2196c8 <line:1002:31>))
        <<<NULL>>>)
      (IfStmt 0xa2197e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1005:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa219710 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2197d0 </usr/include/c++/4.6/bits/istream.tcc:1005:6, col:44>
          (CallExpr 0xa2197b0 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa219738 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa219720 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa217f40 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa21978c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3570 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa219950 <line:1007:7, line:1008:21>
    <<<NULL>>>
    (UnaryOperator 0xa219880 <line:1007:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa219870 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa219860 <col:12> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa219844 <col:12> 'streamsize':'int' lvalue Var 0xa2185b0 '__extracted' 'streamsize':'int'))))
    (CXXOperatorCallExpr 0xa219928 <line:1008:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa219918 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa219900 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x9f26dd0 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa219894 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa218640 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa2198f0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa2198cc <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a3630 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa219a30 <line:1009:7, line:1010:21>
    <<<NULL>>>
    (ImplicitCastExpr 0xa219998 <line:1009:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa219988 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa21996c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa218640 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa219a10 <line:1010:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2199c0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa2199a4 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa217f40 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa2199f4 <col:16> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa218640 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa219a68 <line:1011:7, col:14>
    (DeclRefExpr 0xa219a4c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa217f40 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__in) (CompoundStmt 0xa21abd8 </usr/include/c++/4.6/bits/istream.tcc:1018:5, line:1036:5>
  (DeclStmt 0xa21a040 <line:1019:7, col:61>
    0xa21a010 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa21a190 <line:1020:7, col:73>
    0xa21a160 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0xa21a250 <line:1021:7, col:60>
    0xa21a220 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa21a340 <line:1022:7, col:44>
    0xa21a310 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa21a4c8 <line:1024:7, col:72>
    0xa21a390 "const __ctype_type &__ct =
      (CallExpr 0xa21a4a8 <col:34, col:71> '<dependent type>'
        (UnresolvedLookupExpr 0xa21a3d0 <col:34, col:56> '<dependent type>' lvalue (ADL) = '1' 0xa089d80)
        (CallExpr 0xa21a488 <col:58, col:70> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa21a450 <col:58, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0xa21a438 <col:58> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa219d80 '__in' 'basic_istream<_CharT, _Traits> &'))))")
  (DeclStmt 0xa21a5a8 <line:1025:7, col:46>
    0xa21a500 "const __int_type __eof =
      (CallExpr 0xa21a588 <col:32, col:45> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa21a560 <col:32, col:41> '<dependent type>' lvalue))")
  (DeclStmt 0xa21a6a8 <line:1026:7, col:44>
    0xa21a600 "__streambuf_type *__sb =
      (CallExpr 0xa21a688 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa21a650 <col:32, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0xa21a634 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa219d80 '__in' 'basic_istream<_CharT, _Traits> &')))")
  (DeclStmt 0xa21a768 <line:1027:7, col:37>
    0xa21a6c0 "__int_type __c =
      (CallExpr 0xa21a748 <col:24, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa21a710 <col:24, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa21a6f4 <col:24> '__streambuf_type *' lvalue Var 0xa21a600 '__sb' '__streambuf_type *')))")
  (WhileStmt 0xa21aa20 <line:1029:7, line:1031:21>
    <<<NULL>>>
    (BinaryOperator 0xa21a968 <line:1029:14, line:1030:63> '<dependent type>' '&&'
      (UnaryOperator 0xa21a818 <line:1029:14, col:46> '<dependent type>' prefix '!'
        (CallExpr 0xa21a7f0 <col:15, col:46> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa21a798 <col:15, col:24> '<dependent type>' lvalue)
          (DeclRefExpr 0xa21a7bc <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa21a6c0 '__c' '__int_type':'typename __istream_type::int_type')
          (DeclRefExpr 0xa21a7d4 <col:41> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa21a500 '__eof' 'const __int_type':'const typename __istream_type::int_type')))
      (CallExpr 0xa21a940 <line:1030:10, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa21a848 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa21a82c <col:10> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa21a390 '__ct' 'const __ctype_type &'))
        (DeclRefExpr 0xa21a89c <col:18, col:30> 'const mask':'const unsigned short' lvalue Var 0xa0f2fb0 'space' 'const mask':'const unsigned short')
        (CallExpr 0xa21a920 <col:37, col:62> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa21a8e0 <col:37, col:46> '<dependent type>' lvalue)
          (DeclRefExpr 0xa21a904 <col:59> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa21a6c0 '__c' '__int_type':'typename __istream_type::int_type'))))
    (BinaryOperator 0xa21aa08 <line:1031:2, col:21> '<dependent type>' '='
      (DeclRefExpr 0xa21a980 <col:2> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa21a6c0 '__c' '__int_type':'typename __istream_type::int_type')
      (CallExpr 0xa21a9e8 <col:8, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa21a9b0 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa21a998 <col:8> '__streambuf_type *' lvalue Var 0xa21a600 '__sb' '__streambuf_type *')))))
  (IfStmt 0xa21ab90 <line:1033:8, line:1034:33>
    <<<NULL>>>
    (CallExpr 0xa21aab8 <line:1033:12, col:43> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa21aa60 <col:12, col:21> '<dependent type>' lvalue)
      (DeclRefExpr 0xa21aa84 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa21a6c0 '__c' '__int_type':'typename __istream_type::int_type')
      (DeclRefExpr 0xa21aa9c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa21a500 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
    (CallExpr 0xa21ab70 <line:1034:3, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa21aaf8 <col:3, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa21aadc <col:3> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa219d80 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa21ab4c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa0a35d0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa21abc8 <line:1035:7, col:14>
    (DeclRefExpr 0xa21abac <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa219d80 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    };
    class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    };
    class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    };
    class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf : public basic_streambuf<_CharT, _Traits> {
        class basic_stringbuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, _Traits, _Alloc> __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (CXXOperatorCallExpr 0xa227148 </usr/include/c++/4.6/sstream:93:51, col:76> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa227138 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa227120 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa227100 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22709c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa227110 <col:66, col:76> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa2270dc <col:66, col:76> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode((DeclRefExpr 0xa227548 </usr/include/c++/4.6/sstream:94:37> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa225e80 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')
), _M_string() (CompoundStmt 0xa2275e8 </usr/include/c++/4.6/sstream:95:7, col:9>)


        basic_stringbuf<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa227238 </usr/include/c++/4.6/sstream:107:37, col:62> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa227228 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa227210 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa2271f0 <col:37, col:47> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22718c <col:37, col:47> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa227200 <col:52, col:62> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa2271cc <col:52, col:62> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode(), _M_string((CallExpr 0xa2276c8 </usr/include/c++/4.6/sstream:108:50, col:61> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa227690 <col:50, col:56> '<dependent type>' lvalue
    (DeclRefExpr 0xa227678 <col:50> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa225fd0 '__str' 'const __string_type &')))
, (CallExpr 0xa227738 </usr/include/c++/4.6/sstream:108:64, col:75> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa227700 <col:64, col:70> '<dependent type>' lvalue
    (DeclRefExpr 0xa2276e4 <col:64> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa225fd0 '__str' 'const __string_type &')))
) (CompoundStmt 0xa227830 </usr/include/c++/4.6/sstream:109:7, col:36>
  (CallExpr 0xa227810 <col:9, col:33> '<dependent type>'
    (MemberExpr 0xa2277d8 <col:9> '<bound member function type>' ->_M_stringbuf_init 0xa2263e0
      (CXXThisExpr 0xa2277c8 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa2277f8 <col:27> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa226040 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))


        __string_type str() const (CompoundStmt 0xa227d90 </usr/include/c++/4.6/sstream:122:7, line:135:7>
  (DeclStmt 0xa227888 <line:123:2, col:21>
    0xa227850 "__string_type __ret")
  (IfStmt 0xa227d48 <line:124:2, line:133:12>
    <<<NULL>>>
    (CallExpr 0xa227900 <line:124:6, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2278c8 <col:6, col:12> '<dependent type>' lvalue
        (CXXThisExpr 0xa2278b8 <col:6> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CompoundStmt 0xa227cd0 <line:125:4, line:131:4>
      (IfStmt 0xa227cb0 <line:127:6, line:130:59>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa227a38 <line:127:10, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa2279f0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (CallExpr 0xa227968 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa227930 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa227920 <col:10> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa2279d0 <col:25, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa227998 <col:25, col:31> '<dependent type>' lvalue
              (CXXThisExpr 0xa227988 <col:25> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa227b70 <line:128:8, col:57> '<dependent type>' '='
          (DeclRefExpr 0xa227a5c <col:8> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa227850 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0xa227b50 <col:16, col:57> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0xa227ac8 <col:30, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa227a90 <col:30, col:36> '<dependent type>' lvalue
                (CXXThisExpr 0xa227a80 <col:30> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa227b30 <col:45, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa227af8 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0xa227ae8 <col:45> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (BinaryOperator 0xa227c98 <line:130:9, col:59> '<dependent type>' '='
          (DeclRefExpr 0xa227b88 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa227850 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0xa227c78 <col:17, col:59> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0xa227bf0 <col:31, col:43> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa227bb8 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0xa227ba8 <col:31> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa227c58 <col:46, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa227c20 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa227c10 <col:46> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))))
    (BinaryOperator 0xa227d30 <line:133:4, col:12> '<dependent type>' '='
      (DeclRefExpr 0xa227ce4 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa227850 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
      (MemberExpr 0xa227d10 <col:12> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
        (CXXThisExpr 0xa227d00 <col:12> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
  (ReturnStmt 0xa227d80 <line:134:2, col:9>
    (DeclRefExpr 0xa227d64 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa227850 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')))


        void str(const __string_type &__s) (CompoundStmt 0xa227fa0 </usr/include/c++/4.6/sstream:146:7, line:150:7>
  (CallExpr 0xa227ef8 <line:148:2, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa227de0 <col:2, col:12> '<dependent type>' lvalue
      (MemberExpr 0xa227dc0 <col:2> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
        (CXXThisExpr 0xa227db0 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CallExpr 0xa227e68 <col:19, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa227e30 <col:19, col:23> '<dependent type>' lvalue
        (DeclRefExpr 0xa227e14 <col:19> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa226210 '__s' 'const __string_type &')))
    (CallExpr 0xa227ed8 <col:31, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa227ea0 <col:31, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0xa227e84 <col:31> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa226210 '__s' 'const __string_type &'))))
  (CallExpr 0xa227f80 <line:149:2, col:27> '<dependent type>'
    (MemberExpr 0xa227f30 <col:2> '<bound member function type>' ->_M_stringbuf_init 0xa2263e0
      (CXXThisExpr 0xa227f20 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (MemberExpr 0xa227f60 <col:20> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa225da0
      (CXXThisExpr 0xa227f50 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))


    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode) (CompoundStmt 0xa228430 </usr/include/c++/4.6/sstream:156:7, line:162:7>
  (BinaryOperator 0xa228000 <line:157:2, col:12> '<dependent type>' '='
    (MemberExpr 0xa227fc8 <col:2> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa225da0
      (CXXThisExpr 0xa227fb8 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa227fe8 <col:12> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa226390 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (DeclStmt 0xa228070 <line:158:2, col:23>
    0xa228020 "__size_type __len =
      (IntegerLiteral 0xa228058 <col:22> 'int' 0)")
  (IfStmt 0xa2282d8 <line:159:2, line:160:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2281f8 <line:159:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa2281c0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f252b0)
      (MemberExpr 0xa228090 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa225da0
        (CXXThisExpr 0xa228080 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (ParenExpr 0xa2281a8 <col:16, col:46> 'enum std::_Ios_Openmode'
        (CXXOperatorCallExpr 0xa228180 <col:17, col:43> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa228170 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa228158 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa228138 <col:17, col:27> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa2280d8 <col:17, col:27> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a37a0 'ate' 'const openmode':'const enum std::_Ios_Openmode'))
          (ImplicitCastExpr 0xa228148 <col:33, col:43> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa228114 <col:33, col:43> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3740 'app' 'const openmode':'const enum std::_Ios_Openmode')))))
    (BinaryOperator 0xa2282c0 <line:160:4, col:27> '<dependent type>' '='
      (DeclRefExpr 0xa22821c <col:4> '__size_type':'typename __string_type::size_type' lvalue Var 0xa228020 '__len' '__size_type':'typename __string_type::size_type')
      (CallExpr 0xa2282a0 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa228268 <col:12, col:22> '<dependent type>' lvalue
          (MemberExpr 0xa228248 <col:12> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
            (CXXThisExpr 0xa228238 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (CallExpr 0xa228408 <line:161:2, col:60> '<dependent type>'
    (MemberExpr 0xa228308 <col:2> '<bound member function type>' ->_M_sync 0xa226dc0
      (CXXThisExpr 0xa2282f8 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (CXXConstCastExpr 0xa2283c0 <col:10, col:49> 'char_type *' const_cast<char_type *> <NoOp>
      (CallExpr 0xa228390 <col:33, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa228358 <col:33, col:43> '<dependent type>' lvalue
          (MemberExpr 0xa228338 <col:33> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
            (CXXThisExpr 0xa228328 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (IntegerLiteral 0xa2283d8 <col:52> 'int' 0)
    (DeclRefExpr 0xa2283f0 <col:55> '__size_type':'typename __string_type::size_type' lvalue Var 0xa228020 '__len' '__size_type':'typename __string_type::size_type')))


        virtual streamsize showmanyc() (CompoundStmt 0xa2287c8 </usr/include/c++/4.6/sstream:166:7, line:174:7>
  (DeclStmt 0xa2284c8 <line:167:2, col:23>
    0xa228460 "streamsize __ret =
      (UnaryOperator 0xa2284b0 <col:21, col:22> 'int' prefix '-'
        (IntegerLiteral 0xa228498 <col:22> 'int' 1))")
  (IfStmt 0xa228770 <line:168:2, line:172:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa228580 <line:168:6, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa228548 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f252b0)
      (MemberExpr 0xa2284e8 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa225da0
        (CXXThisExpr 0xa2284d8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa228524 <col:16, col:26> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
    (CompoundStmt 0xa228758 <line:169:4, line:172:4>
      (CallExpr 0xa2285d8 <line:170:6, col:22> '<dependent type>'
        (MemberExpr 0xa2285b8 <col:6> '<bound member function type>' ->_M_update_egptr 0xa226e50
          (CXXThisExpr 0xa2285a8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (BinaryOperator 0xa228740 <line:171:6, col:41> '<dependent type>' '='
        (DeclRefExpr 0xa2285f4 <col:6> 'streamsize':'int' lvalue Var 0xa228460 '__ret' 'streamsize':'int')
        (CXXOperatorCallExpr 0xa228718 <col:14, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0xa2286e0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (CallExpr 0xa228658 <col:14, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa228620 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa228610 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa2286c0 <col:30, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa228688 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa228678 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>)
  (ReturnStmt 0xa2287b8 <line:173:2, col:9>
    (ImplicitCastExpr 0xa2287a8 <col:9> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa22878c <col:9> 'streamsize':'int' lvalue Var 0xa228460 '__ret' 'streamsize':'int'))))


        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c = (CallExpr 0xa2272a8 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa227280 <col:32, col:45> '<dependent type>' lvalue))
);
        virtual int_type overflow(int_type __c = (CallExpr 0xa227310 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa2272e8 <col:31, col:44> '<dependent type>' lvalue))
);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n) (CompoundStmt 0xa2289f0 </usr/include/c++/4.6/sstream:198:7, line:213:7>
  (IfStmt 0xa2289b0 <line:199:2, line:211:4>
    <<<NULL>>>
    (BinaryOperator 0xa228858 <line:199:6, col:20> '<dependent type>' '&&'
      (DeclRefExpr 0xa2287e4 <col:6> 'char_type *' lvalue ParmVar 0xa226760 '__s' 'char_type *')
      (BinaryOperator 0xa228840 <col:13, col:20> '_Bool' '>='
        (ImplicitCastExpr 0xa228830 <col:13> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa2287fc <col:13> 'streamsize':'int' lvalue ParmVar 0xa2267a0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa228818 <col:20> 'int' 0)))
    (CompoundStmt 0xa228998 <line:200:4, line:211:4>
      (CallExpr 0xa2288d8 <line:207:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2288a0 <col:6, col:16> '<dependent type>' lvalue
          (MemberExpr 0xa228880 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
            (CXXThisExpr 0xa228870 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa228970 <line:210:6, col:25> '<dependent type>'
        (MemberExpr 0xa228908 <col:6> '<bound member function type>' ->_M_sync 0xa226dc0
          (CXXThisExpr 0xa2288f8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa228928 <col:14> 'char_type *' lvalue ParmVar 0xa226760 '__s' 'char_type *')
        (DeclRefExpr 0xa228940 <col:19> 'streamsize':'int' lvalue ParmVar 0xa2267a0 '__n' 'streamsize':'int')
        (IntegerLiteral 0xa228958 <col:24> 'int' 0)))
    <<<NULL>>>)
  (ReturnStmt 0xa2289e0 <line:212:2, col:9>
    (CXXThisExpr 0xa2289d0 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))


        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa2273f8 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa2273e8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa2273d0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa2273b0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22734c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa2273c0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22738c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa2274e8 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa2274d8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa2274c0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa2274a0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22743c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa2274b0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22747c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr() (CompoundStmt 0xa2290b8 </usr/include/c++/4.6/sstream:233:7, line:242:7>
  (DeclStmt 0xa228b18 <line:234:2, col:46>
    0xa228a10 "const bool __testin =
      (CXXOperatorCallExpr 0xa228af0 <col:24, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa228ab8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f252b0)
        (MemberExpr 0xa228a58 <col:24> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa225da0
          (CXXThisExpr 0xa228a48 <col:24> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa228a94 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa229098 <line:235:2, line:241:4>
    <<<NULL>>>
    (BinaryOperator 0xa228cd0 <line:235:6, col:49> '<dependent type>' '&&'
      (CallExpr 0xa228b70 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa228b38 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa228b28 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CXXOperatorCallExpr 0xa228ca8 <col:22, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa228c60 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
        (CallExpr 0xa228bd8 <col:22, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa228ba0 <col:22, col:28> '<dependent type>' lvalue
            (CXXThisExpr 0xa228b90 <col:22> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa228c40 <col:37, col:49> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa228c08 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0xa228bf8 <col:37> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0xa229080 <line:236:4, line:241:4>
      (IfStmt 0xa229060 <line:237:6, line:240:59>
        <<<NULL>>>
        (ImplicitCastExpr 0xa228d00 <line:237:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa228ce8 <col:10> 'const _Bool' lvalue Var 0xa228a10 '__testin' 'const _Bool'))
        (CallExpr 0xa228e90 <line:238:8, col:60> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa228d20 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa228d10 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0xa228da0 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa228d68 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa228d58 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa228e08 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa228dd0 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa228dc0 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa228e70 <col:48, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa228e38 <col:48, col:54> '<dependent type>' lvalue
              (CXXThisExpr 0xa228e28 <col:48> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0xa229038 <line:240:8, col:59> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa228ec8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa228eb8 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0xa228f48 <col:19, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa228f10 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa228f00 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa228fb0 <col:33, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa228f78 <col:33, col:39> '<dependent type>' lvalue
              (CXXThisExpr 0xa228f68 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa229018 <col:47, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa228fe0 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa228fd0 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>))


        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream : public basic_istream<_CharT, _Traits> {
        class basic_istringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0xa22a238 </usr/include/c++/4.6/sstream:298:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa22a214 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((CXXOperatorCallExpr 0xa22a388 </usr/include/c++/4.6/sstream:299:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa22a378 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa22a360 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa22a340 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22a2e8 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa229c60 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa22a350 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22a31c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa22a500 </usr/include/c++/4.6/sstream:300:7, col:36>
  (CallExpr 0xa22a4e0 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa22a418 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa22a408 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa22a4c0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa22a480 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (MemberExpr 0xa22a460 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa229bc0
        (CXXThisExpr 0xa22a450 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_istringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0xa22a288 </usr/include/c++/4.6/sstream:317:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa22a264 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((DeclRefExpr 0xa22a558 </usr/include/c++/4.6/sstream:318:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa229d80 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0xa22a610 </usr/include/c++/4.6/sstream:318:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa22a600 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa22a5e8 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa22a5c8 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22a570 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa229df0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa22a5d8 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22a5a4 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa22a778 </usr/include/c++/4.6/sstream:319:7, col:36>
  (CallExpr 0xa22a758 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa22a690 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa22a680 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa22a738 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa22a6f8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (MemberExpr 0xa22a6d8 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa229bc0
        (CXXThisExpr 0xa22a6c8 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_istringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa22a790 </usr/include/c++/4.6/sstream:328:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa22a880 </usr/include/c++/4.6/sstream:339:7, col:62>
  (ReturnStmt 0xa22a870 <col:9, col:59>
    (CXXConstCastExpr 0xa22a858 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa22a828 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa22a7e8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (MemberExpr 0xa22a7c8 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa229bc0
          (CXXThisExpr 0xa22a7b8 <col:47> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa22a930 </usr/include/c++/4.6/sstream:347:7, col:36>
  (ReturnStmt 0xa22a920 <col:9, col:33>
    (CallExpr 0xa22a900 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa22a8c8 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa22a8a8 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa229bc0
          (CXXThisExpr 0xa22a898 <col:16> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa22a9e8 </usr/include/c++/4.6/sstream:357:7, col:32>
  (CallExpr 0xa22a9c8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa22a978 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa22a958 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa229bc0
        (CXXThisExpr 0xa22a948 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa22a9ac <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa22a110 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream : public basic_ostream<_CharT, _Traits> {
        class basic_ostringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0xa22bb28 </usr/include/c++/4.6/sstream:408:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa22bb04 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((CXXOperatorCallExpr 0xa22bc78 </usr/include/c++/4.6/sstream:409:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa22bc68 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa22bc50 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa22bc30 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22bbd8 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa22b590 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa22bc40 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22bc0c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa22bdf0 </usr/include/c++/4.6/sstream:410:7, col:36>
  (CallExpr 0xa22bdd0 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa22bd08 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa22bcf8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa22bdb0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa22bd70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (MemberExpr 0xa22bd50 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa22b4f0
        (CXXThisExpr 0xa22bd40 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_ostringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0xa22bb78 </usr/include/c++/4.6/sstream:427:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa22bb54 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((DeclRefExpr 0xa22be48 </usr/include/c++/4.6/sstream:428:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa22b6b0 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0xa22bf00 </usr/include/c++/4.6/sstream:428:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa22bef0 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa22bed8 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa22beb8 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22be60 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa22b720 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa22bec8 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22be94 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa22c068 </usr/include/c++/4.6/sstream:429:7, col:36>
  (CallExpr 0xa22c048 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa22bf80 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa22bf70 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa22c028 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa22bfe8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (MemberExpr 0xa22bfc8 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa22b4f0
        (CXXThisExpr 0xa22bfb8 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_ostringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa22c080 </usr/include/c++/4.6/sstream:438:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa22c170 </usr/include/c++/4.6/sstream:449:7, col:62>
  (ReturnStmt 0xa22c160 <col:9, col:59>
    (CXXConstCastExpr 0xa22c148 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa22c118 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa22c0d8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (MemberExpr 0xa22c0b8 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa22b4f0
          (CXXThisExpr 0xa22c0a8 <col:47> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa22c220 </usr/include/c++/4.6/sstream:457:7, col:36>
  (ReturnStmt 0xa22c210 <col:9, col:33>
    (CallExpr 0xa22c1f0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa22c1b8 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa22c198 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa22b4f0
          (CXXThisExpr 0xa22c188 <col:16> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa22c2d8 </usr/include/c++/4.6/sstream:467:7, col:32>
  (CallExpr 0xa22c2b8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa22c268 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa22c248 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa22b4f0
        (CXXThisExpr 0xa22c238 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa22c29c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa22ba00 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream : public basic_iostream<_CharT, _Traits> {
        class basic_stringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __m = (CXXOperatorCallExpr 0xa230e90 </usr/include/c++/4.6/sstream:516:51, col:77> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa230e80 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa230e68 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa230e48 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa230de8 <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa230e58 <col:67, col:77> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa230e24 <col:67, col:77> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0xa230ff8 </usr/include/c++/4.6/sstream:517:41> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa22ce80 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0xa231160 </usr/include/c++/4.6/sstream:518:7, col:36>
  (CallExpr 0xa231140 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa231078 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa231068 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa231120 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa2310e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (MemberExpr 0xa2310c0 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa22cde0
        (CXXThisExpr 0xa2310b0 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_stringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __m = (CXXOperatorCallExpr 0xa230f80 </usr/include/c++/4.6/sstream:533:30, col:56> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa230f70 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa230f58 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa230f38 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa230ed4 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa230f48 <col:46, col:56> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa230f14 <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0xa2311b8 </usr/include/c++/4.6/sstream:534:41> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa22cfa0 '__str' 'const __string_type &')
, (DeclRefExpr 0xa2311d0 </usr/include/c++/4.6/sstream:534:48> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa22d010 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0xa231328 </usr/include/c++/4.6/sstream:535:7, col:36>
  (CallExpr 0xa231308 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa231240 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa231230 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa2312e8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa2312a8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
      (MemberExpr 0xa231288 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa22cde0
        (CXXThisExpr 0xa231278 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_stringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa231340 </usr/include/c++/4.6/sstream:544:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa231430 </usr/include/c++/4.6/sstream:555:7, col:62>
  (ReturnStmt 0xa231420 <col:9, col:59>
    (CXXConstCastExpr 0xa231408 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa2313d8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa231398 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (MemberExpr 0xa231378 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa22cde0
          (CXXThisExpr 0xa231368 <col:47> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa2314e0 </usr/include/c++/4.6/sstream:563:7, col:36>
  (ReturnStmt 0xa2314d0 <col:9, col:33>
    (CallExpr 0xa2314b0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa231478 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa231458 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa22cde0
          (CXXThisExpr 0xa231448 <col:16> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa231598 </usr/include/c++/4.6/sstream:573:7, col:32>
  (CallExpr 0xa231578 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa231528 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa231508 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa22cde0
        (CXXThisExpr 0xa2314f8 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa23155c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa22d2f0 '__s' 'const __string_type &')))


    };
}
namespace std {
    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type pbackfail(int_type __c = (CallExpr 0xa2272a8 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa227280 <col:32, col:45> '<dependent type>' lvalue))
) (CompoundStmt 0xa232998 </usr/include/c++/4.6/bits/sstream.tcc:48:5, line:76:5>
  (DeclStmt 0xa231e90 <line:49:7, col:42>
    0xa231de0 "int_type __ret =
      (CallExpr 0xa231e70 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa231e38 <col:24, col:37> '<dependent type>' lvalue))")
  (IfStmt 0xa232950 <line:50:7, line:74:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa231fb8 <line:50:11, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa231f70 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
      (CallExpr 0xa231ee8 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa231eb0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa231ea0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa231f50 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa231f18 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0xa231f08 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
    (CompoundStmt 0xa232938 <line:51:2, line:74:2>
      (DeclStmt 0xa2320d8 <line:54:4, col:63>
        0xa231ff0 "const bool __testeof =
          (CallExpr 0xa2320b0 <col:27, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa232048 <col:27, col:40> '<dependent type>' lvalue)
            (DeclRefExpr 0xa23207c <col:52> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa231b60 '__c' 'int_type':'typename traits_type::int_type')
            (DeclRefExpr 0xa232094 <col:57> 'int_type':'typename traits_type::int_type' lvalue Var 0xa231de0 '__ret' 'int_type':'typename traits_type::int_type'))")
      (IfStmt 0xa232918 <line:55:4, line:73:6>
        <<<NULL>>>
        (UnaryOperator 0xa232110 <line:55:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa232100 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa2320e8 <col:9> 'const _Bool' lvalue Var 0xa231ff0 '__testeof' 'const _Bool')))
        (CompoundStmt 0xa232788 <line:56:6, line:68:6>
          (DeclStmt 0xa232328 <line:57:8, line:59:28>
            0xa232130 "const bool __testeq =
              (CallExpr 0xa232300 <line:57:30, line:59:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa232188 <line:57:30, col:43> '<dependent type>' lvalue)
                (CallExpr 0xa232230 <col:46, line:58:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2321e0 <line:57:46, line:58:11> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa232214 <col:24> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa231b60 '__c' 'int_type':'typename traits_type::int_type'))
                (ArraySubscriptExpr 0xa2322e8 <line:59:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0xa232298 <col:11, col:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa232260 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0xa232250 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (UnaryOperator 0xa2322d0 <col:24, col:25> 'int' prefix '-'
                    (IntegerLiteral 0xa2322b8 <col:25> 'int' 1))))")
          (DeclStmt 0xa232468 <line:60:8, col:60>
            0xa232340 "const bool __testout =
              (CXXOperatorCallExpr 0xa232440 <col:31, col:57> '<dependent type>'
                (UnresolvedLookupExpr 0xa232400 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
                (CXXDependentScopeMemberExpr 0xa232388 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa232378 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0xa2323dc <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa232768 <line:61:8, line:67:3>
            <<<NULL>>>
            (BinaryOperator 0xa2324c8 <line:61:12, col:24> '_Bool' '||'
              (ImplicitCastExpr 0xa2324a8 <col:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa232478 <col:12> 'const _Bool' lvalue Var 0xa232130 '__testeq' 'const _Bool'))
              (ImplicitCastExpr 0xa2324b8 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa232490 <col:24> 'const _Bool' lvalue Var 0xa232340 '__testout' 'const _Bool')))
            (CompoundStmt 0xa232748 <line:62:3, line:67:3>
              (CallExpr 0xa232558 <line:63:5, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2324f0 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2324e0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (UnaryOperator 0xa232540 <col:17, col:18> 'int' prefix '-'
                  (IntegerLiteral 0xa232528 <col:18> 'int' 1)))
              (IfStmt 0xa2326e0 <line:64:5, line:65:52>
                <<<NULL>>>
                (UnaryOperator 0xa2325a0 <line:64:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa232590 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa232578 <col:10> 'const _Bool' lvalue Var 0xa232130 '__testeq' 'const _Bool')))
                (BinaryOperator 0xa2326c8 <line:65:7, col:52> '<dependent type>' '='
                  (UnaryOperator 0xa232620 <col:7, col:19> '<dependent type>' prefix '*'
                    (CallExpr 0xa232600 <col:8, col:19> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa2325c8 <col:8, col:14> '<dependent type>' lvalue
                        (CXXThisExpr 0xa2325b8 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
                  (CallExpr 0xa2326a8 <col:23, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa232658 <col:23, col:36> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa23268c <col:49> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa231b60 '__c' 'int_type':'typename traits_type::int_type')))
                <<<NULL>>>)
              (BinaryOperator 0xa232730 <line:66:5, col:13> '<dependent type>' '='
                (DeclRefExpr 0xa2326fc <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa231de0 '__ret' 'int_type':'typename traits_type::int_type')
                (DeclRefExpr 0xa232714 <col:13> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa231b60 '__c' 'int_type':'typename traits_type::int_type')))
            <<<NULL>>>))
        (CompoundStmt 0xa232900 <line:70:6, line:73:6>
          (CallExpr 0xa232820 <line:71:8, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2327b8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2327a8 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (UnaryOperator 0xa232808 <col:20, col:21> 'int' prefix '-'
              (IntegerLiteral 0xa2327f0 <col:21> 'int' 1)))
          (BinaryOperator 0xa2328e8 <line:72:8, col:40> '<dependent type>' '='
            (DeclRefExpr 0xa232840 <col:8> 'int_type':'typename traits_type::int_type' lvalue Var 0xa231de0 '__ret' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa2328c8 <col:16, col:40> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa232878 <col:16, col:29> '<dependent type>' lvalue)
              (DeclRefExpr 0xa2328ac <col:37> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa231b60 '__c' 'int_type':'typename traits_type::int_type'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa232988 <line:75:7, col:14>
    (DeclRefExpr 0xa23296c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa231de0 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type overflow(int_type __c = (CallExpr 0xa227310 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa2272e8 <col:31, col:44> '<dependent type>' lvalue))
) (CompoundStmt 0xa234950 </usr/include/c++/4.6/bits/sstream.tcc:82:5, line:127:5>
  (DeclStmt 0xa233238 <line:83:7, col:59>
    0xa233110 "const bool __testout =
      (CXXOperatorCallExpr 0xa233210 <col:30, col:56> '<dependent type>'
        (UnresolvedLookupExpr 0xa2331d0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (CXXDependentScopeMemberExpr 0xa233158 <col:30, col:36> '<dependent type>' lvalue
          (CXXThisExpr 0xa233148 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa2331ac <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa2333a0 <line:84:7, line:85:26>
    <<<NULL>>>
    (ImplicitCastExpr 0xa233308 <line:84:11, col:45> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa2332c0 <col:11, col:45> 'long'
        (ImplicitCastExpr 0xa2332b0 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa233248 <col:11> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa2332e8 <col:28, col:29> 'long' <IntegralCast>
          (UnaryOperator 0xa233288 <col:28, col:29> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa233278 <col:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa233260 <col:29> 'const _Bool' lvalue Var 0xa233110 '__testout' 'const _Bool'))))
        (ImplicitCastExpr 0xa2332f8 <col:40> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa2332a0 <col:40> '_Bool' false))))
    (ReturnStmt 0xa233390 <line:85:2, col:26>
      (CallExpr 0xa233370 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa233338 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0xa233518 <line:87:7, col:79>
    0xa2333d0 "const bool __testeof =
      (CallExpr 0xa2334f0 <col:30, col:78> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa233428 <col:30, col:43> '<dependent type>' lvalue)
        (DeclRefExpr 0xa23345c <col:55> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa232e90 '__c' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa2334d0 <col:60, col:77> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa233498 <col:60, col:73> '<dependent type>' lvalue)))")
  (IfStmt 0xa233680 <line:88:7, line:89:33>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2335d0 <line:88:11, col:44> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa233578 <col:11, col:44> 'long'
        (ImplicitCastExpr 0xa233568 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa233528 <col:11> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa2335b0 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa2335a0 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa233540 <col:28> 'const _Bool' lvalue Var 0xa2333d0 '__testeof' 'const _Bool')))
        (ImplicitCastExpr 0xa2335c0 <col:39> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa233558 <col:39> '_Bool' false))))
    (ReturnStmt 0xa233670 <line:89:2, col:33>
      (CallExpr 0xa233650 <col:9, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa233600 <col:9, col:22> '<dependent type>' lvalue)
        (DeclRefExpr 0xa233634 <col:30> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa232e90 '__c' 'int_type':'typename traits_type::int_type')))
    <<<NULL>>>)
  (DeclStmt 0xa233770 <line:91:7, col:58>
    0xa2336b0 "const __size_type __capacity =
      (CallExpr 0xa233750 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa233718 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0xa2336f8 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
            (CXXThisExpr 0xa2336e8 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0xa233850 <line:92:7, col:58>
    0xa233790 "const __size_type __max_size =
      (CallExpr 0xa233830 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2337f8 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0xa2337d8 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
            (CXXThisExpr 0xa2337c8 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0xa2339e8 <line:93:7, col:58>
    0xa233870 "const bool __testput =
      (CXXOperatorCallExpr 0xa2339c0 <col:30, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa233978 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (CallExpr 0xa2338f0 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2338b8 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa2338a8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa233958 <col:45, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa233920 <col:45, col:51> '<dependent type>' lvalue
            (CXXThisExpr 0xa233910 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa233be0 <line:94:7, line:95:26>
    <<<NULL>>>
    (CallExpr 0xa233b30 <line:94:11, col:73> '<dependent type>'
      (DeclRefExpr 0xa2339f8 <col:11> 'long (long, long)' lvalue Function 0x9fba450 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0xa233b08 <col:28, col:56> '<dependent type>' '&&'
        (UnaryOperator 0xa233a38 <col:28, col:29> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa233a28 <col:29> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa233a10 <col:29> 'const _Bool' lvalue Var 0xa233870 '__testput' 'const _Bool')))
        (CXXOperatorCallExpr 0xa233ae0 <col:42, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0xa233a80 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
          (DeclRefExpr 0xa233a4c <col:42> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa2336b0 '__capacity' 'const __size_type':'const typename __string_type::size_type')
          (DeclRefExpr 0xa233a64 <col:56> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa233790 '__max_size' 'const __size_type':'const typename __string_type::size_type')))
      (CXXBoolLiteralExpr 0xa233b20 <col:68> '_Bool' false))
    (ReturnStmt 0xa233bd0 <line:95:2, col:26>
      (CallExpr 0xa233bb0 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa233b78 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0xa233cd8 <line:99:7, col:62>
    0xa233c10 "const char_type __conv =
      (CallExpr 0xa233cb8 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa233c68 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0xa233c9c <col:58> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa232e90 '__c' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0xa234888 <line:100:7, line:124:18>
    <<<NULL>>>
    (UnaryOperator 0xa233d10 <line:100:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa233d00 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa233ce8 <col:12> 'const _Bool' lvalue Var 0xa233870 '__testput' 'const _Bool')))
    (CompoundStmt 0xa2347a8 <line:101:2, line:122:2>
      (DeclStmt 0xa233e98 <line:111:4, line:112:25>
        0xa233d30 "const __size_type __opt_len =
          (CallExpr 0xa233e70 <line:111:34, line:112:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa233d88 <line:111:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8f3a0 0x9e8fb10)
            (CXXUnresolvedConstructExpr 0xa233e10 <col:43, col:69> '__size_type':'typename __string_type::size_type'
              (BinaryOperator 0xa233df8 <col:55, col:59> '<dependent type>' '*'
                (IntegerLiteral 0xa233dc8 <col:55> 'int' 2)
                (DeclRefExpr 0xa233de0 <col:59> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa2336b0 '__capacity' 'const __size_type':'const typename __string_type::size_type')))
            (CXXUnresolvedConstructExpr 0xa233e50 <line:112:8, col:23> '__size_type':'typename __string_type::size_type'
              (IntegerLiteral 0xa233e38 <col:20> 'int' 512)))")
      (DeclStmt 0xa233f90 <line:113:4, col:61>
        0xa233eb0 "const __size_type __len =
          (CallExpr 0xa233f68 <col:30, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa233f00 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8ec70 0x9e8f780)
            (DeclRefExpr 0xa233f38 <col:39> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa233d30 '__opt_len' 'const __size_type':'const typename __string_type::size_type')
            (DeclRefExpr 0xa233f50 <col:50> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa233790 '__max_size' 'const __size_type':'const typename __string_type::size_type'))")
      (DeclStmt 0xa233fe8 <line:114:4, col:23>
        0xa233fb0 "__string_type __tmp")
      (CallExpr 0xa234060 <line:115:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa234010 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa233ff8 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa233fb0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0xa234044 <col:18> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa233eb0 '__len' 'const __size_type':'const typename __string_type::size_type'))
      (IfStmt 0xa2342f8 <line:116:4, line:117:63>
        <<<NULL>>>
        (CallExpr 0xa2340c8 <line:116:8, col:20> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa234090 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa234080 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa2342d0 <line:117:6, col:63> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa234100 <col:6, col:12> '<dependent type>' lvalue
            (DeclRefExpr 0xa2340e4 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa233fb0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
          (CallExpr 0xa234180 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa234148 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa234138 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa2342a8 <col:34, col:62> '<dependent type>'
            (UnresolvedLookupExpr 0xa234270 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
            (CallExpr 0xa2341e8 <col:34, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2341b0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa2341a0 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa234250 <col:50, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa234218 <col:50, col:56> '<dependent type>' lvalue
                (CXXThisExpr 0xa234208 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        <<<NULL>>>)
      (CallExpr 0xa234380 <line:118:4, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa234330 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa234314 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa233fb0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0xa234364 <col:20> 'const char_type':'const _CharT' lvalue Var 0xa233c10 '__conv' 'const char_type':'const _CharT'))
      (CallExpr 0xa234420 <line:119:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2343d0 <col:4, col:14> '<dependent type>' lvalue
          (MemberExpr 0xa2343b0 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
            (CXXThisExpr 0xa2343a0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa234404 <col:19> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa233fb0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
      (CallExpr 0xa234780 <line:120:4, line:121:63> '<dependent type>'
        (MemberExpr 0xa234450 <line:120:4> '<bound member function type>' ->_M_sync 0xa226dc0
          (CXXThisExpr 0xa234440 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (CXXConstCastExpr 0xa234508 <col:12, col:51> 'char_type *' const_cast<char_type *> <NoOp>
          (CallExpr 0xa2344d8 <col:35, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2344a0 <col:35, col:45> '<dependent type>' lvalue
              (MemberExpr 0xa234480 <col:35> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
                (CXXThisExpr 0xa234470 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (CXXOperatorCallExpr 0xa234628 <line:121:5, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa2345f0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (CallExpr 0xa234568 <col:5, col:16> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa234530 <col:5, col:11> '<dependent type>' lvalue
              (CXXThisExpr 0xa234520 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa2345d0 <col:20, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa234598 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0xa234588 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0xa234758 <col:35, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa234720 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (CallExpr 0xa234698 <col:35, col:46> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa234660 <col:35, col:41> '<dependent type>' lvalue
              (CXXThisExpr 0xa234650 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa234700 <col:50, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2346c8 <col:50, col:56> '<dependent type>' lvalue
              (CXXThisExpr 0xa2346b8 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    (BinaryOperator 0xa234870 <line:124:2, col:18> '<dependent type>' '='
      (UnaryOperator 0xa234840 <col:2, col:14> '<dependent type>' prefix '*'
        (CallExpr 0xa234820 <col:3, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2347e8 <col:3, col:9> '<dependent type>' lvalue
            (CXXThisExpr 0xa2347d8 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0xa234854 <col:18> 'const char_type':'const _CharT' lvalue Var 0xa233c10 '__conv' 'const char_type':'const _CharT')))
  (CallExpr 0xa234908 <line:125:7, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2348b8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa2348a8 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa2348f0 <col:19> 'int' 1))
  (ReturnStmt 0xa234940 <line:126:7, col:14>
    (DeclRefExpr 0xa234928 <col:14> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa232e90 '__c' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type underflow() (CompoundStmt 0xa235608 </usr/include/c++/4.6/bits/sstream.tcc:133:5, line:145:5>
  (DeclStmt 0xa235150 <line:134:7, col:42>
    0xa2350a0 "int_type __ret =
      (CallExpr 0xa235130 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2350f8 <col:24, col:37> '<dependent type>' lvalue))")
  (DeclStmt 0xa235298 <line:135:7, col:57>
    0xa235170 "const bool __testin =
      (CXXOperatorCallExpr 0xa235270 <col:29, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa235230 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (CXXDependentScopeMemberExpr 0xa2351b8 <col:29, col:35> '<dependent type>' lvalue
          (CXXThisExpr 0xa2351a8 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa23520c <col:45, col:55> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa2355c0 <line:136:7, line:143:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2352c0 <line:136:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa2352a8 <col:11> 'const _Bool' lvalue Var 0xa235170 '__testin' 'const _Bool'))
    (CompoundStmt 0xa2355a8 <line:137:2, line:143:2>
      (CallExpr 0xa235300 <line:139:4, col:20> '<dependent type>'
        (MemberExpr 0xa2352e0 <col:4> '<bound member function type>' ->_M_update_egptr 0xa226e50
          (CXXThisExpr 0xa2352d0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (IfStmt 0xa235588 <line:141:4, line:142:52>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa235438 <line:141:8, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa2353f0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
          (CallExpr 0xa235368 <col:8, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa235330 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa235320 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa2353d0 <col:23, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa235398 <col:23, col:29> '<dependent type>' lvalue
              (CXXThisExpr 0xa235388 <col:23> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa235570 <line:142:6, col:52> '<dependent type>' '='
          (DeclRefExpr 0xa23545c <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2350a0 '__ret' 'int_type':'typename traits_type::int_type')
          (CallExpr 0xa235550 <col:14, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa235498 <col:14, col:27> '<dependent type>' lvalue)
            (UnaryOperator 0xa235538 <col:39, col:51> '<dependent type>' prefix '*'
              (CallExpr 0xa235518 <col:40, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2354e0 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2354d0 <col:40> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa2355f8 <line:144:7, col:14>
    (DeclRefExpr 0xa2355dc <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa2350a0 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa2273f8 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa2273e8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa2273d0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa2273b0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22734c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa2273c0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22738c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa237cd8 </usr/include/c++/4.6/bits/sstream.tcc:151:5, line:193:5>
  (DeclStmt 0xa235f58 <line:152:7, col:47>
    0xa235ea0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa235f38 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0xa235f18 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0xa235f00 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0xa235ee8 <col:44> 'int' 1))))")
  (DeclStmt 0xa2361d0 <line:153:7, col:67>
    0xa235f70 "bool __testin =
      (CXXOperatorCallExpr 0xa2361a8 <col:23, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa236150 <col:63, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
        (ParenExpr 0xa236120 <col:23, col:61> '<dependent type>'
          (CXXOperatorCallExpr 0xa2360f8 <col:24, col:55> '<dependent type>'
            (UnresolvedLookupExpr 0xa2360b8 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
            (CXXOperatorCallExpr 0xa236078 <col:24, col:45> '<dependent type>'
              (UnresolvedLookupExpr 0xa236038 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
              (DeclRefExpr 0xa235fd0 <col:24, col:34> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa236000 <col:39, col:45> '<dependent type>' lvalue
                (CXXThisExpr 0xa235ff0 <col:39> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa23609c <col:55> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa235c00 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa236138 <col:66> 'int' 0))")
  (DeclStmt 0xa236450 <line:154:7, col:69>
    0xa2361f0 "bool __testout =
      (CXXOperatorCallExpr 0xa236428 <col:24, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa2363d0 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
        (ParenExpr 0xa2363a0 <col:24, col:63> '<dependent type>'
          (CXXOperatorCallExpr 0xa236378 <col:25, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa236338 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
            (CXXOperatorCallExpr 0xa2362f8 <col:25, col:47> '<dependent type>'
              (UnresolvedLookupExpr 0xa2362b8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
              (DeclRefExpr 0xa236250 <col:25, col:35> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa236280 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa236270 <col:41> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa23631c <col:57> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa235c00 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa2363b8 <col:68> 'int' 0))")
  (DeclStmt 0xa236610 <line:155:7, col:78>
    0xa236470 "const bool __testboth =
      (BinaryOperator 0xa2365c0 <col:31, col:75> '_Bool' '&&'
        (BinaryOperator 0xa2364f8 <col:31, col:43> '_Bool' '&&'
          (ImplicitCastExpr 0xa2364d8 <col:31> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa2364a4 <col:31> '_Bool' lvalue Var 0xa235f70 '__testin' '_Bool'))
          (ImplicitCastExpr 0xa2364e8 <col:43> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa2364bc <col:43> '_Bool' lvalue Var 0xa2361f0 '__testout' '_Bool')))
        (BinaryOperator 0xa2365a8 <col:56, col:75> '_Bool' '!='
          (ImplicitCastExpr 0xa236588 <col:56> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa236568 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa236510 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa235b90 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0xa236598 <col:65, col:75> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa236578 <col:65, col:75> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa236544 <col:65, col:75> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa0a3a30 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')))))")
  (CompoundAssignOperator 0xa236750 <line:156:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa236620 <col:7> '_Bool' lvalue Var 0xa235f70 '__testin' '_Bool')
    (ImplicitCastExpr 0xa236740 <col:19, col:43> 'int' <IntegralCast>
      (UnaryOperator 0xa236728 <col:19, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa236718 <col:20, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa236700 <col:20, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0xa2366d8 <col:21, col:40> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0xa2366c8 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa2366b0 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f252b0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0xa236690 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa236638 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa235c00 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0xa2366a0 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa23666c <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (CompoundAssignOperator 0xa2368a0 <line:157:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa236770 <col:7> '_Bool' lvalue Var 0xa2361f0 '__testout' '_Bool')
    (ImplicitCastExpr 0xa236890 <col:20, col:43> 'int' <IntegralCast>
      (UnaryOperator 0xa236878 <col:20, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa236868 <col:21, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa236850 <col:21, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0xa236828 <col:22, col:41> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0xa236818 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa236800 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f252b0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0xa2367e0 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa236788 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa235c00 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0xa2367f0 <col:31, col:41> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa2367bc <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (DeclStmt 0xa236a40 <line:161:7, col:72>
    0xa2368f0 "const char_type *__beg =
      (ConditionalOperator 0xa236a20 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0xa236a10 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa236924 <col:32> '_Bool' lvalue Var 0xa235f70 '__testin' '_Bool'))
        (CallExpr 0xa236988 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa236950 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa236940 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa2369f0 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2369b8 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0xa2369a8 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa237c90 <line:162:7, line:191:2>
    <<<NULL>>>
    (BinaryOperator 0xa236b88 <line:162:11, col:68> '<dependent type>' '&&'
      (ParenExpr 0xa236ab0 <col:11, col:27> '<dependent type>'
        (BinaryOperator 0xa236a98 <col:12, col:22> '<dependent type>' '||'
          (DeclRefExpr 0xa236a50 <col:12> 'const char_type *' lvalue Var 0xa2368f0 '__beg' 'const char_type *')
          (UnaryOperator 0xa236a80 <col:21, col:22> '<dependent type>' prefix '!'
            (DeclRefExpr 0xa236a68 <col:22> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa235b20 '__off' 'off_type':'typename traits_type::off_type'))))
      (ParenExpr 0xa236b70 <col:32, col:68> '_Bool'
        (BinaryOperator 0xa236b58 <col:33, col:58> '_Bool' '||'
          (BinaryOperator 0xa236b18 <col:33, col:45> '_Bool' '||'
            (ImplicitCastExpr 0xa236af8 <col:33> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa236ac4 <col:33> '_Bool' lvalue Var 0xa235f70 '__testin' '_Bool'))
            (ImplicitCastExpr 0xa236b08 <col:45> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa236adc <col:45> '_Bool' lvalue Var 0xa2361f0 '__testout' '_Bool')))
          (ImplicitCastExpr 0xa236b48 <col:58> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa236b30 <col:58> 'const _Bool' lvalue Var 0xa236470 '__testboth' 'const _Bool')))))
    (CompoundStmt 0xa237c68 <line:163:2, line:191:2>
      (CallExpr 0xa236bd0 <line:164:4, col:20> '<dependent type>'
        (MemberExpr 0xa236bb0 <col:4> '<bound member function type>' ->_M_update_egptr 0xa226e50
          (CXXThisExpr 0xa236ba0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0xa236c50 <line:166:4, col:30>
        0xa236c00 "off_type __newoffi =
          (DeclRefExpr 0xa236c34 <col:25> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa235b20 '__off' 'off_type':'typename traits_type::off_type')")
      (DeclStmt 0xa236cc0 <line:167:4, col:34>
        0xa236c70 "off_type __newoffo =
          (DeclRefExpr 0xa236ca4 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c00 '__newoffi' 'off_type':'typename traits_type::off_type')")
      (IfStmt 0xa237218 <line:168:4, line:174:47>
        <<<NULL>>>
        (BinaryOperator 0xa236d68 <line:168:8, col:27> '_Bool' '=='
          (ImplicitCastExpr 0xa236d48 <col:8> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa236d28 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa236cd0 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa235b90 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0xa236d58 <col:17, col:27> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa236d38 <col:17, col:27> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa236d04 <col:17, col:27> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa0a3a30 'cur' 'const seekdir':'const enum std::_Ios_Seekdir'))))
        (CompoundStmt 0xa236fb0 <line:169:6, line:172:6>
          (CompoundAssignOperator 0xa236e78 <line:170:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa236d80 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c00 '__newoffi' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0xa236e50 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa236e18 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (CallExpr 0xa236de0 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa236da8 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa236d98 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa236dfc <col:36> 'const char_type *' lvalue Var 0xa2368f0 '__beg' 'const char_type *')))
          (CompoundAssignOperator 0xa236f90 <line:171:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa236e98 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c70 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0xa236f68 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa236f30 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (CallExpr 0xa236ef8 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa236ec0 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa236eb0 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa236f14 <col:36> 'const char_type *' lvalue Var 0xa2368f0 '__beg' 'const char_type *'))))
        (IfStmt 0xa2371f8 <line:173:9, line:174:47>
          <<<NULL>>>
          (BinaryOperator 0xa237060 <line:173:13, col:32> '_Bool' '=='
            (ImplicitCastExpr 0xa237040 <col:13> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa237020 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0xa236fc8 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa235b90 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
            (ImplicitCastExpr 0xa237050 <col:22, col:32> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa237030 <col:22, col:32> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0xa236ffc <col:22, col:32> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa0a3a90 'end' 'const seekdir':'const enum std::_Ios_Seekdir'))))
          (BinaryOperator 0xa2371e0 <line:174:6, col:47> '<dependent type>' '='
            (DeclRefExpr 0xa2370ac <col:6> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c70 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CompoundAssignOperator 0xa2371c0 <col:18, col:47> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa2370c4 <col:18> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c00 '__newoffi' 'off_type':'typename traits_type::off_type')
              (CXXOperatorCallExpr 0xa237198 <col:31, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0xa237160 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                (CallExpr 0xa237128 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2370f0 <col:31, col:37> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2370e0 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0xa237144 <col:47> 'const char_type *' lvalue Var 0xa2368f0 '__beg' 'const char_type *'))))
          <<<NULL>>>))
      (IfStmt 0xa2377a8 <line:176:4, line:183:6>
        <<<NULL>>>
        (BinaryOperator 0xa2374d8 <line:176:8, line:178:36> '<dependent type>' '&&'
          (BinaryOperator 0xa237358 <line:176:8, line:177:24> '<dependent type>' '&&'
            (ParenExpr 0xa2372a0 <line:176:8, col:31> '_Bool'
              (BinaryOperator 0xa237288 <col:9, col:21> '_Bool' '||'
                (ImplicitCastExpr 0xa237268 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa237234 <col:9> '_Bool' lvalue Var 0xa235f70 '__testin' '_Bool'))
                (ImplicitCastExpr 0xa237278 <col:21> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa23724c <col:21> 'const _Bool' lvalue Var 0xa236470 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0xa237330 <line:177:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa2372e8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
              (DeclRefExpr 0xa2372b4 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c00 '__newoffi' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0xa2372d0 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0xa2374b0 <line:178:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0xa237468 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
            (CXXOperatorCallExpr 0xa237428 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa2373f0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (CallExpr 0xa2373b8 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa237380 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0xa237370 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa2373d4 <col:27> 'const char_type *' lvalue Var 0xa2368f0 '__beg' 'const char_type *'))
            (DeclRefExpr 0xa23744c <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c00 '__newoffi' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0xa237790 <line:179:6, line:183:6>
          (CallExpr 0xa2376f8 <line:180:8, line:181:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa237500 <line:180:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2374f0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0xa237580 <col:19, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa237548 <col:19, col:25> '<dependent type>' lvalue
                (CXXThisExpr 0xa237538 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa237668 <col:34, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0xa237620 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
              (CallExpr 0xa2375e8 <col:34, col:46> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2375b0 <col:34, col:40> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2375a0 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa237604 <col:50> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c00 '__newoffi' 'off_type':'typename traits_type::off_type'))
            (CallExpr 0xa2376d8 <line:181:5, col:17> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2376a0 <col:5, col:11> '<dependent type>' lvalue
                (CXXThisExpr 0xa237690 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
          (BinaryOperator 0xa237778 <line:182:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0xa237720 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa235ea0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0xa237758 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0xa237740 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c00 '__newoffi' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>)
      (IfStmt 0xa237c48 <line:184:4, line:190:6>
        <<<NULL>>>
        (BinaryOperator 0xa237a68 <line:184:8, line:186:36> '<dependent type>' '&&'
          (BinaryOperator 0xa2378e8 <line:184:8, line:185:24> '<dependent type>' '&&'
            (ParenExpr 0xa237830 <line:184:8, col:32> '_Bool'
              (BinaryOperator 0xa237818 <col:9, col:22> '_Bool' '||'
                (ImplicitCastExpr 0xa2377f8 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa2377c4 <col:9> '_Bool' lvalue Var 0xa2361f0 '__testout' '_Bool'))
                (ImplicitCastExpr 0xa237808 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa2377dc <col:22> 'const _Bool' lvalue Var 0xa236470 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0xa2378c0 <line:185:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa237878 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
              (DeclRefExpr 0xa237844 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c70 '__newoffo' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0xa237860 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0xa237a40 <line:186:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0xa2379f8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
            (CXXOperatorCallExpr 0xa2379b8 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa237980 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
              (CallExpr 0xa237948 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa237910 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0xa237900 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa237964 <col:27> 'const char_type *' lvalue Var 0xa2368f0 '__beg' 'const char_type *'))
            (DeclRefExpr 0xa2379dc <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c70 '__newoffo' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0xa237c30 <line:187:6, line:190:6>
          (CallExpr 0xa237b98 <line:188:8, col:56> '<dependent type>'
            (MemberExpr 0xa237a90 <col:8> '<bound member function type>' ->_M_pbump 0xa227010
              (CXXThisExpr 0xa237a80 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0xa237af8 <col:17, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa237ac0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa237ab0 <col:17> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa237b60 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa237b28 <col:32, col:38> '<dependent type>' lvalue
                (CXXThisExpr 0xa237b18 <col:32> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa237b7c <col:47> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c70 '__newoffo' 'off_type':'typename traits_type::off_type'))
          (BinaryOperator 0xa237c18 <line:189:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0xa237bc0 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa235ea0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0xa237bf8 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0xa237be0 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa236c70 '__newoffo' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa237cc8 <line:192:7, col:14>
    (DeclRefExpr 0xa237cac <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa235ea0 '__ret' 'pos_type':'typename traits_type::pos_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa2274e8 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa2274d8 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa2274c0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x9f254e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa2274a0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22743c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa2274b0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa22747c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa23db88 </usr/include/c++/4.6/bits/sstream.tcc:199:5, line:223:5>
  (DeclStmt 0xa238598 <line:200:7, col:47>
    0xa2384e0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa238578 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0xa238558 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0xa238540 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0xa238528 <col:44> 'int' 1))))")
  (DeclStmt 0xa238810 <line:201:7, col:73>
    0xa2385b0 "const bool __testin =
      (CXXOperatorCallExpr 0xa2387e8 <col:29, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa238790 <col:69, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
        (ParenExpr 0xa238760 <col:29, col:67> '<dependent type>'
          (CXXOperatorCallExpr 0xa238738 <col:30, col:61> '<dependent type>'
            (UnresolvedLookupExpr 0xa2386f8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
            (CXXOperatorCallExpr 0xa2386b8 <col:30, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa238678 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
              (DeclRefExpr 0xa238610 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa238640 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0xa238630 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa2386dc <col:61> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa238250 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa238778 <col:72> 'int' 0))")
  (DeclStmt 0xa238a90 <line:202:7, col:75>
    0xa238830 "const bool __testout =
      (CXXOperatorCallExpr 0xa238a68 <col:30, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0xa238a10 <col:71, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
        (ParenExpr 0xa2389e0 <col:30, col:69> '<dependent type>'
          (CXXOperatorCallExpr 0xa2389b8 <col:31, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0xa238978 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
            (CXXOperatorCallExpr 0xa238938 <col:31, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0xa2388f8 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
              (DeclRefExpr 0xa238890 <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa2388c0 <col:47, col:53> '<dependent type>' lvalue
                (CXXThisExpr 0xa2388b0 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa23895c <col:63> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa238250 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa2389f8 <col:74> 'int' 0))")
  (DeclStmt 0xa238c00 <line:204:7, col:72>
    0xa238ab0 "const char_type *__beg =
      (ConditionalOperator 0xa238be0 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0xa238bd0 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa238ae4 <col:32> 'const _Bool' lvalue Var 0xa2385b0 '__testin' 'const _Bool'))
        (CallExpr 0xa238b48 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa238b10 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa238b00 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa238bb0 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa238b78 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0xa238b68 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa23db40 <line:205:7, line:221:2>
    <<<NULL>>>
    (BinaryOperator 0xa238d30 <line:205:11, col:63> '<dependent type>' '&&'
      (ParenExpr 0xa238c98 <col:11, col:36> '<dependent type>'
        (BinaryOperator 0xa238c80 <col:12, col:35> '<dependent type>' '||'
          (DeclRefExpr 0xa238c10 <col:12> 'const char_type *' lvalue Var 0xa238ab0 '__beg' 'const char_type *')
          (UnaryOperator 0xa238c68 <col:21, col:35> '<dependent type>' prefix '!'
            (CXXUnresolvedConstructExpr 0xa238c48 <col:22, col:35> 'off_type':'typename traits_type::off_type'
              (DeclRefExpr 0xa238c30 <col:31> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa2381e0 '__sp' 'pos_type':'typename traits_type::pos_type')))))
      (ParenExpr 0xa238d18 <col:41, col:63> '_Bool'
        (BinaryOperator 0xa238d00 <col:42, col:54> '_Bool' '||'
          (ImplicitCastExpr 0xa238ce0 <col:42> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa238cac <col:42> 'const _Bool' lvalue Var 0xa2385b0 '__testin' 'const _Bool'))
          (ImplicitCastExpr 0xa238cf0 <col:54> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa238cc4 <col:54> 'const _Bool' lvalue Var 0xa238830 '__testout' 'const _Bool')))))
    (CompoundStmt 0xa23db20 <line:206:2, line:221:2>
      (CallExpr 0xa238d78 <line:207:4, col:20> '<dependent type>'
        (MemberExpr 0xa238d58 <col:4> '<bound member function type>' ->_M_update_egptr 0xa226e50
          (CXXThisExpr 0xa238d48 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0xa23d3d8 <line:209:4, col:30>
        0xa238da0 "const off_type __pos =
          (ParenListExpr 0xa23d3b8 <col:24, col:29> 'const off_type':'const typename traits_type::off_type'
            (DeclRefExpr 0xa23d3a0 <col:25> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa2381e0 '__sp' 'pos_type':'typename traits_type::pos_type'))")
      (DeclStmt 0xa23d660 <line:210:4, line:211:41>
        0xa23d3f0 "const bool __testpos =
          (ParenExpr 0xa23d648 <line:210:27, line:211:40> '<dependent type>'
            (BinaryOperator 0xa23d630 <line:210:28, line:211:35> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa23d4a0 <line:210:28, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa23d458 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
                (IntegerLiteral 0xa23d428 <col:28> 'int' 0)
                (DeclRefExpr 0xa23d440 <col:33> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa238da0 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CXXOperatorCallExpr 0xa23d608 <line:211:10, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa23d5c0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a2f0 0x9e70960 0x9e73780 0x9fd9400 0x9fd9930 0x9fd9e60)
                (DeclRefExpr 0xa23d4c4 <col:10> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa238da0 '__pos' 'const off_type':'const typename traits_type::off_type')
                (CXXOperatorCallExpr 0xa23d598 <col:19, col:35> '<dependent type>'
                  (UnresolvedLookupExpr 0xa23d560 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
                  (CallExpr 0xa23d528 <col:19, col:31> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa23d4f0 <col:19, col:25> '<dependent type>' lvalue
                      (CXXThisExpr 0xa23d4e0 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (DeclRefExpr 0xa23d544 <col:35> 'const char_type *' lvalue Var 0xa238ab0 '__beg' 'const char_type *')))))")
      (IfStmt 0xa23db00 <line:212:4, line:220:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa23d688 <line:212:8> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa23d670 <col:8> 'const _Bool' lvalue Var 0xa23d3f0 '__testpos' 'const _Bool'))
        (CompoundStmt 0xa23dae0 <line:213:6, line:220:6>
          (IfStmt 0xa23d8f0 <line:214:8, line:216:20>
            <<<NULL>>>
            (ImplicitCastExpr 0xa23d6b0 <line:214:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa23d694 <col:12> 'const _Bool' lvalue Var 0xa2385b0 '__testin' 'const _Bool'))
            (CallExpr 0xa23d8c8 <line:215:3, line:216:20> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa23d6d0 <line:215:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa23d6c0 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0xa23d750 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa23d718 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0xa23d708 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa23d838 <col:29, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa23d7f0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
                (CallExpr 0xa23d7b8 <col:29, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa23d780 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa23d770 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0xa23d7d4 <col:45> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa238da0 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CallExpr 0xa23d8a8 <line:216:7, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa23d870 <col:7, col:13> '<dependent type>' lvalue
                  (CXXThisExpr 0xa23d860 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
            <<<NULL>>>)
          (IfStmt 0xa23da78 <line:217:8, line:218:47>
            <<<NULL>>>
            (ImplicitCastExpr 0xa23d928 <line:217:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa23d90c <col:12> 'const _Bool' lvalue Var 0xa238830 '__testout' 'const _Bool'))
            (CallExpr 0xa23da50 <line:218:3, col:47> '<dependent type>'
              (MemberExpr 0xa23d948 <col:3> '<bound member function type>' ->_M_pbump 0xa227010
                (CXXThisExpr 0xa23d938 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0xa23d9b0 <col:12, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa23d978 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa23d968 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CallExpr 0xa23da18 <col:27, col:39> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa23d9e0 <col:27, col:33> '<dependent type>' lvalue
                  (CXXThisExpr 0xa23d9d0 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa23da34 <col:42> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa238da0 '__pos' 'const off_type':'const typename traits_type::off_type'))
            <<<NULL>>>)
          (BinaryOperator 0xa23dac8 <line:219:8, col:16> '<dependent type>' '='
            (DeclRefExpr 0xa23da94 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa2384e0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (DeclRefExpr 0xa23daac <col:16> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa2381e0 '__sp' 'pos_type':'typename traits_type::pos_type')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa23db78 <line:222:7, col:14>
    (DeclRefExpr 0xa23db5c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa2384e0 '__ret' 'pos_type':'typename traits_type::pos_type')))


    void _M_sync(char_type *__base, __size_type __i, __size_type __o) (CompoundStmt 0xa23ebb8 </usr/include/c++/4.6/bits/sstream.tcc:229:5, line:254:5>
  (DeclStmt 0xa23e1c8 <line:230:7, col:51>
    0xa23e0c0 "const bool __testin =
      (CXXOperatorCallExpr 0xa23e1a0 <col:29, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa23e168 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f252b0)
        (MemberExpr 0xa23e108 <col:29> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa225da0
          (CXXThisExpr 0xa23e0f8 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa23e144 <col:39, col:49> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a3860 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0xa23e2e8 <line:231:7, col:53>
    0xa23e1e0 "const bool __testout =
      (CXXOperatorCallExpr 0xa23e2c0 <col:30, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa23e288 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f252b0)
        (MemberExpr 0xa23e228 <col:30> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa225da0
          (CXXThisExpr 0xa23e218 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa23e264 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa0a38c0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0xa23e458 <line:232:7, col:52>
    0xa23e310 "char_type *__endg =
      (CXXOperatorCallExpr 0xa23e430 <col:27, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa23e3e8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
        (DeclRefExpr 0xa23e344 <col:27> 'char_type *' lvalue ParmVar 0xa23df30 '__base' 'char_type *')
        (CallExpr 0xa23e3c8 <col:36, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa23e390 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0xa23e370 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
              (CXXThisExpr 0xa23e360 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (DeclStmt 0xa23e5c8 <line:233:7, col:56>
    0xa23e480 "char_type *__endp =
      (CXXOperatorCallExpr 0xa23e5a0 <col:27, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa23e558 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
        (DeclRefExpr 0xa23e4b4 <col:27> 'char_type *' lvalue ParmVar 0xa23df30 '__base' 'char_type *')
        (CallExpr 0xa23e538 <col:36, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa23e500 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0xa23e4e0 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
              (CXXThisExpr 0xa23e4d0 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (IfStmt 0xa23e7f8 <line:235:7, line:241:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa23e6d0 <line:235:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa23e678 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (DeclRefExpr 0xa23e5d8 <col:11> 'char_type *' lvalue ParmVar 0xa23df30 '__base' 'char_type *')
      (CallExpr 0xa23e658 <col:21, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa23e620 <col:21, col:31> '<dependent type>' lvalue
          (MemberExpr 0xa23e600 <col:21> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa225de0
            (CXXThisExpr 0xa23e5f0 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0xa23e7d8 <line:236:2, line:241:2>
      (CompoundAssignOperator 0xa23e728 <line:238:4, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa23e6f4 <col:4> 'char_type *' lvalue Var 0xa23e310 '__endg' 'char_type *')
        (DeclRefExpr 0xa23e70c <col:14> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa23df70 '__i' '__size_type':'typename __string_type::size_type'))
      (BinaryOperator 0xa23e778 <line:239:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0xa23e748 <col:4> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa23df70 '__i' '__size_type':'typename __string_type::size_type')
        (IntegerLiteral 0xa23e760 <col:10> 'int' 0))
      (BinaryOperator 0xa23e7c0 <line:240:4, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa23e790 <col:4> 'char_type *' lvalue Var 0xa23e480 '__endp' 'char_type *')
        (DeclRefExpr 0xa23e7a8 <col:13> 'char_type *' lvalue Var 0xa23e310 '__endg' 'char_type *')))
    <<<NULL>>>)
  (IfStmt 0xa23e980 <line:243:7, line:244:41>
    <<<NULL>>>
    (ImplicitCastExpr 0xa23e830 <line:243:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa23e814 <col:11> 'const _Bool' lvalue Var 0xa23e0c0 '__testin' 'const _Bool'))
    (CallExpr 0xa23e958 <line:244:2, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa23e850 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa23e840 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa23e884 <col:13> 'char_type *' lvalue ParmVar 0xa23df30 '__base' 'char_type *')
      (CXXOperatorCallExpr 0xa23e918 <col:21, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa23e8d0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
        (DeclRefExpr 0xa23e89c <col:21> 'char_type *' lvalue ParmVar 0xa23df30 '__base' 'char_type *')
        (DeclRefExpr 0xa23e8b4 <col:30> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa23df70 '__i' '__size_type':'typename __string_type::size_type'))
      (DeclRefExpr 0xa23e93c <col:35> 'char_type *' lvalue Var 0xa23e310 '__endg' 'char_type *'))
    <<<NULL>>>)
  (IfStmt 0xa23eb98 <line:245:7, line:253:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa23e9b8 <line:245:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa23e99c <col:11> 'const _Bool' lvalue Var 0xa23e1e0 '__testout' 'const _Bool'))
    (CompoundStmt 0xa23eb80 <line:246:2, line:253:2>
      (CallExpr 0xa23ea40 <line:247:4, col:32> '<dependent type>'
        (MemberExpr 0xa23e9d8 <col:4> '<bound member function type>' ->_M_pbump 0xa227010
          (CXXThisExpr 0xa23e9c8 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa23e9f8 <col:13> 'char_type *' lvalue ParmVar 0xa23df30 '__base' 'char_type *')
        (DeclRefExpr 0xa23ea10 <col:21> 'char_type *' lvalue Var 0xa23e480 '__endp' 'char_type *')
        (DeclRefExpr 0xa23ea28 <col:29> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa23dfb0 '__o' '__size_type':'typename __string_type::size_type'))
      (IfStmt 0xa23eb60 <line:251:4, line:252:39>
        <<<NULL>>>
        (UnaryOperator 0xa23ea90 <line:251:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa23ea80 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa23ea68 <col:9> 'const _Bool' lvalue Var 0xa23e0c0 '__testin' 'const _Bool')))
        (CallExpr 0xa23eb38 <line:252:6, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa23eab8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa23eaa8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa23eaec <col:17> 'char_type *' lvalue Var 0xa23e310 '__endg' 'char_type *')
          (DeclRefExpr 0xa23eb04 <col:25> 'char_type *' lvalue Var 0xa23e310 '__endg' 'char_type *')
          (DeclRefExpr 0xa23eb1c <col:33> 'char_type *' lvalue Var 0xa23e310 '__endg' 'char_type *'))
        <<<NULL>>>))
    <<<NULL>>>))


    void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off) (CompoundStmt 0xa23f5a0 </usr/include/c++/4.6/bits/sstream.tcc:260:5, line:268:5>
  (CallExpr 0xa23f178 <line:261:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa23f110 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa23f100 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa23f144 <col:18> 'char_type *' lvalue ParmVar 0xa23ef70 '__pbeg' 'char_type *')
    (DeclRefExpr 0xa23f15c <col:26> 'char_type *' lvalue ParmVar 0xa23efc0 '__pend' 'char_type *'))
  (WhileStmt 0xa23f508 <line:262:7, line:266:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa23f2b8 <line:262:14, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0xa23f270 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
      (DeclRefExpr 0xa23f19c <col:14> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa23f000 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0xa23f250 <col:22, col:56> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int'))
    (CompoundStmt 0xa23f4f0 <line:263:2, line:266:2>
      (CallExpr 0xa23f3e0 <line:264:4, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa23f2f0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa23f2e0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa23f3c0 <col:16, col:50> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int'))
      (CompoundAssignOperator 0xa23f4d0 <line:265:4, col:47> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa23f400 <col:4> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa23f000 '__off' 'off_type':'typename traits_type::off_type')
        (DeclRefExpr 0xa23f4b0 <col:13, col:47> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int'))))
  (CallExpr 0xa23f580 <line:267:7, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa23f530 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa23f520 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa23f564 <col:19> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa23f000 '__off' 'off_type':'typename traits_type::off_type')))


    class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    };
    class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    };
    class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    };
    class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    };
    class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    };
    class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    };
    class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    };
    class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    };
}
namespace std {
    template <typename _T1, typename _T2> inline void _Construct(_T1 *__p, const _T2 &__value) (CompoundStmt 0xa252f10 </usr/include/c++/4.6/bits/stl_construct.h:81:5, line:85:5>
  (CXXNewExpr 0xa252ed0 <line:84:7, col:49> '_T1 *'
    (CXXStaticCastExpr 0xa252e98 <col:13, col:35> 'void *' static_cast<void *> <Dependent>
      (DeclRefExpr 0xa252e70 <col:32> '_T1 *' lvalue ParmVar 0xa252cd0 '__p' '_T1 *'))
    (DeclRefExpr 0xa252eb0 <col:42> 'const _T2' lvalue ParmVar 0xa252d40 '__value' 'const _T2 &')))

;
    template <typename _Tp> inline void _Destroy(_Tp *__pointer) (CompoundStmt 0xa253140 </usr/include/c++/4.6/bits/stl_construct.h:94:5, col:26>
  (CallExpr 0xa253120 <col:7, col:23> 'void'
    (CXXPseudoDestructorExpr 0xa2530f0 <col:7, col:19> 'void (*)(void)'
      (DeclRefExpr 0xa2530cc <col:7> '_Tp *' lvalue ParmVar 0xa252fc0 '__pointer' '_Tp *'))))

;
    template <bool = true> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0xa253bd0 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    }
template <bool> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa2537d0 </usr/include/c++/4.6/bits/stl_construct.h:102:2, line:105:2>
  (ForStmt 0xa2537a8 <line:103:4, line:104:46>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa253628 <line:103:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa2535d0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (DeclRefExpr 0xa2535a0 <col:11> '_ForwardIterator' lvalue ParmVar 0xa253420 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa2535b8 <col:22> '_ForwardIterator' lvalue ParmVar 0xa253460 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa253668 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa25364c <col:32> '_ForwardIterator' lvalue ParmVar 0xa253420 '__first' '_ForwardIterator'))
    (CallExpr 0xa253788 <line:104:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa2536b0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0)
      (CallExpr 0xa253768 <col:20, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa253700 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
        (UnaryOperator 0xa253750 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa253734 <col:38> '_ForwardIterator' lvalue ParmVar 0xa253420 '__first' '_ForwardIterator'))))))

;
    };
    struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0xa253bd0 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    };
    template <typename _ForwardIterator> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa254078 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0xa253eb0 <line:125:7, line:126:35>
    0xa253e80 "typedef typename iterator_traits<_ForwardIterator>::value_type _Value_type")
  (CallExpr 0xa254050 <line:127:7, line:128:27> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa253ff8 <line:127:7, line:128:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa25401c <col:12> '_ForwardIterator' lvalue ParmVar 0xa253c40 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa254034 <col:21> '_ForwardIterator' lvalue ParmVar 0xa253c80 '__last' '_ForwardIterator')))

;
    template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x9edd1f8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa349c70 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa3499c4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x9ee4cd0 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x9edd310 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x9edd330 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp> class allocator;
    template <typename _ForwardIterator, typename _Allocator> void _Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &__alloc) (CompoundStmt 0xa254650 </usr/include/c++/4.6/bits/stl_construct.h:143:5, line:146:5>
  (ForStmt 0xa254628 <line:144:7, line:145:44>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2544c0 <line:144:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa254468 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (DeclRefExpr 0xa254434 <col:14> '_ForwardIterator' lvalue ParmVar 0xa254230 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa25444c <col:25> '_ForwardIterator' lvalue ParmVar 0xa254270 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa254500 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa2544e4 <col:35> '_ForwardIterator' lvalue ParmVar 0xa254230 '__first' '_ForwardIterator'))
    (CallExpr 0xa254608 <line:145:2, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa254530 <col:2, col:10> '<dependent type>' lvalue
        (DeclRefExpr 0xa254514 <col:2> '_Allocator' lvalue ParmVar 0xa2542e0 '__alloc' '_Allocator &'))
      (CallExpr 0xa2545e8 <col:18, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa254580 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
        (UnaryOperator 0xa2545d0 <col:35, col:36> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa2545b4 <col:36> '_ForwardIterator' lvalue ParmVar 0xa254230 '__first' '_ForwardIterator'))))))

;
    template <typename _ForwardIterator, typename _Tp> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp> &) (CompoundStmt 0xa254a80 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0xa254a58 <line:153:7, col:31> '<dependent type>'
    (UnresolvedLookupExpr 0xa2549e8 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa2549b0 0xa254400 0xa253d60 0xa2530a0)
    (DeclRefExpr 0xa254a28 <col:16> '_ForwardIterator' lvalue ParmVar 0xa254730 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa254a40 <col:25> '_ForwardIterator' lvalue ParmVar 0xa254770 '__last' '_ForwardIterator')))

;
}
namespace std {
    template <bool _TrivialValueTypes = true> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa255a60 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0xa255a50 <col:11, col:53>
    (CallExpr 0xa255a28 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0xa2559a8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
      (DeclRefExpr 0xa2559e0 <col:28> '_InputIterator' lvalue ParmVar 0xa2557d0 '__first' '_InputIterator')
      (DeclRefExpr 0xa2559f8 <col:37> '_InputIterator' lvalue ParmVar 0xa255810 '__last' '_InputIterator')
      (DeclRefExpr 0xa255a10 <col:45> '_ForwardIterator' lvalue ParmVar 0xa255850 '__result' '_ForwardIterator'))))

;
    }
template <bool _TrivialValueTypes> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa2554e8 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0xa2550a0 <line:73:4, col:37>
    0xa255050 "_ForwardIterator __cur =
      (DeclRefExpr 0xa255084 <col:29> '_ForwardIterator' lvalue ParmVar 0xa254f00 '__result' '_ForwardIterator')")
  (IfStmt 0xa2553b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2550b0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa255398 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0xa255348 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa255148 <line:76:15, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa2550f0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
          (DeclRefExpr 0xa2550c0 <col:15> '_InputIterator' lvalue ParmVar 0xa254e80 '__first' '_InputIterator')
          (DeclRefExpr 0xa2550d8 <col:26> '_InputIterator' lvalue ParmVar 0xa254ec0 '__last' '_InputIterator'))
        (BinaryOperator 0xa2551d0 <col:34, col:47> '<dependent type>' ','
          (UnaryOperator 0xa255188 <col:34, col:36> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa25516c <col:36> '_InputIterator' lvalue ParmVar 0xa254e80 '__first' '_InputIterator'))
          (UnaryOperator 0xa2551b8 <col:45, col:47> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa25519c <col:47> '_ForwardIterator' lvalue Var 0xa255050 '__cur' '_ForwardIterator')))
        (CallExpr 0xa255320 <line:77:3, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa255218 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa252e40)
          (CallExpr 0xa2552d0 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa255268 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
            (UnaryOperator 0xa2552b8 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa25529c <col:37> '_ForwardIterator' lvalue Var 0xa255050 '__cur' '_ForwardIterator')))
          (UnaryOperator 0xa255308 <col:45, col:46> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa2552f0 <col:46> '_InputIterator' lvalue ParmVar 0xa254e80 '__first' '_InputIterator'))))
      (ReturnStmt 0xa255388 <line:78:8, col:15>
        (DeclRefExpr 0xa25536c <col:15> '_ForwardIterator' lvalue Var 0xa255050 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0xa2554c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2553d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa2554b0 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0xa255478 <line:82:8, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0xa255408 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (DeclRefExpr 0xa255448 <col:22> '_ForwardIterator' lvalue ParmVar 0xa254f00 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa255460 <col:32> '_ForwardIterator' lvalue Var 0xa255050 '__cur' '_ForwardIterator'))
      (NullStmt 0xa2554a0 <line:83:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa255a60 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0xa255a50 <col:11, col:53>
    (CallExpr 0xa255a28 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0xa2559a8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
      (DeclRefExpr 0xa2559e0 <col:28> '_InputIterator' lvalue ParmVar 0xa2557d0 '__first' '_InputIterator')
      (DeclRefExpr 0xa2559f8 <col:37> '_InputIterator' lvalue ParmVar 0xa255810 '__last' '_InputIterator')
      (DeclRefExpr 0xa255a10 <col:45> '_ForwardIterator' lvalue ParmVar 0xa255850 '__result' '_ForwardIterator'))))

;
    };
    template <typename _InputIterator, typename _ForwardIterator> inline _ForwardIterator uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa25b828 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0xa25b4c0 <line:112:7, line:113:13>
    0xa25b490 "typedef typename iterator_traits<_InputIterator>::value_type _ValueType1")
  (DeclStmt 0xa25b5f0 <line:114:7, line:115:13>
    0xa25b5c0 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType2")
  (ReturnStmt 0xa25b818 <line:117:7, line:119:41>
    (CallExpr 0xa25b7f0 <line:117:14, line:119:41> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa25b780 <line:117:14, line:119:2> '<dependent type>' lvalue)
      (DeclRefExpr 0xa25b7a4 <col:16> '_InputIterator' lvalue ParmVar 0xa255b40 '__first' '_InputIterator')
      (DeclRefExpr 0xa25b7bc <col:25> '_InputIterator' lvalue ParmVar 0xa255b80 '__last' '_InputIterator')
      (DeclRefExpr 0xa25b7d4 <col:33> '_ForwardIterator' lvalue ParmVar 0xa255bc0 '__result' '_ForwardIterator'))))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa25c760 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0xa25c738 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0xa25c6b8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9fa80)
    (DeclRefExpr 0xa25c6ec <col:21> '_ForwardIterator' lvalue ParmVar 0xa25c4a0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa25c704 <col:30> '_ForwardIterator' lvalue ParmVar 0xa25c4e0 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa25c71c <col:38> 'const _Tp' lvalue ParmVar 0xa25c550 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa25c1c0 </usr/include/c++/4.6/bits/stl_uninitialized.h:130:9, line:142:2>
  (DeclStmt 0xa25be10 <line:131:4, col:36>
    0xa25bdc0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa25bdf4 <col:29> '_ForwardIterator' lvalue ParmVar 0xa25bb70 '__first' '_ForwardIterator')")
  (IfStmt 0xa25c088 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:136:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa25be20 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa25c070 </usr/include/c++/4.6/bits/stl_uninitialized.h:133:6, line:136:6>
      (ForStmt 0xa25c048 <line:134:8, line:135:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa25beb8 <line:134:15, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa25be60 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
          (DeclRefExpr 0xa25be30 <col:15> '_ForwardIterator' lvalue Var 0xa25bdc0 '__cur' '_ForwardIterator')
          (DeclRefExpr 0xa25be48 <col:24> '_ForwardIterator' lvalue ParmVar 0xa25bbb0 '__last' '_ForwardIterator'))
        (UnaryOperator 0xa25bef8 <col:32, col:34> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa25bedc <col:34> '_ForwardIterator' lvalue Var 0xa25bdc0 '__cur' '_ForwardIterator'))
        (CallExpr 0xa25c020 <line:135:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0xa25bf30 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa252e40)
          (CallExpr 0xa25bfe8 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa25bf80 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
            (UnaryOperator 0xa25bfd0 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa25bfb4 <col:37> '_ForwardIterator' lvalue Var 0xa25bdc0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa25c008 <col:45> 'const _Tp' lvalue ParmVar 0xa25bc40 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa25c1a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:141:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa25c0a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa25c188 </usr/include/c++/4.6/bits/stl_uninitialized.h:138:6, line:141:6>
      (CallExpr 0xa25c150 <line:139:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa25c0e0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (DeclRefExpr 0xa25c120 <col:22> '_ForwardIterator' lvalue ParmVar 0xa25bb70 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa25c138 <col:31> '_ForwardIterator' lvalue Var 0xa25bdc0 '__cur' '_ForwardIterator'))
      (NullStmt 0xa25c178 <line:140:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa25c760 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0xa25c738 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0xa25c6b8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9fa80)
    (DeclRefExpr 0xa25c6ec <col:21> '_ForwardIterator' lvalue ParmVar 0xa25c4a0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa25c704 <col:30> '_ForwardIterator' lvalue ParmVar 0xa25c4e0 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa25c71c <col:38> 'const _Tp' lvalue ParmVar 0xa25c550 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Tp> inline void uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa25cd10 </usr/include/c++/4.6/bits/stl_uninitialized.h:168:5, line:174:5>
  (DeclStmt 0xa25cb30 <line:169:7, line:170:12>
    0xa25cb00 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0xa25cce8 <line:172:7, line:173:36> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa25cc78 <line:172:7, line:173:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa25cc9c <col:16> '_ForwardIterator' lvalue ParmVar 0xa25c840 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa25ccb4 <col:25> '_ForwardIterator' lvalue ParmVar 0xa25c880 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa25cccc <col:33> 'const _Tp' lvalue ParmVar 0xa25c8f0 '__x' 'const _Tp &')))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa25dd50 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0xa25dd28 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0xa25dca8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ea21b0)
    (DeclRefExpr 0xa25dcdc <col:23> '_ForwardIterator' lvalue ParmVar 0xa25da60 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa25dcf4 <col:32> '_Size' lvalue ParmVar 0xa25daa0 '__n' '_Size')
    (DeclRefExpr 0xa25dd0c <col:37> 'const _Tp' lvalue ParmVar 0xa25db10 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa25d730 </usr/include/c++/4.6/bits/stl_uninitialized.h:184:9, line:196:2>
  (DeclStmt 0xa25d340 <line:185:4, col:36>
    0xa25d2f0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa25d324 <col:29> '_ForwardIterator' lvalue ParmVar 0xa25d0a0 '__first' '_ForwardIterator')")
  (IfStmt 0xa25d5f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:190:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa25d350 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa25d5e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:187:6, line:190:6>
      (ForStmt 0xa25d5b8 <line:188:8, line:189:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa25d3d8 <line:188:15, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa25d390 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (DeclRefExpr 0xa25d360 <col:15> '_Size' lvalue ParmVar 0xa25d0e0 '__n' '_Size')
          (IntegerLiteral 0xa25d378 <col:21> 'int' 0))
        (BinaryOperator 0xa25d460 <col:24, col:33> '<dependent type>' ','
          (UnaryOperator 0xa25d418 <col:24, col:26> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa25d3fc <col:26> '_Size' lvalue ParmVar 0xa25d0e0 '__n' '_Size'))
          (UnaryOperator 0xa25d448 <col:31, col:33> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa25d42c <col:33> '_ForwardIterator' lvalue Var 0xa25d2f0 '__cur' '_ForwardIterator')))
        (CallExpr 0xa25d590 <line:189:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0xa25d4a0 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa252e40)
          (CallExpr 0xa25d558 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa25d4f0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
            (UnaryOperator 0xa25d540 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa25d524 <col:37> '_ForwardIterator' lvalue Var 0xa25d2f0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa25d578 <col:45> 'const _Tp' lvalue ParmVar 0xa25d170 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa25d710 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:195:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa25d618 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa25d6f8 </usr/include/c++/4.6/bits/stl_uninitialized.h:192:6, line:195:6>
      (CallExpr 0xa25d6c0 <line:193:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa25d650 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (DeclRefExpr 0xa25d690 <col:22> '_ForwardIterator' lvalue ParmVar 0xa25d0a0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa25d6a8 <col:31> '_ForwardIterator' lvalue Var 0xa25d2f0 '__cur' '_ForwardIterator'))
      (NullStmt 0xa25d6e8 <line:194:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa25dd50 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0xa25dd28 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0xa25dca8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ea21b0)
    (DeclRefExpr 0xa25dcdc <col:23> '_ForwardIterator' lvalue ParmVar 0xa25da60 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa25dcf4 <col:32> '_Size' lvalue ParmVar 0xa25daa0 '__n' '_Size')
    (DeclRefExpr 0xa25dd0c <col:37> 'const _Tp' lvalue ParmVar 0xa25db10 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Size, typename _Tp> inline void uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa25e350 </usr/include/c++/4.6/bits/stl_uninitialized.h:221:5, line:227:5>
  (DeclStmt 0xa25e170 <line:222:7, line:223:12>
    0xa25e140 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0xa25e328 <line:225:7, line:226:35> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa25e2b8 <line:225:7, line:226:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa25e2dc <col:18> '_ForwardIterator' lvalue ParmVar 0xa25de80 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa25e2f4 <col:27> '_Size' lvalue ParmVar 0xa25dec0 '__n' '_Size')
    (DeclRefExpr 0xa25e30c <col:32> 'const _Tp' lvalue ParmVar 0xa25df30 '__x' 'const _Tp &')))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa25eb88 </usr/include/c++/4.6/bits/stl_uninitialized.h:240:5, line:253:5>
  (DeclStmt 0xa25e740 <line:241:7, col:40>
    0xa25e6f0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa25e724 <col:32> '_ForwardIterator' lvalue ParmVar 0xa25e500 '__result' '_ForwardIterator')")
  (IfStmt 0xa25ea38 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:247:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa25e750 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa25ea20 </usr/include/c++/4.6/bits/stl_uninitialized.h:243:2, line:247:2>
      (ForStmt 0xa25e9d0 <line:244:4, line:245:58>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa25e7e8 <line:244:11, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa25e790 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
          (DeclRefExpr 0xa25e760 <col:11> '_InputIterator' lvalue ParmVar 0xa25e480 '__first' '_InputIterator')
          (DeclRefExpr 0xa25e778 <col:22> '_InputIterator' lvalue ParmVar 0xa25e4c0 '__last' '_InputIterator'))
        (BinaryOperator 0xa25e870 <col:30, col:43> '<dependent type>' ','
          (UnaryOperator 0xa25e828 <col:30, col:32> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa25e80c <col:32> '_InputIterator' lvalue ParmVar 0xa25e480 '__first' '_InputIterator'))
          (UnaryOperator 0xa25e858 <col:41, col:43> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa25e83c <col:43> '_ForwardIterator' lvalue Var 0xa25e6f0 '__cur' '_ForwardIterator')))
        (CallExpr 0xa25e9a8 <line:245:6, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa25e8a0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa25e888 <col:6> '_Allocator' lvalue ParmVar 0xa25e590 '__alloc' '_Allocator &'))
          (CallExpr 0xa25e958 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa25e8f0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
            (UnaryOperator 0xa25e940 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa25e924 <col:42> '_ForwardIterator' lvalue Var 0xa25e6f0 '__cur' '_ForwardIterator')))
          (UnaryOperator 0xa25e990 <col:50, col:51> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa25e978 <col:51> '_InputIterator' lvalue ParmVar 0xa25e480 '__first' '_InputIterator'))))
      (ReturnStmt 0xa25ea10 <line:246:4, col:11>
        (DeclRefExpr 0xa25e9f4 <col:11> '_ForwardIterator' lvalue Var 0xa25e6f0 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0xa25eb68 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:252:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa25ea58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa25eb50 </usr/include/c++/4.6/bits/stl_uninitialized.h:249:2, line:252:2>
      (CallExpr 0xa25eb18 <line:250:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa25ea90 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (DeclRefExpr 0xa25ead0 <col:18> '_ForwardIterator' lvalue ParmVar 0xa25e500 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa25eae8 <col:28> '_ForwardIterator' lvalue Var 0xa25e6f0 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa25eb00 <col:35> '_Allocator' lvalue ParmVar 0xa25e590 '__alloc' '_Allocator &'))
      (NullStmt 0xa25eb40 <line:251:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp> inline _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp> &) (CompoundStmt 0xa25f0b8 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0xa25f0a8 <col:7, col:63>
    (CallExpr 0xa25f080 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa25f000 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa255cb0)
      (DeclRefExpr 0xa25f034 <col:38> '_InputIterator' lvalue ParmVar 0xa25ecc0 '__first' '_InputIterator')
      (DeclRefExpr 0xa25f04c <col:47> '_InputIterator' lvalue ParmVar 0xa25ed00 '__last' '_InputIterator')
      (DeclRefExpr 0xa25f064 <col:55> '_ForwardIterator' lvalue ParmVar 0xa25ed40 '__result' '_ForwardIterator'))))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa25f518 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0xa25f508 <line:267:7, line:269:24>
    (CallExpr 0xa25f4d8 <line:267:14, line:269:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa25f410 <line:267:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e6b0 0xa25efb0)
      (ParenExpr 0xa25f460 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0xa25f448 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> '_InputIterator' lvalue ParmVar 0xa25f1e0 '__first' '_InputIterator'))
      (ParenExpr 0xa25f490 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0xa25f474 </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> '_InputIterator' lvalue ParmVar 0xa25f220 '__last' '_InputIterator'))
      (DeclRefExpr 0xa25f4a4 <line:269:7> '_ForwardIterator' lvalue ParmVar 0xa25f260 '__result' '_ForwardIterator')
      (DeclRefExpr 0xa25f4bc <col:17> '_Allocator' lvalue ParmVar 0xa25f2d0 '__alloc' '_Allocator &'))))

;
    template <typename _ForwardIterator, typename _Tp, typename _Allocator> void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa25fcd0 </usr/include/c++/4.6/bits/stl_uninitialized.h:276:5, line:288:5>
  (DeclStmt 0xa25f910 <line:277:7, col:39>
    0xa25f8c0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa25f8f4 <col:32> '_ForwardIterator' lvalue ParmVar 0xa25f640 '__first' '_ForwardIterator')")
  (IfStmt 0xa25fb80 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:282:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa25f920 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa25fb68 </usr/include/c++/4.6/bits/stl_uninitialized.h:279:2, line:282:2>
      (ForStmt 0xa25fb40 <line:280:4, line:281:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa25f9b8 <line:280:11, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa25f960 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
          (DeclRefExpr 0xa25f930 <col:11> '_ForwardIterator' lvalue Var 0xa25f8c0 '__cur' '_ForwardIterator')
          (DeclRefExpr 0xa25f948 <col:20> '_ForwardIterator' lvalue ParmVar 0xa25f680 '__last' '_ForwardIterator'))
        (UnaryOperator 0xa25f9f8 <col:28, col:30> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa25f9dc <col:30> '_ForwardIterator' lvalue Var 0xa25f8c0 '__cur' '_ForwardIterator'))
        (CallExpr 0xa25fb18 <line:281:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa25fa28 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa25fa0c <col:6> '_Allocator' lvalue ParmVar 0xa25f760 '__alloc' '_Allocator &'))
          (CallExpr 0xa25fae0 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa25fa78 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
            (UnaryOperator 0xa25fac8 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa25faac <col:42> '_ForwardIterator' lvalue Var 0xa25f8c0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa25fb00 <col:50> 'const _Tp' lvalue ParmVar 0xa25f6f0 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa25fcb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:287:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa25fba0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa25fc98 </usr/include/c++/4.6/bits/stl_uninitialized.h:284:2, line:287:2>
      (CallExpr 0xa25fc60 <line:285:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa25fbd8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (DeclRefExpr 0xa25fc18 <col:18> '_ForwardIterator' lvalue ParmVar 0xa25f640 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa25fc30 <col:27> '_ForwardIterator' lvalue Var 0xa25f8c0 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa25fc48 <col:34> '_Allocator' lvalue ParmVar 0xa25f760 '__alloc' '_Allocator &'))
      (NullStmt 0xa25fc88 <line:286:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _Tp2> inline void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0xa2601d8 </usr/include/c++/4.6/bits/stl_uninitialized.h:294:5, col:54>
  (CallExpr 0xa2601b0 <col:7, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa260130 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25c9e0)
    (DeclRefExpr 0xa260164 <col:31> '_ForwardIterator' lvalue ParmVar 0xa25fe00 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa26017c <col:40> '_ForwardIterator' lvalue ParmVar 0xa25fe40 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa260194 <col:48> 'const _Tp' lvalue ParmVar 0xa25feb0 '__x' 'const _Tp &')))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Allocator> void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa260a38 </usr/include/c++/4.6/bits/stl_uninitialized.h:301:5, line:313:5>
  (DeclStmt 0xa260640 <line:302:7, col:39>
    0xa2605f0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa260624 <col:32> '_ForwardIterator' lvalue ParmVar 0xa260350 '__first' '_ForwardIterator')")
  (IfStmt 0xa2608e8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa260650 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa2608d0 </usr/include/c++/4.6/bits/stl_uninitialized.h:304:2, line:307:2>
      (ForStmt 0xa2608a8 <line:305:4, line:306:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa2606d8 <line:305:11, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa260690 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
          (DeclRefExpr 0xa260660 <col:11> '_Size' lvalue ParmVar 0xa260390 '__n' '_Size')
          (IntegerLiteral 0xa260678 <col:17> 'int' 0))
        (BinaryOperator 0xa260760 <col:20, col:29> '<dependent type>' ','
          (UnaryOperator 0xa260718 <col:20, col:22> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa2606fc <col:22> '_Size' lvalue ParmVar 0xa260390 '__n' '_Size'))
          (UnaryOperator 0xa260748 <col:27, col:29> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa26072c <col:29> '_ForwardIterator' lvalue Var 0xa2605f0 '__cur' '_ForwardIterator')))
        (CallExpr 0xa260880 <line:306:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa260790 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa260778 <col:6> '_Allocator' lvalue ParmVar 0xa260490 '__alloc' '_Allocator &'))
          (CallExpr 0xa260848 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa2607e0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
            (UnaryOperator 0xa260830 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa260814 <col:42> '_ForwardIterator' lvalue Var 0xa2605f0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa260868 <col:50> 'const _Tp' lvalue ParmVar 0xa260400 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa260a18 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa260908 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa260a00 </usr/include/c++/4.6/bits/stl_uninitialized.h:309:2, line:312:2>
      (CallExpr 0xa2609c8 <line:310:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa260940 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (DeclRefExpr 0xa260980 <col:18> '_ForwardIterator' lvalue ParmVar 0xa260350 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa260998 <col:27> '_ForwardIterator' lvalue Var 0xa2605f0 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa2609b0 <col:34> '_Allocator' lvalue ParmVar 0xa260490 '__alloc' '_Allocator &'))
      (NullStmt 0xa2609f0 <line:311:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Tp2> inline void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0xa260fe8 </usr/include/c++/4.6/bits/stl_uninitialized.h:320:5, col:53>
  (CallExpr 0xa260fc0 <col:7, col:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa260f40 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e020)
    (DeclRefExpr 0xa260f74 <col:33> '_ForwardIterator' lvalue ParmVar 0xa260bc0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa260f8c <col:42> '_Size' lvalue ParmVar 0xa260c00 '__n' '_Size')
    (DeclRefExpr 0xa260fa4 <col:47> 'const _Tp' lvalue ParmVar 0xa260c70 '__x' 'const _Tp &')))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa2617e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:341:5, line:354:5>
  (DeclStmt 0xa261568 <line:342:7, line:344:19>
    0xa261450 "_ForwardIterator __mid =
      (CallExpr 0xa261538 <line:342:32, line:344:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa2614a0 <line:342:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e6b0 0xa25efb0)
        (DeclRefExpr 0xa2614d8 <col:60> '_InputIterator1' lvalue ParmVar 0xa261160 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa2614f0 <col:70> '_InputIterator1' lvalue ParmVar 0xa2611a0 '__last1' '_InputIterator1')
        (DeclRefExpr 0xa261508 <line:343:11> '_ForwardIterator' lvalue ParmVar 0xa261260 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa261520 <line:344:11> '_Allocator' lvalue ParmVar 0xa2612d0 '__alloc' '_Allocator &'))")
  (IfStmt 0xa261690 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:348:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa261578 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa261678 </usr/include/c++/4.6/bits/stl_uninitialized.h:346:2, line:348:2>
      (ReturnStmt 0xa261668 <line:347:4, col:72>
        (CallExpr 0xa261638 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0xa2615a0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
          (DeclRefExpr 0xa2615d4 <col:39> '_InputIterator2' lvalue ParmVar 0xa2611e0 '__first2' '_InputIterator2')
          (DeclRefExpr 0xa2615ec <col:49> '_InputIterator2' lvalue ParmVar 0xa261220 '__last2' '_InputIterator2')
          (DeclRefExpr 0xa261604 <col:58> '_ForwardIterator' lvalue Var 0xa261450 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa26161c <col:65> '_Allocator' lvalue ParmVar 0xa2612d0 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa2617c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:353:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa2616b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa2617a8 </usr/include/c++/4.6/bits/stl_uninitialized.h:350:2, line:353:2>
      (CallExpr 0xa261770 <line:351:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa2616e8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (DeclRefExpr 0xa261728 <col:18> '_ForwardIterator' lvalue ParmVar 0xa261260 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa261740 <col:28> '_ForwardIterator' lvalue Var 0xa261450 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa261758 <col:35> '_Allocator' lvalue ParmVar 0xa2612d0 '__alloc' '_Allocator &'))
      (NullStmt 0xa261798 <line:352:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa261fb0 </usr/include/c++/4.6/bits/stl_uninitialized.h:369:5, line:382:5>
  (DeclStmt 0xa261d38 <line:370:7, line:372:19>
    0xa261c20 "_ForwardIterator __mid =
      (CallExpr 0xa261d08 <line:370:32, line:372:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa261c70 <line:370:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
        (DeclRefExpr 0xa261ca4 <col:60> '_InputIterator1' lvalue ParmVar 0xa261960 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa261cbc <col:70> '_InputIterator1' lvalue ParmVar 0xa2619a0 '__last1' '_InputIterator1')
        (DeclRefExpr 0xa261cd4 <line:371:11> '_ForwardIterator' lvalue ParmVar 0xa261a60 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa261cec <line:372:11> '_Allocator' lvalue ParmVar 0xa261ad0 '__alloc' '_Allocator &'))")
  (IfStmt 0xa261e60 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:376:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa261d48 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa261e48 </usr/include/c++/4.6/bits/stl_uninitialized.h:374:2, line:376:2>
      (ReturnStmt 0xa261e38 <line:375:4, col:72>
        (CallExpr 0xa261e08 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0xa261d70 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e6b0 0xa25efb0)
          (DeclRefExpr 0xa261da8 <col:39> '_InputIterator2' lvalue ParmVar 0xa2619e0 '__first2' '_InputIterator2')
          (DeclRefExpr 0xa261dc0 <col:49> '_InputIterator2' lvalue ParmVar 0xa261a20 '__last2' '_InputIterator2')
          (DeclRefExpr 0xa261dd8 <col:58> '_ForwardIterator' lvalue Var 0xa261c20 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa261df0 <col:65> '_Allocator' lvalue ParmVar 0xa261ad0 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa261f90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:381:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa261e80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa261f78 </usr/include/c++/4.6/bits/stl_uninitialized.h:378:2, line:381:2>
      (CallExpr 0xa261f40 <line:379:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa261eb8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (DeclRefExpr 0xa261ef8 <col:18> '_ForwardIterator' lvalue ParmVar 0xa261a60 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa261f10 <col:28> '_ForwardIterator' lvalue Var 0xa261c20 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa261f28 <col:35> '_Allocator' lvalue ParmVar 0xa261ad0 '__alloc' '_Allocator &'))
      (NullStmt 0xa261f68 <line:380:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _InputIterator, typename _Allocator> inline _ForwardIterator __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &__x, _InputIterator __first, _InputIterator __last, _Allocator &__alloc) (CompoundStmt 0xa262798 </usr/include/c++/4.6/bits/stl_uninitialized.h:393:5, line:404:5>
  (CallExpr 0xa262500 <line:394:7, col:64> '<dependent type>'
    (UnresolvedLookupExpr 0xa262468 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f880 0xa2600d0)
    (DeclRefExpr 0xa2624a0 <col:35> '_ForwardIterator' lvalue ParmVar 0xa262130 '__result' '_ForwardIterator')
    (DeclRefExpr 0xa2624b8 <col:45> '_ForwardIterator' lvalue ParmVar 0xa262170 '__mid' '_ForwardIterator')
    (DeclRefExpr 0xa2624d0 <col:52> 'const _Tp' lvalue ParmVar 0xa2621e0 '__x' 'const _Tp &')
    (DeclRefExpr 0xa2624e8 <col:57> '_Allocator' lvalue ParmVar 0xa2622d0 '__alloc' '_Allocator &'))
  (IfStmt 0xa262648 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:398:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa262530 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa262630 </usr/include/c++/4.6/bits/stl_uninitialized.h:396:2, line:398:2>
      (ReturnStmt 0xa262620 <line:397:4, col:70>
        (CallExpr 0xa2625f0 <col:11, col:70> '<dependent type>'
          (UnresolvedLookupExpr 0xa262558 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
          (DeclRefExpr 0xa26258c <col:39> '_InputIterator' lvalue ParmVar 0xa262220 '__first' '_InputIterator')
          (DeclRefExpr 0xa2625a4 <col:48> '_InputIterator' lvalue ParmVar 0xa262260 '__last' '_InputIterator')
          (DeclRefExpr 0xa2625bc <col:56> '_ForwardIterator' lvalue ParmVar 0xa262170 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa2625d4 <col:63> '_Allocator' lvalue ParmVar 0xa2622d0 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa262778 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:403:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa262668 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa262760 </usr/include/c++/4.6/bits/stl_uninitialized.h:400:2, line:403:2>
      (CallExpr 0xa262728 <line:401:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa2626a0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (DeclRefExpr 0xa2626e0 <col:18> '_ForwardIterator' lvalue ParmVar 0xa262130 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa2626f8 <col:28> '_ForwardIterator' lvalue ParmVar 0xa262170 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa262710 <col:35> '_Allocator' lvalue ParmVar 0xa2622d0 '__alloc' '_Allocator &'))
      (NullStmt 0xa262750 <line:402:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp, typename _Allocator> inline void __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa262fd0 </usr/include/c++/4.6/bits/stl_uninitialized.h:416:5, line:429:5>
  (DeclStmt 0xa262d58 <line:417:7, line:419:20>
    0xa262c40 "_ForwardIterator __mid2 =
      (CallExpr 0xa262d28 <line:417:33, line:419:19> '<dependent type>'
        (UnresolvedLookupExpr 0xa262c90 <line:417:33, col:38> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
        (DeclRefExpr 0xa262cc4 <col:61> '_InputIterator' lvalue ParmVar 0xa262920 '__first1' '_InputIterator')
        (DeclRefExpr 0xa262cdc <col:71> '_InputIterator' lvalue ParmVar 0xa262960 '__last1' '_InputIterator')
        (DeclRefExpr 0xa262cf4 <line:418:12> '_ForwardIterator' lvalue ParmVar 0xa2629a0 '__first2' '_ForwardIterator')
        (DeclRefExpr 0xa262d0c <line:419:12> '_Allocator' lvalue ParmVar 0xa262ac0 '__alloc' '_Allocator &'))")
  (IfStmt 0xa262e80 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:423:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa262d68 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa262e68 </usr/include/c++/4.6/bits/stl_uninitialized.h:421:2, line:423:2>
      (CallExpr 0xa262e38 <line:422:4, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa262da0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f880 0xa2600d0)
        (DeclRefExpr 0xa262dd8 <col:32> '_ForwardIterator' lvalue Var 0xa262c40 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0xa262df0 <col:40> '_ForwardIterator' lvalue ParmVar 0xa2629e0 '__last2' '_ForwardIterator')
        (DeclRefExpr 0xa262e08 <col:49> 'const _Tp' lvalue ParmVar 0xa262a50 '__x' 'const _Tp &')
        (DeclRefExpr 0xa262e20 <col:54> '_Allocator' lvalue ParmVar 0xa262ac0 '__alloc' '_Allocator &')))
    <<<NULL>>>)
  (IfStmt 0xa262fb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:428:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa262ea0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa262f98 </usr/include/c++/4.6/bits/stl_uninitialized.h:425:2, line:428:2>
      (CallExpr 0xa262f60 <line:426:4, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa262ed8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (DeclRefExpr 0xa262f18 <col:18> '_ForwardIterator' lvalue ParmVar 0xa2629a0 '__first2' '_ForwardIterator')
        (DeclRefExpr 0xa262f30 <col:28> '_ForwardIterator' lvalue Var 0xa262c40 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0xa262f48 <col:36> '_Allocator' lvalue ParmVar 0xa262ac0 '__alloc' '_Allocator &'))
      (NullStmt 0xa262f88 <line:427:27>))
    <<<NULL>>>))

;
}
namespace std {
    template <typename _Tp, typename _Alloc> struct _Vector_base {
        struct _Vector_base;
        typedef typename _Alloc::_Alloc::rebind<_Tp>::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((IntegerLiteral 0xa267a68 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'int' 0)
), _M_finish((IntegerLiteral 0xa267ab8 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0xa267b08 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'int' 0)
) (CompoundStmt 0xa267b68 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a) : _Tp_alloc_type((DeclRefExpr 0xa267b78 </usr/include/c++/4.6/bits/stl_vector.h:87:19> 'const _Tp_alloc_type':'const typename _Alloc::_Alloc::rebind<_Tp>::other' lvalue ParmVar 0xa266e20 '__a' 'const _Tp_alloc_type &')
), _M_start((IntegerLiteral 0xa267bd8 </usr/include/c++/4.6/bits/stl_vector.h:87:34> 'int' 0)
), _M_finish((IntegerLiteral 0xa267c28 </usr/include/c++/4.6/bits/stl_vector.h:87:48> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0xa267c78 </usr/include/c++/4.6/bits/stl_vector.h:87:70> 'int' 0)
) (CompoundStmt 0xa267cd8 </usr/include/c++/4.6/bits/stl_vector.h:88:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0xa267e38 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0xa267e28 <col:9, col:60>
    (UnaryOperator 0xa267e10 <col:16, col:60> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa267df8 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa267d90 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa267d50 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
          (CXXDependentScopeMemberExpr 0xa267d18 <col:47, col:53> '<dependent type>' lvalue
            (CXXThisExpr 0xa267d08 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0xa267f98 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0xa267f88 <col:9, col:66>
    (UnaryOperator 0xa267f70 <col:16, col:66> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa267f58 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa267ef0 <col:52, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0xa267eb0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
          (CXXDependentScopeMemberExpr 0xa267e78 <col:53, col:59> '<dependent type>' lvalue
            (CXXThisExpr 0xa267e68 <col:53> 'const _Vector_base<_Tp, _Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0xa268058 </usr/include/c++/4.6/bits/stl_vector.h:104:7, col:55>
  (ReturnStmt 0xa268048 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0xa268028 <col:16, col:52> 'allocator_type':'_Alloc'
      (CallExpr 0xa268008 <col:31, col:51> '<dependent type>'
        (UnresolvedMemberExpr 0xa267fc8 <col:31> '<bound member function type>' lvalue)))))


        _Vector_base<_Tp, _Alloc>() : _M_impl() (CompoundStmt 0xa2680b0 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base<_Tp, _Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0xa2680c0 </usr/include/c++/4.6/bits/stl_vector.h:110:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa2672e0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa268120 </usr/include/c++/4.6/bits/stl_vector.h:110:22, col:24>)


        _Vector_base<_Tp, _Alloc>(size_t __n) : _M_impl() (CompoundStmt 0xa268540 </usr/include/c++/4.6/bits/stl_vector.h:114:7, line:118:7>
  (BinaryOperator 0xa268270 <line:115:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa2681b8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa268180 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa268170 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0xa268250 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268200 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0xa2681f0 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa268234 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa267400 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0xa268388 <line:116:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa2682d0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa268298 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa268288 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa268350 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa268318 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa268308 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0xa268528 <line:117:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa2683e8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2683b0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa2683a0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa268500 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0xa2684b8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
      (CXXDependentScopeMemberExpr 0xa268468 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa268430 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa268420 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa26849c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa267400 '__n' 'size_t':'unsigned int'))))


        _Vector_base<_Tp, _Alloc>(size_t __n, const allocator_type &__a) : _M_impl((DeclRefExpr 0xa26855c </usr/include/c++/4.6/bits/stl_vector.h:121:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa267520 '__a' 'const allocator_type &')
) (CompoundStmt 0xa268990 </usr/include/c++/4.6/bits/stl_vector.h:122:7, line:126:7>
  (BinaryOperator 0xa2686c0 <line:123:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa268608 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2685d0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa2685c0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0xa2686a0 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268650 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0xa268640 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa268684 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa2674d0 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0xa2687d8 <line:124:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa268720 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2686e8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa2686d8 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa2687a0 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa268768 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa268758 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0xa268978 <line:125:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa268838 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa268800 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa2687f0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa268950 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0xa268908 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
      (CXXDependentScopeMemberExpr 0xa2688b8 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa268880 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa268870 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa2688ec <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa2674d0 '__n' 'size_t':'unsigned int'))))


        void ~_Vector_base<_Tp, _Alloc>() (CompoundStmt 0xa268be8 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CallExpr 0xa268bc0 <line:142:9, line:143:33> '<dependent type>'
    (MemberExpr 0xa2689c0 <line:142:9> '<bound member function type>' ->_M_deallocate 0xa2679c0
      (CXXThisExpr 0xa2689b0 <col:9> '_Vector_base<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0xa268a28 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2689f0 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa2689e0 <col:23> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa268b98 <col:47, line:143:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa268b60 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
      (CXXDependentScopeMemberExpr 0xa268aa8 <line:142:47, col:61> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa268a70 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0xa268a60 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa268b28 <line:143:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa268af0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa268ae0 <col:11> '_Vector_base<_Tp, _Alloc> *' this))))))


    public:
    public:
        std::_Vector_base::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0xa268d50 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0xa268d40 <col:9, col:51>
    (ConditionalOperator 0xa268d20 <col:16, col:51> '<dependent type>'
      (BinaryOperator 0xa268c50 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0xa268c30 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa268bfc <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa267780 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0xa268c40 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa268c18 <col:23> 'int' 0)))
      (CallExpr 0xa268ce8 <col:27, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa268c98 <col:27, col:35> '<dependent type>' lvalue
          (MemberExpr 0xa268c78 <col:27> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0xa267720
            (CXXThisExpr 0xa268c68 <col:27> '_Vector_base<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa268ccc <col:44> 'size_t':'unsigned int' lvalue ParmVar 0xa267780 '__n' 'size_t':'unsigned int'))
      (IntegerLiteral 0xa268d08 <col:51> 'int' 0))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0xa268e60 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0xa268e40 <line:155:2, line:156:31>
    <<<NULL>>>
    (DeclRefExpr 0xa268d64 <line:155:6> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa2678e0 '__p' 'typename _Tp_alloc_type::pointer')
    (CallExpr 0xa268e18 <line:156:4, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa268db0 <col:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0xa268d90 <col:4> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0xa267720
          (CXXThisExpr 0xa268d80 <col:4> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa268de4 <col:23> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa2678e0 '__p' 'typename _Tp_alloc_type::pointer')
      (DeclRefExpr 0xa268dfc <col:28> 'size_t':'unsigned int' lvalue ParmVar 0xa267920 '__n' 'size_t':'unsigned int'))
    <<<NULL>>>))


    };
    template <typename _Tp = std::basic_string<wchar_t>, typename _Alloc = std::allocator<std::basic_string<wchar_t> >> class vector
template <typename _Tp = std::basic_string<char>, typename _Alloc = std::allocator<std::basic_string<char> >> class vector
template <typename _Tp, typename _Alloc = std::allocator<_Tp>> class vector : protected _Vector_base<_Tp, _Alloc> {
        class vector;
        typedef typename _Alloc::value_type _Alloc_value_type;
        typedef _Vector_base<_Tp, _Alloc> _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef _Tp value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Alloc allocator_type;
    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Tp, _Alloc>() : _Base() (CompoundStmt 0xa277df0 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector<_Tp, _Alloc>(const allocator_type &__a) : _Base((DeclRefExpr 0xa277e00 </usr/include/c++/4.6/bits/stl_vector.h:226:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa26a3b0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa277e60 </usr/include/c++/4.6/bits/stl_vector.h:226:20, col:22>)


        vector<_Tp, _Alloc>(size_type __n, const value_type &__value = (CXXUnresolvedConstructExpr 0xa277d30 </usr/include/c++/4.6/bits/stl_vector.h:263:57, col:68> 'value_type':'_Tp')
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa277d50 </usr/include/c++/4.6/bits/stl_vector.h:264:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa277e70 </usr/include/c++/4.6/bits/stl_vector.h:265:15> 'size_type':'unsigned int' lvalue ParmVar 0xa26a4c0 '__n' 'size_type':'unsigned int')
, (DeclRefExpr 0xa277e88 </usr/include/c++/4.6/bits/stl_vector.h:265:20> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa26a590 '__a' 'const allocator_type &')
) (CompoundStmt 0xa277f90 </usr/include/c++/4.6/bits/stl_vector.h:266:7, col:43>
  (CallExpr 0xa277f68 <col:9, col:40> '<dependent type>'
    (MemberExpr 0xa277f18 <col:9> '<bound member function type>' ->_M_fill_initialize 0xa26d960
      (CXXThisExpr 0xa277f08 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa277f38 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa26a4c0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa277f50 <col:33> 'const value_type':'const _Tp' lvalue ParmVar 0xa26a540 '__value' 'const value_type &')))


        vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x) : _Base((CallExpr 0xa277ff8 </usr/include/c++/4.6/bits/stl_vector.h:279:15, col:24> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa277fc0 <col:15, col:19> '<dependent type>' lvalue
    (DeclRefExpr 0xa277fa4 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa26a700 '__x' 'const vector<_Tp, _Alloc> &')))
, (CallExpr 0xa278068 </usr/include/c++/4.6/bits/stl_vector.h:279:27, col:51> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa278030 <col:27, col:31> '<dependent type>' lvalue
    (DeclRefExpr 0xa278014 <col:27> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa26a700 '__x' 'const vector<_Tp, _Alloc> &')))
) (CompoundStmt 0xa2783a0 </usr/include/c++/4.6/bits/stl_vector.h:280:7, line:284:7>
  (BinaryOperator 0xa278388 <line:280:9, line:283:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa278118 <line:280:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2780e0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa2780d0 <col:9> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa278358 <line:281:4, line:283:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa278168 <line:281:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e6b0 0xa25efb0)
      (CallExpr 0xa2781f0 <col:32, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2781b8 <col:32, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa2781a0 <col:32> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa26a700 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa278260 <col:45, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa278228 <col:45, col:49> '<dependent type>' lvalue
          (DeclRefExpr 0xa27820c <col:45> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa26a700 '__x' 'const vector<_Tp, _Alloc> &')))
      (CXXDependentScopeMemberExpr 0xa2782c8 <line:282:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa278290 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa278280 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0xa278338 <line:283:11, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0xa2782fc <col:11> '<dependent type>' lvalue)))))


        template <typename _InputIterator> vector<_Tp, _Alloc>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa277d70 </usr/include/c++/4.6/bits/stl_vector.h:335:37, col:52> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa2783b4 </usr/include/c++/4.6/bits/stl_vector.h:336:10> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa26a8e0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa278638 </usr/include/c++/4.6/bits/stl_vector.h:337:9, line:341:2>
  (DeclStmt 0xa278550 <line:339:4, col:72>
    0xa278520 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa278610 <line:340:4, col:55> '<dependent type>'
    (UnresolvedMemberExpr 0xa278570 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa2785b0 <col:27> '_InputIterator' lvalue ParmVar 0xa26a850 '__first' '_InputIterator')
    (DeclRefExpr 0xa2785c8 <col:36> '_InputIterator' lvalue ParmVar 0xa26a890 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa2785f8 <col:44, col:54> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Tp, _Alloc>() (CompoundStmt 0xa278838 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0xa278810 <line:350:9, line:351:30> '<dependent type>'
    (UnresolvedLookupExpr 0xa278678 <line:350:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
    (CXXDependentScopeMemberExpr 0xa278700 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2786c8 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa2786b8 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa278780 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa278748 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0xa278738 <col:47> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa2787f0 <line:351:9, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa2787b4 <col:9> '<dependent type>' lvalue))))


        vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x);
        void assign(size_type __n, const value_type &__val) (CompoundStmt 0xa2788d8 </usr/include/c++/4.6/bits/stl_vector.h:413:7, col:37>
  (CallExpr 0xa2788b0 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa278860 <col:9> '<bound member function type>' ->_M_fill_assign 0xa26e300
      (CXXThisExpr 0xa278850 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa278880 <col:24> 'size_type':'unsigned int' lvalue ParmVar 0xa26ac10 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa278898 <col:29> 'const value_type':'const _Tp' lvalue ParmVar 0xa26ac60 '__val' 'const value_type &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa278b08 </usr/include/c++/4.6/bits/stl_vector.h:430:9, line:434:2>
  (DeclStmt 0xa278a20 <line:432:4, col:72>
    0xa2789f0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa278ae0 <line:433:4, col:51> '<dependent type>'
    (UnresolvedMemberExpr 0xa278a40 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa278a80 <col:23> '_InputIterator' lvalue ParmVar 0xa26add0 '__first' '_InputIterator')
    (DeclRefExpr 0xa278a98 <col:32> '_InputIterator' lvalue ParmVar 0xa26ae10 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa278ac8 <col:40, col:50> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        using _Base::1;
        iterator begin() (CompoundStmt 0xa278bd8 </usr/include/c++/4.6/bits/stl_vector.h:464:7, col:50>
  (ReturnStmt 0xa278bc8 <col:9, col:47>
    (CXXUnresolvedConstructExpr 0xa278ba8 <col:16, col:47> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa278b70 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa278b38 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa278b28 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator begin() const (CompoundStmt 0xa278cc8 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0xa278cb8 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0xa278c98 <col:16, col:53> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa278c60 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa278c28 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa278c18 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        iterator end() (CompoundStmt 0xa278d98 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0xa278d88 <col:9, col:48>
    (CXXUnresolvedConstructExpr 0xa278d68 <col:16, col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa278d30 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa278cf8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa278ce8 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator end() const (CompoundStmt 0xa278e68 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0xa278e58 <col:9, col:54>
    (CXXUnresolvedConstructExpr 0xa278e38 <col:16, col:54> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa278e00 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa278dc8 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa278db8 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        reverse_iterator rbegin() (CompoundStmt 0xa278f28 </usr/include/c++/4.6/bits/stl_vector.h:500:7, col:41>
  (ReturnStmt 0xa278f18 <col:9, col:38>
    (CXXUnresolvedConstructExpr 0xa278ef8 <col:16, col:38> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa278ed8 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa278e98 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa278fe8 </usr/include/c++/4.6/bits/stl_vector.h:509:7, col:47>
  (ReturnStmt 0xa278fd8 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0xa278fb8 <col:16, col:44> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa278f98 <col:39, col:43> '<dependent type>'
        (UnresolvedMemberExpr 0xa278f58 <col:39> '<bound member function type>' lvalue)))))


        reverse_iterator rend() (CompoundStmt 0xa2790a8 </usr/include/c++/4.6/bits/stl_vector.h:518:7, col:43>
  (ReturnStmt 0xa279098 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0xa279078 <col:16, col:40> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa279058 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa279018 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rend() const (CompoundStmt 0xa279168 </usr/include/c++/4.6/bits/stl_vector.h:527:7, col:49>
  (ReturnStmt 0xa279158 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa279138 <col:16, col:46> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa279118 <col:39, col:45> '<dependent type>'
        (UnresolvedMemberExpr 0xa2790d8 <col:39> '<bound member function type>' lvalue)))))


        size_type size() const (CompoundStmt 0xa279318 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0xa279308 <col:9, col:74>
    (CXXUnresolvedConstructExpr 0xa2792e8 <col:16, col:74> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa2792c0 <col:26, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa279288 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (CXXDependentScopeMemberExpr 0xa2791d0 <col:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa279198 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0xa279188 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa279250 <col:52, col:66> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa279218 <col:52, col:58> '<dependent type>' lvalue
            (CXXThisExpr 0xa279208 <col:52> 'const vector<_Tp, _Alloc> *' this)))))))


        size_type max_size() const (CompoundStmt 0xa2793f0 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0xa2793e0 <col:9, col:47>
    (CallExpr 0xa2793c0 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa279388 <col:16, col:38> '<dependent type>' lvalue
        (CallExpr 0xa279368 <col:16, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa27932c <col:16> '<dependent type>' lvalue))))))


        void resize(size_type __new_size, value_type __x = (CXXUnresolvedConstructExpr 0xa277d90 </usr/include/c++/4.6/bits/stl_vector.h:629:53, col:64> 'value_type':'_Tp')
) (CompoundStmt 0xa279920 </usr/include/c++/4.6/bits/stl_vector.h:630:7, line:635:7>
  (IfStmt 0xa279900 <line:631:2, line:634:55>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2794b8 <line:631:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa279470 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
      (DeclRefExpr 0xa279404 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa26b570 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa279450 <col:19, col:24> '<dependent type>'
        (MemberExpr 0xa279430 <col:19> '<bound member function type>' ->size 0xa26b480
          (CXXThisExpr 0xa279420 <col:19> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa279688 <line:632:4, col:42> '<dependent type>'
      (UnresolvedMemberExpr 0xa2794f0 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa279588 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa279548 <col:11> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa279648 <col:18, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa279610 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (DeclRefExpr 0xa2795a4 <col:18> 'size_type':'unsigned int' lvalue ParmVar 0xa26b570 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa2795f0 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa2795d0 <col:31> '<bound member function type>' ->size 0xa26b480
            (CXXThisExpr 0xa2795c0 <col:31> 'vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0xa27966c <col:39> 'value_type':'_Tp' lvalue ParmVar 0xa26b5b0 '__x' 'value_type':'_Tp'))
    (IfStmt 0xa2798e0 <line:633:7, line:634:55>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa279760 <line:633:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa279718 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
        (DeclRefExpr 0xa2796b0 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa26b570 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa2796f8 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa2796d8 <col:24> '<bound member function type>' ->size 0xa26b480
            (CXXThisExpr 0xa2796c8 <col:24> 'vector<_Tp, _Alloc> *' this))))
      (CallExpr 0xa2798c0 <line:634:4, col:55> '<dependent type>'
        (MemberExpr 0xa279798 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa277cc0
          (CXXThisExpr 0xa279788 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa279898 <col:20, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa279850 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (CXXDependentScopeMemberExpr 0xa279800 <col:20, col:34> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2797c8 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0xa2797b8 <col:20> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa279834 <col:45> 'size_type':'unsigned int' lvalue ParmVar 0xa26b570 '__new_size' 'size_type':'unsigned int')))
      <<<NULL>>>)))


        size_type capacity() const (CompoundStmt 0xa279ad0 </usr/include/c++/4.6/bits/stl_vector.h:651:7, line:652:32>
  (ReturnStmt 0xa279ac0 <line:651:9, line:652:29>
    (CXXUnresolvedConstructExpr 0xa279aa0 <line:651:16, line:652:29> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa279a78 <line:651:26, line:652:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa279a40 <col:5, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (CXXDependentScopeMemberExpr 0xa279988 <line:651:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa279950 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0xa279940 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa279a08 <line:652:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2799d0 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa2799c0 <col:7> 'const vector<_Tp, _Alloc> *' this)))))))


        bool empty() const (CompoundStmt 0xa279c60 </usr/include/c++/4.6/bits/stl_vector.h:660:7, col:34>
  (ReturnStmt 0xa279c50 <col:9, col:31>
    (CXXOperatorCallExpr 0xa279c28 <col:16, col:31> '<dependent type>'
      (UnresolvedLookupExpr 0xa279bc8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
      (CallExpr 0xa279b38 <col:16, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0xa279af8 <col:16> '<bound member function type>' lvalue))
      (CallExpr 0xa279ba8 <col:27, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0xa279b68 <col:27> '<bound member function type>' lvalue)))))


        void reserve(size_type __n);
        reference operator[](size_type __n) (CompoundStmt 0xa279dc0 </usr/include/c++/4.6/bits/stl_vector.h:696:7, col:49>
  (ReturnStmt 0xa279db0 <col:9, col:46>
    (UnaryOperator 0xa279d98 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0xa279d80 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0xa279d58 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa279d10 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (CXXDependentScopeMemberExpr 0xa279cc0 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa279c88 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0xa279c78 <col:18> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa279cf4 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa26b8d0 '__n' 'size_type':'unsigned int'))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa279f20 </usr/include/c++/4.6/bits/stl_vector.h:711:7, col:49>
  (ReturnStmt 0xa279f10 <col:9, col:46>
    (UnaryOperator 0xa279ef8 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0xa279ee0 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0xa279eb8 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa279e70 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
          (CXXDependentScopeMemberExpr 0xa279e20 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa279de8 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0xa279dd8 <col:18> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa279e54 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa26ba00 '__n' 'size_type':'unsigned int'))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa27a120 </usr/include/c++/4.6/bits/stl_vector.h:717:7, line:720:7>
  (IfStmt 0xa27a100 <line:718:2, line:719:54>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa27a000 <line:718:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa279fb8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30)
      (DeclRefExpr 0xa279f34 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa26bb60 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa279f98 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa279f60 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0xa279f50 <col:13> 'const vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa27a0d0 <line:719:4, col:54> 'void'
      (ImplicitCastExpr 0xa27a0c0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa27a0a4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa27a0f0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa27a090 <col:24, col:30> 'const char [23]' lvalue
          (StringLiteral 0xa27a05c </usr/include/c++/4.6/bits/stl_vector.h:719:29> 'const char [23]' lvalue "vector::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa27a220 </usr/include/c++/4.6/bits/stl_vector.h:736:7, line:739:7>
  (CallExpr 0xa27a180 <line:737:2, col:20> '<dependent type>'
    (MemberExpr 0xa27a148 <col:2> '<bound member function type>' ->_M_range_check 0xa26bc00
      (CXXThisExpr 0xa27a138 <col:2> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa27a168 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa26bcc0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa27a210 <line:738:2, col:20>
    (ArraySubscriptExpr 0xa27a1f8 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0xa27a1c8 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0xa27a1b0 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa27a1a0 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa27a1dc <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa26bcc0 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa27a320 </usr/include/c++/4.6/bits/stl_vector.h:754:7, line:757:7>
  (CallExpr 0xa27a280 <line:755:2, col:20> '<dependent type>'
    (MemberExpr 0xa27a248 <col:2> '<bound member function type>' ->_M_range_check 0xa26bc00
      (CXXThisExpr 0xa27a238 <col:2> 'const vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa27a268 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa26bd80 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa27a310 <line:756:2, col:20>
    (ArraySubscriptExpr 0xa27a2f8 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0xa27a2c8 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0xa27a2b0 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa27a2a0 <col:11> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa27a2dc <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa26bd80 '__n' 'size_type':'unsigned int'))))


        reference front() (CompoundStmt 0xa27a3d0 </usr/include/c++/4.6/bits/stl_vector.h:765:7, col:26>
  (ReturnStmt 0xa27a3c0 <col:9, col:23>
    (UnaryOperator 0xa27a3a8 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0xa27a388 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0xa27a348 <col:17> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa27a480 </usr/include/c++/4.6/bits/stl_vector.h:773:7, col:26>
  (ReturnStmt 0xa27a470 <col:9, col:23>
    (UnaryOperator 0xa27a458 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0xa27a438 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0xa27a3f8 <col:17> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa27a5c0 </usr/include/c++/4.6/bits/stl_vector.h:781:7, col:30>
  (ReturnStmt 0xa27a5b0 <col:9, col:27>
    (UnaryOperator 0xa27a598 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0xa27a580 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa27a558 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa27a520 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (CallExpr 0xa27a4e8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa27a4a8 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa27a508 <col:26> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa27a700 </usr/include/c++/4.6/bits/stl_vector.h:789:7, col:30>
  (ReturnStmt 0xa27a6f0 <col:9, col:27>
    (UnaryOperator 0xa27a6d8 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0xa27a6c0 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa27a698 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa27a660 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
          (CallExpr 0xa27a628 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa27a5e8 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa27a648 <col:26> 'int' 1))))))


        pointer data() (CompoundStmt 0xa27a808 </usr/include/c++/4.6/bits/stl_vector.h:804:7, col:43>
  (ReturnStmt 0xa27a7f8 <col:9, col:40>
    (CallExpr 0xa27a7d8 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa27a730 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
      (CallExpr 0xa27a7b8 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa27a778 <col:33> '<bound member function type>' lvalue)))))


        const_pointer data() const (CompoundStmt 0xa27a910 </usr/include/c++/4.6/bits/stl_vector.h:812:7, col:43>
  (ReturnStmt 0xa27a900 <col:9, col:40>
    (CallExpr 0xa27a8e0 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa27a838 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e4f8b0)
      (CallExpr 0xa27a8c0 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa27a880 <col:33> '<bound member function type>' lvalue)))))


        void push_back(const value_type &__x) (CompoundStmt 0xa27ad98 </usr/include/c++/4.6/bits/stl_vector.h:827:7, line:835:7>
  (IfStmt 0xa27ad78 <line:828:2, line:834:28>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa27aa80 <line:828:6, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0xa27aa28 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (CXXDependentScopeMemberExpr 0xa27a970 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa27a938 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa27a928 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa27a9f0 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa27a9b8 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa27a9a8 <col:33> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa27ac80 <line:829:4, line:832:4>
      (CallExpr 0xa27abc0 <line:830:6, col:58> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa27aaf0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa27aab8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa27aaa8 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa27ab70 <col:30, col:44> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa27ab38 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa27ab28 <col:30> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa27aba4 <col:55> 'const value_type':'const _Tp' lvalue ParmVar 0xa26c210 '__x' 'const value_type &'))
      (UnaryOperator 0xa27ac68 <line:831:6, col:22> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa27ac30 <col:8, col:22> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa27abf8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa27abe8 <col:8> 'vector<_Tp, _Alloc> *' this)))))
    (CallExpr 0xa27ad50 <line:834:4, col:28> '<dependent type>'
      (MemberExpr 0xa27aca8 <col:4> '<bound member function type>' ->_M_insert_aux 0xa277a70
        (CXXThisExpr 0xa27ac98 <col:4> 'vector<_Tp, _Alloc> *' this))
      (CallExpr 0xa27ad18 <col:18, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0xa27acd8 <col:18> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa27ad34 <col:25> 'const value_type':'const _Tp' lvalue ParmVar 0xa26c210 '__x' 'const value_type &'))))


        void pop_back() (CompoundStmt 0xa27af68 </usr/include/c++/4.6/bits/stl_vector.h:858:7, line:861:7>
  (UnaryOperator 0xa27ae30 <line:859:2, col:18> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa27adf8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27adc0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa27adb0 <col:4> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa27af48 <line:860:2, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa27ae90 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27ae58 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa27ae48 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa27af10 <col:24, col:38> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27aed8 <col:24, col:30> '<dependent type>' lvalue
        (CXXThisExpr 0xa27aec8 <col:24> 'vector<_Tp, _Alloc> *' this)))))


        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa27b020 </usr/include/c++/4.6/bits/stl_vector.h:944:7, col:47>
  (CallExpr 0xa27aff8 <col:9, col:44> '<dependent type>'
    (MemberExpr 0xa27af90 <col:9> '<bound member function type>' ->_M_fill_insert 0xa277900
      (CXXThisExpr 0xa27af80 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa27afb0 <col:24> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa26c4e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa27afc8 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0xa26c520 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa27afe0 <col:41> 'const value_type':'const _Tp' lvalue ParmVar 0xa26c570 '__x' 'const value_type &')))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa27b270 </usr/include/c++/4.6/bits/stl_vector.h:964:9, line:968:2>
  (DeclStmt 0xa27b160 <line:966:4, col:72>
    0xa27b130 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa27b240 <line:967:4, col:63> '<dependent type>'
    (UnresolvedMemberExpr 0xa27b180 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa27b1c0 <col:23> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa26c700 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa27b1d8 <col:35> '_InputIterator' lvalue ParmVar 0xa26c740 '__first' '_InputIterator')
    (DeclRefExpr 0xa27b1f0 <col:44> '_InputIterator' lvalue ParmVar 0xa26c780 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa27b228 <col:52, col:62> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa27b9f0 </usr/include/c++/4.6/bits/stl_vector.h:1020:7, line:1030:7>
  (CallExpr 0xa27b3f8 <line:1021:2, col:56> '<dependent type>'
    (UnresolvedLookupExpr 0xa27b2b0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e55460 0x9e559a0 0x9fdb610)
    (CXXDependentScopeMemberExpr 0xa27b338 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27b300 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa27b2f0 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa27b3c0 <col:36, col:48> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27b388 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0xa27b36c <col:36> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa26cb50 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa27b588 <line:1022:2, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0xa27b440 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e55460 0x9e559a0 0x9fdb610)
    (CXXDependentScopeMemberExpr 0xa27b4c8 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27b490 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa27b480 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa27b550 <col:37, col:49> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27b518 <col:37, col:41> '<dependent type>' lvalue
        (DeclRefExpr 0xa27b4fc <col:37> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa26cb50 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa27b718 <line:1023:2, line:1024:34> '<dependent type>'
    (UnresolvedLookupExpr 0xa27b5d0 <line:1023:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e55460 0x9e559a0 0x9fdb610)
    (CXXDependentScopeMemberExpr 0xa27b658 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27b620 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa27b610 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa27b6e0 <line:1024:5, col:17> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27b6a8 <col:5, col:9> '<dependent type>' lvalue
        (DeclRefExpr 0xa27b68c <col:5> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa26cb50 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa27b9c8 <line:1028:2, line:1029:36> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa27b8c8 <line:1028:2, col:37> '<dependent type>' lvalue)
    (CallExpr 0xa27b938 <col:46, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0xa27b8fc <col:46> '<dependent type>' lvalue))
    (CallExpr 0xa27b9a8 <line:1029:11, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa27b970 <col:11, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0xa27b954 <col:11> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa26cb50 '__x' 'vector<_Tp, _Alloc> &')))))


        void clear() (CompoundStmt 0xa27bae0 </usr/include/c++/4.6/bits/stl_vector.h:1040:7, col:50>
  (CallExpr 0xa27bac0 <col:9, col:47> '<dependent type>'
    (MemberExpr 0xa27ba20 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa277cc0
      (CXXThisExpr 0xa27ba10 <col:9> 'vector<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0xa27ba88 <col:25, col:39> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27ba50 <col:25, col:31> '<dependent type>' lvalue
        (CXXThisExpr 0xa27ba40 <col:25> 'vector<_Tp, _Alloc> *' this)))))


    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa27be60 </usr/include/c++/4.6/bits/stl_vector.h:1051:9, line:1064:2>
  (DeclStmt 0xa27bbb8 <line:1052:4, col:45>
    0xa27bb00 "pointer __result =
      (CallExpr 0xa27bb98 <col:23, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa27bb48 <col:23, col:29> '<dependent type>' lvalue
          (CXXThisExpr 0xa27bb38 <col:23> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa27bb7c <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa26cd50 '__n' 'size_type':'unsigned int'))")
  (IfStmt 0xa27bd50 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_vector.h:1058:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa27bbc8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa27bd38 </usr/include/c++/4.6/bits/stl_vector.h:1054:6, line:1058:6>
      (CallExpr 0xa27bce0 <line:1055:8, line:1056:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa27bc00 <line:1055:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e6b0 0xa25efb0)
        (DeclRefExpr 0xa27bc38 <col:36> '_ForwardIterator' lvalue ParmVar 0xa26cd90 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa27bc50 <col:45> '_ForwardIterator' lvalue ParmVar 0xa26cdd0 '__last' '_ForwardIterator')
        (DeclRefExpr 0xa27bc68 <col:53> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa27bb00 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (CallExpr 0xa27bcc0 <line:1056:8, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa27bc80 <col:8> '<dependent type>' lvalue)))
      (ReturnStmt 0xa27bd28 <line:1057:8, col:15>
        (DeclRefExpr 0xa27bd0c <col:15> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa27bb00 '__result' 'pointer':'typename _Tp_alloc_type::pointer')))
    <<<NULL>>>)
  (IfStmt 0xa27be40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_vector.h:1063:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa27bd70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa27be28 </usr/include/c++/4.6/bits/stl_vector.h:1060:6, line:1063:6>
      (CallExpr 0xa27bdf0 <line:1061:8, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa27bd80 <col:8> '<dependent type>' lvalue)
        (DeclRefExpr 0xa27bdbc <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa27bb00 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (DeclRefExpr 0xa27bdd4 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa26cd50 '__n' 'size_type':'unsigned int'))
      (NullStmt 0xa27be18 <line:1062:31>))
    <<<NULL>>>))

;
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type) (CompoundStmt 0xa27c210 </usr/include/c++/4.6/bits/stl_vector.h:1076:9, line:1081:2>
  (BinaryOperator 0xa27bf90 <line:1077:4, col:68> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa27bec8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27be90 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa27be80 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa27bf70 <col:29, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0xa27befc <col:29> '<dependent type>' lvalue)
      (CXXStaticCastExpr 0xa27bf58 <col:41, col:67> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa27bf38 <col:64> '_Integer' lvalue ParmVar 0xa26cf90 '__n' '_Integer'))))
  (BinaryOperator 0xa27c150 <line:1078:4, line:1079:57> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa27bff0 <line:1078:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27bfb8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa27bfa8 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa27c128 <line:1079:6, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa27c0e0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
      (CXXDependentScopeMemberExpr 0xa27c070 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa27c038 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa27c028 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXStaticCastExpr 0xa27c0c8 <col:31, col:57> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa27c0a4 <col:54> '_Integer' lvalue ParmVar 0xa26cf90 '__n' '_Integer'))))
  (CallExpr 0xa27c1e8 <line:1080:4, col:59> '<dependent type>'
    (MemberExpr 0xa27c178 <col:4> '<bound member function type>' ->_M_fill_initialize 0xa26d960
      (CXXThisExpr 0xa27c168 <col:4> 'vector<_Tp, _Alloc> *' this))
    (CXXStaticCastExpr 0xa27c1b8 <col:23, col:49> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa27c198 <col:46> '_Integer' lvalue ParmVar 0xa26cf90 '__n' '_Integer'))
    (DeclRefExpr 0xa27c1d0 <col:52> '_Integer' lvalue ParmVar 0xa26cfd0 '__value' '_Integer')))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa27c448 </usr/include/c++/4.6/bits/stl_vector.h:1088:9, line:1092:2>
  (DeclStmt 0xa27c360 <line:1089:4, line:1090:37>
    0xa27c330 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa27c420 <line:1091:4, col:56> '<dependent type>'
    (UnresolvedMemberExpr 0xa27c380 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa27c3c0 <col:24> '_InputIterator' lvalue ParmVar 0xa26d1d0 '__first' '_InputIterator')
    (DeclRefExpr 0xa27c3d8 <col:33> '_InputIterator' lvalue ParmVar 0xa26d210 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa27c408 <col:41, col:55> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa27c5e8 </usr/include/c++/4.6/bits/stl_vector.h:1099:9, line:1102:2>
  (ForStmt 0xa27c5c0 <line:1100:4, line:1101:24>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa27c4e8 <line:1100:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa27c490 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620)
      (DeclRefExpr 0xa27c460 <col:11> '_InputIterator' lvalue ParmVar 0xa26d410 '__first' '_InputIterator')
      (DeclRefExpr 0xa27c478 <col:22> '_InputIterator' lvalue ParmVar 0xa26d450 '__last' '_InputIterator'))
    (UnaryOperator 0xa27c528 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa27c50c <col:32> '_InputIterator' lvalue ParmVar 0xa26d410 '__first' '_InputIterator'))
    (CallExpr 0xa27c5a0 <line:1101:6, col:24> '<dependent type>'
      (MemberExpr 0xa27c550 <col:6> '<bound member function type>' ->push_back 0xa26c290
        (CXXThisExpr 0xa27c540 <col:6> 'vector<_Tp, _Alloc> *' this))
      (UnaryOperator 0xa27c588 <col:16, col:17> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa27c570 <col:17> '_InputIterator' lvalue ParmVar 0xa26d410 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa27cbd8 </usr/include/c++/4.6/bits/stl_vector.h:1109:9, line:1117:2>
  (DeclStmt 0xa27c6f0 <line:1110:4, col:56>
    0xa27c610 "const size_type __n =
      (CallExpr 0xa27c6c8 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa27c660 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e66090)
        (DeclRefExpr 0xa27c694 <col:40> '_ForwardIterator' lvalue ParmVar 0xa26d690 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa27c6ac <col:49> '_ForwardIterator' lvalue ParmVar 0xa26d6d0 '__last' '_ForwardIterator'))")
  (BinaryOperator 0xa27c800 <line:1111:4, col:50> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa27c748 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27c710 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa27c700 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa27c7e0 <col:29, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa27c790 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa27c780 <col:29> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa27c7c4 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa27c610 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0xa27c9a0 <line:1112:4, col:63> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa27c860 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27c828 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa27c818 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa27c978 <col:38, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa27c930 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
      (CXXDependentScopeMemberExpr 0xa27c8e0 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa27c8a8 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa27c898 <col:38> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa27c914 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa27c610 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0xa27cbc0 <line:1113:4, line:1116:27> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa27ca00 <line:1113:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27c9c8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa27c9b8 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa27cb90 <line:1114:6, line:1116:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa27ca50 <line:1114:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e6b0 0xa25efb0)
      (DeclRefExpr 0xa27ca88 <col:34> '_ForwardIterator' lvalue ParmVar 0xa26d690 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa27caa0 <col:43> '_ForwardIterator' lvalue ParmVar 0xa26d6d0 '__last' '_ForwardIterator')
      (CXXDependentScopeMemberExpr 0xa27cb00 <line:1115:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa27cac8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa27cab8 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0xa27cb70 <line:1116:6, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0xa27cb34 <col:6> '<dependent type>' lvalue)))))

;
        void _M_fill_initialize(size_type __n, const value_type &__value) (CompoundStmt 0xa27cea8 </usr/include/c++/4.6/bits/stl_vector.h:1123:7, line:1127:7>
  (CallExpr 0xa27cd60 <line:1124:2, line:1125:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa27cc20 <line:1124:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2605b0 0xa260ee0)
    (CXXDependentScopeMemberExpr 0xa27cca0 <col:32, col:46> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27cc68 <col:32, col:38> '<dependent type>' lvalue
        (CXXThisExpr 0xa27cc58 <col:32> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0xa27ccd4 <col:56> 'size_type':'unsigned int' lvalue ParmVar 0xa26d8b0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa27ccec <col:61> 'const value_type':'const _Tp' lvalue ParmVar 0xa26d900 '__value' 'const value_type &')
    (CallExpr 0xa27cd40 <line:1125:11, col:31> '<dependent type>'
      (UnresolvedMemberExpr 0xa27cd04 <col:11> '<dependent type>' lvalue)))
  (BinaryOperator 0xa27ce90 <line:1126:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa27cdd8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27cda0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa27cd90 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa27ce58 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27ce20 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa27ce10 <col:28> 'vector<_Tp, _Alloc> *' this)))))


        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa27cf48 </usr/include/c++/4.6/bits/stl_vector.h:1150:9, col:39>
  (CallExpr 0xa27cf20 <col:11, col:36> '<dependent type>'
    (MemberExpr 0xa27ced0 <col:11> '<bound member function type>' ->_M_fill_assign 0xa26e300
      (CXXThisExpr 0xa27cec0 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa27cef0 <col:26> '_Integer' lvalue ParmVar 0xa26da30 '__n' '_Integer')
    (DeclRefExpr 0xa27cf08 <col:31> '_Integer' lvalue ParmVar 0xa26da70 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa27d178 </usr/include/c++/4.6/bits/stl_vector.h:1157:9, line:1161:2>
  (DeclStmt 0xa27d090 <line:1158:4, line:1159:37>
    0xa27d060 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa27d150 <line:1160:4, col:50> '<dependent type>'
    (UnresolvedMemberExpr 0xa27d0b0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa27d0f0 <col:18> '_InputIterator' lvalue ParmVar 0xa26dc40 '__first' '_InputIterator')
    (DeclRefExpr 0xa27d108 <col:27> '_InputIterator' lvalue ParmVar 0xa26dc80 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa27d138 <col:35, col:49> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa27d230 </usr/include/c++/4.6/bits/stl_vector.h:1191:9, col:46>
  (CallExpr 0xa27d208 <col:11, col:43> '<dependent type>'
    (MemberExpr 0xa27d1a0 <col:11> '<bound member function type>' ->_M_fill_insert 0xa277900
      (CXXThisExpr 0xa27d190 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa27d1c0 <col:26> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa26e3d0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa27d1d8 <col:33> '_Integer' lvalue ParmVar 0xa26e410 '__n' '_Integer')
    (DeclRefExpr 0xa27d1f0 <col:38> '_Integer' lvalue ParmVar 0xa26e450 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa27d480 </usr/include/c++/4.6/bits/stl_vector.h:1198:9, line:1202:2>
  (DeclStmt 0xa27d370 <line:1199:4, line:1200:37>
    0xa27d340 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa27d450 <line:1201:4, col:59> '<dependent type>'
    (UnresolvedMemberExpr 0xa27d390 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa27d3d0 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa26e650 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa27d3e8 <col:27> '_InputIterator' lvalue ParmVar 0xa26e690 '__first' '_InputIterator')
    (DeclRefExpr 0xa27d400 <col:36> '_InputIterator' lvalue ParmVar 0xa26e6d0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa27d438 <col:44, col:58> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa27db70 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0xa27d6e0 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa27d5f8 <line:1241:6, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa27d5b0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
      (CXXOperatorCallExpr 0xa27d570 <col:6, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa27d538 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180)
        (CallExpr 0xa27d4c8 <col:6, col:15> '<dependent type>'
          (MemberExpr 0xa27d4a8 <col:6> '<bound member function type>' ->max_size 0xa26b500
            (CXXThisExpr 0xa27d498 <col:6> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa27d518 <col:19, col:24> '<dependent type>'
          (MemberExpr 0xa27d4f8 <col:19> '<bound member function type>' ->size 0xa26b480
            (CXXThisExpr 0xa27d4e8 <col:19> 'const vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0xa27d594 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa277ae0 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa27d6b0 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0xa27d6a0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa27d684 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e22e80 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa27d6d0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa27d670 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa27d654 </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0xa277b30 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa27d8e8 <line:1244:2, col:56>
    0xa27d710 "const size_type __len =
      (CXXOperatorCallExpr 0xa27d8c0 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa27d878 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930)
        (CallExpr 0xa27d778 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa27d758 <col:26> '<bound member function type>' ->size 0xa26b480
            (CXXThisExpr 0xa27d748 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa27d850 <col:35, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa27d7b0 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8f3a0 0x9e8fb10)
          (CallExpr 0xa27d818 <col:44, col:49> '<dependent type>'
            (MemberExpr 0xa27d7f8 <col:44> '<bound member function type>' ->size 0xa26b480
              (CXXThisExpr 0xa27d7e8 <col:44> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa27d834 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0xa277ae0 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa27db60 <line:1245:2, col:63>
    (ConditionalOperator 0xa27db40 <col:9, col:63> '<dependent type>'
      (ParenExpr 0xa27dac0 <col:9, col:46> '<dependent type>'
        (BinaryOperator 0xa27daa8 <col:10, col:45> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa27d9a8 <col:10, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa27d960 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
            (DeclRefExpr 0xa27d8f8 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa27d710 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa27d940 <col:18, col:23> '<dependent type>'
              (MemberExpr 0xa27d920 <col:18> '<bound member function type>' ->size 0xa26b480
                (CXXThisExpr 0xa27d910 <col:18> 'const vector<_Tp, _Alloc> *' this))))
          (CXXOperatorCallExpr 0xa27da80 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa27da38 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40)
            (DeclRefExpr 0xa27d9cc <col:28> 'const size_type':'const unsigned int' lvalue Var 0xa27d710 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa27da18 <col:36, col:45> '<dependent type>'
              (MemberExpr 0xa27d9f8 <col:36> '<bound member function type>' ->max_size 0xa26b500
                (CXXThisExpr 0xa27d9e8 <col:36> 'const vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa27db08 <col:50, col:59> '<dependent type>'
        (MemberExpr 0xa27dae8 <col:50> '<bound member function type>' ->max_size 0xa26b500
          (CXXThisExpr 0xa27dad8 <col:50> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa27db24 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa27d710 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(pointer __pos) (CompoundStmt 0xa27ddb8 </usr/include/c++/4.6/bits/stl_vector.h:1254:7, line:1257:7>
  (CallExpr 0xa27dce0 <line:1255:2, col:69> '<dependent type>'
    (UnresolvedLookupExpr 0xa27dbb0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
    (DeclRefExpr 0xa27dbf0 <col:16> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa277c20 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')
    (CXXDependentScopeMemberExpr 0xa27dc50 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27dc18 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa27dc08 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa27dcc0 <col:48, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0xa27dc84 <col:48> '<dependent type>' lvalue)))
  (BinaryOperator 0xa27dda0 <line:1256:2, col:28> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa27dd50 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa27dd18 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa27dd08 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0xa27dd84 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa277c20 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')))


    };
    template <typename _Tp, typename _Alloc> inline bool operator==(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa27e5e0 </usr/include/c++/4.6/bits/stl_vector.h:1274:5, line:1275:61>
  (ReturnStmt 0xa27e5d0 <line:1274:7, line:1275:58>
    (ParenExpr 0xa27e5b8 <line:1274:14, line:1275:58> '<dependent type>'
      (BinaryOperator 0xa27e5a0 <line:1274:15, line:1275:57> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa27e3b0 <line:1274:15, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa27e350 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa27e240 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
          (CallExpr 0xa27e2c0 <col:15, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa27e288 <col:15, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa27e270 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27dfd0 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa27e330 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa27e2f8 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa27e2dc <col:29> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27e140 '__y' 'const vector<_Tp, _Alloc> &'))))
        (CallExpr 0xa27e578 <line:1275:11, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa27e3f0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eade60 0x9eaee10)
          (CallExpr 0xa27e478 <col:22, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa27e440 <col:22, col:26> '<dependent type>' lvalue
              (DeclRefExpr 0xa27e428 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27dfd0 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa27e4e8 <col:35, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa27e4b0 <col:35, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa27e494 <col:35> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27dfd0 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa27e558 <col:46, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa27e520 <col:46, col:50> '<dependent type>' lvalue
              (DeclRefExpr 0xa27e504 <col:46> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27e140 '__y' 'const vector<_Tp, _Alloc> &'))))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa27ecb0 </usr/include/c++/4.6/bits/stl_vector.h:1291:5, line:1292:33>
  (ReturnStmt 0xa27eca0 <line:1291:7, line:1292:30>
    (CallExpr 0xa27ec70 <line:1291:14, line:1292:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa27ea78 <line:1291:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9eaf360 0x9eb0060)
      (CallExpr 0xa27eb00 <col:43, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa27eac8 <col:43, col:47> '<dependent type>' lvalue
          (DeclRefExpr 0xa27eab0 <col:43> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27e7e0 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa27eb70 <col:56, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa27eb38 <col:56, col:60> '<dependent type>' lvalue
          (DeclRefExpr 0xa27eb1c <col:56> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27e7e0 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa27ebe0 <line:1292:8, col:18> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa27eba8 <col:8, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0xa27eb8c <col:8> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27e950 '__y' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa27ec50 <col:21, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa27ec18 <col:21, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa27ebfc <col:21> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27e950 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator!=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa27f228 </usr/include/c++/4.6/bits/stl_vector.h:1298:5, col:29>
  (ReturnStmt 0xa27f218 <col:7, col:26>
    (UnaryOperator 0xa27f200 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa27f1e8 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa27f1c0 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa27f160 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa27e240 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110)
          (DeclRefExpr 0xa27f130 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27eeb0 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa27f148 <col:23> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa27f020 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa283b18 </usr/include/c++/4.6/bits/stl_vector.h:1304:5, col:25>
  (ReturnStmt 0xa283b08 <col:7, col:20>
    (CXXOperatorCallExpr 0xa283ae0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa283a90 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa27ea30 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
      (DeclRefExpr 0xa283a60 <col:14> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa283950 '__y' 'const vector<_Tp, _Alloc> &')
      (DeclRefExpr 0xa283a78 <col:20> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2837e0 '__x' 'const vector<_Tp, _Alloc> &'))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa284078 </usr/include/c++/4.6/bits/stl_vector.h:1310:5, col:28>
  (ReturnStmt 0xa284068 <col:7, col:25>
    (UnaryOperator 0xa284050 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa284038 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa284010 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa283fc0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa27ea30 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
          (DeclRefExpr 0xa283f90 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa283e80 '__y' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa283fa8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa283d10 '__x' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa2845d8 </usr/include/c++/4.6/bits/stl_vector.h:1316:5, col:28>
  (ReturnStmt 0xa2845c8 <col:7, col:25>
    (UnaryOperator 0xa2845b0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa284598 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa284570 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa284520 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa27ea30 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70)
          (DeclRefExpr 0xa2844f0 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa284270 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa284508 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2843e0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline void swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa284b18 </usr/include/c++/4.6/bits/stl_vector.h:1322:5, col:22>
  (CallExpr 0xa284af8 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa284aa8 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0xa284a90 <col:7> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa2847f0 '__x' 'vector<_Tp, _Alloc> &'))
    (DeclRefExpr 0xa284adc <col:16> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa284960 '__y' 'vector<_Tp, _Alloc> &')))

;
}
namespace std {
    typedef unsigned long _Bit_type;
    enum  {
        _S_word_bit = (ImplicitCastExpr 0xa284d68 </usr/include/c++/4.6/bits/stl_bvector.h:67:24, col:60> 'unsigned int' <IntegralCast>
  (CXXFunctionalCastExpr 0xa284d18 <col:24, col:60> 'int' functional cast to int <NoOp>
    (ImplicitCastExpr 0xa284d08 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'int' <IntegralCast>
      (BinaryOperator 0xa284cf0 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'unsigned int' '*'
        (ImplicitCastExpr 0xa284ce0 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa284c90 <col:22> 'int' 8))
        (UnaryExprOrTypeTraitExpr 0xa284cc8 </usr/include/c++/4.6/bits/stl_bvector.h:67:43, col:59> 'unsigned int' sizeof '_Bit_type':'unsigned long')))))

    };
    struct _Bit_reference {
        struct _Bit_reference;
        _Bit_type *_M_p;
        _Bit_type _M_mask;
        _Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p((ImplicitCastExpr 0xa285658 </usr/include/c++/4.6/bits/stl_bvector.h:75:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa28563c <col:12> '_Bit_type *' lvalue ParmVar 0xa284f50 '__x' '_Bit_type *'))
), _M_mask((ImplicitCastExpr 0xa2856a0 </usr/include/c++/4.6/bits/stl_bvector.h:75:26> '_Bit_type':'unsigned long' <LValueToRValue>
  (DeclRefExpr 0xa285688 <col:26> '_Bit_type':'unsigned long' lvalue ParmVar 0xa284f90 '__y' '_Bit_type':'unsigned long'))
) (CompoundStmt 0xa2856d0 </usr/include/c++/4.6/bits/stl_bvector.h:75:31, col:33>)


        _Bit_reference() : _M_p((ImplicitCastExpr 0xa2856f8 </usr/include/c++/4.6/bits/stl_bvector.h:77:29> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa2856e0 <col:29> 'int' 0))
), _M_mask((ImplicitCastExpr 0xa285740 </usr/include/c++/4.6/bits/stl_bvector.h:77:41> '_Bit_type':'unsigned long' <IntegralCast>
  (IntegerLiteral 0xa285728 <col:41> 'int' 0))
) (CompoundStmt 0xa285770 </usr/include/c++/4.6/bits/stl_bvector.h:77:44, col:46>)


        bool operator _Bool() const (CompoundStmt 0xa2858e0 </usr/include/c++/4.6/bits/stl_bvector.h:80:5, col:35>
  (ReturnStmt 0xa2858d0 <col:7, col:32>
    (UnaryOperator 0xa2858b8 <col:14, col:32> '_Bool' prefix '!'
      (UnaryOperator 0xa2858a0 <col:15, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa285890 <col:16, col:32> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa285878 <col:16, col:32> 'unsigned long'
            (BinaryOperator 0xa285860 <col:17, col:25> 'unsigned long' '&'
              (ImplicitCastExpr 0xa285840 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
                (UnaryOperator 0xa2857f8 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
                  (ImplicitCastExpr 0xa2857e8 <col:18> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0xa2857c4 <col:18> '_Bit_type *const' lvalue ->_M_p 0xa284ed0
                      (CXXThisExpr 0xa285798 <col:18> 'const struct std::_Bit_reference *' this)))))
              (ImplicitCastExpr 0xa285850 <col:25> '_Bit_type':'unsigned long' <LValueToRValue>
                (MemberExpr 0xa285820 <col:25> 'const _Bit_type':'const unsigned long' lvalue ->_M_mask 0xa284f10
                  (CXXThisExpr 0xa285810 <col:25> 'const struct std::_Bit_reference *' this))))))))))


        std::_Bit_reference &operator=(bool __x) (CompoundStmt 0xa285b00 </usr/include/c++/4.6/bits/stl_bvector.h:84:5, line:90:5>
  (IfStmt 0xa285aa8 <line:85:7, line:88:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa285910 <line:85:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa2858f4 <col:11> '_Bool' lvalue ParmVar 0xa2851d0 '__x' '_Bool'))
    (CompoundAssignOperator 0xa2859b8 <line:86:2, col:11> '_Bit_type':'unsigned long' lvalue '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0xa285960 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa285950 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa285930 <col:3> '_Bit_type *' lvalue ->_M_p 0xa284ed0
            (CXXThisExpr 0xa285920 <col:3> 'struct std::_Bit_reference *' this))))
      (ImplicitCastExpr 0xa2859a8 <col:11> '_Bit_type':'unsigned long' <LValueToRValue>
        (MemberExpr 0xa285988 <col:11> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa284f10
          (CXXThisExpr 0xa285978 <col:11> 'struct std::_Bit_reference *' this))))
    (CompoundAssignOperator 0xa285a88 <line:88:2, col:12> '_Bit_type':'unsigned long' lvalue '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0xa285a18 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa285a08 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa2859e8 <col:3> '_Bit_type *' lvalue ->_M_p 0xa284ed0
            (CXXThisExpr 0xa2859d8 <col:3> 'struct std::_Bit_reference *' this))))
      (UnaryOperator 0xa285a70 <col:11, col:12> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa285a60 <col:12> '_Bit_type':'unsigned long' <LValueToRValue>
          (MemberExpr 0xa285a40 <col:12> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa284f10
            (CXXThisExpr 0xa285a30 <col:12> 'struct std::_Bit_reference *' this))))))
  (ReturnStmt 0xa285af0 <line:89:7, col:15>
    (UnaryOperator 0xa285ad8 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
      (CXXThisExpr 0xa285ac8 <col:15> 'struct std::_Bit_reference *' this))))


        std::_Bit_reference &operator=(const std::_Bit_reference &__x) (CompoundStmt 0xa285d60 </usr/include/c++/4.6/bits/stl_bvector.h:94:5, col:33>
  (ReturnStmt 0xa285d50 <col:7, col:30>
    (CXXOperatorCallExpr 0xa285d28 <col:14, col:30> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0xa285d18 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa285ce0 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa285270 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (UnaryOperator 0xa285b28 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
        (CXXThisExpr 0xa285b18 <col:15> 'struct std::_Bit_reference *' this))
      (CXXFunctionalCastExpr 0xa285bd0 <col:22, col:30> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0xa285bc0 <col:27> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0xa285ba0 <col:27> '_Bool'
            (MemberExpr 0xa285b80 <col:27, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa285160
              (DeclRefExpr 0xa285b48 <col:27> 'const struct std::_Bit_reference' lvalue ParmVar 0xa285310 '__x' 'const struct std::_Bit_reference &'))))))))


        bool operator==(const std::_Bit_reference &__x) const (CompoundStmt 0xa285ef0 </usr/include/c++/4.6/bits/stl_bvector.h:98:5, col:40>
  (ReturnStmt 0xa285ee0 <col:7, col:37>
    (BinaryOperator 0xa285ec8 <col:14, col:37> '_Bool' '=='
      (ImplicitCastExpr 0xa285ea8 <col:14, col:24> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0xa285e00 <col:14, col:24> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa285df0 <col:19, col:20> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa285dd0 <col:19, col:20> '_Bool'
              (MemberExpr 0xa285db0 <col:19, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa285160
                (UnaryOperator 0xa285d90 <col:19, col:20> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0xa285d80 <col:20> 'const struct std::_Bit_reference *' this)))))))
      (ImplicitCastExpr 0xa285eb8 <col:29, col:37> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0xa285e90 <col:29, col:37> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa285e80 <col:34> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa285e60 <col:34> '_Bool'
              (MemberExpr 0xa285e40 <col:34, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa285160
                (DeclRefExpr 0xa285e20 <col:34> 'const struct std::_Bit_reference' lvalue ParmVar 0xa285410 '__x' 'const struct std::_Bit_reference &')))))))))


        bool operator<(const std::_Bit_reference &__x) const (CompoundStmt 0xa286078 </usr/include/c++/4.6/bits/stl_bvector.h:102:5, col:41>
  (ReturnStmt 0xa286068 <col:7, col:38>
    (BinaryOperator 0xa286050 <col:14, col:38> '_Bool' '&&'
      (UnaryOperator 0xa285fa8 <col:14, col:25> '_Bool' prefix '!'
        (CXXFunctionalCastExpr 0xa285f90 <col:15, col:25> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa285f80 <col:20, col:21> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa285f60 <col:20, col:21> '_Bool'
              (MemberExpr 0xa285f40 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa285160
                (UnaryOperator 0xa285f20 <col:20, col:21> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0xa285f10 <col:21> 'const struct std::_Bit_reference *' this)))))))
      (CXXFunctionalCastExpr 0xa286038 <col:30, col:38> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0xa286028 <col:35> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0xa286008 <col:35> '_Bool'
            (MemberExpr 0xa285fe8 <col:35, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa285160
              (DeclRefExpr 0xa285fc8 <col:35> 'const struct std::_Bit_reference' lvalue ParmVar 0xa285510 '__x' 'const struct std::_Bit_reference &'))))))))


        void flip() (CompoundStmt 0xa286148 </usr/include/c++/4.6/bits/stl_bvector.h:106:5, col:25>
  (CompoundAssignOperator 0xa286128 <col:7, col:16> '_Bit_type':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    (UnaryOperator 0xa2860d0 <col:7, col:8> '_Bit_type':'unsigned long' lvalue prefix '*'
      (ImplicitCastExpr 0xa2860c0 <col:8> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa2860a0 <col:8> '_Bit_type *' lvalue ->_M_p 0xa284ed0
          (CXXThisExpr 0xa286090 <col:8> 'struct std::_Bit_reference *' this))))
    (ImplicitCastExpr 0xa286118 <col:16> '_Bit_type':'unsigned long' <LValueToRValue>
      (MemberExpr 0xa2860f8 <col:16> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa284f10
        (CXXThisExpr 0xa2860e8 <col:16> 'struct std::_Bit_reference *' this)))))


        inline _Bit_reference(const std::_Bit_reference &) throw() : _M_p((ImplicitCastExpr 0xa2898a0 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa28987c <col:10> '_Bit_type *const' lvalue ._M_p 0xa284ed0
    (DeclRefExpr 0xa289864 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0xa285ca0 '' 'const struct std::_Bit_reference &')))
), _M_mask((ImplicitCastExpr 0xa289900 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type':'unsigned long' <LValueToRValue>
  (MemberExpr 0xa2898dc <col:10> 'const _Bit_type':'const unsigned long' lvalue ._M_mask 0xa284f10
    (DeclRefExpr 0xa2898c4 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0xa285ca0 '' 'const struct std::_Bit_reference &')))
) (CompoundStmt 0xa289930 </usr/include/c++/4.6/bits/stl_bvector.h:69:10>)


    };
    struct _Bit_iterator_base : public std::iterator<std::random_access_iterator_tag, bool> {
        struct _Bit_iterator_base;
        _Bit_type *_M_p;
        unsigned int _M_offset;
        _Bit_iterator_base(_Bit_type *__x, unsigned int __y) : std::iterator<std::random_access_iterator_tag, bool>(), _M_p((ImplicitCastExpr 0xa287100 </usr/include/c++/4.6/bits/stl_bvector.h:116:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa2870e4 <col:12> '_Bit_type *' lvalue ParmVar 0xa286850 '__x' '_Bit_type *'))
), _M_offset((ImplicitCastExpr 0xa287140 </usr/include/c++/4.6/bits/stl_bvector.h:116:28> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa287128 <col:28> 'unsigned int' lvalue ParmVar 0xa2868a0 '__y' 'unsigned int'))
) (CompoundStmt 0xa2873b8 </usr/include/c++/4.6/bits/stl_bvector.h:116:33, col:35>)


        void _M_bump_up() (CompoundStmt 0xa2875c8 </usr/include/c++/4.6/bits/stl_bvector.h:120:5, line:126:5>
  (IfStmt 0xa2875a8 <line:121:7, line:125:2>
    <<<NULL>>>
    (BinaryOperator 0xa2874c0 <line:121:11, col:45> '_Bool' '=='
      (UnaryOperator 0xa287418 <col:11, col:20> 'unsigned int' postfix '++'
        (MemberExpr 0xa2873f8 <col:11> 'unsigned int' lvalue ->_M_offset 0xa286810
          (CXXThisExpr 0xa2873e8 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0xa2874b0 <col:26, col:45> 'unsigned int' <IntegralCast>
        (BinaryOperator 0xa287498 <col:26, col:45> 'int' '-'
          (CXXFunctionalCastExpr 0xa287468 <col:26, col:41> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0xa287458 <col:30> 'int' <IntegralCast>
              (DeclRefExpr 0xa28743c <col:30> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
          (IntegerLiteral 0xa287480 <col:45> 'int' 1))))
    (CompoundStmt 0xa287590 <line:122:2, line:125:2>
      (BinaryOperator 0xa287530 <line:123:4, col:16> 'unsigned int' lvalue '='
        (MemberExpr 0xa2874e8 <col:4> 'unsigned int' lvalue ->_M_offset 0xa286810
          (CXXThisExpr 0xa2874d8 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0xa287520 <col:16> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa287508 <col:16> 'int' 0)))
      (UnaryOperator 0xa287578 <line:124:4, col:6> '_Bit_type *' lvalue prefix '++'
        (MemberExpr 0xa287558 <col:6> '_Bit_type *' lvalue ->_M_p 0xa2867d0
          (CXXThisExpr 0xa287548 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_bump_down() (CompoundStmt 0xa2877c0 </usr/include/c++/4.6/bits/stl_bvector.h:130:5, line:136:5>
  (IfStmt 0xa2877a0 <line:131:7, line:135:2>
    <<<NULL>>>
    (BinaryOperator 0xa287650 <line:131:11, col:26> '_Bool' '=='
      (UnaryOperator 0xa287610 <col:11, col:20> 'unsigned int' postfix '--'
        (MemberExpr 0xa2875f0 <col:11> 'unsigned int' lvalue ->_M_offset 0xa286810
          (CXXThisExpr 0xa2875e0 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0xa287640 <col:26> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa287628 <col:26> 'int' 0)))
    (CompoundStmt 0xa287788 <line:132:2, line:135:2>
      (BinaryOperator 0xa287728 <line:133:4, col:35> 'unsigned int' lvalue '='
        (MemberExpr 0xa287678 <col:4> 'unsigned int' lvalue ->_M_offset 0xa286810
          (CXXThisExpr 0xa287668 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0xa287718 <col:16, col:35> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa287700 <col:16, col:35> 'int' '-'
            (CXXFunctionalCastExpr 0xa2876d0 <col:16, col:31> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa2876c0 <col:20> 'int' <IntegralCast>
                (DeclRefExpr 0xa2876a4 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
            (IntegerLiteral 0xa2876e8 <col:35> 'int' 1))))
      (UnaryOperator 0xa287770 <line:134:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0xa287750 <col:6> '_Bit_type *' lvalue ->_M_p 0xa2867d0
          (CXXThisExpr 0xa287740 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_incr(ptrdiff_t __i) (CompoundStmt 0xa287c90 </usr/include/c++/4.6/bits/stl_bvector.h:140:5, line:150:5>
  (DeclStmt 0xa2878d8 <line:141:7, col:44>
    0xa287800 "difference_type __n =
      (ImplicitCastExpr 0xa2878c8 <col:29, col:35> 'difference_type':'int' <IntegralCast>
        (BinaryOperator 0xa2878b0 <col:29, col:35> 'unsigned int' '+'
          (ImplicitCastExpr 0xa2878a0 <col:29> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa287880 <col:29> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa287834 <col:29> 'ptrdiff_t':'int' lvalue ParmVar 0xa286ad0 '__i' 'ptrdiff_t':'int')))
          (ImplicitCastExpr 0xa287890 <col:35> 'unsigned int' <LValueToRValue>
            (MemberExpr 0xa287860 <col:35> 'unsigned int' lvalue ->_M_offset 0xa286810
              (CXXThisExpr 0xa287850 <col:35> 'struct std::_Bit_iterator_base *' this)))))")
  (CompoundAssignOperator 0xa2879a8 <line:142:7, col:36> '_Bit_type *' lvalue '+=' ComputeLHSTy='_Bit_type *' ComputeResultTy='_Bit_type *'
    (MemberExpr 0xa2878f8 <col:7> '_Bit_type *' lvalue ->_M_p 0xa2867d0
      (CXXThisExpr 0xa2878e8 <col:7> 'struct std::_Bit_iterator_base *' this))
    (BinaryOperator 0xa287990 <col:15, col:36> 'int' '/'
      (ImplicitCastExpr 0xa287980 <col:15> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa287918 <col:15> 'difference_type':'int' lvalue Var 0xa287800 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0xa287968 <col:21, col:36> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0xa287958 <col:25> 'int' <IntegralCast>
          (DeclRefExpr 0xa28793c <col:25> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (BinaryOperator 0xa287a70 <line:143:7, col:34> 'difference_type':'int' lvalue '='
    (DeclRefExpr 0xa2879c8 <col:7> 'difference_type':'int' lvalue Var 0xa287800 '__n' 'difference_type':'int')
    (BinaryOperator 0xa287a58 <col:13, col:34> 'int' '%'
      (ImplicitCastExpr 0xa287a48 <col:13> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa2879e0 <col:13> 'difference_type':'int' lvalue Var 0xa287800 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0xa287a30 <col:19, col:34> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0xa287a20 <col:23> 'int' <IntegralCast>
          (DeclRefExpr 0xa287a04 <col:23> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (IfStmt 0xa287bc8 <line:144:7, line:148:2>
    <<<NULL>>>
    (BinaryOperator 0xa287ac8 <line:144:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0xa287ab8 <col:11> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa287a88 <col:11> 'difference_type':'int' lvalue Var 0xa287800 '__n' 'difference_type':'int'))
      (IntegerLiteral 0xa287aa0 <col:17> 'int' 0))
    (CompoundStmt 0xa287bb0 <line:145:2, line:148:2>
      (CompoundAssignOperator 0xa287b48 <line:146:4, col:26> 'difference_type':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa287ae0 <col:4> 'difference_type':'int' lvalue Var 0xa287800 '__n' 'difference_type':'int')
        (CXXFunctionalCastExpr 0xa287b30 <col:11, col:26> 'int' functional cast to int <NoOp>
          (ImplicitCastExpr 0xa287b20 <col:15> 'int' <IntegralCast>
            (DeclRefExpr 0xa287b04 <col:15> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
      (UnaryOperator 0xa287b98 <line:147:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0xa287b78 <col:6> '_Bit_type *' lvalue ->_M_p 0xa2867d0
          (CXXThisExpr 0xa287b68 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>)
  (BinaryOperator 0xa287c78 <line:149:7, col:48> 'unsigned int' lvalue '='
    (MemberExpr 0xa287bf8 <col:7> 'unsigned int' lvalue ->_M_offset 0xa286810
      (CXXThisExpr 0xa287be8 <col:7> 'struct std::_Bit_iterator_base *' this))
    (CXXStaticCastExpr 0xa287c60 <col:19, col:48> 'unsigned int' static_cast<unsigned int> <NoOp>
      (ImplicitCastExpr 0xa287c50 <col:45> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa287c40 <col:45> 'difference_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa287c18 <col:45> 'difference_type':'int' lvalue Var 0xa287800 '__n' 'difference_type':'int'))))))


        bool operator==(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa287e40 </usr/include/c++/4.6/bits/stl_bvector.h:154:5, col:62>
  (ReturnStmt 0xa287e30 <col:7, col:51>
    (BinaryOperator 0xa287e18 <col:14, col:51> '_Bool' '&&'
      (BinaryOperator 0xa287d60 <col:14, col:26> '_Bool' '=='
        (ImplicitCastExpr 0xa287d40 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa287ce8 <col:14> '_Bit_type *const' lvalue ->_M_p 0xa2867d0
            (CXXThisExpr 0xa287cd8 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa287d50 <col:22, col:26> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa287d20 <col:22, col:26> '_Bit_type *const' lvalue ._M_p 0xa2867d0
            (DeclRefExpr 0xa287d08 <col:22> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa286bf0 '__i' 'const struct std::_Bit_iterator_base &'))))
      (BinaryOperator 0xa287e00 <col:34, col:51> '_Bool' '=='
        (ImplicitCastExpr 0xa287de0 <col:34> 'unsigned int' <LValueToRValue>
          (MemberExpr 0xa287d88 <col:34> 'const unsigned int' lvalue ->_M_offset 0xa286810
            (CXXThisExpr 0xa287d78 <col:34> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa287df0 <col:47, col:51> 'unsigned int' <LValueToRValue>
          (MemberExpr 0xa287dc0 <col:47, col:51> 'const unsigned int' lvalue ._M_offset 0xa286810
            (DeclRefExpr 0xa287da8 <col:47> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa286bf0 '__i' 'const struct std::_Bit_iterator_base &')))))))


        bool operator<(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa288090 </usr/include/c++/4.6/bits/stl_bvector.h:158:5, line:161:5>
  (ReturnStmt 0xa288080 <line:159:7, line:160:56>
    (BinaryOperator 0xa288068 <line:159:14, line:160:56> '_Bool' '||'
      (BinaryOperator 0xa287ee0 <line:159:14, col:25> '_Bool' '<'
        (ImplicitCastExpr 0xa287ec0 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa287e68 <col:14> '_Bit_type *const' lvalue ->_M_p 0xa2867d0
            (CXXThisExpr 0xa287e58 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa287ed0 <col:21, col:25> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa287ea0 <col:21, col:25> '_Bit_type *const' lvalue ._M_p 0xa2867d0
            (DeclRefExpr 0xa287e88 <col:21> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa286cf0 '__i' 'const struct std::_Bit_iterator_base &'))))
      (ParenExpr 0xa288050 <line:160:10, col:56> '_Bool'
        (BinaryOperator 0xa288038 <col:11, col:47> '_Bool' '&&'
          (BinaryOperator 0xa287f80 <col:11, col:23> '_Bool' '=='
            (ImplicitCastExpr 0xa287f60 <col:11> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa287f08 <col:11> '_Bit_type *const' lvalue ->_M_p 0xa2867d0
                (CXXThisExpr 0xa287ef8 <col:11> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0xa287f70 <col:19, col:23> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa287f40 <col:19, col:23> '_Bit_type *const' lvalue ._M_p 0xa2867d0
                (DeclRefExpr 0xa287f28 <col:19> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa286cf0 '__i' 'const struct std::_Bit_iterator_base &'))))
          (BinaryOperator 0xa288020 <col:31, col:47> '_Bool' '<'
            (ImplicitCastExpr 0xa288000 <col:31> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa287fa8 <col:31> 'const unsigned int' lvalue ->_M_offset 0xa286810
                (CXXThisExpr 0xa287f98 <col:31> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0xa288010 <col:43, col:47> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa287fe0 <col:43, col:47> 'const unsigned int' lvalue ._M_offset 0xa286810
                (DeclRefExpr 0xa287fc8 <col:43> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa286cf0 '__i' 'const struct std::_Bit_iterator_base &')))))))))


        bool operator!=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa288190 </usr/include/c++/4.6/bits/stl_bvector.h:165:5, col:31>
  (ReturnStmt 0xa288180 <col:7, col:28>
    (UnaryOperator 0xa288168 <col:14, col:28> '_Bool' prefix '!'
      (ParenExpr 0xa288150 <col:15, col:28> '_Bool'
        (CXXOperatorCallExpr 0xa288128 <col:16, col:25> '_Bool'
          (ImplicitCastExpr 0xa288118 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2880e8 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa286c70 'operator==' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0xa2880b8 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa2880a8 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0xa2880cc <col:25> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa286dc0 '__i' 'const struct std::_Bit_iterator_base &'))))))


        bool operator>(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa288248 </usr/include/c++/4.6/bits/stl_bvector.h:169:5, col:27>
  (ReturnStmt 0xa288238 <col:7, col:21>
    (CXXOperatorCallExpr 0xa288210 <col:14, col:21> '_Bool'
      (ImplicitCastExpr 0xa288200 <col:18, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2881e8 <col:18, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa286d40 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (DeclRefExpr 0xa2881a4 <col:14> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa286e90 '__i' 'const struct std::_Bit_iterator_base &')
      (UnaryOperator 0xa2881d0 <col:20, col:21> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
        (CXXThisExpr 0xa2881c0 <col:21> 'const struct std::_Bit_iterator_base *' this)))))


        bool operator<=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa288330 </usr/include/c++/4.6/bits/stl_bvector.h:173:5, col:30>
  (ReturnStmt 0xa288320 <col:7, col:27>
    (UnaryOperator 0xa288308 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0xa2882f0 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0xa2882c8 <col:16, col:23> '_Bool'
          (ImplicitCastExpr 0xa2882b8 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2882a0 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa286d40 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (DeclRefExpr 0xa28825c <col:16> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa286f60 '__i' 'const struct std::_Bit_iterator_base &')
          (UnaryOperator 0xa288288 <col:22, col:23> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa288278 <col:23> 'const struct std::_Bit_iterator_base *' this)))))))


        bool operator>=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa288418 </usr/include/c++/4.6/bits/stl_bvector.h:177:5, col:30>
  (ReturnStmt 0xa288408 <col:7, col:27>
    (UnaryOperator 0xa2883f0 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0xa2883d8 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0xa2883b0 <col:16, col:24> '_Bool'
          (ImplicitCastExpr 0xa2883a0 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa288388 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa286d40 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0xa288358 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa288348 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0xa28836c <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa287030 '__i' 'const struct std::_Bit_iterator_base &'))))))


        inline _Bit_iterator_base(const std::_Bit_iterator_base &) throw() : std::iterator<std::random_access_iterator_tag, bool>((ImplicitCastExpr 0xa289c40 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'const std::iterator<std::random_access_iterator_tag, _Bool>':'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, int, _Bool *, _Bool &>' lvalue <UncheckedDerivedToBase (iterator)>
  (DeclRefExpr 0xa289c28 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa2895b0 '' 'const struct std::_Bit_iterator_base &'))
), _M_p((ImplicitCastExpr 0xa289d40 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa289d20 <col:10> '_Bit_type *const' lvalue ._M_p 0xa2867d0
    (DeclRefExpr 0xa289d08 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa2895b0 '' 'const struct std::_Bit_iterator_base &')))
), _M_offset((ImplicitCastExpr 0xa289da0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'unsigned int' <LValueToRValue>
  (MemberExpr 0xa289d7c <col:10> 'const unsigned int' lvalue ._M_offset 0xa286810
    (DeclRefExpr 0xa289d64 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa2895b0 '' 'const struct std::_Bit_iterator_base &')))
) (CompoundStmt 0xa289dd8 </usr/include/c++/4.6/bits/stl_bvector.h:109:10>)


    };
    inline ptrdiff_t operator-(const std::_Bit_iterator_base &__x, const std::_Bit_iterator_base &__y) (CompoundStmt 0xa2887c8 </usr/include/c++/4.6/bits/stl_bvector.h:182:3, line:185:3>
  (ReturnStmt 0xa2887b8 <line:183:5, line:184:37>
    (ImplicitCastExpr 0xa2887a8 <line:183:12, line:184:37> 'ptrdiff_t':'int' <IntegralCast>
      (ParenExpr 0xa288790 <line:183:12, line:184:37> 'unsigned int'
        (BinaryOperator 0xa288778 <line:183:13, line:184:28> 'unsigned int' '-'
          (BinaryOperator 0xa288718 <line:183:13, line:184:12> 'unsigned int' '+'
            (ImplicitCastExpr 0xa288708 <line:183:13, col:52> 'unsigned int' <IntegralCast>
              (BinaryOperator 0xa2886a8 <col:13, col:52> 'int' '*'
                (CXXFunctionalCastExpr 0xa2885d0 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa2885c0 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa2885a4 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
                (ParenExpr 0xa288690 <col:32, col:52> 'int'
                  (BinaryOperator 0xa288678 <col:33, col:48> 'int' '-'
                    (ImplicitCastExpr 0xa288658 <col:33, col:37> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa288600 <col:33, col:37> '_Bit_type *const' lvalue ._M_p 0xa2867d0
                        (DeclRefExpr 0xa2885e8 <col:33> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa288440 '__x' 'const struct std::_Bit_iterator_base &')))
                    (ImplicitCastExpr 0xa288668 <col:44, col:48> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa288638 <col:44, col:48> '_Bit_type *const' lvalue ._M_p 0xa2867d0
                        (DeclRefExpr 0xa288620 <col:44> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa288490 '__y' 'const struct std::_Bit_iterator_base &')))))))
            (ImplicitCastExpr 0xa2886f8 <line:184:8, col:12> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa2886d8 <col:8, col:12> 'const unsigned int' lvalue ._M_offset 0xa286810
                (DeclRefExpr 0xa2886c0 <col:8> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa288440 '__x' 'const struct std::_Bit_iterator_base &'))))
          (ImplicitCastExpr 0xa288768 <col:24, col:28> 'unsigned int' <LValueToRValue>
            (MemberExpr 0xa288748 <col:24, col:28> 'const unsigned int' lvalue ._M_offset 0xa286810
              (DeclRefExpr 0xa288730 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa288490 '__y' 'const struct std::_Bit_iterator_base &'))))))))


    struct _Bit_iterator : public std::_Bit_iterator_base {
        struct _Bit_iterator;
        typedef std::_Bit_reference reference;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_iterator iterator;
        _Bit_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0xa2895f0 </usr/include/c++/4.6/bits/stl_bvector.h:193:42> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa2894a8 <col:42> 'int' 0))
, (ImplicitCastExpr 0xa289600 </usr/include/c++/4.6/bits/stl_bvector.h:193:45> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2894c0 <col:45> 'int' 0))
) (CompoundStmt 0xa289660 </usr/include/c++/4.6/bits/stl_bvector.h:193:48, col:50>)


        _Bit_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0xa2896a8 </usr/include/c++/4.6/bits/stl_bvector.h:196:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa289670 <col:26> '_Bit_type *' lvalue ParmVar 0xa288ab0 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0xa2896b8 </usr/include/c++/4.6/bits/stl_bvector.h:196:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa289688 <col:31> 'unsigned int' lvalue ParmVar 0xa288b00 '__y' 'unsigned int'))
) (CompoundStmt 0xa289710 </usr/include/c++/4.6/bits/stl_bvector.h:196:36, col:38>)


        reference operator*() const (CompoundStmt 0xa289978 </usr/include/c++/4.6/bits/stl_bvector.h:200:5, col:49>
  (ReturnStmt 0xa289968 <col:7, col:46>
    (CXXConstructExpr 0xa289940 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa289858 <col:14, col:46> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa289848 <col:14, col:46> 'const struct std::_Bit_reference' <NoOp>
          (CXXTemporaryObjectExpr 0xa289818 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
            (ImplicitCastExpr 0xa289808 <col:24> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa289768 <col:24> '_Bit_type *const' lvalue ->_M_p 0xa2867d0
                (ImplicitCastExpr 0xa289758 <col:24> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                  (CXXThisExpr 0xa289748 <col:24> 'const struct std::_Bit_iterator *' this))))
            (BinaryOperator 0xa2897f0 <col:30, col:37> 'unsigned long' '<<'
              (IntegerLiteral 0xa289788 <col:30> 'unsigned long' 1)
              (ImplicitCastExpr 0xa2897e0 <col:37> 'unsigned int' <LValueToRValue>
                (MemberExpr 0xa2897c0 <col:37> 'const unsigned int' lvalue ->_M_offset 0xa286810
                  (ImplicitCastExpr 0xa2897b0 <col:37> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0xa2897a0 <col:37> 'const struct std::_Bit_iterator *' this)))))))))))


        iterator &operator++() (CompoundStmt 0xa289a40 </usr/include/c++/4.6/bits/stl_bvector.h:204:5, line:207:5>
  (CXXMemberCallExpr 0xa2899d8 <line:205:7, col:18> 'void'
    (MemberExpr 0xa2899b8 <col:7> '<bound member function type>' ->_M_bump_up 0xa2869e0
      (ImplicitCastExpr 0xa2899f8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa2899a8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa289a30 <line:206:7, col:15>
    (UnaryOperator 0xa289a18 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa289a08 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator++(int) (CompoundStmt 0xa289f48 </usr/include/c++/4.6/bits/stl_bvector.h:211:5, line:215:5>
  (DeclStmt 0xa289e78 <line:212:7, col:29>
    0xa289a60 "iterator __tmp =
      (CXXConstructExpr 0xa289e50 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa289bf0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0xa289aa8 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa289a98 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0xa289eb8 <line:213:7, col:18> 'void'
    (MemberExpr 0xa289e98 <col:7> '<bound member function type>' ->_M_bump_up 0xa2869e0
      (ImplicitCastExpr 0xa289ed8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa289e88 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa289f38 <line:214:7, col:14>
    (CXXConstructExpr 0xa289f10 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa289f00 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa289ee8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa289a60 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator--() (CompoundStmt 0xa28a000 </usr/include/c++/4.6/bits/stl_bvector.h:219:5, line:222:5>
  (CXXMemberCallExpr 0xa289f98 <line:220:7, col:20> 'void'
    (MemberExpr 0xa289f78 <col:7> '<bound member function type>' ->_M_bump_down 0xa286a60
      (ImplicitCastExpr 0xa289fb8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa289f68 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa289ff0 <line:221:7, col:15>
    (UnaryOperator 0xa289fd8 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa289fc8 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator--(int) (CompoundStmt 0xa28a188 </usr/include/c++/4.6/bits/stl_bvector.h:226:5, line:230:5>
  (DeclStmt 0xa28a0b8 <line:227:7, col:29>
    0xa28a020 "iterator __tmp =
      (CXXConstructExpr 0xa28a090 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa28a080 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0xa28a068 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa28a058 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0xa28a0f8 <line:228:7, col:20> 'void'
    (MemberExpr 0xa28a0d8 <col:7> '<bound member function type>' ->_M_bump_down 0xa286a60
      (ImplicitCastExpr 0xa28a118 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa28a0c8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa28a178 <line:229:7, col:14>
    (CXXConstructExpr 0xa28a150 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa28a140 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa28a128 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa28a020 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator+=(difference_type __i) (CompoundStmt 0xa28a268 </usr/include/c++/4.6/bits/stl_bvector.h:234:5, line:237:5>
  (CXXMemberCallExpr 0xa28a1f0 <line:235:7, col:18> 'void'
    (MemberExpr 0xa28a1b8 <col:7> '<bound member function type>' ->_M_incr 0xa286b50
      (ImplicitCastExpr 0xa28a210 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa28a1a8 <col:7> 'struct std::_Bit_iterator *' this)))
    (ImplicitCastExpr 0xa28a220 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0xa28a1d8 <col:15> 'difference_type':'int' lvalue ParmVar 0xa288ff0 '__i' 'difference_type':'int')))
  (ReturnStmt 0xa28a258 <line:236:7, col:15>
    (UnaryOperator 0xa28a240 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa28a230 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator &operator-=(difference_type __i) (CompoundStmt 0xa28a3a8 </usr/include/c++/4.6/bits/stl_bvector.h:241:5, line:244:5>
  (CXXOperatorCallExpr 0xa28a348 <line:242:7, col:17> 'iterator':'struct std::_Bit_iterator' lvalue
    (ImplicitCastExpr 0xa28a338 <col:13, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa28a2e8 <col:13, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa289090 'operator+=' 'iterator &(difference_type)'))
    (UnaryOperator 0xa28a290 <col:7, col:8> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa28a280 <col:8> 'struct std::_Bit_iterator *' this))
    (UnaryOperator 0xa28a2d0 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0xa28a2c0 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa28a2a4 <col:17> 'difference_type':'int' lvalue ParmVar 0xa289100 '__i' 'difference_type':'int'))))
  (ReturnStmt 0xa28a398 <line:243:7, col:15>
    (UnaryOperator 0xa28a380 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa28a370 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator+(difference_type __i) const (CompoundStmt 0xa28a540 </usr/include/c++/4.6/bits/stl_bvector.h:248:5, line:251:5>
  (DeclStmt 0xa28a458 <line:249:7, col:29>
    0xa28a3d0 "iterator __tmp =
      (CXXConstructExpr 0xa28a430 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0xa28a418 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa28a408 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0xa28a530 <line:250:7, col:23>
    (CXXConstructExpr 0xa28a508 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa28a4f8 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa28a4d0 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0xa28a4c0 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa28a4a8 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa289090 'operator+=' 'iterator &(difference_type)'))
          (DeclRefExpr 0xa28a468 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa28a3d0 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0xa28a498 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa28a480 <col:23> 'difference_type':'int' lvalue ParmVar 0xa2891d0 '__i' 'difference_type':'int')))))))


        iterator operator-(difference_type __i) const (CompoundStmt 0xa28a6d0 </usr/include/c++/4.6/bits/stl_bvector.h:255:5, line:258:5>
  (DeclStmt 0xa28a5e8 <line:256:7, col:29>
    0xa28a560 "iterator __tmp =
      (CXXConstructExpr 0xa28a5c0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0xa28a5a8 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa28a598 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0xa28a6c0 <line:257:7, col:23>
    (CXXConstructExpr 0xa28a698 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa28a688 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa28a660 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0xa28a650 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa28a638 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa289160 'operator-=' 'iterator &(difference_type)'))
          (DeclRefExpr 0xa28a5f8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa28a560 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0xa28a628 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa28a610 <col:23> 'difference_type':'int' lvalue ParmVar 0xa2892e0 '__i' 'difference_type':'int')))))))


        reference operator[](difference_type __i) const (CompoundStmt 0xa28a8c0 </usr/include/c++/4.6/bits/stl_bvector.h:262:5, col:30>
  (ReturnStmt 0xa28a8b0 <col:7, col:27>
    (CXXConstructExpr 0xa28a888 <col:14, col:27> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa28a878 <col:14, col:27> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa28a868 <col:14, col:27> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa28a848 <col:14, col:27> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa28a838 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa28a7e8 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa288c30 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa28a7d8 <col:15, col:27> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (ParenExpr 0xa28a7c0 <col:15, col:27> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa28a798 <col:16, col:24> 'iterator':'struct std::_Bit_iterator'
                  (ImplicitCastExpr 0xa28a788 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa28a738 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa289270 'operator+' 'iterator (difference_type) const'))
                  (UnaryOperator 0xa28a6f8 <col:16, col:17> 'const struct std::_Bit_iterator' lvalue prefix '*'
                    (CXXThisExpr 0xa28a6e8 <col:17> 'const struct std::_Bit_iterator *' this))
                  (ImplicitCastExpr 0xa28a728 <col:24> 'difference_type':'int' <LValueToRValue>
                    (DeclRefExpr 0xa28a70c <col:24> 'difference_type':'int' lvalue ParmVar 0xa2893a0 '__i' 'difference_type':'int')))))))))))


        inline _Bit_iterator(const std::_Bit_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0xa289c18 </usr/include/c++/4.6/bits/stl_bvector.h:187:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0xa289bfc <col:10> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa289bb0 '' 'const struct std::_Bit_iterator &'))
) (CompoundStmt 0xa289e40 </usr/include/c++/4.6/bits/stl_bvector.h:187:10>)


    };
    inline std::_Bit_iterator operator+(ptrdiff_t __n, const std::_Bit_iterator &__x) (CompoundStmt 0xa28ab20 </usr/include/c++/4.6/bits/stl_bvector.h:267:3, col:23>
  (ReturnStmt 0xa28ab10 <col:5, col:18>
    (CXXConstructExpr 0xa28aae8 <col:12, col:18> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa28aad8 <col:12, col:18> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa28aac8 <col:12, col:18> 'const struct std::_Bit_iterator' <NoOp>
          (CXXOperatorCallExpr 0xa28aaa0 <col:12, col:18> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa28aa90 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa28aa78 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa289270 'operator+' 'iterator (difference_type) const'))
            (DeclRefExpr 0xa28aa38 <col:12> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa28a930 '__x' 'const struct std::_Bit_iterator &')
            (ImplicitCastExpr 0xa28aa68 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa28aa50 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0xa28a8e0 '__n' 'ptrdiff_t':'int'))))))))


    struct _Bit_const_iterator : public std::_Bit_iterator_base {
        struct _Bit_const_iterator;
        typedef bool reference;
        typedef bool const_reference;
        typedef const bool *pointer;
        typedef std::_Bit_const_iterator const_iterator;
        _Bit_const_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0xa28b960 </usr/include/c++/4.6/bits/stl_bvector.h:276:48> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa28b928 <col:48> 'int' 0))
, (ImplicitCastExpr 0xa28b970 </usr/include/c++/4.6/bits/stl_bvector.h:276:51> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa28b940 <col:51> 'int' 0))
) (CompoundStmt 0xa28b9d0 </usr/include/c++/4.6/bits/stl_bvector.h:276:54, col:56>)


        _Bit_const_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0xa28ba18 </usr/include/c++/4.6/bits/stl_bvector.h:279:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa28b9e0 <col:26> '_Bit_type *' lvalue ParmVar 0xa28ae70 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0xa28ba28 </usr/include/c++/4.6/bits/stl_bvector.h:279:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa28b9f8 <col:31> 'unsigned int' lvalue ParmVar 0xa28aec0 '__y' 'unsigned int'))
) (CompoundStmt 0xa28ba80 </usr/include/c++/4.6/bits/stl_bvector.h:279:36, col:38>)


        _Bit_const_iterator(const std::_Bit_iterator &__x) : std::_Bit_iterator_base((ImplicitCastExpr 0xa28bb28 </usr/include/c++/4.6/bits/stl_bvector.h:282:26, col:30> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa28bab8 <col:26, col:30> '_Bit_type *const' lvalue ._M_p 0xa2867d0
    (ImplicitCastExpr 0xa28baa8 <col:26> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0xa28ba90 <col:26> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa28afa0 '__x' 'const struct std::_Bit_iterator &'))))
, (ImplicitCastExpr 0xa28bb38 </usr/include/c++/4.6/bits/stl_bvector.h:282:36, col:40> 'unsigned int' <LValueToRValue>
  (MemberExpr 0xa28bb00 <col:36, col:40> 'const unsigned int' lvalue ._M_offset 0xa286810
    (ImplicitCastExpr 0xa28baf0 <col:36> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0xa28bad8 <col:36> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa28afa0 '__x' 'const struct std::_Bit_iterator &'))))
) (CompoundStmt 0xa28bb90 </usr/include/c++/4.6/bits/stl_bvector.h:282:51, col:53>)


        const_reference operator*() const (CompoundStmt 0xa28bd40 </usr/include/c++/4.6/bits/stl_bvector.h:286:5, col:54>
  (ReturnStmt 0xa28bd30 <col:7, col:51>
    (ImplicitCastExpr 0xa28bd20 <col:14, col:51> '_Bool' <UserDefinedConversion>
      (CXXMemberCallExpr 0xa28bd00 <col:14, col:51> '_Bool'
        (MemberExpr 0xa28bce0 <col:14, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa285160
          (ImplicitCastExpr 0xa28bcd0 <col:14, col:51> 'const struct std::_Bit_reference' lvalue <NoOp>
            (CXXTemporaryObjectExpr 0xa28bc98 <col:14, col:51> 'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
              (ImplicitCastExpr 0xa28bc88 <col:29> '_Bit_type *' <LValueToRValue>
                (MemberExpr 0xa28bbe8 <col:29> '_Bit_type *const' lvalue ->_M_p 0xa2867d0
                  (ImplicitCastExpr 0xa28bbd8 <col:29> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0xa28bbc8 <col:29> 'const struct std::_Bit_const_iterator *' this))))
              (BinaryOperator 0xa28bc70 <col:35, col:42> 'unsigned long' '<<'
                (IntegerLiteral 0xa28bc08 <col:35> 'unsigned long' 1)
                (ImplicitCastExpr 0xa28bc60 <col:42> 'unsigned int' <LValueToRValue>
                  (MemberExpr 0xa28bc40 <col:42> 'const unsigned int' lvalue ->_M_offset 0xa286810
                    (ImplicitCastExpr 0xa28bc30 <col:42> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (CXXThisExpr 0xa28bc20 <col:42> 'const struct std::_Bit_const_iterator *' this))))))))))))


        const_iterator &operator++() (CompoundStmt 0xa28be10 </usr/include/c++/4.6/bits/stl_bvector.h:290:5, line:293:5>
  (CXXMemberCallExpr 0xa28bda8 <line:291:7, col:18> 'void'
    (MemberExpr 0xa28bd88 <col:7> '<bound member function type>' ->_M_bump_up 0xa2869e0
      (ImplicitCastExpr 0xa28bdc8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa28bd78 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa28be00 <line:292:7, col:15>
    (UnaryOperator 0xa28bde8 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa28bdd8 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator++(int) (CompoundStmt 0xa28c138 </usr/include/c++/4.6/bits/stl_bvector.h:297:5, line:301:5>
  (DeclStmt 0xa28c068 <line:298:7, col:35>
    0xa28be30 "const_iterator __tmp =
      (CXXConstructExpr 0xa28c040 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0xa28bfa0 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0xa28be78 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa28be68 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0xa28c0a8 <line:299:7, col:18> 'void'
    (MemberExpr 0xa28c088 <col:7> '<bound member function type>' ->_M_bump_up 0xa2869e0
      (ImplicitCastExpr 0xa28c0c8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa28c078 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa28c128 <line:300:7, col:14>
    (CXXConstructExpr 0xa28c100 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa28c0f0 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa28c0d8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa28be30 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator--() (CompoundStmt 0xa28c1f0 </usr/include/c++/4.6/bits/stl_bvector.h:305:5, line:308:5>
  (CXXMemberCallExpr 0xa28c188 <line:306:7, col:20> 'void'
    (MemberExpr 0xa28c168 <col:7> '<bound member function type>' ->_M_bump_down 0xa286a60
      (ImplicitCastExpr 0xa28c1a8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa28c158 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa28c1e0 <line:307:7, col:15>
    (UnaryOperator 0xa28c1c8 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa28c1b8 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator--(int) (CompoundStmt 0xa28c378 </usr/include/c++/4.6/bits/stl_bvector.h:312:5, line:316:5>
  (DeclStmt 0xa28c2a8 <line:313:7, col:35>
    0xa28c210 "const_iterator __tmp =
      (CXXConstructExpr 0xa28c280 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0xa28c270 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0xa28c258 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa28c248 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0xa28c2e8 <line:314:7, col:20> 'void'
    (MemberExpr 0xa28c2c8 <col:7> '<bound member function type>' ->_M_bump_down 0xa286a60
      (ImplicitCastExpr 0xa28c308 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa28c2b8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa28c368 <line:315:7, col:14>
    (CXXConstructExpr 0xa28c340 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa28c330 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa28c318 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa28c210 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator+=(difference_type __i) (CompoundStmt 0xa28c458 </usr/include/c++/4.6/bits/stl_bvector.h:320:5, line:323:5>
  (CXXMemberCallExpr 0xa28c3e0 <line:321:7, col:18> 'void'
    (MemberExpr 0xa28c3a8 <col:7> '<bound member function type>' ->_M_incr 0xa286b50
      (ImplicitCastExpr 0xa28c400 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa28c398 <col:7> 'struct std::_Bit_const_iterator *' this)))
    (ImplicitCastExpr 0xa28c410 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0xa28c3c8 <col:15> 'difference_type':'int' lvalue ParmVar 0xa28b460 '__i' 'difference_type':'int')))
  (ReturnStmt 0xa28c448 <line:322:7, col:15>
    (UnaryOperator 0xa28c430 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa28c420 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator &operator-=(difference_type __i) (CompoundStmt 0xa28c598 </usr/include/c++/4.6/bits/stl_bvector.h:327:5, line:330:5>
  (CXXOperatorCallExpr 0xa28c538 <line:328:7, col:17> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
    (ImplicitCastExpr 0xa28c528 <col:13, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa28c4d8 <col:13, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa28b500 'operator+=' 'const_iterator &(difference_type)'))
    (UnaryOperator 0xa28c480 <col:7, col:8> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa28c470 <col:8> 'struct std::_Bit_const_iterator *' this))
    (UnaryOperator 0xa28c4c0 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0xa28c4b0 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa28c494 <col:17> 'difference_type':'int' lvalue ParmVar 0xa28b570 '__i' 'difference_type':'int'))))
  (ReturnStmt 0xa28c588 <line:329:7, col:15>
    (UnaryOperator 0xa28c570 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa28c560 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator+(difference_type __i) const (CompoundStmt 0xa28c730 </usr/include/c++/4.6/bits/stl_bvector.h:334:5, line:337:5>
  (DeclStmt 0xa28c648 <line:335:7, col:35>
    0xa28c5c0 "const_iterator __tmp =
      (CXXConstructExpr 0xa28c620 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0xa28c608 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa28c5f8 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0xa28c720 <line:336:7, col:23>
    (CXXConstructExpr 0xa28c6f8 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0xa28c6e8 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa28c6c0 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0xa28c6b0 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa28c698 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa28b500 'operator+=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0xa28c658 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa28c5c0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0xa28c688 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa28c670 <col:23> 'difference_type':'int' lvalue ParmVar 0xa28b640 '__i' 'difference_type':'int')))))))


        const_iterator operator-(difference_type __i) const (CompoundStmt 0xa28c8c0 </usr/include/c++/4.6/bits/stl_bvector.h:341:5, line:344:5>
  (DeclStmt 0xa28c7d8 <line:342:7, col:35>
    0xa28c750 "const_iterator __tmp =
      (CXXConstructExpr 0xa28c7b0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0xa28c798 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa28c788 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0xa28c8b0 <line:343:7, col:23>
    (CXXConstructExpr 0xa28c888 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0xa28c878 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa28c850 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0xa28c840 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa28c828 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa28b5d0 'operator-=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0xa28c7e8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa28c750 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0xa28c818 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa28c800 <col:23> 'difference_type':'int' lvalue ParmVar 0xa28b760 '__i' 'difference_type':'int')))))))


        const_reference operator[](difference_type __i) const (CompoundStmt 0xa28ca48 </usr/include/c++/4.6/bits/stl_bvector.h:348:5, col:30>
  (ReturnStmt 0xa28ca38 <col:7, col:27>
    (CXXOperatorCallExpr 0xa28ca18 <col:14, col:27> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa28ca08 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa28c9d8 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0xa28b0a0 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa28c9c8 <col:15, col:27> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (ParenExpr 0xa28c9b0 <col:15, col:27> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa28c988 <col:16, col:24> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0xa28c978 <col:22, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa28c928 <col:22, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0xa28b6e0 'operator+' 'const_iterator (difference_type) const'))
            (UnaryOperator 0xa28c8e8 <col:16, col:17> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
              (CXXThisExpr 0xa28c8d8 <col:17> 'const struct std::_Bit_const_iterator *' this))
            (ImplicitCastExpr 0xa28c918 <col:24> 'difference_type':'int' <LValueToRValue>
              (DeclRefExpr 0xa28c8fc <col:24> 'difference_type':'int' lvalue ParmVar 0xa28b820 '__i' 'difference_type':'int'))))))))


        inline _Bit_const_iterator(const std::_Bit_const_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0xa28bfc8 </usr/include/c++/4.6/bits/stl_bvector.h:269:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0xa28bfac <col:10> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0xa28bf60 '' 'const struct std::_Bit_const_iterator &'))
) (CompoundStmt 0xa28c030 </usr/include/c++/4.6/bits/stl_bvector.h:269:10>)


    };
    inline std::_Bit_const_iterator operator+(ptrdiff_t __n, const std::_Bit_const_iterator &__x) (CompoundStmt 0xa28ccb0 </usr/include/c++/4.6/bits/stl_bvector.h:353:3, col:23>
  (ReturnStmt 0xa28cca0 <col:5, col:18>
    (CXXConstructExpr 0xa28cc78 <col:12, col:18> 'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa28cc68 <col:12, col:18> 'const struct std::_Bit_const_iterator' lvalue
        (ImplicitCastExpr 0xa28cc58 <col:12, col:18> 'const struct std::_Bit_const_iterator' <NoOp>
          (CXXOperatorCallExpr 0xa28cc30 <col:12, col:18> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0xa28cc20 <col:16, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa28cc08 <col:16, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0xa28b6e0 'operator+' 'const_iterator (difference_type) const'))
            (DeclRefExpr 0xa28cbc8 <col:12> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0xa28cac0 '__x' 'const struct std::_Bit_const_iterator &')
            (ImplicitCastExpr 0xa28cbf8 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa28cbe0 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0xa28ca70 '__n' 'ptrdiff_t':'int'))))))))


    inline void __fill_bvector(std::_Bit_iterator __first, std::_Bit_iterator __last, bool __x) (CompoundStmt 0xa28d0a8 </usr/include/c++/4.6/bits/stl_bvector.h:357:3, line:360:3>
  (ForStmt 0xa28d080 <line:358:5, line:359:18>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa28ced8 <line:358:12, col:23> '_Bool'
      (ImplicitCastExpr 0xa28cec8 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa28ceb0 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa286e10 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa28cea0 <col:12> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa28ce4c <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28ccd0 '__first' 'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa28ce90 <col:23> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa28ce80 <col:23> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa28ce64 <col:23> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28cd10 '__last' 'struct std::_Bit_iterator'))))
    (CXXOperatorCallExpr 0xa28cf78 <col:31, col:33> 'iterator':'struct std::_Bit_iterator' lvalue
      (ImplicitCastExpr 0xa28cf68 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa28cf18 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa288d30 'operator++' 'iterator &(void)'))
      (DeclRefExpr 0xa28cefc <col:33> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28ccd0 '__first' 'struct std::_Bit_iterator'))
    (CXXOperatorCallExpr 0xa28d058 <line:359:7, col:18> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0xa28d048 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa28d030 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa285270 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (CXXOperatorCallExpr 0xa28cfe8 <col:7, col:8> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa28cfd8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa28cfc0 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa288c30 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa28cfb0 <col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa28cf98 <col:8> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28ccd0 '__first' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0xa28d020 <col:18> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa28d008 <col:18> '_Bool' lvalue ParmVar 0xa28cd50 '__x' '_Bool')))))


    inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__x) (CompoundStmt 0xa28de90 </usr/include/c++/4.6/bits/stl_bvector.h:364:3, line:373:3>
  (IfStmt 0xa28de70 <line:365:5, line:372:42>
    <<<NULL>>>
    (BinaryOperator 0xa28d330 <line:365:9, col:32> '_Bool' '!='
      (ImplicitCastExpr 0xa28d310 <col:9, col:17> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa28d2a8 <col:9, col:17> '_Bit_type *' lvalue ._M_p 0xa2867d0
          (ImplicitCastExpr 0xa28d298 <col:9> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0xa28d27c <col:9> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28d0d0 '__first' 'struct std::_Bit_iterator'))))
      (ImplicitCastExpr 0xa28d320 <col:25, col:32> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa28d2f0 <col:25, col:32> '_Bit_type *' lvalue ._M_p 0xa2867d0
          (ImplicitCastExpr 0xa28d2e0 <col:25> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0xa28d2c8 <col:25> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28d110 '__last' 'struct std::_Bit_iterator')))))
    (CompoundStmt 0xa28dd00 <line:366:7, line:370:7>
      (CallExpr 0xa28d868 <line:367:2, col:55> 'void'
        (ImplicitCastExpr 0xa28d858 <col:2, col:7> 'void (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa28d7f8 <col:2, col:7> 'void (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa28d730 'fill' 'void (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x9e9fa80 'fill')))
        (BinaryOperator 0xa28d418 <col:12, col:27> '_Bit_type *' '+'
          (ImplicitCastExpr 0xa28d408 <col:12, col:20> '_Bit_type *' <LValueToRValue>
            (MemberExpr 0xa28d3d0 <col:12, col:20> '_Bit_type *' lvalue ._M_p 0xa2867d0
              (ImplicitCastExpr 0xa28d3c0 <col:12> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                (DeclRefExpr 0xa28d3a8 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28d0d0 '__first' 'struct std::_Bit_iterator'))))
          (IntegerLiteral 0xa28d3f0 <col:27> 'int' 1))
        (ImplicitCastExpr 0xa28d890 <col:30, col:37> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa28d458 <col:30, col:37> '_Bit_type *' lvalue ._M_p 0xa2867d0
            (ImplicitCastExpr 0xa28d448 <col:30> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa28d430 <col:30> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28d110 '__last' 'struct std::_Bit_iterator'))))
        (MaterializeTemporaryExpr 0xa28d8a0 <col:43, col:54> 'const int':'const int' lvalue
          (ConditionalOperator 0xa28d4e8 <col:43, col:54> 'int'
            (ImplicitCastExpr 0xa28d4d8 <col:43> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa28d478 <col:43> 'const _Bool' lvalue ParmVar 0xa28d180 '__x' 'const _Bool &'))
            (UnaryOperator 0xa28d4a8 <col:49, col:50> 'int' prefix '~'
              (IntegerLiteral 0xa28d490 <col:50> 'int' 0))
            (IntegerLiteral 0xa28d4c0 <col:54> 'int' 0))))
      (CallExpr 0xa28da48 <line:368:2, col:65> 'void'
        (ImplicitCastExpr 0xa28da38 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa28da00 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa28cde0 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0xa28da80 <col:17> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa28da70 <col:17> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa28d8e4 <col:17> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28d0d0 '__first' 'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa28dac8 <col:26, col:59> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa28dab8 <col:26, col:59> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa28daa8 <col:26, col:59> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0xa28d9b8 <col:26, col:59> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (BinaryOperator 0xa28d978 <col:40, col:55> '_Bit_type *' '+'
                  (ImplicitCastExpr 0xa28d968 <col:40, col:48> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0xa28d930 <col:40, col:48> '_Bit_type *' lvalue ._M_p 0xa2867d0
                      (ImplicitCastExpr 0xa28d920 <col:40> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                        (DeclRefExpr 0xa28d908 <col:40> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28d0d0 '__first' 'struct std::_Bit_iterator'))))
                  (IntegerLiteral 0xa28d950 <col:55> 'int' 1))
                (ImplicitCastExpr 0xa28d9a8 <col:58> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa28d990 <col:58> 'int' 0))))))
        (ImplicitCastExpr 0xa28daf0 <col:62> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa28d9e8 <col:62> 'const _Bool' lvalue ParmVar 0xa28d180 '__x' 'const _Bool &')))
      (CallExpr 0xa28dc48 <line:369:2, col:59> 'void'
        (ImplicitCastExpr 0xa28dc38 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa28dc20 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa28cde0 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0xa28dc90 <col:17, col:45> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa28dc80 <col:17, col:45> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa28dc70 <col:17, col:45> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0xa28dbc0 <col:17, col:45> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (ImplicitCastExpr 0xa28dba0 <col:31, col:38> '_Bit_type *' <LValueToRValue>
                  (MemberExpr 0xa28db68 <col:31, col:38> '_Bit_type *' lvalue ._M_p 0xa2867d0
                    (ImplicitCastExpr 0xa28db58 <col:31> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (DeclRefExpr 0xa28db40 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28d110 '__last' 'struct std::_Bit_iterator'))))
                (ImplicitCastExpr 0xa28dbb0 <col:44> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa28db88 <col:44> 'int' 0))))))
        (CXXConstructExpr 0xa28dcc8 <col:48> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa28dcb8 <col:48> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa28dbf0 <col:48> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28d110 '__last' 'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa28dcf0 <col:56> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa28dc08 <col:56> 'const _Bool' lvalue ParmVar 0xa28d180 '__x' 'const _Bool &'))))
    (CallExpr 0xa28ddc8 <line:372:7, col:42> 'void'
      (ImplicitCastExpr 0xa28ddb8 <col:7> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa28dd9c <col:7> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa28cde0 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
      (CXXConstructExpr 0xa28de00 <col:22> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa28ddf0 <col:22> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa28dd54 <col:22> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28d0d0 '__first' 'struct std::_Bit_iterator')))
      (CXXConstructExpr 0xa28de38 <col:31> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa28de28 <col:31> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa28dd6c <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0xa28d110 '__last' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0xa28de60 <col:39> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa28dd84 <col:39> 'const _Bool' lvalue ParmVar 0xa28d180 '__x' 'const _Bool &')))))


    template <typename _Alloc> struct _Bvector_base {
        struct _Bvector_base;
        typedef typename _Alloc::_Alloc::rebind<_Bit_type>::other _Bit_alloc_type;
        struct _Bvector_impl : public _Bit_alloc_type {
            struct _Bvector_impl;
            std::_Bit_iterator _M_start;
            std::_Bit_iterator _M_finish;
            _Bit_type *_M_end_of_storage;
            _Bvector_impl() : _Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0xa28eef8 </usr/include/c++/4.6/bits/stl_bvector.h:389:66> 'int' 0)
) (CompoundStmt 0xa28ef68 </usr/include/c++/4.6/bits/stl_bvector.h:390:2, col:4>)


            _Bvector_impl(const _Bit_alloc_type &__a) : _Bit_alloc_type((DeclRefExpr 0xa28ef78 </usr/include/c++/4.6/bits/stl_bvector.h:393:20> 'const _Bit_alloc_type':'const typename _Alloc::_Alloc::rebind<_Bit_type>::other' lvalue ParmVar 0xa28e5e0 '__a' 'const _Bit_alloc_type &')
), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0xa28f078 </usr/include/c++/4.6/bits/stl_bvector.h:393:69> 'int' 0)
) (CompoundStmt 0xa28f0e8 </usr/include/c++/4.6/bits/stl_bvector.h:394:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Bit_alloc_type &_M_get_Bit_allocator() (CompoundStmt 0xa28f248 </usr/include/c++/4.6/bits/stl_bvector.h:402:7, col:64>
  (ReturnStmt 0xa28f238 <col:9, col:61>
    (UnaryOperator 0xa28f220 <col:16, col:61> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa28f208 <col:17, col:61> '_Bit_alloc_type *' static_cast<_Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa28f1a0 <col:47, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa28f160 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
          (CXXDependentScopeMemberExpr 0xa28f128 <col:48, col:54> '<dependent type>' lvalue
            (CXXThisExpr 0xa28f118 <col:48> '_Bvector_base<_Alloc> *' this)))))))


        const _Bit_alloc_type &_M_get_Bit_allocator() const (CompoundStmt 0xa28f3a8 </usr/include/c++/4.6/bits/stl_bvector.h:406:7, col:70>
  (ReturnStmt 0xa28f398 <col:9, col:67>
    (UnaryOperator 0xa28f380 <col:16, col:67> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa28f368 <col:17, col:67> 'const _Bit_alloc_type *' static_cast<const _Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa28f300 <col:53, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa28f2c0 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
          (CXXDependentScopeMemberExpr 0xa28f288 <col:54, col:60> '<dependent type>' lvalue
            (CXXThisExpr 0xa28f278 <col:54> 'const _Bvector_base<_Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0xa28f468 </usr/include/c++/4.6/bits/stl_bvector.h:410:7, col:56>
  (ReturnStmt 0xa28f458 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0xa28f438 <col:16, col:53> 'allocator_type':'_Alloc'
      (CallExpr 0xa28f418 <col:31, col:52> '<dependent type>'
        (UnresolvedMemberExpr 0xa28f3d8 <col:31> '<bound member function type>' lvalue)))))


        _Bvector_base<_Alloc>() : _M_impl() (CompoundStmt 0xa28f4c0 </usr/include/c++/4.6/bits/stl_bvector.h:413:19, col:21>)


        _Bvector_base<_Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0xa28f4d0 </usr/include/c++/4.6/bits/stl_bvector.h:416:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa28ea80 '__a' 'const allocator_type &')
) (CompoundStmt 0xa28f530 </usr/include/c++/4.6/bits/stl_bvector.h:416:22, col:24>)


        void ~_Bvector_base<_Alloc>() (CompoundStmt 0xa28f5a8 </usr/include/c++/4.6/bits/stl_bvector.h:432:7, col:32>
  (CallExpr 0xa28f588 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa28f550 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa28f540 <col:9> '_Bvector_base<_Alloc> *' this))))


    protected:
    protected:
        std::_Bvector_base::_Bvector_impl _M_impl;
        _Bit_type *_M_allocate(size_t __n) (CompoundStmt 0xa28f7c8 </usr/include/c++/4.6/bits/stl_bvector.h:439:7, line:440:26>
  (ReturnStmt 0xa28f7b8 <line:439:9, line:440:23>
    (CallExpr 0xa28f798 <line:439:16, line:440:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa28f5f0 <line:439:16, col:24> '<dependent type>' lvalue
        (MemberExpr 0xa28f5d0 <col:16> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa28ec60
          (CXXThisExpr 0xa28f5c0 <col:16> '_Bvector_base<_Alloc> *' this)))
      (BinaryOperator 0xa28f780 <col:33, line:440:22> 'unsigned int' '/'
        (ParenExpr 0xa28f708 <line:439:33, col:60> 'unsigned int'
          (BinaryOperator 0xa28f6f0 <col:34, col:59> 'unsigned int' '-'
            (BinaryOperator 0xa28f6b0 <col:34, col:55> 'unsigned int' '+'
              (ImplicitCastExpr 0xa28f690 <col:34> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa28f624 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa28eca0 '__n' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa28f6a0 <col:40, col:55> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa28f678 <col:40, col:55> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa28f668 <col:44> 'int' <IntegralCast>
                    (DeclRefExpr 0xa28f64c <col:44> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
            (ImplicitCastExpr 0xa28f6e0 <col:59> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa28f6c8 <col:59> 'int' 1))))
        (ImplicitCastExpr 0xa28f770 <line:440:7, col:22> 'unsigned int' <IntegralCast>
          (CXXFunctionalCastExpr 0xa28f758 <col:7, col:22> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0xa28f748 <col:11> 'int' <IntegralCast>
              (DeclRefExpr 0xa28f72c <col:11> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))


        void _M_deallocate() (CompoundStmt 0xa28fb40 </usr/include/c++/4.6/bits/stl_bvector.h:444:7, line:448:7>
  (IfStmt 0xa28fb20 <line:445:2, line:447:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa28f848 <line:445:6, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa28f810 <col:6, col:14> '<dependent type>' lvalue
        (MemberExpr 0xa28f7f0 <col:6> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa28ec60
          (CXXThisExpr 0xa28f7e0 <col:6> '_Bvector_base<_Alloc> *' this))))
    (CallExpr 0xa28faf8 <line:446:4, line:447:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa28f8b0 <line:446:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0xa28f890 <col:4> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa28ec60
          (CXXThisExpr 0xa28f880 <col:4> '_Bvector_base<_Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa28f950 <col:23, col:40> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa28f918 <col:23, col:31> '<dependent type>' lvalue
          (MemberExpr 0xa28f8f8 <col:23> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa28ec60
            (CXXThisExpr 0xa28f8e8 <col:23> '_Bvector_base<_Alloc> *' this))))
      (CXXOperatorCallExpr 0xa28fad0 <line:447:9, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa28fa90 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa288530 0x9e712e0 0x9e74180)
        (CXXDependentScopeMemberExpr 0xa28f9b8 <col:9, col:17> '<dependent type>' lvalue
          (MemberExpr 0xa28f998 <col:9> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa28ec60
            (CXXThisExpr 0xa28f988 <col:9> '_Bvector_base<_Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa28fa58 <col:37, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa28fa20 <col:37, col:45> '<dependent type>' lvalue
            (MemberExpr 0xa28fa00 <col:37> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa28ec60
              (CXXThisExpr 0xa28f9f0 <col:37> '_Bvector_base<_Alloc> *' this))))))
    <<<NULL>>>))


    };
}
namespace std {
    class vector : protected _Bvector_base<_Alloc> {
        class vector;
        typedef _Bvector_base<_Alloc> _Base;
    public:
    public:
        typedef bool value_type;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::_Bit_reference reference;
        typedef bool const_reference;
        typedef std::_Bit_reference *pointer;
        typedef const bool *const_pointer;
        typedef std::_Bit_iterator iterator;
        typedef std::_Bit_const_iterator const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef _Alloc allocator_type;
        allocator_type get_allocator() const (CompoundStmt 0xa29a570 </usr/include/c++/4.6/bits/stl_bvector.h:502:5, col:38>
  (ReturnStmt 0xa29a560 <col:7, col:35>
    (CallExpr 0xa29a540 <col:14, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29a508 <col:14, col:21> '<dependent type>' lvalue))))


    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Bool, type-parameter-0-0>() : _Base() (CompoundStmt 0xa29a5d0 </usr/include/c++/4.6/bits/stl_bvector.h:511:15, col:17>)


        vector<_Bool, type-parameter-0-0>(const allocator_type &__a) : _Base((DeclRefExpr 0xa29a5e0 </usr/include/c++/4.6/bits/stl_bvector.h:515:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa290a90 '__a' 'const allocator_type &')
) (CompoundStmt 0xa29a640 </usr/include/c++/4.6/bits/stl_bvector.h:515:18, col:20>)


        vector<_Bool, type-parameter-0-0>(size_type __n, const bool &__value = (MaterializeTemporaryExpr 0xa29a440 </usr/include/c++/4.6/bits/stl_bvector.h:518:49, col:54> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0xa29a430 <col:49, col:54> '_Bool'))
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa29a458 </usr/include/c++/4.6/bits/stl_bvector.h:519:33, col:48> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa29a650 </usr/include/c++/4.6/bits/stl_bvector.h:520:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa290c40 '__a' 'const allocator_type &')
) (CompoundStmt 0xa29a980 </usr/include/c++/4.6/bits/stl_bvector.h:521:5, line:525:5>
  (CallExpr 0xa29a710 <line:522:7, col:24> '<dependent type>'
    (MemberExpr 0xa29a6d8 <col:7> '<bound member function type>' ->_M_initialize 0xa293620
      (CXXThisExpr 0xa29a6c8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa29a6f8 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa290ba0 '__n' 'size_type':'unsigned int'))
  (CallExpr 0xa29a958 <line:523:7, line:524:19> '<dependent type>'
    (UnresolvedLookupExpr 0xa29a758 <line:523:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9fa80 0xa28d210)
    (CXXDependentScopeMemberExpr 0xa29a810 <col:17, col:40> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa29a7d8 <col:17, col:31> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa29a7a0 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa29a790 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa29a890 <col:46, col:60> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa29a858 <col:46, col:52> '<dependent type>' lvalue
        (CXXThisExpr 0xa29a848 <col:46> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa29a938 <line:524:3, col:18> 'int'
      (ImplicitCastExpr 0xa29a928 <col:3> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa29a8c4 <col:3> 'const _Bool' lvalue ParmVar 0xa290bf0 '__value' 'const _Bool &'))
      (UnaryOperator 0xa29a8f8 <col:13, col:14> 'int' prefix '~'
        (IntegerLiteral 0xa29a8e0 <col:14> 'int' 0))
      (IntegerLiteral 0xa29a910 <col:18> 'int' 0))))


        vector<_Bool, type-parameter-0-0>(const vector<bool, type-parameter-0-0> &__x) : _Base((CallExpr 0xa29a9e8 </usr/include/c++/4.6/bits/stl_bvector.h:528:13, col:38> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa29a9b0 <col:13, col:17> '<dependent type>' lvalue
    (DeclRefExpr 0xa29a998 <col:13> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa290db0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
) (CompoundStmt 0xa29acc8 </usr/include/c++/4.6/bits/stl_bvector.h:529:5, line:532:5>
  (CallExpr 0xa29aaf0 <line:530:7, col:31> '<dependent type>'
    (MemberExpr 0xa29aa60 <col:7> '<bound member function type>' ->_M_initialize 0xa293620
      (CXXThisExpr 0xa29aa50 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa29aad0 <col:21, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29aa98 <col:21, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0xa29aa80 <col:21> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa290db0 '__x' 'const vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa29aca0 <line:531:7, col:69> '<dependent type>'
    (MemberExpr 0xa29ab20 <col:7> '<bound member function type>' ->_M_copy_aligned 0xa293550
      (CXXThisExpr 0xa29ab10 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa29ab90 <col:23, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29ab58 <col:23, col:27> '<dependent type>' lvalue
        (DeclRefExpr 0xa29ab40 <col:23> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa290db0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CallExpr 0xa29ac00 <col:36, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa29abc8 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0xa29abac <col:36> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa290db0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CXXDependentScopeMemberExpr 0xa29ac68 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa29ac30 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0xa29ac20 <col:47> 'vector<_Bool, type-parameter-0-0> *' this)))))


        template <typename _InputIterator> vector<_Bool, type-parameter-0-0>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa29a478 </usr/include/c++/4.6/bits/stl_bvector.h:549:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa29ace0 </usr/include/c++/4.6/bits/stl_bvector.h:550:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa290f90 '__a' 'const allocator_type &')
) (CompoundStmt 0xa29af58 </usr/include/c++/4.6/bits/stl_bvector.h:551:7, line:554:7>
  (DeclStmt 0xa29ae70 <line:552:2, col:70>
    0xa29ae40 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa29af30 <line:553:2, col:53> '<dependent type>'
    (UnresolvedMemberExpr 0xa29ae90 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa29aed0 <col:25> '_InputIterator' lvalue ParmVar 0xa290f00 '__first' '_InputIterator')
    (DeclRefExpr 0xa29aee8 <col:34> '_InputIterator' lvalue ParmVar 0xa290f40 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa29af18 <col:42, col:52> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Bool, type-parameter-0-0>() (CompoundStmt 0xa29af70 </usr/include/c++/4.6/bits/stl_bvector.h:556:15, col:17>)


        vector<bool, type-parameter-0-0> &operator=(const vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa29b5f8 </usr/include/c++/4.6/bits/stl_bvector.h:560:5, line:571:5>
  (IfStmt 0xa29b0c8 <line:561:7, line:562:10>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa29b068 <line:561:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa29b008 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110 0xa27e240)
      (CXXOperatorCallExpr 0xa29afd8 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa29af98 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (DeclRefExpr 0xa29af80 <col:12> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa2911b0 '__x' 'const vector<_Bool, type-parameter-0-0> &'))
      (CXXThisExpr 0xa29aff8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
    (ReturnStmt 0xa29b0b8 <line:562:2, col:10>
      (UnaryOperator 0xa29b0a0 <col:9, col:10> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa29b090 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
    <<<NULL>>>)
  (IfStmt 0xa29b360 <line:563:7, line:567:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa29b1f8 <line:563:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa29b1a8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40 0xa283a30)
      (CallExpr 0xa29b138 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29b100 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa29b0e4 <col:11> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa2911b0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa29b188 <col:24, col:33> '<dependent type>'
        (MemberExpr 0xa29b168 <col:24> '<bound member function type>' ->capacity 0xa291be0
          (CXXThisExpr 0xa29b158 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa29b348 <line:564:2, line:567:2>
      (CallExpr 0xa29b268 <line:565:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29b230 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa29b220 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CallExpr 0xa29b328 <line:566:4, col:28> '<dependent type>'
        (MemberExpr 0xa29b298 <col:4> '<bound member function type>' ->_M_initialize 0xa293620
          (CXXThisExpr 0xa29b288 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CallExpr 0xa29b308 <col:18, col:27> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa29b2d0 <col:18, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa29b2b8 <col:18> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa2911b0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))))
    <<<NULL>>>)
  (BinaryOperator 0xa29b5a8 <line:568:7, line:569:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa29b3c8 <line:568:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa29b390 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa29b380 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CallExpr 0xa29b580 <col:33, line:569:14> '<dependent type>'
      (MemberExpr 0xa29b410 <line:568:33> '<bound member function type>' ->_M_copy_aligned 0xa293550
        (CXXThisExpr 0xa29b400 <col:33> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa29b480 <col:49, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29b448 <col:49, col:53> '<dependent type>' lvalue
          (DeclRefExpr 0xa29b430 <col:49> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa2911b0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa29b4f0 <col:62, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa29b4b8 <col:62, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0xa29b49c <col:62> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa2911b0 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa29b560 <line:569:7, col:13> '<dependent type>'
        (UnresolvedMemberExpr 0xa29b520 <col:7> '<bound member function type>' lvalue))))
  (ReturnStmt 0xa29b5e8 <line:570:7, col:15>
    (UnaryOperator 0xa29b5d0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa29b5c0 <col:15> 'vector<_Bool, type-parameter-0-0> *' this))))


        void assign(size_type __n, const bool &__x) (CompoundStmt 0xa29b6a0 </usr/include/c++/4.6/bits/stl_bvector.h:598:5, col:33>
  (CallExpr 0xa29b678 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa29b628 <col:7> '<bound member function type>' ->_M_fill_assign 0xa298fd0
      (CXXThisExpr 0xa29b618 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa29b648 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa2912c0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa29b660 <col:27> 'const _Bool' lvalue ParmVar 0xa291310 '__x' 'const _Bool &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa29b8c8 </usr/include/c++/4.6/bits/stl_bvector.h:603:7, line:606:7>
  (DeclStmt 0xa29b7e0 <line:604:2, col:70>
    0xa29b7b0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa29b8a0 <line:605:2, col:49> '<dependent type>'
    (UnresolvedMemberExpr 0xa29b800 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa29b840 <col:21> '_InputIterator' lvalue ParmVar 0xa291480 '__first' '_InputIterator')
    (DeclRefExpr 0xa29b858 <col:30> '_InputIterator' lvalue ParmVar 0xa2914c0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa29b888 <col:38, col:48> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator begin() (CompoundStmt 0xa29b970 </usr/include/c++/4.6/bits/stl_bvector.h:616:5, col:38>
  (ReturnStmt 0xa29b960 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa29b928 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa29b8f0 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa29b8e0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator begin() const (CompoundStmt 0xa29ba18 </usr/include/c++/4.6/bits/stl_bvector.h:620:5, col:38>
  (ReturnStmt 0xa29ba08 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa29b9d0 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa29b998 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa29b988 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        iterator end() (CompoundStmt 0xa29bac0 </usr/include/c++/4.6/bits/stl_bvector.h:624:5, col:39>
  (ReturnStmt 0xa29bab0 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa29ba78 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa29ba40 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa29ba30 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator end() const (CompoundStmt 0xa29bb68 </usr/include/c++/4.6/bits/stl_bvector.h:628:5, col:39>
  (ReturnStmt 0xa29bb58 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa29bb20 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa29bae8 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa29bad8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        reverse_iterator rbegin() (CompoundStmt 0xa29eaf0 </usr/include/c++/4.6/bits/stl_bvector.h:632:5, col:39>
  (ReturnStmt 0xa29eae0 <col:7, col:36>
    (CXXConstructExpr 0xa29eab8 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa29eaa8 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa29ea98 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa29e868 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa29e848 <col:31, col:35> '<dependent type>'
              (UnresolvedMemberExpr 0xa29e808 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa2a6fc0 </usr/include/c++/4.6/bits/stl_bvector.h:636:5, col:45>
  (ReturnStmt 0xa2a6fb0 <col:7, col:42>
    (CXXConstructExpr 0xa2a6f88 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa2a6f78 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa2a6f68 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa2a6d38 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa2a6d18 <col:37, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa2a6cd8 <col:37> '<bound member function type>' lvalue))))))))


        reverse_iterator rend() (CompoundStmt 0xa2a7118 </usr/include/c++/4.6/bits/stl_bvector.h:640:5, col:41>
  (ReturnStmt 0xa2a7108 <col:7, col:38>
    (CXXConstructExpr 0xa2a70e0 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa2a70d0 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa2a70c0 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa2a7050 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa2a7030 <col:31, col:37> '<dependent type>'
              (UnresolvedMemberExpr 0xa2a6ff0 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rend() const (CompoundStmt 0xa2a7270 </usr/include/c++/4.6/bits/stl_bvector.h:644:5, col:47>
  (ReturnStmt 0xa2a7260 <col:7, col:44>
    (CXXConstructExpr 0xa2a7238 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa2a7228 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa2a7218 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa2a71a8 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa2a7188 <col:37, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0xa2a7148 <col:37> '<bound member function type>' lvalue))))))))


        size_type size() const (CompoundStmt 0xa2a7408 </usr/include/c++/4.6/bits/stl_bvector.h:666:5, col:42>
  (ReturnStmt 0xa2a73f8 <col:7, col:39>
    (CXXUnresolvedConstructExpr 0xa2a73d8 <col:14, col:39> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa2a73b0 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa2a7370 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
        (CallExpr 0xa2a72e0 <col:24, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa2a72a0 <col:24> '<bound member function type>' lvalue))
        (CallExpr 0xa2a7350 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa2a7310 <col:32> '<bound member function type>' lvalue))))))


        size_type max_size() const (CompoundStmt 0xa2a78e8 </usr/include/c++/4.6/bits/stl_bvector.h:670:5, line:677:5>
  (DeclStmt 0xa2a75e8 <line:671:7, line:673:24>
    0xa2a7430 "const size_type __isize =
      (ImplicitCastExpr 0xa2a75d8 <line:672:2, line:673:23> 'const size_type':'const unsigned int' <IntegralCast>
        (BinaryOperator 0xa2a75c0 <line:672:2, line:673:23> 'int' '+'
          (BinaryOperator 0xa2a7590 <line:672:2, line:673:19> 'int' '-'
            (ImplicitCastExpr 0xa2a7580 <line:672:2, col:48> 'int':'int' <LValueToRValue>
              (DeclRefExpr 0xa2a7510 <col:2, col:48> 'const int':'const int' lvalue Var 0x9fc1530 '__max' 'const int':'const int'))
            (CXXFunctionalCastExpr 0xa2a7568 <line:673:4, col:19> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa2a7558 <col:8> 'int' <IntegralCast>
                (DeclRefExpr 0xa2a753c <col:8> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
          (IntegerLiteral 0xa2a75a8 <col:23> 'int' 1)))")
  (DeclStmt 0xa2a76e8 <line:674:7, col:66>
    0xa2a7600 "const size_type __asize =
      (CallExpr 0xa2a76c8 <col:33, col:65> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2a7690 <col:33, col:56> '<dependent type>' lvalue
          (CallExpr 0xa2a7670 <col:33, col:54> '<dependent type>'
            (UnresolvedMemberExpr 0xa2a7634 <col:33> '<dependent type>' lvalue))))")
  (ReturnStmt 0xa2a78d8 <line:675:7, line:676:46>
    (ParenExpr 0xa2a78c0 <line:675:14, line:676:46> 'unsigned int'
      (ConditionalOperator 0xa2a78a0 <line:675:15, line:676:39> 'unsigned int'
        (BinaryOperator 0xa2a77c0 <line:675:15, col:51> '_Bool' '<='
          (ImplicitCastExpr 0xa2a77b0 <col:15> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa2a76f8 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa2a7600 '__asize' 'const size_type':'const unsigned int'))
          (BinaryOperator 0xa2a7798 <col:26, col:51> 'unsigned int' '/'
            (ImplicitCastExpr 0xa2a7778 <col:26> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa2a7710 <col:26> 'const size_type':'const unsigned int' lvalue Var 0xa2a7430 '__isize' 'const size_type':'const unsigned int'))
            (ImplicitCastExpr 0xa2a7788 <col:36, col:51> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa2a7760 <col:36, col:51> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa2a7750 <col:40> 'int' <IntegralCast>
                  (DeclRefExpr 0xa2a7734 <col:40> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
        (BinaryOperator 0xa2a7860 <line:676:10, col:35> 'unsigned int' '*'
          (ImplicitCastExpr 0xa2a7840 <col:10> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa2a77d8 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa2a7600 '__asize' 'const size_type':'const unsigned int'))
          (ImplicitCastExpr 0xa2a7850 <col:20, col:35> 'unsigned int' <IntegralCast>
            (CXXFunctionalCastExpr 0xa2a7828 <col:20, col:35> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa2a7818 <col:24> 'int' <IntegralCast>
                (DeclRefExpr 0xa2a77fc <col:24> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
        (ImplicitCastExpr 0xa2a7890 <col:39> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa2a7878 <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa2a7430 '__isize' 'const size_type':'const unsigned int'))))))


        size_type capacity() const (CompoundStmt 0xa2a7ad8 </usr/include/c++/4.6/bits/stl_bvector.h:681:5, line:682:22>
  (ReturnStmt 0xa2a7ac8 <line:681:7, line:682:19>
    (CXXUnresolvedConstructExpr 0xa2a7aa8 <line:681:14, line:682:19> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa2a7a80 <line:681:24, line:682:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa2a7a40 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
        (CXXUnresolvedConstructExpr 0xa2a79b0 <line:681:24, col:73> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXDependentScopeMemberExpr 0xa2a7960 <col:39, col:53> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2a7928 <col:39, col:45> '<dependent type>' lvalue
              (CXXThisExpr 0xa2a7918 <col:39> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa2a7998 <col:72> 'int' 0))
        (CallExpr 0xa2a7a20 <line:682:12, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0xa2a79e0 <col:12> '<bound member function type>' lvalue))))))


        bool empty() const (CompoundStmt 0xa2a7c68 </usr/include/c++/4.6/bits/stl_bvector.h:686:5, col:32>
  (ReturnStmt 0xa2a7c58 <col:7, col:29>
    (CXXOperatorCallExpr 0xa2a7c30 <col:14, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa2a7bd0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110 0xa27e240)
      (CallExpr 0xa2a7b40 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa2a7b00 <col:14> '<bound member function type>' lvalue))
      (CallExpr 0xa2a7bb0 <col:25, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0xa2a7b70 <col:25> '<bound member function type>' lvalue)))))


        reference operator[](size_type __n) (CompoundStmt 0xa2a7fc8 </usr/include/c++/4.6/bits/stl_bvector.h:690:5, line:693:5>
  (ReturnStmt 0xa2a7fb8 <line:691:7, line:692:58>
    (CXXConstructExpr 0xa2a7f90 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa2a7f80 <line:691:14, line:692:58> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa2a7f70 <line:691:14, line:692:58> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa2a7f50 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa2a7f40 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa2a7f28 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa288c30 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa2a7f18 <line:691:15, line:692:58> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (CXXUnresolvedConstructExpr 0xa2a7ef8 <line:691:15, line:692:58> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa2a7e30 <line:691:24, line:692:33> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2a7de0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
                  (CXXDependentScopeMemberExpr 0xa2a7d08 <line:691:24, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa2a7cd0 <col:24, col:38> '<dependent type>' lvalue
                      (CXXDependentScopeMemberExpr 0xa2a7c98 <col:24, col:30> '<dependent type>' lvalue
                        (CXXThisExpr 0xa2a7c88 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
                  (BinaryOperator 0xa2a7dc8 <line:692:12, col:33> 'unsigned int' '/'
                    (ImplicitCastExpr 0xa2a7da8 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa2a7d3c <col:12> 'size_type':'unsigned int' lvalue ParmVar 0xa291ce0 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa2a7db8 <col:18, col:33> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa2a7d90 <col:18, col:33> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa2a7d80 <col:22> 'int' <IntegralCast>
                          (DeclRefExpr 0xa2a7d64 <col:22> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
                (BinaryOperator 0xa2a7ee0 <col:36, col:57> 'unsigned int' '%'
                  (ImplicitCastExpr 0xa2a7ec0 <col:36> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa2a7e54 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0xa291ce0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa2a7ed0 <col:42, col:57> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa2a7ea8 <col:42, col:57> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa2a7e98 <col:46> 'int' <IntegralCast>
                        (DeclRefExpr 0xa2a7e7c <col:46> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa2a82e0 </usr/include/c++/4.6/bits/stl_bvector.h:697:5, line:700:5>
  (ReturnStmt 0xa2a82d0 <line:698:7, line:699:57>
    (CXXOperatorCallExpr 0xa2a82b0 <line:698:14, line:699:57> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa2a82a0 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2a8288 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0xa28b0a0 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa2a8278 <line:698:15, line:699:57> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXUnresolvedConstructExpr 0xa2a8258 <line:698:15, line:699:57> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa2a8190 <line:698:30, line:699:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa2a8140 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
            (CXXDependentScopeMemberExpr 0xa2a8068 <line:698:30, col:53> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2a8030 <col:30, col:44> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2a7ff8 <col:30, col:36> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2a7fe8 <col:30> 'const vector<_Bool, type-parameter-0-0> *' this))))
            (BinaryOperator 0xa2a8128 <line:699:11, col:32> 'unsigned int' '/'
              (ImplicitCastExpr 0xa2a8108 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa2a809c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa291e10 '__n' 'size_type':'unsigned int'))
              (ImplicitCastExpr 0xa2a8118 <col:17, col:32> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa2a80f0 <col:17, col:32> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa2a80e0 <col:21> 'int' <IntegralCast>
                    (DeclRefExpr 0xa2a80c4 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
          (BinaryOperator 0xa2a8240 <col:35, col:56> 'unsigned int' '%'
            (ImplicitCastExpr 0xa2a8220 <col:35> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa2a81b4 <col:35> 'size_type':'unsigned int' lvalue ParmVar 0xa291e10 '__n' 'size_type':'unsigned int'))
            (ImplicitCastExpr 0xa2a8230 <col:41, col:56> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa2a8208 <col:41, col:56> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa2a81f8 <col:45> 'int' <IntegralCast>
                  (DeclRefExpr 0xa2a81dc <col:45> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa2a84f0 </usr/include/c++/4.6/bits/stl_bvector.h:705:5, line:708:5>
  (IfStmt 0xa2a84d0 <line:706:7, line:707:65>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2a83c8 <line:706:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa2a8378 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30 0xa2844c0)
      (DeclRefExpr 0xa2a82f4 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa291f70 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa2a8358 <col:18, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2a8320 <col:18, col:24> '<dependent type>' lvalue
          (CXXThisExpr 0xa2a8310 <col:18> 'const vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa2a84a0 <line:707:9, col:65> 'void'
      (ImplicitCastExpr 0xa2a8490 <col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2a8474 <col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e26490 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa2a84c0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa2a8460 <col:24, col:30> 'const char [29]' lvalue
          (StringLiteral 0xa2a8424 </usr/include/c++/4.6/bits/stl_bvector.h:707:34> 'const char [29]' lvalue "vector<bool>::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa2a85f0 </usr/include/c++/4.6/bits/stl_bvector.h:713:5, col:49>
  (CallExpr 0xa2a8550 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa2a8518 <col:7> '<bound member function type>' ->_M_range_check 0xa291ff0
      (CXXThisExpr 0xa2a8508 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa2a8538 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa2920b0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa2a85e0 <col:28, col:46>
    (ArraySubscriptExpr 0xa2a85c8 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa2a8598 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa2a8580 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2a8570 <col:37> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa2a85ac <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa2920b0 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa2a86f0 </usr/include/c++/4.6/bits/stl_bvector.h:717:5, col:49>
  (CallExpr 0xa2a8650 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa2a8618 <col:7> '<bound member function type>' ->_M_range_check 0xa291ff0
      (CXXThisExpr 0xa2a8608 <col:7> 'const vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa2a8638 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa292170 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa2a86e0 <col:28, col:46>
    (ArraySubscriptExpr 0xa2a86c8 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa2a8698 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa2a8680 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2a8670 <col:37> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa2a86ac <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa292170 '__n' 'size_type':'unsigned int'))))


        void reserve(size_type __n);
        reference front() (CompoundStmt 0xa2a87a0 </usr/include/c++/4.6/bits/stl_bvector.h:724:5, col:24>
  (ReturnStmt 0xa2a8790 <col:7, col:21>
    (UnaryOperator 0xa2a8778 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa2a8758 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa2a8718 <col:15> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa2a8850 </usr/include/c++/4.6/bits/stl_bvector.h:728:5, col:24>
  (ReturnStmt 0xa2a8840 <col:7, col:21>
    (UnaryOperator 0xa2a8828 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa2a8808 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa2a87c8 <col:15> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa2a8998 </usr/include/c++/4.6/bits/stl_bvector.h:732:5, col:28>
  (ReturnStmt 0xa2a8988 <col:7, col:25>
    (UnaryOperator 0xa2a8970 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa2a8958 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa2a8930 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa2a88f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
          (CallExpr 0xa2a88b8 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa2a8878 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa2a88d8 <col:24> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa2a8ae0 </usr/include/c++/4.6/bits/stl_bvector.h:736:5, col:28>
  (ReturnStmt 0xa2a8ad0 <col:7, col:25>
    (UnaryOperator 0xa2a8ab8 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa2a8aa0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa2a8a78 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa2a8a38 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
          (CallExpr 0xa2a8a00 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa2a89c0 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa2a8a20 <col:24> 'int' 1))))))


        void data() (CompoundStmt 0xa2a8af8 </usr/include/c++/4.6/bits/stl_bvector.h:744:12, col:14>)


        void push_back(bool __x) (CompoundStmt 0xa2a8ec0 </usr/include/c++/4.6/bits/stl_bvector.h:748:5, line:753:5>
  (IfStmt 0xa2a8ea0 <line:749:7, line:752:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2a8ca0 <line:749:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa2a8c40 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (CXXDependentScopeMemberExpr 0xa2a8b88 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa2a8b50 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2a8b18 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa2a8b08 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa2a8c08 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa2a8bd0 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa2a8bc0 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (BinaryOperator 0xa2a8da8 <line:750:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa2a8d78 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa2a8d60 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa2a8d10 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2a8cd8 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa2a8cc8 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa2a8d8c <col:38> '_Bool' lvalue ParmVar 0xa2925f0 '__x' '_Bool'))
    (CallExpr 0xa2a8e78 <line:752:9, col:33> '<dependent type>'
      (MemberExpr 0xa2a8dd0 <col:9> '<bound member function type>' ->_M_insert_aux 0xa29a170
        (CXXThisExpr 0xa2a8dc0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa2a8e40 <col:23, col:27> '<dependent type>'
        (UnresolvedMemberExpr 0xa2a8e00 <col:23> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa2a8e5c <col:30> '_Bool' lvalue ParmVar 0xa2925f0 '__x' '_Bool'))))


        void swap(vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa2a96c0 </usr/include/c++/4.6/bits/stl_bvector.h:757:5, line:767:5>
  (CallExpr 0xa2a9040 <line:758:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0xa2a8ef8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e55460 0x9e559a0 0x9fdb610 0xa284a60)
    (CXXDependentScopeMemberExpr 0xa2a8f80 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2a8f48 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa2a8f38 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa2a9008 <col:41, col:53> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2a8fd0 <col:41, col:45> '<dependent type>' lvalue
        (DeclRefExpr 0xa2a8fb4 <col:41> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa2926f0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa2a91d0 <line:759:7, col:63> '<dependent type>'
    (UnresolvedLookupExpr 0xa2a9088 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e55460 0x9e559a0 0x9fdb610 0xa284a60)
    (CXXDependentScopeMemberExpr 0xa2a9110 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2a90d8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa2a90c8 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa2a9198 <col:42, col:54> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2a9160 <col:42, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa2a9144 <col:42> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa2926f0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa2a9360 <line:760:7, line:761:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa2a9218 <line:760:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e55460 0x9e559a0 0x9fdb610 0xa284a60)
    (CXXDependentScopeMemberExpr 0xa2a92a0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2a9268 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa2a9258 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa2a9328 <line:761:3, col:15> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2a92f0 <col:3, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa2a92d4 <col:3> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa2926f0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa2a9698 <line:765:7, line:766:61> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2a9598 <line:765:7, line:766:2> '<dependent type>' lvalue)
    (CallExpr 0xa2a9608 <col:11, col:32> '<dependent type>'
      (UnresolvedMemberExpr 0xa2a95cc <col:11> '<dependent type>' lvalue))
    (CallExpr 0xa2a9678 <col:35, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa2a9640 <col:35, col:39> '<dependent type>' lvalue
        (DeclRefExpr 0xa2a9624 <col:35> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa2926f0 '__x' 'vector<_Bool, type-parameter-0-0> &')))))


        static void swap(reference __x, reference __y) (CompoundStmt 0xa2a9900 </usr/include/c++/4.6/bits/stl_bvector.h:772:5, line:776:5>
  (DeclStmt 0xa2a97a8 <line:773:7, col:23>
    0xa2a96f0 "bool __tmp =
      (ImplicitCastExpr 0xa2a9798 <col:20> '_Bool' <UserDefinedConversion>
        (CXXMemberCallExpr 0xa2a9778 <col:20> '_Bool'
          (MemberExpr 0xa2a9758 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa285160
            (ImplicitCastExpr 0xa2a9748 <col:20> 'const struct std::_Bit_reference' lvalue <NoOp>
              (DeclRefExpr 0xa2a9724 <col:20> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa2927e0 '__x' 'reference':'struct std::_Bit_reference')))))")
  (CXXOperatorCallExpr 0xa2a9848 <line:774:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa2a9838 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(const struct std::_Bit_reference &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2a9800 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(const struct std::_Bit_reference &)' lvalue CXXMethod 0xa285390 'operator=' 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'))
    (DeclRefExpr 0xa2a97b8 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa2927e0 '__x' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa2a97f0 <col:13> 'const struct std::_Bit_reference' lvalue <NoOp>
      (DeclRefExpr 0xa2a97d0 <col:13> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa292820 '__y' 'reference':'struct std::_Bit_reference')))
  (CXXOperatorCallExpr 0xa2a98d8 <line:775:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa2a98c8 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2a98b0 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa285270 'operator=' 'struct std::_Bit_reference &(_Bool)'))
    (DeclRefExpr 0xa2a986c <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa292820 '__y' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa2a98a0 <col:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa2a9884 <col:13> '_Bool' lvalue Var 0xa2a96f0 '__tmp' '_Bool'))))


        iterator insert(iterator __position, const bool &__x = (MaterializeTemporaryExpr 0xa29a4a8 </usr/include/c++/4.6/bits/stl_bvector.h:779:51, col:56> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0xa29a498 <col:51, col:56> '_Bool'))
) (CompoundStmt 0xa2aa000 </usr/include/c++/4.6/bits/stl_bvector.h:780:5, line:788:5>
  (DeclStmt 0xa2a9a58 <line:781:7, col:55>
    0xa2a9930 "const difference_type __n =
      (CXXOperatorCallExpr 0xa2a9a30 <col:35, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa2a99f0 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
        (DeclRefExpr 0xa2a9964 <col:35> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa292930 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa2a99d0 <col:48, col:54> '<dependent type>'
          (UnresolvedMemberExpr 0xa2a9990 <col:48> '<bound member function type>' lvalue)))")
  (IfStmt 0xa2a9ed0 <line:782:7, line:786:38>
    <<<NULL>>>
    (BinaryOperator 0xa2a9d38 <line:782:11, line:783:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa2a9c00 <line:782:11, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa2a9ba0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
        (CXXDependentScopeMemberExpr 0xa2a9ae8 <col:11, col:35> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2a9ab0 <col:11, col:25> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2a9a78 <col:11, col:17> '<dependent type>' lvalue
              (CXXThisExpr 0xa2a9a68 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa2a9b68 <col:43, col:57> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2a9b30 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa2a9b20 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXOperatorCallExpr 0xa2a9d10 <line:783:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa2a9cb0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110 0xa27e240)
        (DeclRefExpr 0xa2a9c24 <col:7> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa292930 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa2a9c90 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa2a9c50 <col:21> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa2a9e30 <line:784:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa2a9e00 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa2a9de8 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa2a9d98 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2a9d60 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa2a9d50 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa2a9e14 <col:38> 'const _Bool' lvalue ParmVar 0xa292980 '__x' 'const _Bool &'))
    (CallExpr 0xa2a9ea8 <line:786:9, col:38> '<dependent type>'
      (MemberExpr 0xa2a9e58 <col:9> '<bound member function type>' ->_M_insert_aux 0xa29a170
        (CXXThisExpr 0xa2a9e48 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa2a9e78 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa292930 '__position' 'iterator':'struct std::_Bit_iterator')
      (DeclRefExpr 0xa2a9e90 <col:35> 'const _Bool' lvalue ParmVar 0xa292980 '__x' 'const _Bool &')))
  (ReturnStmt 0xa2a9ff0 <line:787:7, col:24>
    (CXXOperatorCallExpr 0xa2a9fc8 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa2a9f78 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
      (CallExpr 0xa2a9f40 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa2a9f00 <col:14> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa2a9f5c <col:24> 'const difference_type':'const int' lvalue Var 0xa2a9930 '__n' 'const difference_type':'const int'))))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa2aa260 </usr/include/c++/4.6/bits/stl_bvector.h:794:7, line:797:7>
  (DeclStmt 0xa2aa150 <line:795:2, col:70>
    0xa2aa120 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa2aa230 <line:796:2, col:61> '<dependent type>'
    (UnresolvedMemberExpr 0xa2aa170 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa2aa1b0 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa292af0 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa2aa1c8 <col:33> '_InputIterator' lvalue ParmVar 0xa292b30 '__first' '_InputIterator')
    (DeclRefExpr 0xa2aa1e0 <col:42> '_InputIterator' lvalue ParmVar 0xa292b70 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa2aa218 <col:50, col:60> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void insert(iterator __position, size_type __n, const bool &__x) (CompoundStmt 0xa2aa318 </usr/include/c++/4.6/bits/stl_bvector.h:801:5, col:45>
  (CallExpr 0xa2aa2f0 <col:7, col:42> '<dependent type>'
    (MemberExpr 0xa2aa288 <col:7> '<bound member function type>' ->_M_fill_insert 0xa299ae0
      (CXXThisExpr 0xa2aa278 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa2aa2a8 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa292cd0 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa2aa2c0 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa292d10 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa2aa2d8 <col:39> 'const _Bool' lvalue ParmVar 0xa292d60 '__x' 'const _Bool &')))


        void pop_back() (CompoundStmt 0xa2aa3c8 </usr/include/c++/4.6/bits/stl_bvector.h:810:5, col:34>
  (UnaryOperator 0xa2aa3b0 <col:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa2aa378 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2aa340 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa2aa330 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))))


        iterator erase(iterator __position) (CompoundStmt 0xa2aa818 </usr/include/c++/4.6/bits/stl_bvector.h:814:5, line:819:5>
  (IfStmt 0xa2aa700 <line:815:7, line:816:52>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2aa540 <line:815:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa2aa4e0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (CXXOperatorCallExpr 0xa2aa448 <col:11, col:24> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa2aa438 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2aa420 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa289270 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa2aa410 <col:11> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa2aa3dc <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa292f20 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa2aa3f8 <col:24> 'int' 1))
      (CallExpr 0xa2aa4c0 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa2aa480 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa2aa6d8 <line:816:9, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa2aa588 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
      (CXXOperatorCallExpr 0xa2aa628 <col:19, col:32> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa2aa618 <col:30, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2aa600 <col:30, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa289270 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa2aa5f0 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa2aa5c0 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa292f20 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa2aa5d8 <col:32> 'int' 1))
      (CallExpr 0xa2aa6a0 <col:35, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa2aa660 <col:35> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa2aa6bc <col:42> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa292f20 '__position' 'iterator':'struct std::_Bit_iterator'))
    <<<NULL>>>)
  (UnaryOperator 0xa2aa7a0 <line:817:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa2aa768 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2aa730 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa2aa720 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))))
  (ReturnStmt 0xa2aa808 <line:818:7, col:14>
    (CXXConstructExpr 0xa2aa7e0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa2aa7d0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa2aa7b4 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa292f20 '__position' 'iterator':'struct std::_Bit_iterator')))))


        iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa2aaad0 </usr/include/c++/4.6/bits/stl_bvector.h:823:5, line:827:5>
  (IfStmt 0xa2aaa50 <line:824:7, line:825:51>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2aa8c0 <line:824:11, col:22> '_Bool'
      (ImplicitCastExpr 0xa2aa8b0 <col:19, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2aa898 <col:19, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa286e10 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa2aa888 <col:11> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa2aa834 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa293030 '__first' 'iterator':'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa2aa878 <col:22> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa2aa868 <col:22> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa2aa84c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa293070 '__last' 'iterator':'struct std::_Bit_iterator'))))
    (CallExpr 0xa2aaa30 <line:825:2, col:51> '<dependent type>'
      (MemberExpr 0xa2aa8f8 <col:2> '<bound member function type>' ->_M_erase_at_end 0xa29a3c0
        (CXXThisExpr 0xa2aa8e8 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa2aaa08 <col:18, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa2aa930 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
        (DeclRefExpr 0xa2aa968 <col:28> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa293070 '__last' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa2aa9d0 <col:36, col:40> '<dependent type>'
          (UnresolvedMemberExpr 0xa2aa990 <col:36> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa2aa9ec <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa293030 '__first' 'iterator':'struct std::_Bit_iterator')))
    <<<NULL>>>)
  (ReturnStmt 0xa2aaac0 <line:826:7, col:14>
    (CXXConstructExpr 0xa2aaa98 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa2aaa88 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa2aaa6c <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa293030 '__first' 'iterator':'struct std::_Bit_iterator')))))


        void resize(size_type __new_size, bool __x = (CXXScalarValueInitExpr 0xa29a4c0 </usr/include/c++/4.6/bits/stl_bvector.h:830:45, col:50> '_Bool')
) (CompoundStmt 0xa2aaf50 </usr/include/c++/4.6/bits/stl_bvector.h:831:5, line:836:5>
  (IfStmt 0xa2aaf30 <line:832:7, line:835:47>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2aaba0 <line:832:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa2aab50 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70 0xa27ea30)
      (DeclRefExpr 0xa2aaae8 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa293180 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa2aab30 <col:24, col:29> '<dependent type>'
        (MemberExpr 0xa2aab10 <col:24> '<bound member function type>' ->size 0xa291ae0
          (CXXThisExpr 0xa2aab00 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa2aad38 <line:833:9, col:62> '<dependent type>'
      (MemberExpr 0xa2aabd8 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa29a3c0
        (CXXThisExpr 0xa2aabc8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CXXOperatorCallExpr 0xa2aad10 <col:25, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa2aacc0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
        (CallExpr 0xa2aac48 <col:25, col:31> '<dependent type>'
          (UnresolvedMemberExpr 0xa2aac08 <col:25> '<bound member function type>' lvalue))
        (CXXFunctionalCastExpr 0xa2aaca8 <col:35, col:61> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa2aac98 <col:51> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa2aac88 <col:51> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa2aac70 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa293180 '__new_size' 'size_type':'unsigned int'))))))
    (CallExpr 0xa2aaf08 <line:835:9, col:47> '<dependent type>'
      (UnresolvedMemberExpr 0xa2aad68 <col:9> '<bound member function type>' lvalue)
      (CallExpr 0xa2aae00 <col:16, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa2aadc0 <col:16> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa2aaec8 <col:23, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa2aae88 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
        (DeclRefExpr 0xa2aae1c <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa293180 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa2aae68 <col:36, col:41> '<dependent type>'
          (MemberExpr 0xa2aae48 <col:36> '<bound member function type>' ->size 0xa291ae0
            (CXXThisExpr 0xa2aae38 <col:36> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa2aaeec <col:44> '_Bool' lvalue ParmVar 0xa2931c0 '__x' '_Bool'))))


        void flip() (CompoundStmt 0xa2ab2b8 </usr/include/c++/4.6/bits/stl_bvector.h:846:5, line:850:5>
  (ForStmt 0xa2ab290 <line:847:7, line:849:18>
    (DeclStmt 0xa2ab070 <line:847:12, col:57>
      0xa2aaf80 "_Bit_type *__p =
        (CXXDependentScopeMemberExpr 0xa2ab038 <col:30, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2ab000 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2aafc8 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa2aafb8 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2ab178 <line:848:5, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa2ab118 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (DeclRefExpr 0xa2ab080 <col:5> '_Bit_type *' lvalue Var 0xa2aaf80 '__p' '_Bit_type *')
      (CXXDependentScopeMemberExpr 0xa2ab0e0 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa2ab0a8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa2ab098 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (UnaryOperator 0xa2ab1b8 <col:45, col:47> '_Bit_type *' lvalue prefix '++'
      (DeclRefExpr 0xa2ab19c <col:47> '_Bit_type *' lvalue Var 0xa2aaf80 '__p' '_Bit_type *'))
    (BinaryOperator 0xa2ab278 <line:849:9, col:18> '_Bit_type':'unsigned long' lvalue '='
      (UnaryOperator 0xa2ab1f8 <col:9, col:10> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa2ab1e8 <col:10> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa2ab1cc <col:10> '_Bit_type *' lvalue Var 0xa2aaf80 '__p' '_Bit_type *')))
      (UnaryOperator 0xa2ab260 <col:16, col:18> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa2ab250 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
          (UnaryOperator 0xa2ab238 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
            (ImplicitCastExpr 0xa2ab228 <col:18> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa2ab20c <col:18> '_Bit_type *' lvalue Var 0xa2aaf80 '__p' '_Bit_type *'))))))))


        void clear() (CompoundStmt 0xa2ab390 </usr/include/c++/4.6/bits/stl_bvector.h:854:5, col:33>
  (CallExpr 0xa2ab370 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa2ab2e0 <col:7> '<bound member function type>' ->_M_erase_at_end 0xa29a3c0
      (CXXThisExpr 0xa2ab2d0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa2ab350 <col:23, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa2ab310 <col:23> '<bound member function type>' lvalue))))


    protected:
    protected:
        iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator __result) (CompoundStmt 0xa2abe80 </usr/include/c++/4.6/bits/stl_bvector.h:862:5, line:866:5>
  (DeclStmt 0xa2ab8b0 <line:863:7, col:75>
    0xa2ab3c0 "_Bit_type *__q =
      (CallExpr 0xa2ab858 <col:24, col:74> 'unsigned long *':'unsigned long *'
        (ImplicitCastExpr 0xa2ab848 <col:24, col:29> 'unsigned long *(*)(unsigned long *, unsigned long *, unsigned long *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2ab7e8 <col:24, col:29> 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' lvalue Function 0xa2ab720 'copy' 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' (FunctionTemplate 0x9e98550 'copy')))
        (ImplicitCastExpr 0xa2ab880 <col:34, col:42> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa2ab470 <col:34, col:42> '_Bit_type *' lvalue ._M_p 0xa2867d0
            (ImplicitCastExpr 0xa2ab460 <col:34> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa2ab448 <col:34> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa293410 '__first' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa2ab890 <col:48, col:55> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa2ab4b8 <col:48, col:55> '_Bit_type *' lvalue ._M_p 0xa2867d0
            (ImplicitCastExpr 0xa2ab4a8 <col:48> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa2ab490 <col:48> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa293450 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa2ab8a0 <col:61, col:70> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa2ab500 <col:61, col:70> '_Bit_type *' lvalue ._M_p 0xa2867d0
            (ImplicitCastExpr 0xa2ab4f0 <col:61> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa2ab4d8 <col:61> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa293490 '__result' 'iterator':'struct std::_Bit_iterator')))))")
  (ReturnStmt 0xa2abe70 <line:864:7, line:865:26>
    (CXXConstructExpr 0xa2abe48 <line:864:14, line:865:26> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa2abe38 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa2abe28 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' <NoOp>
          (CallExpr 0xa2abd38 <line:864:14, line:865:26> 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa2abd28 <line:864:14, col:19> 'struct std::_Bit_iterator (*)(struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa2abcc8 <col:14, col:19> 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' lvalue Function 0xa2abc00 'copy' 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' (FunctionTemplate 0x9e98550 'copy')))
            (CXXConstructExpr 0xa2abd80 <col:24, col:53> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa2abd70 <col:24, col:53> 'const struct std::_Bit_const_iterator' lvalue
                (ImplicitCastExpr 0xa2abd60 <col:24, col:53> 'const struct std::_Bit_const_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa2ab998 <col:24, col:53> 'const_iterator':'struct std::_Bit_const_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa2ab978 <col:39, col:46> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa2ab940 <col:39, col:46> '_Bit_type *' lvalue ._M_p 0xa2867d0
                        (ImplicitCastExpr 0xa2ab930 <col:39> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                          (DeclRefExpr 0xa2ab918 <col:39> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa293450 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
                    (ImplicitCastExpr 0xa2ab988 <col:52> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa2ab960 <col:52> 'int' 0))))))
            (CXXConstructExpr 0xa2abdb8 <col:56> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
              (ImplicitCastExpr 0xa2abda8 <col:56> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
                (DeclRefExpr 0xa2ab9c8 <col:56> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa293450 '__last' 'const_iterator':'struct std::_Bit_const_iterator')))
            (CXXConstructExpr 0xa2abe00 <line:865:10, col:25> 'struct std::_Bit_iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa2abdf0 <col:10, col:25> 'const struct std::_Bit_iterator' lvalue
                (ImplicitCastExpr 0xa2abde0 <col:10, col:25> 'const struct std::_Bit_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa2aba38 <col:10, col:25> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa2aba18 <col:19> '_Bit_type *' <LValueToRValue>
                      (DeclRefExpr 0xa2ab9e8 <col:19> '_Bit_type *' lvalue Var 0xa2ab3c0 '__q' '_Bit_type *'))
                    (ImplicitCastExpr 0xa2aba28 <col:24> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa2aba00 <col:24> 'int' 0))))))))))))


        void _M_initialize(size_type __n) (CompoundStmt 0xa2ac4f8 </usr/include/c++/4.6/bits/stl_bvector.h:870:5, line:877:5>
  (DeclStmt 0xa2abf68 <line:871:7, col:46>
    0xa2abeb0 "_Bit_type *__q =
      (CallExpr 0xa2abf48 <col:24, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2abef8 <col:24, col:30> '<dependent type>' lvalue
          (CXXThisExpr 0xa2abee8 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))
        (DeclRefExpr 0xa2abf2c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0xa2935d0 '__n' 'size_type':'unsigned int'))")
  (BinaryOperator 0xa2ac1d8 <line:872:7, line:874:29> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa2abfc0 <line:872:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2abf88 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa2abf78 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ParenExpr 0xa2ac1c0 <col:41, line:874:29> '_Bit_type *'
      (BinaryOperator 0xa2ac1a8 <line:872:42, line:874:28> '_Bit_type *' '+'
        (ImplicitCastExpr 0xa2ac198 <line:872:42> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa2abff4 <col:42> '_Bit_type *' lvalue Var 0xa2abeb0 '__q' '_Bit_type *'))
        (ParenExpr 0xa2ac180 <line:873:9, line:874:28> 'unsigned int'
          (BinaryOperator 0xa2ac168 <line:873:10, line:874:27> 'unsigned int' '/'
            (ParenExpr 0xa2ac0f0 <line:873:10, col:37> 'unsigned int'
              (BinaryOperator 0xa2ac0d8 <col:11, col:36> 'unsigned int' '-'
                (BinaryOperator 0xa2ac098 <col:11, col:32> 'unsigned int' '+'
                  (ImplicitCastExpr 0xa2ac078 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa2ac00c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa2935d0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa2ac088 <col:17, col:32> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa2ac060 <col:17, col:32> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa2ac050 <col:21> 'int' <IntegralCast>
                        (DeclRefExpr 0xa2ac034 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                (ImplicitCastExpr 0xa2ac0c8 <col:36> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa2ac0b0 <col:36> 'int' 1))))
            (ImplicitCastExpr 0xa2ac158 <line:874:12, col:27> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa2ac140 <col:12, col:27> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa2ac130 <col:16> 'int' <IntegralCast>
                  (DeclRefExpr 0xa2ac114 <col:16> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
  (BinaryOperator 0xa2ac2f8 <line:875:7, col:47> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa2ac238 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2ac200 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa2ac1f0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXTemporaryObjectExpr 0xa2ac2c8 <col:32, col:47> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
      (ImplicitCastExpr 0xa2ac2a8 <col:41> '_Bit_type *' <LValueToRValue>
        (DeclRefExpr 0xa2ac278 <col:41> '_Bit_type *' lvalue Var 0xa2abeb0 '__q' '_Bit_type *'))
      (ImplicitCastExpr 0xa2ac2b8 <col:46> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa2ac290 <col:46> 'int' 0))))
  (BinaryOperator 0xa2ac4e0 <line:876:7, col:77> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa2ac358 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2ac320 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa2ac310 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXOperatorCallExpr 0xa2ac4b8 <col:33, col:77> '<dependent type>'
      (UnresolvedLookupExpr 0xa2ac468 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
      (CXXDependentScopeMemberExpr 0xa2ac3d8 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa2ac3a0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa2ac390 <col:33> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CXXFunctionalCastExpr 0xa2ac450 <col:58, col:77> 'difference_type':'int' functional cast to difference_type <NoOp>
        (ImplicitCastExpr 0xa2ac440 <col:74> 'difference_type':'int' <IntegralCast>
          (ImplicitCastExpr 0xa2ac430 <col:74> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa2ac418 <col:74> 'size_type':'unsigned int' lvalue ParmVar 0xa2935d0 '__n' 'size_type':'unsigned int')))))))


        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa2ac7e0 </usr/include/c++/4.6/bits/stl_bvector.h:886:7, line:890:7>
  (CallExpr 0xa2ac580 <line:887:2, col:43> '<dependent type>'
    (MemberExpr 0xa2ac528 <col:2> '<bound member function type>' ->_M_initialize 0xa293620
      (CXXThisExpr 0xa2ac518 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (CXXStaticCastExpr 0xa2ac568 <col:16, col:42> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa2ac548 <col:39> '_Integer' lvalue ParmVar 0xa2936f0 '__n' '_Integer')))
  (CallExpr 0xa2ac7b8 <line:888:2, line:889:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa2ac5c8 <line:888:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9fa80 0xa28d210)
    (CXXDependentScopeMemberExpr 0xa2ac680 <col:12, col:35> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2ac648 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa2ac610 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa2ac600 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa2ac700 <line:889:5, col:19> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2ac6c8 <col:5, col:11> '<dependent type>' lvalue
        (CXXThisExpr 0xa2ac6b8 <col:5> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa2ac798 <col:38, col:49> 'int'
      (DeclRefExpr 0xa2ac734 <col:38> '_Integer' lvalue ParmVar 0xa2982d0 '__x' '_Integer')
      (UnaryOperator 0xa2ac768 <col:44, col:45> 'int' prefix '~'
        (IntegerLiteral 0xa2ac750 <col:45> 'int' 0))
      (IntegerLiteral 0xa2ac780 <col:49> 'int' 0))))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa2ac928 </usr/include/c++/4.6/bits/stl_bvector.h:896:7, line:897:44>
  (CallExpr 0xa2ac900 <line:896:9, line:897:41> '<dependent type>'
    (UnresolvedMemberExpr 0xa2ac808 <line:896:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa2ac848 <col:29> '_InputIterator' lvalue ParmVar 0xa2984a0 '__first' '_InputIterator')
    (DeclRefExpr 0xa2ac860 <col:38> '_InputIterator' lvalue ParmVar 0xa2984e0 '__last' '_InputIterator')
    (CallExpr 0xa2ac8e0 <line:897:8, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa2ac890 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e625d0)
      (DeclRefExpr 0xa2ac8c4 <col:33> '_InputIterator' lvalue ParmVar 0xa2984a0 '__first' '_InputIterator'))))

;
        template <typename _InputIterator> void _M_initialize_range(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa2acad0 </usr/include/c++/4.6/bits/stl_bvector.h:903:7, line:906:7>
  (ForStmt 0xa2acaa8 <line:904:2, line:905:22>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2ac9d0 <line:904:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa2ac970 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (DeclRefExpr 0xa2ac93c <col:9> '_InputIterator' lvalue ParmVar 0xa2986b0 '__first' '_InputIterator')
      (DeclRefExpr 0xa2ac954 <col:20> '_InputIterator' lvalue ParmVar 0xa2986f0 '__last' '_InputIterator'))
    (UnaryOperator 0xa2aca10 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa2ac9f4 <col:30> '_InputIterator' lvalue ParmVar 0xa2986b0 '__first' '_InputIterator'))
    (CallExpr 0xa2aca88 <line:905:4, col:22> '<dependent type>'
      (MemberExpr 0xa2aca38 <col:4> '<bound member function type>' ->push_back 0xa292670
        (CXXThisExpr 0xa2aca28 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (UnaryOperator 0xa2aca70 <col:14, col:15> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa2aca58 <col:15> '_InputIterator' lvalue ParmVar 0xa2986b0 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa2acd80 </usr/include/c++/4.6/bits/stl_bvector.h:912:7, line:916:7>
  (DeclStmt 0xa2acbd0 <line:913:2, col:54>
    0xa2acaf0 "const size_type __n =
      (CallExpr 0xa2acba8 <col:24, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa2acb40 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e66090)
        (DeclRefExpr 0xa2acb74 <col:38> '_ForwardIterator' lvalue ParmVar 0xa298900 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa2acb8c <col:47> '_ForwardIterator' lvalue ParmVar 0xa298940 '__last' '_ForwardIterator'))")
  (CallExpr 0xa2acc28 <line:914:2, col:19> '<dependent type>'
    (MemberExpr 0xa2acbf0 <col:2> '<bound member function type>' ->_M_initialize 0xa293620
      (CXXThisExpr 0xa2acbe0 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa2acc10 <col:16> 'const size_type':'const unsigned int' lvalue Var 0xa2acaf0 '__n' 'const size_type':'const unsigned int'))
  (CallExpr 0xa2acd58 <line:915:2, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa2acc70 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
    (DeclRefExpr 0xa2acca8 <col:12> '_ForwardIterator' lvalue ParmVar 0xa298900 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa2accc0 <col:21> '_ForwardIterator' lvalue ParmVar 0xa298940 '__last' '_ForwardIterator')
    (CXXDependentScopeMemberExpr 0xa2acd20 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2acce8 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa2accd8 <col:29> 'vector<_Bool, type-parameter-0-0> *' this)))))

;
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa2ace28 </usr/include/c++/4.6/bits/stl_bvector.h:923:7, col:37>
  (CallExpr 0xa2ace00 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa2acdb0 <col:9> '<bound member function type>' ->_M_fill_assign 0xa298fd0
      (CXXThisExpr 0xa2acda0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa2acdd0 <col:24> '_Integer' lvalue ParmVar 0xa298b50 '__n' '_Integer')
    (DeclRefExpr 0xa2acde8 <col:29> '_Integer' lvalue ParmVar 0xa298b90 '__val' '_Integer')))

;
        template <class _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa2acf70 </usr/include/c++/4.6/bits/stl_bvector.h:929:7, col:76>
  (CallExpr 0xa2acf48 <col:9, col:73> '<dependent type>'
    (UnresolvedMemberExpr 0xa2ace50 <col:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa2ace90 <col:23> '_InputIterator' lvalue ParmVar 0xa298d60 '__first' '_InputIterator')
    (DeclRefExpr 0xa2acea8 <col:32> '_InputIterator' lvalue ParmVar 0xa298da0 '__last' '_InputIterator')
    (CallExpr 0xa2acf28 <col:40, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa2aced8 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e625d0)
      (DeclRefExpr 0xa2acf0c <col:65> '_InputIterator' lvalue ParmVar 0xa298d60 '__first' '_InputIterator'))))

;
        void _M_fill_assign(size_t __n, bool __x) (CompoundStmt 0xa2b1678 </usr/include/c++/4.6/bits/stl_bvector.h:933:5, line:946:5>
  (IfStmt 0xa2b1658 <line:934:7, line:945:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2ad040 <line:934:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa2acff0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40 0xa283a30)
      (DeclRefExpr 0xa2acf84 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa298f10 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa2acfd0 <col:17, col:22> '<dependent type>'
        (MemberExpr 0xa2acfb0 <col:17> '<bound member function type>' ->size 0xa291ae0
          (CXXThisExpr 0xa2acfa0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa2ad488 <line:935:2, line:939:2>
      (CallExpr 0xa2ad288 <line:936:4, line:937:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa2ad088 <line:936:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9fa80 0xa28d210)
        (CXXDependentScopeMemberExpr 0xa2ad140 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2ad108 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2ad0d0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa2ad0c0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa2ad1c0 <line:937:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2ad188 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa2ad178 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa2ad268 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa2ad258 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa2ad1f4 <col:40> '_Bool' lvalue ParmVar 0xa298f50 '__x' '_Bool'))
          (UnaryOperator 0xa2ad228 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa2ad210 <col:47> 'int' 0))
          (IntegerLiteral 0xa2ad240 <col:51> 'int' 0)))
      (CallExpr 0xa2ad460 <line:938:4, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa2ad2c0 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa2ad358 <col:11, col:15> '<dependent type>'
          (UnresolvedMemberExpr 0xa2ad318 <col:11> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa2ad420 <col:18, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa2ad3e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
          (DeclRefExpr 0xa2ad374 <col:18> 'size_t':'unsigned int' lvalue ParmVar 0xa298f10 '__n' 'size_t':'unsigned int')
          (CallExpr 0xa2ad3c0 <col:24, col:29> '<dependent type>'
            (MemberExpr 0xa2ad3a0 <col:24> '<bound member function type>' ->size 0xa291ae0
              (CXXThisExpr 0xa2ad390 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
        (DeclRefExpr 0xa2ad444 <col:32> '_Bool' lvalue ParmVar 0xa298f50 '__x' '_Bool')))
    (CompoundStmt 0xa2b1640 <line:941:2, line:945:2>
      (CallExpr 0xa2ad5d0 <line:942:4, col:33> '<dependent type>'
        (MemberExpr 0xa2ad4b0 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa29a3c0
          (CXXThisExpr 0xa2ad4a0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CXXOperatorCallExpr 0xa2ad5a8 <col:20, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa2ad558 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
          (CallExpr 0xa2ad520 <col:20, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa2ad4e0 <col:20> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa2ad53c <col:30> 'size_t':'unsigned int' lvalue ParmVar 0xa298f10 '__n' 'size_t':'unsigned int')))
      (CallExpr 0xa2b1618 <line:943:4, line:944:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa2ad618 <line:943:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9fa80 0xa28d210)
        (CXXDependentScopeMemberExpr 0xa2ad6d0 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2ad698 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2ad660 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa2ad650 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa2ad750 <line:944:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2ad718 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa2ad708 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa2ad7f8 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa2ad7e8 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa2ad784 <col:40> '_Bool' lvalue ParmVar 0xa298f50 '__x' '_Bool'))
          (UnaryOperator 0xa2ad7b8 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa2ad7a0 <col:47> 'int' 0))
          (IntegerLiteral 0xa2ad7d0 <col:51> 'int' 0))))))


        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa2b1d20 </usr/include/c++/4.6/bits/stl_bvector.h:952:7, line:960:7>
  (DeclStmt 0xa2b1748 <line:953:2, col:26>
    0xa2b16a0 "iterator __cur =
      (CallExpr 0xa2b1728 <col:19, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0xa2b16e8 <col:19> '<bound member function type>' lvalue))")
  (ForStmt 0xa2b1a98 <line:954:2, line:955:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa2b1920 <line:954:9, col:43> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa2b17e8 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b1788 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
        (DeclRefExpr 0xa2b1758 <col:9> '_InputIterator' lvalue ParmVar 0xa2990a0 '__first' '_InputIterator')
        (DeclRefExpr 0xa2b1770 <col:20> '_InputIterator' lvalue ParmVar 0xa2990e0 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa2b18f8 <col:30, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b1898 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
        (DeclRefExpr 0xa2b180c <col:30> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2b16a0 '__cur' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa2b1878 <col:39, col:43> '<dependent type>'
          (UnresolvedMemberExpr 0xa2b1838 <col:39> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa2b19c8 <col:46, col:57> '<dependent type>' ','
      (CXXOperatorCallExpr 0xa2b1978 <col:46, col:48> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa2b1968 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2b1950 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa288d30 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa2b1938 <col:48> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2b16a0 '__cur' 'iterator':'struct std::_Bit_iterator'))
      (UnaryOperator 0xa2b19b0 <col:55, col:57> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa2b1998 <col:57> '_InputIterator' lvalue ParmVar 0xa2990a0 '__first' '_InputIterator')))
    (BinaryOperator 0xa2b1a80 <line:955:4, col:14> '<dependent type>' '='
      (CXXOperatorCallExpr 0xa2b1a30 <col:4, col:5> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa2b1a20 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2b1a08 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa288c30 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa2b19f8 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa2b19e0 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2b16a0 '__cur' 'iterator':'struct std::_Bit_iterator')))
      (UnaryOperator 0xa2b1a68 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa2b1a50 <col:14> '_InputIterator' lvalue ParmVar 0xa2990a0 '__first' '_InputIterator'))))
  (IfStmt 0xa2b1d00 <line:956:2, line:959:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2b1b50 <line:956:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b1af0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110 0xa27e240)
      (DeclRefExpr 0xa2b1abc <col:6> '_InputIterator' lvalue ParmVar 0xa2990a0 '__first' '_InputIterator')
      (DeclRefExpr 0xa2b1ad4 <col:17> '_InputIterator' lvalue ParmVar 0xa2990e0 '__last' '_InputIterator'))
    (CallExpr 0xa2b1bc0 <line:957:4, col:25> '<dependent type>'
      (MemberExpr 0xa2b1b88 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa29a3c0
        (CXXThisExpr 0xa2b1b78 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa2b1ba8 <col:20> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2b16a0 '__cur' 'iterator':'struct std::_Bit_iterator'))
    (CallExpr 0xa2b1cd8 <line:959:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa2b1bf0 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa2b1c88 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa2b1c48 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa2b1ca4 <col:18> '_InputIterator' lvalue ParmVar 0xa2990a0 '__first' '_InputIterator')
      (DeclRefExpr 0xa2b1cbc <col:27> '_InputIterator' lvalue ParmVar 0xa2990e0 '__last' '_InputIterator'))))

;
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa2b2460 </usr/include/c++/4.6/bits/stl_bvector.h:966:7, line:977:7>
  (DeclStmt 0xa2b1e30 <line:967:2, col:56>
    0xa2b1d50 "const size_type __len =
      (CallExpr 0xa2b1e08 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b1da0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e66090)
        (DeclRefExpr 0xa2b1dd4 <col:40> '_ForwardIterator' lvalue ParmVar 0xa2992d0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa2b1dec <col:49> '_ForwardIterator' lvalue ParmVar 0xa299310 '__last' '_ForwardIterator'))")
  (IfStmt 0xa2b2440 <line:968:2, line:976:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2b1ef8 <line:968:6, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b1ea8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70 0xa27ea30)
      (DeclRefExpr 0xa2b1e40 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa2b1d50 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa2b1e88 <col:14, col:19> '<dependent type>'
        (MemberExpr 0xa2b1e68 <col:14> '<bound member function type>' ->size 0xa291ae0
          (CXXThisExpr 0xa2b1e58 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa2b2068 <line:969:4, col:55> '<dependent type>'
      (MemberExpr 0xa2b1f30 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa29a3c0
        (CXXThisExpr 0xa2b1f20 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa2b2040 <col:20, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b1f68 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
        (DeclRefExpr 0xa2b1fa0 <col:30> '_ForwardIterator' lvalue ParmVar 0xa2992d0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa2b1fb8 <col:39> '_ForwardIterator' lvalue ParmVar 0xa299310 '__last' '_ForwardIterator')
        (CallExpr 0xa2b2020 <col:47, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0xa2b1fe0 <col:47> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa2b2420 <line:971:4, line:976:4>
      (DeclStmt 0xa2b20e0 <line:972:6, col:38>
        0xa2b2090 "_ForwardIterator __mid =
          (DeclRefExpr 0xa2b20c4 <col:31> '_ForwardIterator' lvalue ParmVar 0xa2992d0 '__first' '_ForwardIterator')")
      (CallExpr 0xa2b21b8 <line:973:6, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b2118 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e68820)
        (DeclRefExpr 0xa2b214c <col:19> '_ForwardIterator' lvalue Var 0xa2b2090 '__mid' '_ForwardIterator')
        (CallExpr 0xa2b2198 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa2b2178 <col:26> '<bound member function type>' ->size 0xa291ae0
            (CXXThisExpr 0xa2b2168 <col:26> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CallExpr 0xa2b22d8 <line:974:6, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b2200 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
        (DeclRefExpr 0xa2b2238 <col:16> '_ForwardIterator' lvalue ParmVar 0xa2992d0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa2b2250 <col:25> '_ForwardIterator' lvalue Var 0xa2b2090 '__mid' '_ForwardIterator')
        (CallExpr 0xa2b22b8 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa2b2278 <col:32> '<bound member function type>' lvalue)))
      (CallExpr 0xa2b23f8 <line:975:6, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa2b2310 <col:6> '<bound member function type>' lvalue)
        (CallExpr 0xa2b23a8 <col:13, col:17> '<dependent type>'
          (UnresolvedMemberExpr 0xa2b2368 <col:13> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa2b23c4 <col:20> '_ForwardIterator' lvalue Var 0xa2b2090 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa2b23dc <col:27> '_ForwardIterator' lvalue ParmVar 0xa299310 '__last' '_ForwardIterator')))))

;
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa2b2518 </usr/include/c++/4.6/bits/stl_bvector.h:987:7, col:42>
  (CallExpr 0xa2b24f0 <col:9, col:39> '<dependent type>'
    (MemberExpr 0xa2b2488 <col:9> '<bound member function type>' ->_M_fill_insert 0xa299ae0
      (CXXThisExpr 0xa2b2478 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa2b24a8 <col:24> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa299500 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa2b24c0 <col:31> '_Integer' lvalue ParmVar 0xa299540 '__n' '_Integer')
    (DeclRefExpr 0xa2b24d8 <col:36> '_Integer' lvalue ParmVar 0xa299580 '__x' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa2b2680 </usr/include/c++/4.6/bits/stl_bvector.h:994:7, line:995:40>
  (CallExpr 0xa2b2650 <line:994:9, line:995:37> '<dependent type>'
    (UnresolvedMemberExpr 0xa2b2540 <line:994:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa2b2580 <col:25> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa299780 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa2b2598 <col:32> '_InputIterator' lvalue ParmVar 0xa2997c0 '__first' '_InputIterator')
    (DeclRefExpr 0xa2b25b0 <col:41> '_InputIterator' lvalue ParmVar 0xa299800 '__last' '_InputIterator')
    (CallExpr 0xa2b2630 <line:995:4, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b25e0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e625d0)
      (DeclRefExpr 0xa2b2614 <col:29> '_InputIterator' lvalue ParmVar 0xa2997c0 '__first' '_InputIterator'))))

;
        void _M_fill_insert(iterator __position, size_type __n, bool __x);
        template <typename _InputIterator> void _M_insert_range(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa2b2918 </usr/include/c++/4.6/bits/stl_bvector.h:1004:7, line:1010:7>
  (ForStmt 0xa2b28f0 <line:1005:2, line:1009:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2b2728 <line:1005:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b26c8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (DeclRefExpr 0xa2b2694 <col:9> '_InputIterator' lvalue ParmVar 0xa299bf0 '__first' '_InputIterator')
      (DeclRefExpr 0xa2b26ac <col:20> '_InputIterator' lvalue ParmVar 0xa299c30 '__last' '_InputIterator'))
    (UnaryOperator 0xa2b2768 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa2b274c <col:30> '_InputIterator' lvalue ParmVar 0xa299bf0 '__first' '_InputIterator'))
    (CompoundStmt 0xa2b28d8 <line:1006:4, line:1009:4>
      (BinaryOperator 0xa2b2860 <line:1007:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa2b277c <col:6> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa299bb0 '__pos' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa2b2838 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa2b27a8 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa2b27ec <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa299bb0 '__pos' 'iterator':'struct std::_Bit_iterator')
          (UnaryOperator 0xa2b2820 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa2b2804 <col:29> '_InputIterator' lvalue ParmVar 0xa299bf0 '__first' '_InputIterator'))))
      (CXXOperatorCallExpr 0xa2b28b8 <line:1008:6, col:8> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa2b28a8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2b2890 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa288d30 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa2b2878 <col:8> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa299bb0 '__pos' 'iterator':'struct std::_Bit_iterator')))))

;
        template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_insert_aux(iterator __position, bool __x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa2b3028 </usr/include/c++/4.6/bits/stl_bvector.h:1022:5, line:1028:5>
  (IfStmt 0xa2b2b88 <line:1023:7, line:1024:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2b2aa0 <line:1023:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b2a50 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70 0xa27ea30)
      (CXXOperatorCallExpr 0xa2b2a10 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b29d0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
        (CallExpr 0xa2b2960 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa2b2940 <col:11> '<bound member function type>' ->max_size 0xa291b60
            (CXXThisExpr 0xa2b2930 <col:11> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa2b29b0 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa2b2990 <col:24> '<bound member function type>' ->size 0xa291ae0
            (CXXThisExpr 0xa2b2980 <col:24> 'const vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa2b2a34 <col:33> 'size_type':'unsigned int' lvalue ParmVar 0xa29a1e0 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa2b2b58 <line:1024:2, col:31> 'void'
      (ImplicitCastExpr 0xa2b2b48 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2b2b2c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e22e80 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa2b2b78 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa2b2b18 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa2b2afc </usr/include/c++/4.6/bits/stl_bvector.h:1024:27> 'const char *' lvalue ParmVar 0xa29a230 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa2b2d90 <line:1026:7, col:61>
    0xa2b2bb0 "const size_type __len =
      (CXXOperatorCallExpr 0xa2b2d68 <col:31, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b2d18 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
        (CallExpr 0xa2b2c18 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa2b2bf8 <col:31> '<bound member function type>' ->size 0xa291ae0
            (CXXThisExpr 0xa2b2be8 <col:31> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa2b2cf0 <col:40, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b2c50 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e8f3a0 0x9e8fb10)
          (CallExpr 0xa2b2cb8 <col:49, col:54> '<dependent type>'
            (MemberExpr 0xa2b2c98 <col:49> '<bound member function type>' ->size 0xa291ae0
              (CXXThisExpr 0xa2b2c88 <col:49> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (DeclRefExpr 0xa2b2cd4 <col:57> 'size_type':'unsigned int' lvalue ParmVar 0xa29a1e0 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa2b3018 <line:1027:7, col:68>
    (ConditionalOperator 0xa2b2ff8 <col:14, col:68> '<dependent type>'
      (ParenExpr 0xa2b2f78 <col:14, col:51> '<dependent type>'
        (BinaryOperator 0xa2b2f60 <col:15, col:50> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa2b2e58 <col:15, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa2b2e08 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70 0xa27ea30)
            (DeclRefExpr 0xa2b2da0 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa2b2bb0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa2b2de8 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa2b2dc8 <col:23> '<bound member function type>' ->size 0xa291ae0
                (CXXThisExpr 0xa2b2db8 <col:23> 'const vector<_Bool, type-parameter-0-0> *' this))))
          (CXXOperatorCallExpr 0xa2b2f38 <col:33, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0xa2b2ee8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40 0xa283a30)
            (DeclRefExpr 0xa2b2e7c <col:33> 'const size_type':'const unsigned int' lvalue Var 0xa2b2bb0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa2b2ec8 <col:41, col:50> '<dependent type>'
              (MemberExpr 0xa2b2ea8 <col:41> '<bound member function type>' ->max_size 0xa291b60
                (CXXThisExpr 0xa2b2e98 <col:41> 'const vector<_Bool, type-parameter-0-0> *' this))))))
      (CallExpr 0xa2b2fc0 <col:55, col:64> '<dependent type>'
        (MemberExpr 0xa2b2fa0 <col:55> '<bound member function type>' ->max_size 0xa291b60
          (CXXThisExpr 0xa2b2f90 <col:55> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa2b2fdc <col:68> 'const size_type':'const unsigned int' lvalue Var 0xa2b2bb0 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(iterator __pos) (CompoundStmt 0xa2b30f8 </usr/include/c++/4.6/bits/stl_bvector.h:1032:5, col:40>
  (BinaryOperator 0xa2b30e0 <col:7, col:33> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa2b3090 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2b3058 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa2b3048 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (DeclRefExpr 0xa2b30c4 <col:33> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa29a320 '__pos' 'iterator':'struct std::_Bit_iterator')))


    };
}
namespace std {
    void reserve(size_type __n) (CompoundStmt 0xa2b4330 </usr/include/c++/4.6/bits/vector.tcc:68:5, line:86:5>
  (IfStmt 0xa2b3740 <line:69:7, line:70:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2b3618 <line:69:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b35c8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40 0xa283a30)
      (DeclRefExpr 0xa2b3544 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa2b3460 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa2b35a8 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2b3570 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa2b3560 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa2b3710 <line:70:2, col:45> 'void'
      (ImplicitCastExpr 0xa2b3700 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2b36e4 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e22e80 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa2b3730 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa2b36d0 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa2b36a0 </usr/include/c++/4.6/bits/vector.tcc:70:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa2b4310 <line:71:7, line:85:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2b3830 <line:71:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b37e0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70 0xa27ea30)
      (CallExpr 0xa2b37a8 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2b3770 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa2b3760 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa2b37c4 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa2b3460 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa2b42e0 <line:72:2, line:85:2>
      (DeclStmt 0xa2b38e8 <line:73:4, col:39>
        0xa2b3860 "const size_type __old_size =
          (CallExpr 0xa2b38c8 <col:33, col:38> '<dependent type>'
            (MemberExpr 0xa2b38a8 <col:33> '<bound member function type>' ->size 0xa26b480
              (CXXThisExpr 0xa2b3898 <col:33> 'vector<_Tp, _Alloc> *' this)))")
      (DeclStmt 0xa2b3af8 <line:74:4, line:76:57>
        0xa2b3900 "pointer __tmp =
          (CallExpr 0xa2b3ad0 <line:74:20, line:76:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa2b3948 <line:74:20> '<bound member function type>' lvalue)
            (DeclRefExpr 0xa2b3984 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa2b3460 '__n' 'size_type':'unsigned int')
            (ParenExpr 0xa2b3a20 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2b39e8 </usr/include/c++/4.6/bits/vector.tcc:75:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2b39b0 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2b39a0 <col:32> 'vector<_Tp, _Alloc> *' this))))
            (ParenExpr 0xa2b3ab8 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2b3a80 </usr/include/c++/4.6/bits/vector.tcc:76:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2b3a48 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2b3a38 <col:32> 'vector<_Tp, _Alloc> *' this)))))")
      (CallExpr 0xa2b3cd0 <line:77:4, line:78:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b3b38 <line:77:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (CXXDependentScopeMemberExpr 0xa2b3bc0 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b3b88 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b3b78 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa2b3c40 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b3c08 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b3bf8 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa2b3cb0 <line:78:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa2b3c74 <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa2b3f20 <line:79:4, line:81:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa2b3cf8 <line:79:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa2b3d80 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b3d48 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b3d38 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa2b3ef8 <line:80:4, line:81:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b3eb8 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
          (CXXDependentScopeMemberExpr 0xa2b3e00 <line:80:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2b3dc8 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa2b3db8 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa2b3e80 <line:81:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2b3e48 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa2b3e38 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa2b3fe0 <line:82:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2b3f90 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b3f58 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b3f48 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa2b3fc4 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2b3900 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa2b4120 <line:83:4, col:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2b4040 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b4008 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b3ff8 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa2b40f8 <col:30, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b40a8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
          (DeclRefExpr 0xa2b4074 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2b3900 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa2b408c <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa2b3860 '__old_size' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa2b42c8 <line:84:4, col:63> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2b4180 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b4148 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b4138 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa2b42a0 <col:38, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b4250 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
          (CXXDependentScopeMemberExpr 0xa2b4200 <col:38, col:52> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2b41c8 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0xa2b41b8 <col:38> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa2b4234 <col:63> 'size_type':'unsigned int' lvalue ParmVar 0xa2b3460 '__n' 'size_type':'unsigned int'))))
    <<<NULL>>>))


    typename vector<_Tp, _Alloc>::iterator insert(iterator __position, const value_type &__x) (CompoundStmt 0xa2b51c0 </usr/include/c++/4.6/bits/vector.tcc:110:5, line:131:5>
  (DeclStmt 0xa2b4b08 <line:111:7, col:49>
    0xa2b49e0 "const size_type __n =
      (CXXOperatorCallExpr 0xa2b4ae0 <col:29, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b4aa0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
        (DeclRefExpr 0xa2b4a14 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b4740 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa2b4a80 <col:42, col:48> '<dependent type>'
          (UnresolvedMemberExpr 0xa2b4a40 <col:42> '<bound member function type>' lvalue)))")
  (IfStmt 0xa2b5058 <line:112:7, line:129:2>
    <<<NULL>>>
    (BinaryOperator 0xa2b4db0 <line:112:11, line:113:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa2b4c78 <line:112:11, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b4c18 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
        (CXXDependentScopeMemberExpr 0xa2b4b60 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b4b28 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b4b18 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa2b4be0 <col:38, col:52> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b4ba8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b4b98 <col:38> 'vector<_Tp, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa2b4d88 <line:113:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b4d28 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110 0xa27e240)
        (DeclRefExpr 0xa2b4c9c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b4740 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa2b4d08 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa2b4cc8 <col:21> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa2b4fa0 <line:114:2, line:117:2>
      (CallExpr 0xa2b4ee0 <line:115:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2b4e10 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b4dd8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b4dc8 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa2b4e90 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b4e58 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b4e48 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa2b4ec4 <col:53> 'const value_type':'const _Tp' lvalue ParmVar 0xa2b4790 '__x' 'const value_type &'))
      (UnaryOperator 0xa2b4f88 <line:116:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa2b4f50 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b4f18 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b4f08 <col:6> 'vector<_Tp, _Alloc> *' this)))))
    (CompoundStmt 0xa2b5040 <line:119:2, line:129:2>
      (CallExpr 0xa2b5018 <line:128:6, col:35> '<dependent type>'
        (MemberExpr 0xa2b4fc8 <col:6> '<bound member function type>' ->_M_insert_aux 0xa277a70
          (CXXThisExpr 0xa2b4fb8 <col:6> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa2b4fe8 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b4740 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (DeclRefExpr 0xa2b5000 <col:32> 'const value_type':'const _Tp' lvalue ParmVar 0xa2b4790 '__x' 'const value_type &'))))
  (ReturnStmt 0xa2b51b0 <line:130:7, col:51>
    (CXXUnresolvedConstructExpr 0xa2b5190 <col:14, col:51> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXOperatorCallExpr 0xa2b5168 <col:23, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b5118 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
        (CXXDependentScopeMemberExpr 0xa2b50c8 <col:23, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b5090 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b5080 <col:23> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa2b50fc <col:48> 'const size_type':'const unsigned int' lvalue Var 0xa2b49e0 '__n' 'const size_type':'const unsigned int')))))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __position) (CompoundStmt 0xa2b5d28 </usr/include/c++/4.6/bits/vector.tcc:137:5, line:143:5>
  (IfStmt 0xa2b5b28 <line:138:7, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2b5950 </usr/include/c++/4.6/bits/vector.tcc:138:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b58f0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (CXXOperatorCallExpr 0xa2b5858 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b5808 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
        (DeclRefExpr 0xa2b57d4 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b55a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa2b57f0 <col:24> 'int' 1))
      (CallExpr 0xa2b58d0 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa2b5890 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa2b5b00 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b5998 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
      (CXXOperatorCallExpr 0xa2b5a50 </usr/include/c++/4.6/bits/vector.tcc:139:17, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b5a00 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
        (DeclRefExpr 0xa2b59d0 <col:17> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b55a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa2b59e8 <col:30> 'int' 1))
      (CallExpr 0xa2b5ac8 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa2b5a88 <col:33> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa2b5ae4 <col:40> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b55a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    <<<NULL>>>)
  (UnaryOperator 0xa2b5bc8 <line:140:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa2b5b90 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2b5b58 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa2b5b48 <col:9> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa2b5ce0 <line:141:7, col:52> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2b5c28 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2b5bf0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa2b5be0 <col:7> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa2b5ca8 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa2b5c70 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa2b5c60 <col:29> 'vector<_Tp, _Alloc> *' this))))
  (ReturnStmt 0xa2b5d18 <line:142:7, col:14>
    (DeclRefExpr 0xa2b5d00 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b55a0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa2b6940 </usr/include/c++/4.6/bits/vector.tcc:149:5, line:157:5>
  (IfStmt 0xa2b68f8 <line:150:7, line:155:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2b6428 <line:150:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b63c8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (DeclRefExpr 0xa2b6398 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b6110 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
      (DeclRefExpr 0xa2b63b0 <col:22> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b6150 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    (CompoundStmt 0xa2b68e0 <line:151:2, line:155:2>
      (IfStmt 0xa2b6680 <line:152:4, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa2b6538 </usr/include/c++/4.6/bits/vector.tcc:152:8, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b64d8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
          (DeclRefExpr 0xa2b644c <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b6150 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa2b64b8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa2b6478 <col:18> '<bound member function type>' lvalue)))
        (CallExpr 0xa2b6658 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b6580 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
          (DeclRefExpr 0xa2b65b8 </usr/include/c++/4.6/bits/vector.tcc:153:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b6150 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa2b6620 <col:29, col:33> '<dependent type>'
            (UnresolvedMemberExpr 0xa2b65e0 <col:29> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa2b663c <col:36> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b6110 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        <<<NULL>>>)
      (CallExpr 0xa2b68c0 <line:154:4, col:53> '<dependent type>'
        (MemberExpr 0xa2b66b0 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa277cc0
          (CXXThisExpr 0xa2b66a0 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa2b6898 <col:20, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b6848 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
          (CallExpr 0xa2b6720 <col:20, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2b66e8 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa2b66d0 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b6110 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
          (ParenExpr 0xa2b6830 <col:37, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0xa2b6808 <col:38, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa2b67c8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
              (CallExpr 0xa2b6790 <col:38, col:42> '<dependent type>'
                (UnresolvedMemberExpr 0xa2b6750 <col:38> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa2b67ac <col:46> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b6150 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa2b6930 <line:156:7, col:14>
    (DeclRefExpr 0xa2b6914 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2b6110 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa2b8810 </usr/include/c++/4.6/bits/vector.tcc:163:5, line:196:5>
  (IfStmt 0xa2b87b8 <line:164:7, line:194:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2b7130 <line:164:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b70d0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (CXXOperatorCallExpr 0xa2b70a0 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b7060 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9f23ab0 0x9f252b0 0x9f26520)
        (DeclRefExpr 0xa2b7044 <col:12> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2b6e00 '__x' 'const vector<_Tp, _Alloc> &'))
      (CXXThisExpr 0xa2b70c0 <col:19> 'vector<_Tp, _Alloc> *' this))
    (CompoundStmt 0xa2b8798 <line:165:2, line:194:2>
      (DeclStmt 0xa2b7208 <line:166:4, col:39>
        0xa2b7160 "const size_type __xlen =
          (CallExpr 0xa2b71e8 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2b71b0 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa2b7194 <col:29> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2b6e00 '__x' 'const vector<_Tp, _Alloc> &')))")
      (IfStmt 0xa2b85d0 <line:167:4, line:192:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa2b72d0 <line:167:8, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b7280 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40 0xa283a30)
          (DeclRefExpr 0xa2b7218 <col:8> 'const size_type':'const unsigned int' lvalue Var 0xa2b7160 '__xlen' 'const size_type':'const unsigned int')
          (CallExpr 0xa2b7260 <col:17, col:26> '<dependent type>'
            (MemberExpr 0xa2b7240 <col:17> '<bound member function type>' ->capacity 0xa26b6d0
              (CXXThisExpr 0xa2b7230 <col:17> 'vector<_Tp, _Alloc> *' this))))
        (CompoundStmt 0xa2b7b48 <line:168:6, line:178:6>
          (DeclStmt 0xa2b74a8 <line:169:8, line:170:20>
            0xa2b7300 "pointer __tmp =
              (CallExpr 0xa2b7480 <line:169:24, line:170:19> '<dependent type>'
                (UnresolvedMemberExpr 0xa2b7348 <line:169:24> '<bound member function type>' lvalue)
                (DeclRefExpr 0xa2b7384 <col:45> 'const size_type':'const unsigned int' lvalue Var 0xa2b7160 '__xlen' 'const size_type':'const unsigned int')
                (CallExpr 0xa2b73f0 <col:53, col:63> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2b73b8 <col:53, col:57> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2b739c <col:53> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2b6e00 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa2b7460 <line:170:10, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2b7428 <col:10, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2b740c <col:10> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2b6e00 '__x' 'const vector<_Tp, _Alloc> &'))))")
          (CallExpr 0xa2b7678 <line:171:8, line:172:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa2b74e0 <line:171:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
            (CXXDependentScopeMemberExpr 0xa2b7568 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2b7530 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa2b7520 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa2b75e8 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2b75b0 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa2b75a0 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa2b7658 <line:172:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa2b761c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa2b78c8 <line:173:8, line:175:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa2b76a0 <line:173:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa2b7728 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2b76f0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa2b76e0 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa2b78a0 <line:174:8, line:175:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa2b7860 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
              (CXXDependentScopeMemberExpr 0xa2b77a8 <line:174:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2b7770 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2b7760 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa2b7828 <line:175:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2b77f0 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2b77e0 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa2b7988 <line:176:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2b7938 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2b7900 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa2b78f0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa2b796c <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2b7300 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa2b7b30 <line:177:8, col:67> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2b79e8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2b79b0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa2b79a0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa2b7b08 <col:42, col:67> '<dependent type>'
              (UnresolvedLookupExpr 0xa2b7ab8 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
              (CXXDependentScopeMemberExpr 0xa2b7a68 <col:42, col:56> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2b7a30 <col:42, col:48> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2b7a20 <col:42> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa2b7a9c <col:67> 'const size_type':'const unsigned int' lvalue Var 0xa2b7160 '__xlen' 'const size_type':'const unsigned int'))))
        (IfStmt 0xa2b85b0 <line:179:9, line:192:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa2b7c28 <line:179:13, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa2b7bd8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30 0xa2844c0)
            (CallExpr 0xa2b7ba0 <col:13, col:18> '<dependent type>'
              (MemberExpr 0xa2b7b80 <col:13> '<bound member function type>' ->size 0xa26b480
                (CXXThisExpr 0xa2b7b70 <col:13> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa2b7bbc <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa2b7160 '__xlen' 'const size_type':'const unsigned int'))
          (CompoundStmt 0xa2b7f68 <line:180:6, line:183:6>
            (CallExpr 0xa2b7f40 <line:181:8, line:182:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa2b7c70 <line:181:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
              (CallExpr 0xa2b7e50 <col:22, col:63> '<dependent type>'
                (UnresolvedLookupExpr 0xa2b7cc8 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
                (CallExpr 0xa2b7d50 <col:32, col:42> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2b7d18 <col:32, col:36> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2b7d00 <col:32> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2b6e00 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa2b7dc0 <col:45, col:53> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2b7d88 <col:45, col:49> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2b7d6c <col:45> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2b6e00 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa2b7e30 <col:56, col:62> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2b7df0 <col:56> '<bound member function type>' lvalue)))
              (CallExpr 0xa2b7ec8 <line:182:8, col:12> '<dependent type>'
                (UnresolvedMemberExpr 0xa2b7e88 <col:8> '<bound member function type>' lvalue))
              (CallExpr 0xa2b7f20 <col:15, col:35> '<dependent type>'
                (UnresolvedMemberExpr 0xa2b7ee4 <col:15> '<dependent type>' lvalue))))
          (CompoundStmt 0xa2b8598 <line:185:6, line:192:6>
            (CallExpr 0xa2b8230 <line:186:8, line:187:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa2b7fa0 <line:186:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
              (CXXDependentScopeMemberExpr 0xa2b8028 <col:18, col:30> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2b7ff0 <col:18, col:22> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2b7fd8 <col:18> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2b6e00 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXOperatorCallExpr 0xa2b8188 <col:40, col:68> '<dependent type>'
                (UnresolvedLookupExpr 0xa2b8138 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
                (CXXDependentScopeMemberExpr 0xa2b80b0 <col:40, col:52> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2b8078 <col:40, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2b805c <col:40> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2b6e00 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa2b8118 <col:63, col:68> '<dependent type>'
                  (MemberExpr 0xa2b80f8 <col:63> '<bound member function type>' ->size 0xa26b480
                    (CXXThisExpr 0xa2b80e8 <col:63> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa2b81f8 <line:187:4, col:18> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2b81c0 <col:4, col:10> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2b81b0 <col:4> 'vector<_Tp, _Alloc> *' this))))
            (CallExpr 0xa2b8568 <line:188:8, line:191:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa2b8280 <line:188:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e6b0 0xa25efb0)
              (CXXOperatorCallExpr 0xa2b83e0 <col:36, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0xa2b8390 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
                (CXXDependentScopeMemberExpr 0xa2b8308 <col:36, col:48> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2b82d0 <col:36, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2b82b8 <col:36> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2b6e00 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa2b8370 <col:59, col:64> '<dependent type>'
                  (MemberExpr 0xa2b8350 <col:59> '<bound member function type>' ->size 0xa26b480
                    (CXXThisExpr 0xa2b8340 <col:59> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa2b8458 <line:189:8, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2b8420 <col:8, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2b8404 <col:8> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa2b6e00 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXDependentScopeMemberExpr 0xa2b84d8 <line:190:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2b84a0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2b8490 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa2b8548 <line:191:8, col:28> '<dependent type>'
                (UnresolvedMemberExpr 0xa2b850c <col:8> '<dependent type>' lvalue))))))
      (BinaryOperator 0xa2b8780 <line:193:4, col:55> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2b8638 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2b8600 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2b85f0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa2b8758 <col:30, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b8708 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
          (CXXDependentScopeMemberExpr 0xa2b86b8 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2b8680 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa2b8670 <col:30> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa2b86ec <col:55> 'const size_type':'const unsigned int' lvalue Var 0xa2b7160 '__xlen' 'const size_type':'const unsigned int'))))
    <<<NULL>>>)
  (ReturnStmt 0xa2b8800 <line:195:7, col:15>
    (UnaryOperator 0xa2b87e8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa2b87d8 <col:15> 'vector<_Tp, _Alloc> *' this))))


    void _M_fill_assign(size_t __n, const value_type &__val) (CompoundStmt 0xa2ba550 </usr/include/c++/4.6/bits/vector.tcc:202:5, line:218:5>
  (IfStmt 0xa2ba530 <line:203:7, line:217:72>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2b8cf0 <line:203:11, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa2b8ca0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40 0xa283a30)
      (DeclRefExpr 0xa2b8c38 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa2b8ad0 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa2b8c80 <col:17, col:26> '<dependent type>'
        (MemberExpr 0xa2b8c60 <col:17> '<bound member function type>' ->capacity 0xa26b6d0
          (CXXThisExpr 0xa2b8c50 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa2b8eb0 <line:204:2, line:207:2>
      (DeclStmt 0xa2b8e08 <line:205:4, col:51>
        0xa2b8d20 "vector<_Tp, _Alloc> __tmp =
          (ParenListExpr 0xa2b8de0 <col:16, col:50> 'vector<_Tp, _Alloc>'
            (DeclRefExpr 0xa2b8d54 <col:17> 'size_t':'unsigned int' lvalue ParmVar 0xa2b8ad0 '__n' 'size_t':'unsigned int')
            (DeclRefExpr 0xa2b8d6c <col:22> 'const value_type':'const _Tp' lvalue ParmVar 0xa2b8b20 '__val' 'const value_type &')
            (CallExpr 0xa2b8dc0 <col:29, col:49> '<dependent type>'
              (UnresolvedMemberExpr 0xa2b8d84 <col:29> '<dependent type>' lvalue)))")
      (CallExpr 0xa2b8e90 <line:206:4, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2b8e30 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa2b8e18 <col:4> 'vector<_Tp, _Alloc>' lvalue Var 0xa2b8d20 '__tmp' 'vector<_Tp, _Alloc>'))
        (UnaryOperator 0xa2b8e78 <col:15, col:16> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa2b8e68 <col:16> 'vector<_Tp, _Alloc> *' this))))
    (IfStmt 0xa2ba510 <line:208:12, line:217:72>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa2b8f80 <line:208:16, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa2b8f30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40 0xa283a30)
        (DeclRefExpr 0xa2b8ec8 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa2b8ad0 '__n' 'size_t':'unsigned int')
        (CallExpr 0xa2b8f10 <col:22, col:27> '<dependent type>'
          (MemberExpr 0xa2b8ef0 <col:22> '<bound member function type>' ->size 0xa26b480
            (CXXThisExpr 0xa2b8ee0 <col:22> 'vector<_Tp, _Alloc> *' this))))
      (CompoundStmt 0xa2b94e0 <line:209:2, line:215:2>
        (CallExpr 0xa2b90f8 <line:210:4, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b8fc8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9fa80 0xa28d210)
          (CallExpr 0xa2b9050 <col:14, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa2b9010 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0xa2b90c0 <col:23, col:27> '<dependent type>'
            (UnresolvedMemberExpr 0xa2b9080 <col:23> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa2b90dc <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa2b8b20 '__val' 'const value_type &'))
        (CallExpr 0xa2b9340 <line:211:4, line:213:27> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b9148 <line:211:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2605b0 0xa260ee0)
          (CXXDependentScopeMemberExpr 0xa2b91c8 <col:34, col:48> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2b9190 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa2b9180 <col:34> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa2b92a8 <line:212:6, col:17> '<dependent type>'
            (UnresolvedLookupExpr 0xa2b9268 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
            (DeclRefExpr 0xa2b91fc <col:6> 'size_t':'unsigned int' lvalue ParmVar 0xa2b8ad0 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa2b9248 <col:12, col:17> '<dependent type>'
              (MemberExpr 0xa2b9228 <col:12> '<bound member function type>' ->size 0xa26b480
                (CXXThisExpr 0xa2b9218 <col:12> 'vector<_Tp, _Alloc> *' this))))
          (DeclRefExpr 0xa2b92cc <col:20> 'const value_type':'const _Tp' lvalue ParmVar 0xa2b8b20 '__val' 'const value_type &')
          (CallExpr 0xa2b9320 <line:213:6, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa2b92e4 <col:6> '<dependent type>' lvalue)))
        (CompoundAssignOperator 0xa2b94c0 <line:214:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2b93b8 <col:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2b9380 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa2b9370 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa2b9498 <col:31, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa2b9458 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
            (DeclRefExpr 0xa2b93ec <col:31> 'size_t':'unsigned int' lvalue ParmVar 0xa2b8ad0 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa2b9438 <col:37, col:42> '<dependent type>'
              (MemberExpr 0xa2b9418 <col:37> '<bound member function type>' ->size 0xa26b480
                (CXXThisExpr 0xa2b9408 <col:37> 'vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa2ba4f0 <line:217:9, col:72> '<dependent type>'
        (MemberExpr 0xa2b9510 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa277cc0
          (CXXThisExpr 0xa2b9500 <col:9> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa2ba4c8 <col:25, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0xa2b9548 <col:25, col:30> '<overloaded function type>' lvalue (no ADL) = '1' 0x9ea21b0)
          (CXXDependentScopeMemberExpr 0xa2b95c8 <col:37, col:51> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2b9590 <col:37, col:43> '<dependent type>' lvalue
              (CXXThisExpr 0xa2b9580 <col:37> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa2ba498 <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa2b8ad0 '__n' 'size_t':'unsigned int')
          (DeclRefExpr 0xa2ba4b0 <col:66> 'const value_type':'const _Tp' lvalue ParmVar 0xa2b8b20 '__val' 'const value_type &'))))))


    template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa2bb120 </usr/include/c++/4.6/bits/vector.tcc:226:7, line:235:7>
  (DeclStmt 0xa2baba8 <line:227:2, col:39>
    0xa2baad0 "pointer __cur =
      (ParenListExpr 0xa2bab88 <col:15, col:38> 'pointer':'typename _Tp_alloc_type::pointer'
        (CXXDependentScopeMemberExpr 0xa2bab50 <col:16, col:30> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bab18 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bab08 <col:16> 'vector<_Tp, _Alloc> *' this))))")
  (ForStmt 0xa2bae98 <line:228:2, line:230:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa2bad90 <line:228:9, col:53> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa2bac48 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa2babe8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
        (DeclRefExpr 0xa2babb8 <col:9> '_InputIterator' lvalue ParmVar 0xa2ba870 '__first' '_InputIterator')
        (DeclRefExpr 0xa2babd0 <col:20> '_InputIterator' lvalue ParmVar 0xa2ba8b0 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa2bad68 <col:30, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa2bad08 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
        (DeclRefExpr 0xa2bac6c <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2baad0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer')
        (CXXDependentScopeMemberExpr 0xa2bacd0 <col:39, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bac98 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bac88 <col:39> 'vector<_Tp, _Alloc> *' this)))))
    (BinaryOperator 0xa2bae08 <line:229:7, col:18> '<dependent type>' ','
      (UnaryOperator 0xa2badc0 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa2bada8 <col:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2baad0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa2badf0 <col:16, col:18> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa2badd4 <col:18> '_InputIterator' lvalue ParmVar 0xa2ba870 '__first' '_InputIterator')))
    (BinaryOperator 0xa2bae80 <line:230:4, col:14> '<dependent type>' '='
      (UnaryOperator 0xa2bae38 <col:4, col:5> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa2bae20 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2baad0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa2bae68 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa2bae4c <col:14> '_InputIterator' lvalue ParmVar 0xa2ba870 '__first' '_InputIterator'))))
  (IfStmt 0xa2bb100 <line:231:2, line:234:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2baf50 <line:231:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa2baef0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58260 0x9e6e880 0x9e71e50 0x9ebd300 0x9edd730 0x9eddac0 0x9fd42e0 0x9fd4d50 0x9fd55a0 0x9fd5b10 0xa0fc110 0xa27e240)
      (DeclRefExpr 0xa2baebc <col:6> '_InputIterator' lvalue ParmVar 0xa2ba870 '__first' '_InputIterator')
      (DeclRefExpr 0xa2baed4 <col:17> '_InputIterator' lvalue ParmVar 0xa2ba8b0 '__last' '_InputIterator'))
    (CallExpr 0xa2bafc0 <line:232:4, col:25> '<dependent type>'
      (MemberExpr 0xa2baf88 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa277cc0
        (CXXThisExpr 0xa2baf78 <col:4> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa2bafa8 <col:20> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2baad0 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
    (CallExpr 0xa2bb0d8 <line:234:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa2baff0 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa2bb088 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa2bb048 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa2bb0a4 <col:18> '_InputIterator' lvalue ParmVar 0xa2ba870 '__first' '_InputIterator')
      (DeclRefExpr 0xa2bb0bc <col:27> '_InputIterator' lvalue ParmVar 0xa2ba8b0 '__last' '_InputIterator'))))

;
    template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa2bc8e0 </usr/include/c++/4.6/bits/vector.tcc:243:7, line:270:7>
  (DeclStmt 0xa2bb780 <line:244:2, col:56>
    0xa2bb6a0 "const size_type __len =
      (CallExpr 0xa2bb758 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa2bb6f0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e66090)
        (DeclRefExpr 0xa2bb724 <col:40> '_ForwardIterator' lvalue ParmVar 0xa2bb440 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa2bb73c <col:49> '_ForwardIterator' lvalue ParmVar 0xa2bb480 '__last' '_ForwardIterator'))")
  (IfStmt 0xa2bc8c0 <line:246:2, line:269:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2bb848 <line:246:6, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa2bb7f8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40 0xa283a30)
      (DeclRefExpr 0xa2bb790 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa2bb6a0 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa2bb7d8 <col:14, col:23> '<dependent type>'
        (MemberExpr 0xa2bb7b8 <col:14> '<bound member function type>' ->capacity 0xa26b6d0
          (CXXThisExpr 0xa2bb7a8 <col:14> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa2bc150 <line:247:4, line:257:4>
      (DeclStmt 0xa2bb998 <line:248:6, col:65>
        0xa2bb880 "pointer __tmp =
          (ParenListExpr 0xa2bb978 <col:19, col:64> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa2bb950 <col:20, col:63> '<dependent type>'
              (UnresolvedMemberExpr 0xa2bb8c8 <col:20> '<bound member function type>' lvalue)
              (DeclRefExpr 0xa2bb904 <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa2bb6a0 '__len' 'const size_type':'const unsigned int')
              (DeclRefExpr 0xa2bb91c <col:48> '_ForwardIterator' lvalue ParmVar 0xa2bb440 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa2bb934 <col:57> '_ForwardIterator' lvalue ParmVar 0xa2bb480 '__last' '_ForwardIterator')))")
      (CallExpr 0xa2bbb68 <line:249:6, line:250:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa2bb9d0 <line:249:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (CXXDependentScopeMemberExpr 0xa2bba58 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bba20 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bba10 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa2bbad8 <col:44, col:58> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bbaa0 <col:44, col:50> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bba90 <col:44> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa2bbb48 <line:250:6, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa2bbb0c <col:6> '<dependent type>' lvalue)))
      (CallExpr 0xa2bbdb8 <line:251:6, line:253:30> '<dependent type>'
        (UnresolvedMemberExpr 0xa2bbb90 <line:251:6> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa2bbc18 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bbbe0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bbbd0 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa2bbd90 <line:252:6, line:253:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa2bbd50 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
          (CXXDependentScopeMemberExpr 0xa2bbc98 <line:252:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2bbc60 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa2bbc50 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa2bbd18 <line:253:8, col:22> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2bbce0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa2bbcd0 <col:8> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa2bbe78 <line:254:6, col:31> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2bbe28 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bbdf0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bbde0 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa2bbe5c <col:31> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bb880 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa2bc020 <line:255:6, col:57> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2bbed8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bbea0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bbe90 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa2bbff8 <col:32, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa2bbfa8 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
          (CXXDependentScopeMemberExpr 0xa2bbf58 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2bbf20 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa2bbf10 <col:32> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa2bbf8c <col:57> 'const size_type':'const unsigned int' lvalue Var 0xa2bb6a0 '__len' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa2bc138 <line:256:6, col:54> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2bc080 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bc048 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bc038 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa2bc100 <col:40, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bc0c8 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bc0b8 <col:40> 'vector<_Tp, _Alloc> *' this)))))
    (IfStmt 0xa2bc8a0 <line:258:7, line:269:4>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa2bc230 <line:258:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa2bc1e0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30 0xa2844c0)
        (CallExpr 0xa2bc1a8 <col:11, col:16> '<dependent type>'
          (MemberExpr 0xa2bc188 <col:11> '<bound member function type>' ->size 0xa26b480
            (CXXThisExpr 0xa2bc178 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa2bc1c4 <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa2bb6a0 '__len' 'const size_type':'const unsigned int'))
      (CallExpr 0xa2bc3b0 <line:259:4, col:70> '<dependent type>'
        (MemberExpr 0xa2bc268 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa277cc0
          (CXXThisExpr 0xa2bc258 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa2bc388 <col:20, col:69> '<dependent type>'
          (UnresolvedLookupExpr 0xa2bc2a0 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
          (DeclRefExpr 0xa2bc2d8 <col:30> '_ForwardIterator' lvalue ParmVar 0xa2bb440 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa2bc2f0 <col:39> '_ForwardIterator' lvalue ParmVar 0xa2bb480 '__last' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa2bc350 <col:47, col:61> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2bc318 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa2bc308 <col:47> 'vector<_Tp, _Alloc> *' this)))))
      (CompoundStmt 0xa2bc880 <line:261:4, line:269:4>
        (DeclStmt 0xa2bc430 <line:262:6, col:38>
          0xa2bc3e0 "_ForwardIterator __mid =
            (DeclRefExpr 0xa2bc414 <col:31> '_ForwardIterator' lvalue ParmVar 0xa2bb440 '__first' '_ForwardIterator')")
        (CallExpr 0xa2bc508 <line:263:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa2bc468 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e68820)
          (DeclRefExpr 0xa2bc49c <col:19> '_ForwardIterator' lvalue Var 0xa2bc3e0 '__mid' '_ForwardIterator')
          (CallExpr 0xa2bc4e8 <col:26, col:31> '<dependent type>'
            (MemberExpr 0xa2bc4c8 <col:26> '<bound member function type>' ->size 0xa26b480
              (CXXThisExpr 0xa2bc4b8 <col:26> 'vector<_Tp, _Alloc> *' this))))
        (CallExpr 0xa2bc638 <line:264:6, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa2bc550 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
          (DeclRefExpr 0xa2bc588 <col:16> '_ForwardIterator' lvalue ParmVar 0xa2bb440 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa2bc5a0 <col:25> '_ForwardIterator' lvalue Var 0xa2bc3e0 '__mid' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa2bc600 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2bc5c8 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa2bc5b8 <col:32> 'vector<_Tp, _Alloc> *' this))))
        (BinaryOperator 0xa2bc868 <line:265:6, line:268:29> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa2bc6a8 <line:265:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2bc670 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa2bc660 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CallExpr 0xa2bc838 <line:266:8, line:268:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa2bc6f8 <line:266:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e6b0 0xa25efb0)
            (DeclRefExpr 0xa2bc730 <col:36> '_ForwardIterator' lvalue Var 0xa2bc3e0 '__mid' '_ForwardIterator')
            (DeclRefExpr 0xa2bc748 <col:43> '_ForwardIterator' lvalue ParmVar 0xa2bb480 '__last' '_ForwardIterator')
            (CXXDependentScopeMemberExpr 0xa2bc7a8 <line:267:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2bc770 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa2bc760 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa2bc818 <line:268:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa2bc7dc <col:8> '<dependent type>' lvalue))))))))

;
    void _M_insert_aux(iterator __position, const _Tp &__x) (CompoundStmt 0xa2beac0 </usr/include/c++/4.6/bits/vector.tcc:303:5, line:373:5>
  (IfStmt 0xa2beaa0 <line:304:7, line:372:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2bce88 <line:304:11, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa2bce28 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (CXXDependentScopeMemberExpr 0xa2bcd70 <col:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa2bcd38 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa2bcd28 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa2bcdf0 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa2bcdb8 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa2bcda8 <col:38> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa2bd578 <line:305:2, line:321:2>
      (CallExpr 0xa2bd0f8 <line:306:4, line:308:14> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2bcef8 <line:306:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bcec0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bceb0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa2bcf78 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bcf40 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bcf30 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (ParenExpr 0xa2bd0e0 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
          (UnaryOperator 0xa2bd0c8 </usr/include/c++/4.6/bits/vector.tcc:307:21, line:308:12> '<dependent type>' prefix '*'
            (ParenExpr 0xa2bd0b0 <line:307:22, line:308:12> '<dependent type>'
              (CXXOperatorCallExpr 0xa2bd088 <line:307:23, line:308:11> '<dependent type>'
                (UnresolvedLookupExpr 0xa2bd048 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
                (CXXDependentScopeMemberExpr 0xa2bcff8 <line:307:23, col:37> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2bcfc0 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2bcfb0 <col:23> 'vector<_Tp, _Alloc> *' this)))
                (IntegerLiteral 0xa2bd030 <line:308:11> 'int' 1))))))
      (UnaryOperator 0xa2bd1a0 <line:309:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa2bd168 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2bd130 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa2bd120 <col:6> 'vector<_Tp, _Alloc> *' this))))
      (DeclStmt 0xa2bd210 <line:311:4, col:22>
        0xa2bd1c0 "_Tp __x_copy =
          (DeclRefExpr 0xa2bd1f4 <col:19> 'const _Tp' lvalue ParmVar 0xa2bcc10 '__x' 'const _Tp &')")
      (CallExpr 0xa2bd4f0 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
        (UnresolvedLookupExpr 0xa2bd248 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9d860)
        (CallExpr 0xa2bd2d0 </usr/include/c++/4.6/bits/vector.tcc:313:28, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa2bd298 <col:28, col:39> '<dependent type>' lvalue
            (DeclRefExpr 0xa2bd27c <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bcba0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
        (CXXOperatorCallExpr 0xa2bd3c8 <line:314:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa2bd388 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
          (CXXDependentScopeMemberExpr 0xa2bd338 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2bd300 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa2bd2f0 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa2bd370 <col:33> 'int' 2))
        (CXXOperatorCallExpr 0xa2bd4c8 <line:315:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa2bd488 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
          (CXXDependentScopeMemberExpr 0xa2bd438 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2bd400 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa2bd3f0 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa2bd470 <col:33> 'int' 1)))
      (BinaryOperator 0xa2bd560 <line:317:4, col:18> '<dependent type>' '='
        (UnaryOperator 0xa2bd530 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa2bd518 <col:5> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bcba0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        (DeclRefExpr 0xa2bd544 <col:18> '_Tp' lvalue Var 0xa2bd1c0 '__x_copy' '_Tp')))
    (CompoundStmt 0xa2bea60 <line:323:2, line:372:2>
      (DeclStmt 0xa2bd6c0 <line:324:4, line:325:57>
        0xa2bd5b0 "const size_type __len =
          (CallExpr 0xa2bd698 <col:6, col:56> '<dependent type>'
            (MemberExpr 0xa2bd5f8 <col:6> '<bound member function type>' ->_M_check_len 0xa277bb0
              (CXXThisExpr 0xa2bd5e8 <col:6> 'vector<_Tp, _Alloc> *' this))
            (CXXFunctionalCastExpr 0xa2bd648 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa2bd638 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa2bd620 <col:29> 'int' 1)))
            (StringLiteral 0xa2bd660 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux"))")
      (DeclStmt 0xa2bd808 <line:326:4, col:57>
        0xa2bd6e0 "const size_type __elems_before =
          (CXXOperatorCallExpr 0xa2bd7e0 <col:37, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa2bd7a0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
            (DeclRefExpr 0xa2bd714 <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bcba0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
            (CallExpr 0xa2bd780 <col:50, col:56> '<dependent type>'
              (UnresolvedMemberExpr 0xa2bd740 <col:50> '<bound member function type>' lvalue)))")
      (DeclStmt 0xa2bd8f8 <line:327:4, col:49>
        0xa2bd820 "pointer __new_start =
          (ParenListExpr 0xa2bd8d8 <col:23, col:48> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa2bd8b8 <col:24, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2bd868 <col:24, col:30> '<dependent type>' lvalue
                (CXXThisExpr 0xa2bd858 <col:24> 'vector<_Tp, _Alloc> *' this))
              (DeclRefExpr 0xa2bd89c <col:42> 'const size_type':'const unsigned int' lvalue Var 0xa2bd5b0 '__len' 'const size_type':'const unsigned int')))")
      (DeclStmt 0xa2bd980 <line:328:4, col:37>
        0xa2bd910 "pointer __new_finish =
          (ParenListExpr 0xa2bd960 <col:24, col:36> 'pointer':'typename _Tp_alloc_type::pointer'
            (DeclRefExpr 0xa2bd944 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
      (IfStmt 0xa2bdfc8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:354:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2bd990 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2bdfa0 </usr/include/c++/4.6/bits/vector.tcc:330:6, line:354:6>
          (CallExpr 0xa2bdae0 <line:335:8, line:339:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2bd9e8 <line:335:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2bd9b0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa2bd9a0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa2bdaa0 <col:32, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa2bda50 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
              (DeclRefExpr 0xa2bda1c <col:32> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa2bda34 <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa2bd6e0 '__elems_before' 'const size_type':'const unsigned int'))
            (DeclRefExpr 0xa2bdac4 <line:339:32> 'const _Tp' lvalue ParmVar 0xa2bcc10 '__x' 'const _Tp &'))
          (BinaryOperator 0xa2bdb38 <line:341:8, col:23> '<dependent type>' '='
            (DeclRefExpr 0xa2bdb04 <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (IntegerLiteral 0xa2bdb20 <col:23> 'int' 0))
          (BinaryOperator 0xa2bdd48 <line:343:8, line:346:31> '<dependent type>' '='
            (DeclRefExpr 0xa2bdb50 <line:343:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa2bdd18 <line:344:3, line:346:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa2bdb80 <line:344:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
              (CXXDependentScopeMemberExpr 0xa2bdc00 <col:31, col:45> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2bdbc8 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2bdbb8 <col:31> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa2bdc88 <line:345:10, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2bdc50 <col:10, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2bdc34 <col:10> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bcba0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (DeclRefExpr 0xa2bdca4 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa2bdcf8 <line:346:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa2bdcbc <col:10> '<dependent type>' lvalue))))
          (UnaryOperator 0xa2bdd78 <line:347:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa2bdd60 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa2bdf88 <line:349:8, line:353:31> '<dependent type>' '='
            (DeclRefExpr 0xa2bdd8c <line:349:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa2bdf58 <line:350:3, line:353:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa2bddc0 <line:350:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
              (CallExpr 0xa2bde48 <col:31, col:47> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2bde10 <col:31, col:42> '<dependent type>' lvalue
                  (DeclRefExpr 0xa2bddf4 <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bcba0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (CXXDependentScopeMemberExpr 0xa2bdeb0 <line:351:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2bde78 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2bde68 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa2bdee4 <line:352:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa2bdf38 <line:353:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa2bdefc <col:10> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0xa2be370 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:363:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2bdfe8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa2be350 </usr/include/c++/4.6/bits/vector.tcc:356:6, line:363:6>
          (IfStmt 0xa2be290 <line:357:8, line:360:65>
            <<<NULL>>>
            (UnaryOperator 0xa2be010 <line:357:12, col:13> '<dependent type>' prefix '!'
              (DeclRefExpr 0xa2bdff8 <col:13> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
            (CallExpr 0xa2be150 <line:358:3, col:53> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa2be070 <col:3, col:17> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2be038 <col:3, col:9> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2be028 <col:3> 'vector<_Tp, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa2be128 <col:25, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0xa2be0d8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
                (DeclRefExpr 0xa2be0a4 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa2be0bc <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa2bd6e0 '__elems_before' 'const size_type':'const unsigned int')))
            (CallExpr 0xa2be268 <line:360:3, col:65> '<dependent type>'
              (UnresolvedLookupExpr 0xa2be198 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
              (DeclRefExpr 0xa2be1d8 <col:17> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa2be1f0 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa2be248 <col:44, col:64> '<dependent type>'
                (UnresolvedMemberExpr 0xa2be208 <col:44> '<dependent type>' lvalue))))
          (CallExpr 0xa2be318 <line:361:8, col:40> '<dependent type>'
            (UnresolvedMemberExpr 0xa2be2ac <col:8> '<dependent type>' lvalue)
            (DeclRefExpr 0xa2be2e8 <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
            (DeclRefExpr 0xa2be300 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa2bd5b0 '__len' 'const size_type':'const unsigned int'))
          (NullStmt 0xa2be340 <line:362:31>))
        <<<NULL>>>)
      (CallExpr 0xa2be548 <line:364:4, line:365:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa2be3b0 <line:364:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
        (CXXDependentScopeMemberExpr 0xa2be438 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2be400 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa2be3f0 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa2be4b8 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2be480 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa2be470 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa2be528 <line:365:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa2be4ec <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa2be798 <line:366:4, line:368:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa2be570 <line:366:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa2be5f8 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2be5c0 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa2be5b0 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa2be770 <line:367:4, line:368:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa2be730 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
          (CXXDependentScopeMemberExpr 0xa2be678 <line:367:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2be640 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa2be630 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa2be6f8 <line:368:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2be6c0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa2be6b0 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa2be858 <line:369:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2be808 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2be7d0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2be7c0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa2be83c <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa2be908 <line:370:4, col:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2be8b8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2be880 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2be870 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa2be8ec <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa2bea48 <line:371:4, col:52> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2be968 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2be930 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2be920 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa2bea20 <col:38, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa2be9d0 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
          (DeclRefExpr 0xa2be99c <col:38> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bd820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa2be9b4 <col:52> 'const size_type':'const unsigned int' lvalue Var 0xa2bd5b0 '__len' 'const size_type':'const unsigned int'))))))


    void _M_fill_insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa2c1a08 </usr/include/c++/4.6/bits/vector.tcc:379:5, line:464:5>
  (IfStmt 0xa2c19e8 <line:380:7, line:463:2>
    <<<NULL>>>
    (BinaryOperator 0xa2bef60 <line:380:11, col:18> '_Bool' '!='
      (ImplicitCastExpr 0xa2bef40 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa2bef0c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa2bef50 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa2bef28 <col:18> 'int' 0)))
    (CompoundStmt 0xa2c19d0 <line:381:2, line:463:2>
      (IfStmt 0xa2c19b0 <line:382:4, line:462:6>
        <<<NULL>>>
        (BinaryOperator 0xa2bf130 <line:382:8, line:383:34> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa2bf0e8 <line:382:8, line:383:29> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa2bf0c0 <line:382:18, line:383:20> '<dependent type>'
              (UnresolvedLookupExpr 0xa2bf080 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
              (CXXDependentScopeMemberExpr 0xa2befc8 <line:382:18, col:32> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2bef90 <col:18, col:24> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2bef80 <col:18> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa2bf048 <line:383:6, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2bf010 <col:6, col:12> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2bf000 <col:6> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa2bf120 <col:34> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa2bf104 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int')))
        (CompoundStmt 0xa2c02d8 <line:384:6, line:413:6>
          (DeclStmt 0xa2bf1a0 <line:385:8, col:33>
            0xa2bf150 "value_type __x_copy =
              (DeclRefExpr 0xa2bf184 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa2bee10 '__x' 'const value_type &')")
          (DeclStmt 0xa2bf2e8 <line:386:8, col:58>
            0xa2bf1c0 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa2bf2c0 <col:40, col:48> '<dependent type>'
                (UnresolvedLookupExpr 0xa2bf280 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
                (CallExpr 0xa2bf248 <col:40, col:44> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2bf208 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa2bf264 <col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bed80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa2bf3d8 <line:387:8, col:53>
            0xa2bf300 "pointer __old_finish =
              (ParenListExpr 0xa2bf3b8 <col:28, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa2bf380 <col:29, col:43> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2bf348 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2bf338 <col:29> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa2c02b8 <line:388:8, line:412:3>
            <<<NULL>>>
            (BinaryOperator 0xa2bf438 <line:388:12, col:28> '_Bool' '>'
              (ImplicitCastExpr 0xa2bf418 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa2bf3e8 <col:12> 'const size_type':'const unsigned int' lvalue Var 0xa2bf1c0 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa2bf428 <col:28> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa2bf400 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int')))
            (CompoundStmt 0xa2bfba8 <line:389:3, line:399:3>
              (CallExpr 0xa2bf708 <line:390:5, line:393:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa2bf478 <line:390:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
                (CXXOperatorCallExpr 0xa2bf588 <col:33, col:59> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2bf548 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
                  (CXXDependentScopeMemberExpr 0xa2bf4f8 <col:33, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa2bf4c0 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2bf4b0 <col:33> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa2bf52c <col:59> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int'))
                (CXXDependentScopeMemberExpr 0xa2bf5f8 <line:391:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2bf5c0 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2bf5b0 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa2bf678 <line:392:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2bf640 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2bf630 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa2bf6e8 <line:393:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2bf6ac <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa2bf7d0 <line:394:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2bf780 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2bf748 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2bf738 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa2bf7b4 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int'))
              (CallExpr 0xa2bf970 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa2bf818 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9d860)
                (CallExpr 0xa2bf8a0 </usr/include/c++/4.6/bits/vector.tcc:395:29, col:45> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2bf868 <col:29, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2bf84c <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bed80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa2bf930 <line:396:8, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2bf8f0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
                  (DeclRefExpr 0xa2bf8bc <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bf300 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa2bf8d4 <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa2bf954 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bf300 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa2bfb80 <line:397:5, line:398:16> '<dependent type>'
                (UnresolvedLookupExpr 0xa2bf9c0 <line:397:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9fa80 0xa28d210)
                (CallExpr 0xa2bfa48 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2bfa10 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2bf9f8 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bed80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa2bfb40 <col:34, col:54> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2bfaf0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
                  (CallExpr 0xa2bfab8 <col:34, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2bfa80 <col:34, col:45> '<dependent type>' lvalue
                      (DeclRefExpr 0xa2bfa64 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bed80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa2bfad4 <col:54> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa2bfb64 <line:398:8> 'value_type':'_Tp' lvalue Var 0xa2bf150 '__x_copy' 'value_type':'_Tp')))
            (CompoundStmt 0xa2c0290 <line:401:3, line:412:3>
              (CallExpr 0xa2bfd88 <line:402:5, line:405:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa2bfbf0 <line:402:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2605b0 0xa260ee0)
                (CXXDependentScopeMemberExpr 0xa2bfc70 <col:35, col:49> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2bfc38 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2bfc28 <col:35> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa2bfcf8 <line:403:7, col:13> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa2bfcd8 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa2bfca4 <col:7> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa2bfce8 <col:13> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa2bfcbc <col:13> 'const size_type':'const unsigned int' lvalue Var 0xa2bf1c0 '__elems_after' 'const size_type':'const unsigned int')))
                (DeclRefExpr 0xa2bfd10 <line:404:7> 'value_type':'_Tp' lvalue Var 0xa2bf150 '__x_copy' 'value_type':'_Tp')
                (CallExpr 0xa2bfd68 <line:405:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2bfd28 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa2bfea0 <line:406:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2bfe00 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2bfdc8 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2bfdb8 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa2bfe88 <col:32, col:38> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa2bfe68 <col:32> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa2bfe34 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa2bfe78 <col:38> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa2bfe4c <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa2bf1c0 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa2c0080 <line:407:5, line:409:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa2bfee8 <line:407:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
                (CallExpr 0xa2bff70 <col:33, col:49> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2bff38 <col:33, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2bff1c <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bed80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa2bff8c <col:52> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bf300 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa2bfff0 <line:408:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2bffb8 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2bffa8 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa2c0060 <line:409:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2c0024 <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa2c0148 <line:410:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2c00f8 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2c00c0 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c00b0 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa2c012c <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa2bf1c0 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa2c0268 <line:411:5, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c0190 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9fa80 0xa28d210)
                (CallExpr 0xa2c0218 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2c01e0 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2c01c8 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bed80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa2c0234 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2bf300 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa2c024c <col:48> 'value_type':'_Tp' lvalue Var 0xa2bf150 '__x_copy' 'value_type':'_Tp')))))
        (CompoundStmt 0xa2c1970 <line:415:6, line:462:6>
          (DeclStmt 0xa2c03e0 <line:416:8, line:417:46>
            0xa2c0300 "const size_type __len =
              (CallExpr 0xa2c03b8 <col:3, col:45> '<dependent type>'
                (MemberExpr 0xa2c0348 <col:3> '<bound member function type>' ->_M_check_len 0xa277bb0
                  (CXXThisExpr 0xa2c0338 <col:3> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa2c0368 <col:16> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa2c0380 <col:21> 'const char [23]' lvalue "vector::_M_fill_insert"))")
          (DeclStmt 0xa2c0528 <line:418:8, col:61>
            0xa2c0400 "const size_type __elems_before =
              (CXXOperatorCallExpr 0xa2c0500 <col:41, col:60> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c04c0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
                (DeclRefExpr 0xa2c0434 <col:41> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bed80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
                (CallExpr 0xa2c04a0 <col:54, col:60> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2c0460 <col:54> '<bound member function type>' lvalue)))")
          (DeclStmt 0xa2c0618 <line:419:8, col:53>
            0xa2c0540 "pointer __new_start =
              (ParenListExpr 0xa2c05f8 <col:27, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa2c05d8 <col:28, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2c0588 <col:28, col:34> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c0578 <col:28> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa2c05bc <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa2c0300 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa2c06a0 <line:420:8, col:41>
            0xa2c0630 "pointer __new_finish =
              (ParenListExpr 0xa2c0680 <col:28, col:40> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa2c0664 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0540 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa2c0d60 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:441:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa2c06b0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa2c0d38 </usr/include/c++/4.6/bits/vector.tcc:422:3, line:441:3>
              (CallExpr 0xa2c0850 <line:424:5, line:426:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c06e8 <line:424:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2605b0 0xa260ee0)
                (CXXOperatorCallExpr 0xa2c07a0 <col:35, col:49> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2c0750 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
                  (DeclRefExpr 0xa2c0720 <col:35> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0540 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa2c0738 <col:49> 'const size_type':'const unsigned int' lvalue Var 0xa2c0400 '__elems_before' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa2c07c4 <line:425:7> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int')
                (DeclRefExpr 0xa2c07dc <col:12> 'const value_type':'const _Tp' lvalue ParmVar 0xa2bee10 '__x' 'const value_type &')
                (CallExpr 0xa2c0830 <line:426:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2c07f4 <col:7> '<dependent type>' lvalue)))
              (BinaryOperator 0xa2c08b0 <line:427:5, col:20> '<dependent type>' '='
                (DeclRefExpr 0xa2c087c <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0630 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (IntegerLiteral 0xa2c0898 <col:20> 'int' 0))
              (BinaryOperator 0xa2c0ac0 <line:429:5, line:433:28> '<dependent type>' '='
                (DeclRefExpr 0xa2c08c8 <line:429:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0630 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa2c0a90 <line:430:7, line:433:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2c08f8 <line:430:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
                  (CXXDependentScopeMemberExpr 0xa2c0978 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa2c0940 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2c0930 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa2c0a00 <line:431:7, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2c09c8 <col:7, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0xa2c09ac <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bed80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa2c0a1c <line:432:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0540 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa2c0a70 <line:433:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa2c0a34 <col:7> '<dependent type>' lvalue))))
              (CompoundAssignOperator 0xa2c0b08 <line:434:5, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa2c0ad8 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0630 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa2c0af0 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int'))
              (BinaryOperator 0xa2c0d20 <line:436:5, line:440:28> '<dependent type>' '='
                (DeclRefExpr 0xa2c0b28 <line:436:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0630 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa2c0cf0 <line:437:7, line:440:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2c0b58 <line:437:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
                  (CallExpr 0xa2c0be0 <col:35, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2c0ba8 <col:35, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0xa2c0b8c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2bed80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa2c0c48 <line:438:7, col:21> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa2c0c10 <col:7, col:13> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2c0c00 <col:7> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa2c0c7c <line:439:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0630 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa2c0cd0 <line:440:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa2c0c94 <col:7> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa2c1280 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:453:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa2c0d80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa2c1260 </usr/include/c++/4.6/bits/vector.tcc:443:3, line:453:3>
              (IfStmt 0xa2c11a0 <line:444:5, line:450:28>
                <<<NULL>>>
                (UnaryOperator 0xa2c0da8 <line:444:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0xa2c0d90 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0630 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
                (CallExpr 0xa2c1058 <line:445:7, line:447:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2c0de0 <line:445:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
                  (CXXOperatorCallExpr 0xa2c0ea0 <col:21, col:35> '<dependent type>'
                    (UnresolvedLookupExpr 0xa2c0e50 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
                    (DeclRefExpr 0xa2c0e20 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0540 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                    (DeclRefExpr 0xa2c0e38 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa2c0400 '__elems_before' 'const size_type':'const unsigned int'))
                  (CXXOperatorCallExpr 0xa2c0fd8 <line:446:7, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0xa2c0f88 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
                    (CXXOperatorCallExpr 0xa2c0f48 <col:7, col:21> '<dependent type>'
                      (UnresolvedLookupExpr 0xa2c0ef8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
                      (DeclRefExpr 0xa2c0ec4 <col:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0540 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                      (DeclRefExpr 0xa2c0edc <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa2c0400 '__elems_before' 'const size_type':'const unsigned int'))
                    (DeclRefExpr 0xa2c0f6c <col:38> 'size_type':'unsigned int' lvalue ParmVar 0xa2bedc0 '__n' 'size_type':'unsigned int'))
                  (CallExpr 0xa2c1038 <line:447:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa2c0ffc <col:7> '<dependent type>' lvalue)))
                (CallExpr 0xa2c1178 <line:449:7, line:450:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2c10a8 <line:449:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
                  (DeclRefExpr 0xa2c10e8 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0540 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa2c1100 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0630 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa2c1158 <line:450:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa2c1118 <col:7> '<dependent type>' lvalue))))
              (CallExpr 0xa2c1228 <line:451:5, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0xa2c11bc <col:5> '<dependent type>' lvalue)
                (DeclRefExpr 0xa2c11f8 <col:19> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0540 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa2c1210 <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa2c0300 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa2c1250 <line:452:28>))
            <<<NULL>>>)
          (CallExpr 0xa2c1458 <line:454:8, line:455:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa2c12c0 <line:454:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
            (CXXDependentScopeMemberExpr 0xa2c1348 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c1310 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c1300 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa2c13c8 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c1390 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c1380 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa2c1438 <line:455:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa2c13fc <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa2c16a8 <line:456:8, line:458:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa2c1480 <line:456:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa2c1508 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c14d0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c14c0 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa2c1680 <line:457:8, line:458:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa2c1640 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
              (CXXDependentScopeMemberExpr 0xa2c1588 <line:457:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2c1550 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2c1540 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa2c1608 <line:458:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2c15d0 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2c15c0 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa2c1768 <line:459:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2c1718 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c16e0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c16d0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa2c174c <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0540 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa2c1818 <line:460:8, col:34> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2c17c8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c1790 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c1780 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa2c17fc <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0630 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa2c1958 <line:461:8, col:56> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2c1878 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c1840 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c1830 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa2c1930 <col:42, col:56> '<dependent type>'
              (UnresolvedLookupExpr 0xa2c18e0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
              (DeclRefExpr 0xa2c18ac <col:42> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c0540 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa2c18c4 <col:56> 'const size_type':'const unsigned int' lvalue Var 0xa2c0300 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))


    template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa2c21e0 </usr/include/c++/4.6/bits/vector.tcc:525:7, line:531:7>
  (ForStmt 0xa2c21b8 <line:526:2, line:530:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2c2020 <line:526:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c1fc0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (DeclRefExpr 0xa2c1f8c <col:9> '_InputIterator' lvalue ParmVar 0xa2c1d60 '__first' '_InputIterator')
      (DeclRefExpr 0xa2c1fa4 <col:20> '_InputIterator' lvalue ParmVar 0xa2c1da0 '__last' '_InputIterator'))
    (UnaryOperator 0xa2c2060 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa2c2044 <col:30> '_InputIterator' lvalue ParmVar 0xa2c1d60 '__first' '_InputIterator'))
    (CompoundStmt 0xa2c21a0 <line:527:4, line:530:4>
      (BinaryOperator 0xa2c2158 <line:528:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa2c2074 <col:6> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2c1d20 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa2c2130 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa2c20a0 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa2c20e4 <col:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2c1d20 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (UnaryOperator 0xa2c2118 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa2c20fc <col:29> '_InputIterator' lvalue ParmVar 0xa2c1d60 '__first' '_InputIterator'))))
      (UnaryOperator 0xa2c2188 <line:529:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa2c2170 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2c1d20 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))

;
    template <typename _ForwardIterator> void _M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa2c4d60 </usr/include/c++/4.6/bits/vector.tcc:539:7, line:615:7>
  (IfStmt 0xa2c4d40 <line:540:2, line:614:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2c2840 <line:540:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c27e0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (DeclRefExpr 0xa2c27ac <col:6> '_ForwardIterator' lvalue ParmVar 0xa2c2580 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa2c27c4 <col:17> '_ForwardIterator' lvalue ParmVar 0xa2c25c0 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa2c4d28 <line:541:4, line:614:4>
      (DeclStmt 0xa2c2950 <line:542:6, col:58>
        0xa2c2870 "const size_type __n =
          (CallExpr 0xa2c2928 <col:28, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa2c28c0 <col:28, col:33> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e66090)
            (DeclRefExpr 0xa2c28f4 <col:42> '_ForwardIterator' lvalue ParmVar 0xa2c2580 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa2c290c <col:51> '_ForwardIterator' lvalue ParmVar 0xa2c25c0 '__last' '_ForwardIterator'))")
      (IfStmt 0xa2c4d08 <line:543:6, line:613:8>
        <<<NULL>>>
        (BinaryOperator 0xa2c2b18 <line:543:10, line:544:36> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa2c2ad0 <line:543:10, line:544:31> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa2c2aa8 <line:543:20, line:544:22> '<dependent type>'
              (UnresolvedLookupExpr 0xa2c2a68 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
              (CXXDependentScopeMemberExpr 0xa2c29b0 <line:543:20, col:34> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2c2978 <col:20, col:26> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2c2968 <col:20> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa2c2a30 <line:544:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2c29f8 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2c29e8 <col:8> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa2c2b08 <col:36> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa2c2aec <col:36> 'const size_type':'const unsigned int' lvalue Var 0xa2c2870 '__n' 'const size_type':'const unsigned int')))
        (CompoundStmt 0xa2c3b88 <line:545:8, line:574:8>
          (DeclStmt 0xa2c2c68 <line:546:3, col:53>
            0xa2c2b40 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa2c2c40 <col:35, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c2c00 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
                (CallExpr 0xa2c2bc8 <col:35, col:39> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2c2b88 <col:35> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa2c2be4 <col:43> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2c2540 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa2c2d58 <line:547:3, col:48>
            0xa2c2c80 "pointer __old_finish =
              (ParenListExpr 0xa2c2d38 <col:23, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa2c2d00 <col:24, col:38> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2c2cc8 <col:24, col:30> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c2cb8 <col:24> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa2c3b68 <line:548:3, line:573:5>
            <<<NULL>>>
            (BinaryOperator 0xa2c2db8 <line:548:7, col:23> '_Bool' '>'
              (ImplicitCastExpr 0xa2c2d98 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa2c2d68 <col:7> 'const size_type':'const unsigned int' lvalue Var 0xa2c2b40 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa2c2da8 <col:23> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa2c2d80 <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa2c2870 '__n' 'const size_type':'const unsigned int')))
            (CompoundStmt 0xa2c33e8 <line:549:5, line:558:5>
              (CallExpr 0xa2c3088 <line:550:7, line:553:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c2df8 <line:550:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
                (CXXOperatorCallExpr 0xa2c2f08 <col:35, col:61> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2c2ec8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
                  (CXXDependentScopeMemberExpr 0xa2c2e78 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa2c2e40 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2c2e30 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa2c2eac <col:61> 'const size_type':'const unsigned int' lvalue Var 0xa2c2870 '__n' 'const size_type':'const unsigned int'))
                (CXXDependentScopeMemberExpr 0xa2c2f78 <line:551:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2c2f40 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c2f30 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa2c2ff8 <line:552:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2c2fc0 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c2fb0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa2c3068 <line:553:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2c302c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa2c3150 <line:554:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2c3100 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2c30c8 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c30b8 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa2c3134 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa2c2870 '__n' 'const size_type':'const unsigned int'))
              (CallExpr 0xa2c32f0 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c3198 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9d860)
                (CallExpr 0xa2c3220 </usr/include/c++/4.6/bits/vector.tcc:555:31, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2c31e8 <col:31, col:42> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2c31cc <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2c2540 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa2c32b0 <line:556:10, col:25> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2c3270 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
                  (DeclRefExpr 0xa2c323c <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c2c80 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa2c3254 <col:25> 'const size_type':'const unsigned int' lvalue Var 0xa2c2870 '__n' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa2c32d4 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c2c80 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa2c33c0 <line:557:7, col:44> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c3340 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
                (DeclRefExpr 0xa2c3378 <col:17> '_ForwardIterator' lvalue ParmVar 0xa2c2580 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa2c3390 <col:26> '_ForwardIterator' lvalue ParmVar 0xa2c25c0 '__last' '_ForwardIterator')
                (DeclRefExpr 0xa2c33a8 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2c2540 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
            (CompoundStmt 0xa2c3b38 <line:560:5, line:573:5>
              (DeclStmt 0xa2c3460 <line:561:7, col:39>
                0xa2c3410 "_ForwardIterator __mid =
                  (DeclRefExpr 0xa2c3444 <col:32> '_ForwardIterator' lvalue ParmVar 0xa2c2580 '__first' '_ForwardIterator')")
              (CallExpr 0xa2c3500 <line:562:7, col:40> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c3498 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e68820)
                (DeclRefExpr 0xa2c34cc <col:20> '_ForwardIterator' lvalue Var 0xa2c3410 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa2c34e4 <col:27> 'const size_type':'const unsigned int' lvalue Var 0xa2c2b40 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa2c3688 <line:563:7, line:565:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c3548 <line:563:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e6b0 0xa25efb0)
                (DeclRefExpr 0xa2c3580 <col:35> '_ForwardIterator' lvalue Var 0xa2c3410 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa2c3598 <col:42> '_ForwardIterator' lvalue ParmVar 0xa2c25c0 '__last' '_ForwardIterator')
                (CXXDependentScopeMemberExpr 0xa2c35f8 <line:564:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2c35c0 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c35b0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa2c3668 <line:565:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2c362c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa2c37a0 <line:566:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2c3700 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2c36c8 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c36b8 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa2c3788 <col:34, col:40> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa2c3768 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa2c3734 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa2c2870 '__n' 'const size_type':'const unsigned int'))
                  (ImplicitCastExpr 0xa2c3778 <col:40> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa2c374c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa2c2b40 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa2c3980 <line:567:7, line:570:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c37e8 <line:567:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
                (CallExpr 0xa2c3870 <col:35, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2c3838 <col:35, col:46> '<dependent type>' lvalue
                    (DeclRefExpr 0xa2c381c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2c2540 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa2c388c <line:568:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c2c80 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa2c38f0 <line:569:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2c38b8 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c38a8 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa2c3960 <line:570:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2c3924 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa2c3a48 <line:571:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2c39f8 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa2c39c0 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c39b0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa2c3a2c <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa2c2b40 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa2c3b10 <line:572:7, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c3a90 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
                (DeclRefExpr 0xa2c3ac8 <col:17> '_ForwardIterator' lvalue ParmVar 0xa2c2580 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa2c3ae0 <col:26> '_ForwardIterator' lvalue Var 0xa2c3410 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa2c3af8 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2c2540 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))
        (CompoundStmt 0xa2c4cd0 <line:576:8, line:613:8>
          (DeclStmt 0xa2c3c90 <line:577:3, line:578:49>
            0xa2c3bb0 "const size_type __len =
              (CallExpr 0xa2c3c68 <col:5, col:48> '<dependent type>'
                (MemberExpr 0xa2c3bf8 <col:5> '<bound member function type>' ->_M_check_len 0xa277bb0
                  (CXXThisExpr 0xa2c3be8 <col:5> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa2c3c18 <col:18> 'const size_type':'const unsigned int' lvalue Var 0xa2c2870 '__n' 'const size_type':'const unsigned int')
                (StringLiteral 0xa2c3c30 <col:23> 'const char [24]' lvalue "vector::_M_range_insert"))")
          (DeclStmt 0xa2c3d88 <line:579:3, col:48>
            0xa2c3cb0 "pointer __new_start =
              (ParenListExpr 0xa2c3d68 <col:22, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa2c3d48 <col:23, col:46> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa2c3cf8 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa2c3ce8 <col:23> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa2c3d2c <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa2c3bb0 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa2c3e10 <line:580:3, col:36>
            0xa2c3da0 "pointer __new_finish =
              (ParenListExpr 0xa2c3df0 <col:23, col:35> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa2c3dd4 <col:24> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3cb0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa2c43c8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:597:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa2c3e20 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa2c43a8 </usr/include/c++/4.6/bits/vector.tcc:582:5, line:597:5>
              (BinaryOperator 0xa2c4028 <line:583:7, line:587:30> '<dependent type>' '='
                (DeclRefExpr 0xa2c3e30 <line:583:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3da0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa2c3ff8 <line:584:9, line:587:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2c3e60 <line:584:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
                  (CXXDependentScopeMemberExpr 0xa2c3ee0 <col:37, col:51> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa2c3ea8 <col:37, col:43> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2c3e98 <col:37> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa2c3f68 <line:585:9, col:25> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2c3f30 <col:9, col:20> '<dependent type>' lvalue
                      (DeclRefExpr 0xa2c3f14 <col:9> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2c2540 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa2c3f84 <line:586:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3cb0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa2c3fd8 <line:587:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa2c3f9c <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa2c4180 <line:588:7, line:591:30> '<dependent type>' '='
                (DeclRefExpr 0xa2c4040 <line:588:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3da0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa2c4150 <line:589:9, line:591:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2c4070 <line:589:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25e6b0 0xa25efb0)
                  (DeclRefExpr 0xa2c40a8 <col:37> '_ForwardIterator' lvalue ParmVar 0xa2c2580 '__first' '_ForwardIterator')
                  (DeclRefExpr 0xa2c40c0 <col:46> '_ForwardIterator' lvalue ParmVar 0xa2c25c0 '__last' '_ForwardIterator')
                  (DeclRefExpr 0xa2c40d8 <line:590:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3da0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa2c4130 <line:591:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa2c40f0 <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa2c4390 <line:592:7, line:596:30> '<dependent type>' '='
                (DeclRefExpr 0xa2c4198 <line:592:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3da0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa2c4360 <line:593:9, line:596:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa2c41c8 <line:593:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa25f3c0)
                  (CallExpr 0xa2c4250 <col:37, col:53> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa2c4218 <col:37, col:48> '<dependent type>' lvalue
                      (DeclRefExpr 0xa2c41fc <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa2c2540 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa2c42b8 <line:594:9, col:23> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa2c4280 <col:9, col:15> '<dependent type>' lvalue
                      (CXXThisExpr 0xa2c4270 <col:9> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa2c42ec <line:595:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3da0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa2c4340 <line:596:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa2c4304 <col:9> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa2c45e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:604:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa2c43e8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa2c45c0 </usr/include/c++/4.6/bits/vector.tcc:599:5, line:604:5>
              (CallExpr 0xa2c44f0 <line:600:7, line:601:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa2c4420 <line:600:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
                (DeclRefExpr 0xa2c4460 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3cb0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa2c4478 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3da0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa2c44d0 <line:601:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2c4490 <col:7> '<dependent type>' lvalue)))
              (CallExpr 0xa2c4588 <line:602:7, col:39> '<dependent type>'
                (UnresolvedMemberExpr 0xa2c4518 <col:7> '<dependent type>' lvalue)
                (DeclRefExpr 0xa2c4554 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3cb0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa2c456c <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa2c3bb0 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa2c45b0 <line:603:30>))
            <<<NULL>>>)
          (CallExpr 0xa2c47b8 <line:605:3, line:606:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa2c4620 <line:605:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa2530a0 0xa253d60 0xa254400 0xa2549b0)
            (CXXDependentScopeMemberExpr 0xa2c46a8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c4670 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c4660 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa2c4728 <col:41, col:55> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c46f0 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c46e0 <col:41> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa2c4798 <line:606:10, col:30> '<dependent type>'
              (UnresolvedMemberExpr 0xa2c475c <col:10> '<dependent type>' lvalue)))
          (CallExpr 0xa2c4a08 <line:607:3, line:609:34> '<dependent type>'
            (UnresolvedMemberExpr 0xa2c47e0 <line:607:3> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa2c4868 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c4830 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c4820 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa2c49e0 <line:608:10, line:609:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa2c49a0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
              (CXXDependentScopeMemberExpr 0xa2c48e8 <line:608:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2c48b0 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2c48a0 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa2c4968 <line:609:12, col:26> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2c4930 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2c4920 <col:12> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa2c4ac8 <line:610:3, col:28> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2c4a78 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c4a40 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c4a30 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa2c4aac <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3cb0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa2c4b78 <line:611:3, col:29> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2c4b28 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c4af0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c4ae0 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa2c4b5c <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3da0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa2c4cb8 <line:612:3, col:51> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2c4bd8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c4ba0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c4b90 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa2c4c90 <col:37, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa2c4c40 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
              (DeclRefExpr 0xa2c4c0c <col:37> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa2c3cb0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa2c4c24 <col:51> 'const size_type':'const unsigned int' lvalue Var 0xa2c3bb0 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))

;
    void reserve(size_type __n) (CompoundStmt 0xa2c5b00 </usr/include/c++/4.6/bits/vector.tcc:624:5, line:637:5>
  (IfStmt 0xa2c5280 <line:625:7, line:626:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2c5188 <line:625:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c5138 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59dd0 0x9e70570 0x9e72cf0 0x9fd82e0 0x9fd8810 0x9fd8d40 0xa283a30)
      (DeclRefExpr 0xa2c50b4 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa2c4fd0 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa2c5118 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c50e0 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c50d0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa2c5250 <line:626:2, col:45> 'void'
      (ImplicitCastExpr 0xa2c5240 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2c5224 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x9e22e80 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa2c5270 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa2c5210 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa2c51e4 </usr/include/c++/4.6/bits/vector.tcc:626:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa2c5ae0 <line:627:7, line:636:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2c5370 <line:627:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c5320 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e58c60 0x9e6ed20 0x9e72370 0x9fd7200 0x9fd7740 0x9fd7c70 0xa27ea30)
      (CallExpr 0xa2c52e8 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c52b0 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c52a0 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa2c5304 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa2c4fd0 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa2c5ab8 <line:628:2, line:636:2>
      (DeclStmt 0xa2c5468 <line:629:4, col:43>
        0xa2c53b0 "_Bit_type *__q =
          (CallExpr 0xa2c5448 <col:21, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2c53f8 <col:21, col:27> '<dependent type>' lvalue
              (CXXThisExpr 0xa2c53e8 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa2c542c <col:39> 'size_type':'unsigned int' lvalue ParmVar 0xa2c4fd0 '__n' 'size_type':'unsigned int'))")
      (BinaryOperator 0xa2c56b8 <line:630:4, line:631:27> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2c54c0 <line:630:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c5488 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c5478 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa2c5690 <col:30, line:631:27> '<dependent type>'
          (MemberExpr 0xa2c5508 <line:630:30> '<bound member function type>' ->_M_copy_aligned 0xa293550
            (CXXThisExpr 0xa2c54f8 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))
          (CallExpr 0xa2c5578 <col:46, col:52> '<dependent type>'
            (UnresolvedMemberExpr 0xa2c5538 <col:46> '<bound member function type>' lvalue))
          (CallExpr 0xa2c55e8 <col:55, col:59> '<dependent type>'
            (UnresolvedMemberExpr 0xa2c55a8 <col:55> '<bound member function type>' lvalue))
          (CXXTemporaryObjectExpr 0xa2c5660 <line:631:11, col:26> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
            (ImplicitCastExpr 0xa2c5640 <col:20> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa2c5610 <col:20> '_Bit_type *' lvalue Var 0xa2c53b0 '__q' '_Bit_type *'))
            (ImplicitCastExpr 0xa2c5650 <col:25> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa2c5628 <col:25> 'int' 0)))))
      (CallExpr 0xa2c5718 <line:632:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c56e0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c56d0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa2c5840 <line:633:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2c5780 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c5748 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c5738 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa2c5810 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa2c57f0 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa2c57c0 <col:38> '_Bit_type *' lvalue Var 0xa2c53b0 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa2c5800 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa2c57d8 <col:43> 'int' 0))))
      (BinaryOperator 0xa2c5aa0 <line:634:4, line:635:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2c58a0 <line:634:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c5868 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c5858 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa2c5a88 <col:38, line:635:29> '_Bit_type *'
          (BinaryOperator 0xa2c5a70 <line:634:39, line:635:28> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa2c5a60 <line:634:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa2c58d4 <col:39> '_Bit_type *' lvalue Var 0xa2c53b0 '__q' '_Bit_type *'))
            (BinaryOperator 0xa2c5a48 <col:45, line:635:28> 'unsigned int' '/'
              (ParenExpr 0xa2c59d0 <line:634:45, col:72> 'unsigned int'
                (BinaryOperator 0xa2c59b8 <col:46, col:71> 'unsigned int' '-'
                  (BinaryOperator 0xa2c5978 <col:46, col:67> 'unsigned int' '+'
                    (ImplicitCastExpr 0xa2c5958 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa2c58ec <col:46> 'size_type':'unsigned int' lvalue ParmVar 0xa2c4fd0 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa2c5968 <col:52, col:67> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa2c5940 <col:52, col:67> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa2c5930 <col:56> 'int' <IntegralCast>
                          (DeclRefExpr 0xa2c5914 <col:56> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                  (ImplicitCastExpr 0xa2c59a8 <col:71> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa2c5990 <col:71> 'int' 1))))
              (ImplicitCastExpr 0xa2c5a38 <line:635:13, col:28> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa2c5a20 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa2c5a10 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa2c59f4 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
    <<<NULL>>>))


    void _M_fill_insert(iterator __position, size_type __n, bool __x) (CompoundStmt 0xa2c7658 </usr/include/c++/4.6/bits/vector.tcc:643:5, line:669:5>
  (IfStmt 0xa2c5f68 <line:644:7, line:645:2>
    <<<NULL>>>
    (BinaryOperator 0xa2c5f40 <line:644:11, col:18> '_Bool' '=='
      (ImplicitCastExpr 0xa2c5f20 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa2c5eec <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa2c5db0 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa2c5f30 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa2c5f08 <col:18> 'int' 0)))
    (ReturnStmt 0xa2c5f58 <line:645:2>)
    <<<NULL>>>)
  (IfStmt 0xa2c7638 <line:646:7, line:668:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2c60f8 <line:646:11, col:34> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c60a8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30 0xa2844c0)
      (CXXOperatorCallExpr 0xa2c6068 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa2c6028 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
        (CallExpr 0xa2c5fb8 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa2c5f98 <col:11> '<bound member function type>' ->capacity 0xa291be0
            (CXXThisExpr 0xa2c5f88 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa2c6008 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa2c5fe8 <col:24> '<bound member function type>' ->size 0xa291ae0
            (CXXThisExpr 0xa2c5fd8 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa2c608c <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa2c5db0 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa2c6968 <line:647:2, line:652:2>
      (CallExpr 0xa2c6350 <line:648:4, line:649:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa2c6140 <line:648:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9d860)
        (DeclRefExpr 0xa2c6174 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c5d70 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa2c61e0 <col:35, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0xa2c61a0 <col:35> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa2c6328 <line:649:9, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c62d8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
          (CXXDependentScopeMemberExpr 0xa2c6248 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2c6210 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa2c6200 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (CXXFunctionalCastExpr 0xa2c62c0 <col:35, col:54> 'difference_type':'int' functional cast to difference_type <NoOp>
            (ImplicitCastExpr 0xa2c62b0 <col:51> 'difference_type':'int' <IntegralCast>
              (ImplicitCastExpr 0xa2c62a0 <col:51> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa2c6288 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa2c5db0 '__n' 'size_type':'unsigned int'))))))
      (CallExpr 0xa2c67b8 <line:650:4, col:64> 'void'
        (ImplicitCastExpr 0xa2c67a8 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2c6768 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0xa28d210 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa2c67f0 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa2c67e0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa2c63d8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c5d70 '__position' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa2c6838 <col:26, col:58> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa2c6828 <col:26, col:58> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa2c6818 <col:26, col:58> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa2c6498 <col:26, col:58> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa2c6488 <col:37, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa2c6470 <col:37, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa289270 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa2c6460 <col:26> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa2c63f0 <col:26> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c5d70 '__position' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa2c6448 <col:39, col:58> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa2c6438 <col:55> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa2c6428 <col:55> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa2c6410 <col:55> 'size_type':'unsigned int' lvalue ParmVar 0xa2c5db0 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa2c6860 <col:61> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa2c64bc <col:61> '_Bool' lvalue ParmVar 0xa2c5df0 '__x' '_Bool')))
      (CompoundAssignOperator 0xa2c6948 <line:651:4, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c68b8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c6880 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c6870 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXFunctionalCastExpr 0xa2c6930 <col:31, col:50> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa2c6920 <col:47> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa2c6910 <col:47> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa2c68f8 <col:47> 'size_type':'unsigned int' lvalue ParmVar 0xa2c5db0 '__n' 'size_type':'unsigned int'))))))
    (CompoundStmt 0xa2c7608 <line:654:2, line:668:2>
      (DeclStmt 0xa2c6a70 <line:655:4, line:656:55>
        0xa2c6990 "const size_type __len =
          (CallExpr 0xa2c6a48 <col:6, col:54> '<dependent type>'
            (MemberExpr 0xa2c69d8 <col:6> '<bound member function type>' ->_M_check_len 0xa29a2b0
              (CXXThisExpr 0xa2c69c8 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa2c69f8 <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa2c5db0 '__n' 'size_type':'unsigned int')
            (StringLiteral 0xa2c6a10 <col:24> 'const char [29]' lvalue "vector<bool>::_M_fill_insert"))")
      (DeclStmt 0xa2c6b48 <line:657:4, col:46>
        0xa2c6a90 "_Bit_type *__q =
          (CallExpr 0xa2c6b28 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2c6ad8 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa2c6ac8 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa2c6b0c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa2c6990 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa2c6d00 <line:658:4, line:659:24>
        0xa2c6b60 "iterator __i =
          (CallExpr 0xa2c6cd8 <line:658:19, line:659:23> '<dependent type>'
            (MemberExpr 0xa2c6ba8 <line:658:19> '<bound member function type>' ->_M_copy_aligned 0xa293550
              (CXXThisExpr 0xa2c6b98 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa2c6c18 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa2c6bd8 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa2c6c34 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c5d70 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa2c6ca8 <line:659:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa2c6c88 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa2c6c58 <col:16> '_Bit_type *' lvalue Var 0xa2c6a90 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa2c6c98 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa2c6c70 <col:21> 'int' 0))))")
      (CallExpr 0xa2c6ee8 <line:660:4, col:50> 'void'
        (ImplicitCastExpr 0xa2c6ed8 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2c6eb8 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0xa28d210 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa2c6f20 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa2c6f10 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa2c6d70 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2c6b60 '__i' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa2c6f68 <col:19, col:44> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa2c6f58 <col:19, col:44> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa2c6f48 <col:19, col:44> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa2c6e30 <col:19, col:44> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa2c6e20 <col:23, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa2c6e08 <col:23, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa289270 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa2c6df8 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa2c6d88 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2c6b60 '__i' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa2c6de0 <col:25, col:44> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa2c6dd0 <col:41> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa2c6dc0 <col:41> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa2c6da8 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa2c5db0 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa2c6f90 <col:47> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa2c6e54 <col:47> '_Bool' lvalue ParmVar 0xa2c5df0 '__x' '_Bool')))
      (BinaryOperator 0xa2c71f0 <line:661:4, line:662:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2c6fe8 <line:661:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c6fb0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c6fa0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa2c71c8 <col:30, line:662:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c7038 <line:661:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
          (DeclRefExpr 0xa2c7070 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c5d70 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa2c70d8 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa2c7098 <col:52> '<bound member function type>' lvalue))
          (CXXOperatorCallExpr 0xa2c71a0 <line:662:12, col:37> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa2c7190 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa2c7178 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa289270 'operator+' 'iterator (difference_type) const'))
            (ImplicitCastExpr 0xa2c7168 <col:12> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (DeclRefExpr 0xa2c70f4 <col:12> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2c6b60 '__i' 'iterator':'struct std::_Bit_iterator'))
            (CXXFunctionalCastExpr 0xa2c7150 <col:18, col:37> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa2c7140 <col:34> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa2c7130 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa2c7118 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa2c5db0 '__n' 'size_type':'unsigned int')))))))
      (CallExpr 0xa2c7250 <line:663:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c7218 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c7208 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa2c74d0 <line:664:4, line:666:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2c72b8 <line:664:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c7280 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c7270 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa2c74b8 <col:38, line:666:30> '_Bit_type *'
          (BinaryOperator 0xa2c74a0 <line:664:39, line:666:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa2c7490 <line:664:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa2c72ec <col:39> '_Bit_type *' lvalue Var 0xa2c6a90 '__q' '_Bit_type *'))
            (ParenExpr 0xa2c7478 <col:45, line:666:29> 'unsigned int'
              (BinaryOperator 0xa2c7460 <line:664:46, line:666:28> 'unsigned int' '/'
                (ParenExpr 0xa2c73e8 <line:664:46, line:665:34> 'unsigned int'
                  (BinaryOperator 0xa2c73d0 <line:664:47, line:665:33> 'unsigned int' '-'
                    (BinaryOperator 0xa2c7390 <line:664:47, line:665:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa2c7370 <line:664:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa2c7304 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa2c6990 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa2c7380 <line:665:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa2c7358 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa2c7348 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa2c732c <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa2c73c0 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa2c73a8 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa2c7450 <line:666:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa2c7438 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa2c7428 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa2c740c <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa2c75f0 <line:667:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2c7530 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c74f8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c74e8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa2c75c0 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa2c75a0 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa2c7570 <col:38> '_Bit_type *' lvalue Var 0xa2c6a90 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa2c75b0 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa2c7588 <col:43> 'int' 0)))))))


    template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa2c8e18 </usr/include/c++/4.6/bits/vector.tcc:677:7, line:706:7>
  (IfStmt 0xa2c8df8 <line:678:2, line:705:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2c7c20 <line:678:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c7bc0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (DeclRefExpr 0xa2c7b8c <col:6> '_ForwardIterator' lvalue ParmVar 0xa2c7960 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa2c7ba4 <col:17> '_ForwardIterator' lvalue ParmVar 0xa2c79a0 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa2c8de0 <line:679:4, line:705:4>
      (DeclStmt 0xa2c7d30 <line:680:6, col:52>
        0xa2c7c50 "size_type __n =
          (CallExpr 0xa2c7d08 <col:22, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0xa2c7ca0 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e66090)
            (DeclRefExpr 0xa2c7cd4 <col:36> '_ForwardIterator' lvalue ParmVar 0xa2c7960 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa2c7cec <col:45> '_ForwardIterator' lvalue ParmVar 0xa2c79a0 '__last' '_ForwardIterator'))")
      (IfStmt 0xa2c8dc0 <line:681:6, line:704:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa2c7eb0 <line:681:10, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c7e60 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e5a840 0x9e70d80 0x9e73c00 0x9fda4d0 0x9fdaa00 0x9fdaf30 0xa2844c0)
          (CXXOperatorCallExpr 0xa2c7e20 <col:10, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa2c7de0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e712e0 0x9e74180 0xa288530)
            (CallExpr 0xa2c7d70 <col:10, col:19> '<dependent type>'
              (MemberExpr 0xa2c7d50 <col:10> '<bound member function type>' ->capacity 0xa291be0
                (CXXThisExpr 0xa2c7d40 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa2c7dc0 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa2c7da0 <col:23> '<bound member function type>' ->size 0xa291ae0
                (CXXThisExpr 0xa2c7d90 <col:23> 'vector<_Bool, type-parameter-0-0> *' this))))
          (DeclRefExpr 0xa2c7e44 <col:33> 'size_type':'unsigned int' lvalue Var 0xa2c7c50 '__n' 'size_type':'unsigned int'))
        (CompoundStmt 0xa2c82f8 <line:682:8, line:688:8>
          (CallExpr 0xa2c8108 <line:683:3, line:685:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa2c7ef8 <line:683:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9d860)
            (DeclRefExpr 0xa2c7f2c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c7920 '__position' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa2c7f98 <col:34, col:38> '<dependent type>'
              (UnresolvedMemberExpr 0xa2c7f58 <col:34> '<bound member function type>' lvalue))
            (CXXOperatorCallExpr 0xa2c80e0 <line:684:8, line:685:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa2c8090 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
              (CXXDependentScopeMemberExpr 0xa2c8000 <line:684:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa2c7fc8 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2c7fb8 <col:8> 'vector<_Bool, type-parameter-0-0> *' this)))
              (CXXFunctionalCastExpr 0xa2c8078 <line:685:10, col:29> 'difference_type':'int' functional cast to difference_type <NoOp>
                (ImplicitCastExpr 0xa2c8068 <col:26> 'difference_type':'int' <IntegralCast>
                  (ImplicitCastExpr 0xa2c8058 <col:26> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa2c8040 <col:26> 'size_type':'unsigned int' lvalue Var 0xa2c7c50 '__n' 'size_type':'unsigned int'))))))
          (CallExpr 0xa2c81d8 <line:686:3, col:40> '<dependent type>'
            (UnresolvedLookupExpr 0xa2c8158 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
            (DeclRefExpr 0xa2c8190 <col:13> '_ForwardIterator' lvalue ParmVar 0xa2c7960 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa2c81a8 <col:22> '_ForwardIterator' lvalue ParmVar 0xa2c79a0 '__last' '_ForwardIterator')
            (DeclRefExpr 0xa2c81c0 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c7920 '__position' 'iterator':'struct std::_Bit_iterator'))
          (CompoundAssignOperator 0xa2c82d8 <line:687:3, col:49> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2c8248 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c8210 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c8200 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXFunctionalCastExpr 0xa2c82c0 <col:30, col:49> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa2c82b0 <col:46> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa2c82a0 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa2c8288 <col:46> 'size_type':'unsigned int' lvalue Var 0xa2c7c50 '__n' 'size_type':'unsigned int'))))))
        (CompoundStmt 0xa2c8d90 <line:690:8, line:704:8>
          (DeclStmt 0xa2c8448 <line:691:3, line:692:55>
            0xa2c8320 "const size_type __len =
              (CallExpr 0xa2c8420 <col:5, col:54> '<dependent type>'
                (MemberExpr 0xa2c8368 <col:5> '<bound member function type>' ->_M_check_len 0xa29a2b0
                  (CXXThisExpr 0xa2c8358 <col:5> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa2c8388 <col:18> 'size_type':'unsigned int' lvalue Var 0xa2c7c50 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa2c83e0 <col:23> 'const char [30]' lvalue "vector<bool>::_M_insert_range"))")
          (DeclStmt 0xa2c8528 <line:693:3, col:45>
            0xa2c8470 "_Bit_type *__q =
              (CallExpr 0xa2c8508 <col:21, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa2c84b8 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa2c84a8 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa2c84ec <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa2c8320 '__len' 'const size_type':'const unsigned int'))")
          (DeclStmt 0xa2c86e0 <line:694:3, line:695:30>
            0xa2c8540 "iterator __i =
              (CallExpr 0xa2c86b8 <line:694:18, line:695:29> '<dependent type>'
                (MemberExpr 0xa2c8588 <line:694:18> '<bound member function type>' ->_M_copy_aligned 0xa293550
                  (CXXThisExpr 0xa2c8578 <col:18> 'vector<_Bool, type-parameter-0-0> *' this))
                (CallExpr 0xa2c85f8 <col:34, col:40> '<dependent type>'
                  (UnresolvedMemberExpr 0xa2c85b8 <col:34> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa2c8614 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c7920 '__position' 'iterator':'struct std::_Bit_iterator')
                (CXXTemporaryObjectExpr 0xa2c8688 <line:695:13, col:28> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                  (ImplicitCastExpr 0xa2c8668 <col:22> '_Bit_type *' <LValueToRValue>
                    (DeclRefExpr 0xa2c8638 <col:22> '_Bit_type *' lvalue Var 0xa2c8470 '__q' '_Bit_type *'))
                  (ImplicitCastExpr 0xa2c8678 <col:27> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa2c8650 <col:27> 'int' 0))))")
          (BinaryOperator 0xa2c87c8 <line:696:3, col:39> '<dependent type>' '='
            (DeclRefExpr 0xa2c86f0 <col:3> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2c8540 '__i' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa2c87a0 <col:9, col:39> '<dependent type>'
              (UnresolvedLookupExpr 0xa2c8720 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
              (DeclRefExpr 0xa2c8758 <col:19> '_ForwardIterator' lvalue ParmVar 0xa2c7960 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa2c8770 <col:28> '_ForwardIterator' lvalue ParmVar 0xa2c79a0 '__last' '_ForwardIterator')
              (DeclRefExpr 0xa2c8788 <col:36> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2c8540 '__i' 'iterator':'struct std::_Bit_iterator')))
          (BinaryOperator 0xa2c8978 <line:697:3, col:61> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2c8828 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c87f0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c87e0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa2c8950 <col:29, col:61> '<dependent type>'
              (UnresolvedLookupExpr 0xa2c8878 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
              (DeclRefExpr 0xa2c88b0 <col:39> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c7920 '__position' 'iterator':'struct std::_Bit_iterator')
              (CallExpr 0xa2c8918 <col:51, col:55> '<dependent type>'
                (UnresolvedMemberExpr 0xa2c88d8 <col:51> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa2c8934 <col:58> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2c8540 '__i' 'iterator':'struct std::_Bit_iterator')))
          (CallExpr 0xa2c89d8 <line:698:3, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2c89a0 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa2c8990 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
          (BinaryOperator 0xa2c8c58 <line:699:3, line:702:32> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2c8a40 <line:699:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c8a08 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c89f8 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (ParenExpr 0xa2c8c40 <col:37, line:702:32> '_Bit_type *'
              (BinaryOperator 0xa2c8c28 <line:699:38, line:702:31> '_Bit_type *' '+'
                (ImplicitCastExpr 0xa2c8c18 <line:699:38> '_Bit_type *' <LValueToRValue>
                  (DeclRefExpr 0xa2c8a74 <col:38> '_Bit_type *' lvalue Var 0xa2c8470 '__q' '_Bit_type *'))
                (ParenExpr 0xa2c8c00 <line:700:12, line:702:31> 'unsigned int'
                  (BinaryOperator 0xa2c8be8 <line:700:13, line:702:30> 'unsigned int' '/'
                    (ParenExpr 0xa2c8b70 <line:700:13, line:701:36> 'unsigned int'
                      (BinaryOperator 0xa2c8b58 <line:700:14, line:701:35> 'unsigned int' '-'
                        (BinaryOperator 0xa2c8b18 <line:700:14, line:701:31> 'unsigned int' '+'
                          (ImplicitCastExpr 0xa2c8af8 <line:700:14> 'size_type':'unsigned int' <LValueToRValue>
                            (DeclRefExpr 0xa2c8a8c <col:14> 'const size_type':'const unsigned int' lvalue Var 0xa2c8320 '__len' 'const size_type':'const unsigned int'))
                          (ImplicitCastExpr 0xa2c8b08 <line:701:16, col:31> 'unsigned int' <IntegralCast>
                            (CXXFunctionalCastExpr 0xa2c8ae0 <col:16, col:31> 'int' functional cast to int <NoOp>
                              (ImplicitCastExpr 0xa2c8ad0 <col:20> 'int' <IntegralCast>
                                (DeclRefExpr 0xa2c8ab4 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                        (ImplicitCastExpr 0xa2c8b48 <col:35> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa2c8b30 <col:35> 'int' 1))))
                    (ImplicitCastExpr 0xa2c8bd8 <line:702:15, col:30> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa2c8bc0 <col:15, col:30> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa2c8bb0 <col:19> 'int' <IntegralCast>
                          (DeclRefExpr 0xa2c8b94 <col:19> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
          (BinaryOperator 0xa2c8d78 <line:703:3, col:43> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa2c8cb8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa2c8c80 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa2c8c70 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXTemporaryObjectExpr 0xa2c8d48 <col:28, col:43> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa2c8d28 <col:37> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa2c8cf8 <col:37> '_Bit_type *' lvalue Var 0xa2c8470 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa2c8d38 <col:42> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa2c8d10 <col:42> 'int' 0)))))))
    <<<NULL>>>))

;
    void _M_insert_aux(iterator __position, bool __x) (CompoundStmt 0xa2ca2d0 </usr/include/c++/4.6/bits/vector.tcc:712:5, line:735:5>
  (IfStmt 0xa2ca2b0 <line:713:7, line:734:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa2c9350 <line:713:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa2c92f0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e59460 0x9e70150 0x9e72870 0x9ebd6f0 0x9edde90 0x9edea70 0x9fd61a0 0x9fd66a0 0x9fd6bb0 0xa0fc620 0xa27f100)
      (CXXDependentScopeMemberExpr 0xa2c9238 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa2c9200 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c91c8 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c91b8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa2c92b8 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa2c9280 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c9270 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa2c9720 <line:714:2, line:719:2>
      (CallExpr 0xa2c9578 <line:715:4, line:716:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa2c9398 <line:715:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e9d860)
        (DeclRefExpr 0xa2c93cc <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c9080 '__position' 'iterator':'struct std::_Bit_iterator')
        (CXXDependentScopeMemberExpr 0xa2c9430 <col:35, col:49> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c93f8 <col:35, col:41> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c93e8 <col:35> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXOperatorCallExpr 0xa2c9550 <line:716:9, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c9500 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x9e71870 0x9fd1e20 0x9ffc690 0x9ffd290 0x9fd3110 0x9fd3930 0xa28a9d0 0xa28cb60)
          (CXXDependentScopeMemberExpr 0xa2c94b0 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa2c9478 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa2c9468 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa2c94e8 <col:35> 'int' 1)))
      (CXXOperatorCallExpr 0xa2c9660 <line:717:4, col:18> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa2c9650 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2c9638 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa285270 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa2c95f0 <col:4, col:5> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa2c95e0 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2c95c8 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa288c30 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa2c95b8 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa2c95a0 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c9080 '__position' 'iterator':'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa2c9628 <col:18> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa2c9610 <col:18> '_Bool' lvalue ParmVar 0xa2c90c0 '__x' '_Bool')))
      (UnaryOperator 0xa2c9708 <line:718:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa2c96d0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c9698 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c9688 <col:6> 'vector<_Bool, type-parameter-0-0> *' this)))))
    (CompoundStmt 0xa2ca280 <line:721:2, line:734:2>
      (DeclStmt 0xa2c98a0 <line:722:4, line:723:63>
        0xa2c9750 "const size_type __len =
          (CallExpr 0xa2c9878 <col:6, col:62> '<dependent type>'
            (MemberExpr 0xa2c9798 <col:6> '<bound member function type>' ->_M_check_len 0xa29a2b0
              (CXXThisExpr 0xa2c9788 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (CXXFunctionalCastExpr 0xa2c97e8 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa2c97d8 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa2c97c0 <col:29> 'int' 1)))
            (StringLiteral 0xa2c9840 <col:33> 'const char [28]' lvalue "vector<bool>::_M_insert_aux"))")
      (DeclStmt 0xa2c9978 <line:724:4, col:46>
        0xa2c98c0 "_Bit_type *__q =
          (CallExpr 0xa2c9958 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa2c9908 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa2c98f8 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa2c993c <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa2c9750 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa2c9b30 <line:725:4, line:726:24>
        0xa2c9990 "iterator __i =
          (CallExpr 0xa2c9b08 <line:725:19, line:726:23> '<dependent type>'
            (MemberExpr 0xa2c99d8 <line:725:19> '<bound member function type>' ->_M_copy_aligned 0xa293550
              (CXXThisExpr 0xa2c99c8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa2c9a48 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa2c9a08 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa2c9a64 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c9080 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa2c9ad8 <line:726:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa2c9ab8 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa2c9a88 <col:16> '_Bit_type *' lvalue Var 0xa2c98c0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa2c9ac8 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa2c9aa0 <col:21> 'int' 0))))")
      (CXXOperatorCallExpr 0xa2c9ca8 <line:727:4, col:13> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa2c9c98 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2c9c80 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa285270 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa2c9c38 <col:4, col:8> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa2c9c28 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2c9c10 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa288c30 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa2c9c00 <col:5, col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (CXXOperatorCallExpr 0xa2c9bd8 <col:5, col:8> 'iterator':'struct std::_Bit_iterator'
              (ImplicitCastExpr 0xa2c9bc8 <<invalid sloc>> 'iterator (*)(int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa2c9b70 <<invalid sloc>> 'iterator (int)' lvalue CXXMethod 0xa288e40 'operator++' 'iterator (int)'))
              (DeclRefExpr 0xa2c9b40 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2c9990 '__i' 'iterator':'struct std::_Bit_iterator')
              (IntegerLiteral 0xa2c9b58 <<invalid sloc>> 'int' 0))))
        (ImplicitCastExpr 0xa2c9c70 <col:13> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa2c9c58 <col:13> '_Bool' lvalue ParmVar 0xa2c90c0 '__x' '_Bool')))
      (BinaryOperator 0xa2c9e68 <line:728:4, col:62> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2c9d18 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c9ce0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c9cd0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa2c9e40 <col:30, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa2c9d68 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e98550 0xa0ff420)
          (DeclRefExpr 0xa2c9da0 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa2c9080 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa2c9e08 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa2c9dc8 <col:52> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa2c9e24 <col:59> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa2c9990 '__i' 'iterator':'struct std::_Bit_iterator')))
      (CallExpr 0xa2c9ec8 <line:729:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa2c9e90 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa2c9e80 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa2ca148 <line:730:4, line:732:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2c9f30 <line:730:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2c9ef8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2c9ee8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa2ca130 <col:38, line:732:30> '_Bit_type *'
          (BinaryOperator 0xa2ca118 <line:730:39, line:732:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa2ca108 <line:730:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa2c9f64 <col:39> '_Bit_type *' lvalue Var 0xa2c98c0 '__q' '_Bit_type *'))
            (ParenExpr 0xa2ca0f0 <col:45, line:732:29> 'unsigned int'
              (BinaryOperator 0xa2ca0d8 <line:730:46, line:732:28> 'unsigned int' '/'
                (ParenExpr 0xa2ca060 <line:730:46, line:731:34> 'unsigned int'
                  (BinaryOperator 0xa2ca048 <line:730:47, line:731:33> 'unsigned int' '-'
                    (BinaryOperator 0xa2ca008 <line:730:47, line:731:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa2c9fe8 <line:730:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa2c9f7c <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa2c9750 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa2c9ff8 <line:731:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa2c9fd0 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa2c9fc0 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa2c9fa4 <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa2ca038 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa2ca020 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa2ca0c8 <line:732:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa2ca0b0 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa2ca0a0 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa2ca084 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa284d30 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa2ca268 <line:733:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa2ca1a8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa2ca170 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa2ca160 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa2ca238 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa2ca218 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa2ca1e8 <col:38> '_Bit_type *' lvalue Var 0xa2c98c0 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa2ca228 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa2ca200 <col:43> 'int' 0)))))))


}
extern "C" {
    extern void *memcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *memmove(void *__dest, const void *__src, size_t __n) throw();
    extern void *memccpy(void *restrict __dest, const void *restrict __src, int __c, size_t __n) throw();
    extern void *memset(void *__s, int __c, size_t __n) throw();
    extern int memcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern void *memchr(const void *__s, int __c, size_t __n) throw();
    extern void *rawmemchr(const void *__s, int __c) throw();
    extern void *memrchr(const void *__s, int __c, size_t __n) throw();
    extern char *strcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *strcat(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncat(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcmp(const char *__s1, const char *__s2) throw();
    extern int strncmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcoll(const char *__s1, const char *__s2) throw();
    extern size_t strxfrm(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcoll_l(const char *__s1, const char *__s2, __locale_t __l) throw();
    extern size_t strxfrm_l(char *__dest, const char *__src, size_t __n, __locale_t __l) throw();
    extern char *strdup(const char *__s) throw();
    extern char *strndup(const char *__string, size_t __n) throw();
    extern char *strchr(const char *__s, int __c) throw();
    extern char *strrchr(const char *__s, int __c) throw();
    extern char *strchrnul(const char *__s, int __c) throw();
    extern size_t strcspn(const char *__s, const char *__reject) throw();
    extern size_t strspn(const char *__s, const char *__accept) throw();
    extern char *strpbrk(const char *__s, const char *__accept) throw();
    extern char *strstr(const char *__haystack, const char *__needle) throw();
    extern char *strtok(char *restrict __s, const char *restrict __delim) throw();
    extern char *__strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strcasestr(const char *__haystack, const char *__needle) throw();
    extern void *memmem(const void *__haystack, size_t __haystacklen, const void *__needle, size_t __needlelen) throw();
    extern void *__mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern size_t strlen(const char *__s) throw();
    extern size_t strnlen(const char *__string, size_t __maxlen) throw();
    extern char *strerror(int __errnum) throw();
    extern char *strerror_r(int __errnum, char *__buf, size_t __buflen) throw();
    extern char *strerror_l(int __errnum, __locale_t __l) throw();
    extern void __bzero(void *__s, size_t __n) throw();
    extern void bcopy(const void *__src, void *__dest, size_t __n) throw();
    extern void bzero(void *__s, size_t __n) throw();
    extern int bcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern char *index(const char *__s, int __c) throw();
    extern char *rindex(const char *__s, int __c) throw();
    extern int ffs(int __i) throw();
    extern int ffsl(long __l) throw();
    extern int ffsll(long long __ll) throw();
    extern int strcasecmp(const char *__s1, const char *__s2) throw();
    extern int strncasecmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcasecmp_l(const char *__s1, const char *__s2, __locale_t __loc) throw();
    extern int strncasecmp_l(const char *__s1, const char *__s2, size_t __n, __locale_t __loc) throw();
    extern char *strsep(char **restrict __stringp, const char *restrict __delim) throw();
    extern char *strsignal(int __sig) throw();
    extern char *__stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *__stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strverscmp(const char *__s1, const char *__s2) throw();
    extern char *strfry(char *__string) throw();
    extern void *memfrob(void *__s, size_t __n) throw();
    extern char *basename(const char *__filename) throw();
}
extern "C" {
    extern int *__errno_location() throw();
    extern char *program_invocation_name;
    extern char *program_invocation_short_name;
}
typedef int error_t;
extern "C" {
    extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert(const char *__assertion, const char *__file, int __line) throw();
}
template <typename T> static inline T maxi(T a, T b) (CompoundStmt 0xa2d21a8 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0xa2d2198 <line:18:5, col:18>
    (ConditionalOperator 0xa2d2178 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0xa2d2130 <col:12, col:14> '<dependent type>' '>'
        (DeclRefExpr 0xa2d2100 <col:12> 'T' lvalue ParmVar 0xa2d1f90 'a' 'T')
        (DeclRefExpr 0xa2d2118 <col:14> 'T' lvalue ParmVar 0xa2d1fd0 'b' 'T'))
      (DeclRefExpr 0xa2d2148 <col:16> 'T' lvalue ParmVar 0xa2d1f90 'a' 'T')
      (DeclRefExpr 0xa2d2160 <col:18> 'T' lvalue ParmVar 0xa2d1fd0 'b' 'T'))))

;
template <typename T> static inline T mini(T a, T b) (CompoundStmt 0xa2d2418 <../codeBase/fish-shell-master/util.h:26:1, line:28:1>
  (ReturnStmt 0xa2d2408 <line:27:5, col:18>
    (ConditionalOperator 0xa2d23e8 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0xa2d23a0 <col:12, col:14> '<dependent type>' '<'
        (DeclRefExpr 0xa2d2370 <col:12> 'T' lvalue ParmVar 0xa2d2220 'a' 'T')
        (DeclRefExpr 0xa2d2388 <col:14> 'T' lvalue ParmVar 0xa2d2260 'b' 'T'))
      (DeclRefExpr 0xa2d23b8 <col:16> 'T' lvalue ParmVar 0xa2d2220 'a' 'T')
      (DeclRefExpr 0xa2d23d0 <col:18> 'T' lvalue ParmVar 0xa2d2260 'b' 'T'))))

;
int wcsfilecmp(const wchar_t *a, const wchar_t *b);
long long get_time();
class completion_t;
typedef std::wstring wcstring;
typedef std::vector<wcstring> wcstring_list_t;
enum  {
    ESCAPE_ALL = (ImplicitCastExpr 0xa2e2c18 <../codeBase/fish-shell-master/common.h:76:18, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2e2ac0 <col:18, col:23> 'int' '<<'
    (IntegerLiteral 0xa2e2a90 <col:18> 'int' 1)
    (IntegerLiteral 0xa2e2aa8 <col:23> 'int' 0)))
,
    ESCAPE_NO_QUOTED = (ImplicitCastExpr 0xa2e2c28 <../codeBase/fish-shell-master/common.h:79:24, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2e2b48 <col:24, col:29> 'int' '<<'
    (IntegerLiteral 0xa2e2b18 <col:24> 'int' 1)
    (IntegerLiteral 0xa2e2b30 <col:29> 'int' 1)))
,
    ESCAPE_NO_TILDE = (ImplicitCastExpr 0xa2e2c38 <../codeBase/fish-shell-master/common.h:82:23, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa2e2bc8 <col:23, col:28> 'int' '<<'
    (IntegerLiteral 0xa2e2b98 <col:23> 'int' 1)
    (IntegerLiteral 0xa2e2bb0 <col:28> 'int' 2)))

};
typedef unsigned int escape_flags_t;
void exit_without_destructors(int code);
extern struct termios shell_modes;
extern wchar_t ellipsis_char;
extern wchar_t omitted_newline_char;
extern int debug_level;
extern char *profile;
extern const wchar_t *program_name;
void show_stackframe();
int fgetws2(wcstring *s, FILE *f);
wcstring str2wcstring(const char *in);
wcstring str2wcstring(const char *in, size_t len);
wcstring str2wcstring(const std::string &in);
char *wcs2str(const wchar_t *in);
char *wcs2str(const wcstring &in);
std::string wcs2string(const wcstring &input);
bool string_prefixes_string(const wcstring &proposed_prefix, const wcstring &value);
bool string_prefixes_string(const wchar_t *proposed_prefix, const wcstring &value);
bool string_suffixes_string(const wcstring &proposed_suffix, const wcstring &value);
bool string_suffixes_string(const wchar_t *proposed_suffix, const wcstring &value);
bool string_prefixes_string_case_insensitive(const wcstring &proposed_prefix, const wcstring &value);
enum fuzzy_match_type_t {
    fuzzy_match_exact = (ImplicitCastExpr 0xa2e4158 <../codeBase/fish-shell-master/common.h:252:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e3f80 <col:25> 'int' 0))
,
    fuzzy_match_prefix,
    fuzzy_match_case_insensitive,
    fuzzy_match_prefix_case_insensitive,
    fuzzy_match_substring,
    fuzzy_match_subsequence_insertions_only,
    fuzzy_match_none
};
static inline bool match_type_requires_full_replacement(fuzzy_match_type_t t) (CompoundStmt 0xa2e43b0 <../codeBase/fish-shell-master/common.h:275:1, line:284:1>
  (SwitchStmt 0xa2e4290 <line:276:5, line:283:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2e4280 <line:276:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa2e4270 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa2e4254 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa2e4170 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa2e4378 <line:277:5, line:283:5>
      (CaseStmt 0xa2e42c8 <line:278:9, line:280:20>
        (ImplicitCastExpr 0xa2e43a0 <line:278:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa2e42ac <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa2e3fa0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa2e4300 <line:279:9, line:280:20>
          (ImplicitCastExpr 0xa2e4390 <line:279:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa2e42e8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa2e3fe0 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (ReturnStmt 0xa2e4330 <line:280:13, col:20>
            (CXXBoolLiteralExpr 0xa2e4320 <col:20> '_Bool' false))))
      (DefaultStmt 0xa2e4360 <line:281:9, line:282:20>
        (ReturnStmt 0xa2e4350 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa2e4340 <col:20> '_Bool' true))))))


static inline bool match_type_shares_prefix(fuzzy_match_type_t t) (CompoundStmt 0xa2e4670 <../codeBase/fish-shell-master/common.h:288:1, line:299:1>
  (SwitchStmt 0xa2e44c0 <line:289:5, line:298:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa2e44b0 <line:289:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa2e44a0 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa2e4484 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa2e43d0 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa2e4618 <line:290:5, line:298:5>
      (CaseStmt 0xa2e44f8 <line:291:9, line:295:20>
        (ImplicitCastExpr 0xa2e4660 <line:291:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa2e44dc <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa2e3fa0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa2e4530 <line:292:9, line:295:20>
          (ImplicitCastExpr 0xa2e4650 <line:292:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa2e4518 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa2e3fe0 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (CaseStmt 0xa2e4568 <line:293:9, line:295:20>
            (ImplicitCastExpr 0xa2e4640 <line:293:14> 'int' <IntegralCast>
              (DeclRefExpr 0xa2e4550 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa2e4020 'fuzzy_match_case_insensitive' 'enum fuzzy_match_type_t'))
            <<<NULL>>>
            (CaseStmt 0xa2e45a0 <line:294:9, line:295:20>
              (ImplicitCastExpr 0xa2e4630 <line:294:14> 'int' <IntegralCast>
                (DeclRefExpr 0xa2e4588 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa2e4060 'fuzzy_match_prefix_case_insensitive' 'enum fuzzy_match_type_t'))
              <<<NULL>>>
              (ReturnStmt 0xa2e45d0 <line:295:13, col:20>
                (CXXBoolLiteralExpr 0xa2e45c0 <col:20> '_Bool' true))))))
      (DefaultStmt 0xa2e4600 <line:296:9, line:297:20>
        (ReturnStmt 0xa2e45f0 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa2e45e0 <col:20> '_Bool' false))))))


struct string_fuzzy_match_t {
    struct string_fuzzy_match_t;
    enum fuzzy_match_type_t type;
    size_t match_distance_first;
    size_t match_distance_second;
    string_fuzzy_match_t(enum fuzzy_match_type_t t, size_t distance_first = (ImplicitCastExpr 0xa2e4ba0 <../codeBase/fish-shell-master/common.h:311:77> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e4b88 <col:77> 'int' 0))
, size_t distance_second = (ImplicitCastExpr 0xa2e4bc8 <../codeBase/fish-shell-master/common.h:311:105> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2e4bb0 <col:105> 'int' 0))
);
    int compare(const string_fuzzy_match_t &rhs) const;
};
string_fuzzy_match_t string_fuzzy_match_string(const wcstring &string, const wcstring &match_against, fuzzy_match_type_t limit_type = (DeclRefExpr 0xa2e4cb4 <../codeBase/fish-shell-master/common.h:318:135> 'enum fuzzy_match_type_t' EnumConstant 0xa2e4120 'fuzzy_match_none' 'enum fuzzy_match_type_t')
);
bool list_contains_string(const wcstring_list_t &list, const wcstring &str);
void assert_is_main_thread(const char *who);
void assert_is_background_thread(const char *who);
void assert_is_locked(void *mutex, const char *who, const char *caller);
wcstring format_size(long long sz);
void format_size_safe(char buff[128], unsigned long long sz);
void debug_safe(int level, const char *msg, const char *param1 = (ImplicitCastExpr 0xa2e5658 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e5648 <col:14> 'int'))
, const char *param2 = (ImplicitCastExpr 0xa2e56c8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e56b8 <col:14> 'int'))
, const char *param3 = (ImplicitCastExpr 0xa2e5738 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e5728 <col:14> 'int'))
, const char *param4 = (ImplicitCastExpr 0xa2e57a8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e5798 <col:14> 'int'))
, const char *param5 = (ImplicitCastExpr 0xa2e5818 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e5808 <col:14> 'int'))
, const char *param6 = (ImplicitCastExpr 0xa2e5888 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e5878 <col:14> 'int'))
, const char *param7 = (ImplicitCastExpr 0xa2e58f8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e58e8 <col:14> 'int'))
, const char *param8 = (ImplicitCastExpr 0xa2e5968 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e5958 <col:14> 'int'))
, const char *param9 = (ImplicitCastExpr 0xa2e59d8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e59c8 <col:14> 'int'))
, const char *param10 = (ImplicitCastExpr 0xa2e5a48 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e5a38 <col:14> 'int'))
, const char *param11 = (ImplicitCastExpr 0xa2e5ab8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e5aa8 <col:14> 'int'))
, const char *param12 = (ImplicitCastExpr 0xa2e5b28 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2e5b18 <col:14> 'int'))
);
void format_long_safe(char buff[128], long val);
void format_long_safe(wchar_t buff[128], long val);
template <typename T = bool> inline bool from_string(const wcstring &x) (CompoundStmt 0xa2e8bf8 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa2e8be8 <line:395:5, col:51>
    (BinaryOperator 0xa2e8bd0 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa2e89c8 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa2e8990 <col:14, col:22> '_Bool'
          (MemberExpr 0xa2e8970 <col:14, col:16> '<bound member function type>' .empty 0xa03e840
            (DeclRefExpr 0xa2e8958 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa2e8670 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa2e8bc0 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa2e8b78 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa2e8b68 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2e8b4c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9d72ad0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa2e8ba0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa2e8a60 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa2e8bb0 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa2e8b20 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa2e8b00 <col:44, col:46> '<bound member function type>' .at 0xa03f1d0
                (DeclRefExpr 0xa2e8a90 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa2e8670 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa2e8b40 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa2e8ae8 <col:49> 'int' 0)))))))))

template <typename T> T from_string(const wcstring &x) (CompoundStmt 0xa2e6930 <../codeBase/fish-shell-master/common.h:353:1, line:358:1>
  (DeclStmt 0xa2e6168 <line:354:5, col:13>
    0xa2e6130 "T result")
  (DeclStmt 0xa2e68b0 <line:355:5, col:33>
    0xa2e61d0 "std::wstringstream stream =
      (CXXConstructExpr 0xa2e6888 <col:24, col:32> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa2e6204 <col:31> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa2e5ff0 'x' 'const wcstring &')
        (CXXDefaultArgExpr 0xa2e6870 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa2e68f0 <line:356:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa2e68c0 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa2e61d0 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa2e68d8 <col:15> 'T' lvalue Var 0xa2e6130 'result' 'T'))
  (ReturnStmt 0xa2e6920 <line:357:5, col:12>
    (DeclRefExpr 0xa2e6908 <col:12> 'T' lvalue Var 0xa2e6130 'result' 'T')))

;
template <typename T = bool> inline bool from_string(const std::string &x) (CompoundStmt 0xa2e8638 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa2e8628 <line:389:5, col:50>
    (BinaryOperator 0xa2e8610 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa2e8410 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa2e83f0 <col:14, col:22> '_Bool'
          (MemberExpr 0xa2e83d0 <col:14, col:16> '<bound member function type>' .empty 0xa019330
            (DeclRefExpr 0xa2e83b8 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa2e80d0 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa2e8600 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa2e85a8 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa2e8598 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2e853c <col:27> 'char *(const char *, int) throw()' lvalue Function 0xa2ccd10 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa2e85d0 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa2e845c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa2e85f0 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa2e85e0 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa2e8510 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa2e84f0 <col:43, col:45> '<bound member function type>' .at 0xa019cc0
                  (DeclRefExpr 0xa2e8480 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa2e80d0 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa2e8530 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa2e84d8 <col:48> 'int' 0))))))))))

template <typename T> T from_string(const std::string &x) (CompoundStmt 0xa2e7320 <../codeBase/fish-shell-master/common.h:362:1, line:367:1>
  (DeclStmt 0xa2e6b78 <line:363:5, col:19>
    0xa2e6b20 "T result =
      (CXXUnresolvedConstructExpr 0xa2e6b60 <col:16, col:18> 'T')")
  (DeclStmt 0xa2e72a0 <line:364:5, col:32>
    0xa2e6be0 "std::stringstream stream =
      (CXXConstructExpr 0xa2e7278 <col:23, col:31> 'std::stringstream':'class std::basic_stringstream<char>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa2e6c14 <col:30> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa2e69e0 'x' 'const std::string &')
        (CXXDefaultArgExpr 0xa2e7260 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa2e72e0 <line:365:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa2e72b0 <col:5> 'std::stringstream':'class std::basic_stringstream<char>' lvalue Var 0xa2e6be0 'stream' 'std::stringstream':'class std::basic_stringstream<char>')
    (DeclRefExpr 0xa2e72c8 <col:15> 'T' lvalue Var 0xa2e6b20 'result' 'T'))
  (ReturnStmt 0xa2e7310 <line:366:5, col:12>
    (DeclRefExpr 0xa2e72f8 <col:12> 'T' lvalue Var 0xa2e6b20 'result' 'T')))

;
template <typename T = int> inline wcstring to_string(const int &x) (CompoundStmt 0xa2e9130 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa2e9120 <line:401:5, col:42>
    (ExprWithCleanups 0xa2e9100 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa2e90a0)
      (CXXConstructExpr 0xa2e90d8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa2e90c8 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa2e90b8 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa2e90a8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa2e90a0)
              (CallExpr 0xa2e9068 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa2e9058 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa2e9000 <col:12> 'wcstring (const long &)' lvalue Function 0xa2e78d0 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa2e74d0 'to_string')))
                (MaterializeTemporaryExpr 0xa2e9088 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa2e8fb8 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa2e8fa8 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa2e8f98 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa2e8f6c <col:40> 'const int' lvalue ParmVar 0xa2e8c30 'x' 'const int &')))))))))))))

template <typename T = long> inline wcstring to_string(const long &x) (CompoundStmt 0xa2e8068 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa2e7bc8 <line:381:5, col:22>
    0xa2e7b90 "wchar_t buff[128]")
  (CallExpr 0xa2e7c88 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa2e7c78 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2e7c40 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa2e5f10 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa2e7cb0 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa2e7c10 <col:22> 'wchar_t [128]' lvalue Var 0xa2e7b90 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa2e7cc0 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa2e7c28 <col:28> 'const long' lvalue ParmVar 0xa2e7830 'x' 'const long &')))
  (ReturnStmt 0xa2e8058 <line:383:5, col:25>
    (ExprWithCleanups 0xa2e8038 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa2e7d40)
      (CXXTemporary 0xa2e7fc0)
      (CXXConstructExpr 0xa2e8010 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa2e8000 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa2e7ff0 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa2e7fd8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa2e7fc8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa2e7fc0)
                (CXXConstructExpr 0xa2e7f98 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa2e7d00 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa2e7cf0 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa2e7cd8 <col:21> 'wchar_t [128]' lvalue Var 0xa2e7b90 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa2e7f80 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))

template <typename T> wcstring to_string(const T &x) (CompoundStmt 0xa2e77d0 <../codeBase/fish-shell-master/common.h:371:1, line:375:1>
  (DeclStmt 0xa2e7618 <line:372:5, col:30>
    0xa2e7530 "std::wstringstream stream =
      (CXXConstructExpr 0xa2e75f0 <col:24> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (class ios_base::openmode)'
        (CXXDefaultArgExpr 0xa2e75d8 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa2e7658 <line:373:5, col:15> '<dependent type>' '<<'
    (DeclRefExpr 0xa2e7628 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa2e7530 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa2e7640 <col:15> 'const T' lvalue ParmVar 0xa2e73d0 'x' 'const T &'))
  (ReturnStmt 0xa2e77c0 <line:374:5, col:23>
    (ExprWithCleanups 0xa2e77a0 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa2e7740)
      (CXXConstructExpr 0xa2e7778 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa2e7768 <col:12, col:23> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa2e7758 <col:12, col:23> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa2e7748 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>' (CXXTemporary 0xa2e7740)
              (CXXMemberCallExpr 0xa2e76e8 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>'
                (MemberExpr 0xa2e76c8 <col:12, col:19> '<bound member function type>' .str 0xa2527a0
                  (ImplicitCastExpr 0xa2e7728 <col:12> 'const class std::basic_stringstream<wchar_t>' lvalue <NoOp>
                    (DeclRefExpr 0xa2e7670 <col:12> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa2e7530 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')))))))))))

;
inline wcstring to_string(const long &x) (CompoundStmt 0xa2e8068 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa2e7bc8 <line:381:5, col:22>
    0xa2e7b90 "wchar_t buff[128]")
  (CallExpr 0xa2e7c88 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa2e7c78 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2e7c40 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa2e5f10 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa2e7cb0 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa2e7c10 <col:22> 'wchar_t [128]' lvalue Var 0xa2e7b90 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa2e7cc0 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa2e7c28 <col:28> 'const long' lvalue ParmVar 0xa2e7830 'x' 'const long &')))
  (ReturnStmt 0xa2e8058 <line:383:5, col:25>
    (ExprWithCleanups 0xa2e8038 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa2e7d40)
      (CXXTemporary 0xa2e7fc0)
      (CXXConstructExpr 0xa2e8010 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa2e8000 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa2e7ff0 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa2e7fd8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa2e7fc8 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa2e7fc0)
                (CXXConstructExpr 0xa2e7f98 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa2e7d00 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa2e7cf0 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa2e7cd8 <col:21> 'wchar_t [128]' lvalue Var 0xa2e7b90 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa2e7f80 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))


inline bool from_string(const std::string &x) (CompoundStmt 0xa2e8638 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa2e8628 <line:389:5, col:50>
    (BinaryOperator 0xa2e8610 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa2e8410 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa2e83f0 <col:14, col:22> '_Bool'
          (MemberExpr 0xa2e83d0 <col:14, col:16> '<bound member function type>' .empty 0xa019330
            (DeclRefExpr 0xa2e83b8 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa2e80d0 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa2e8600 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa2e85a8 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa2e8598 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2e853c <col:27> 'char *(const char *, int) throw()' lvalue Function 0xa2ccd10 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa2e85d0 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa2e845c <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa2e85f0 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa2e85e0 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa2e8510 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa2e84f0 <col:43, col:45> '<bound member function type>' .at 0xa019cc0
                  (DeclRefExpr 0xa2e8480 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa2e80d0 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa2e8530 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa2e84d8 <col:48> 'int' 0))))))))))


inline bool from_string(const wcstring &x) (CompoundStmt 0xa2e8bf8 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa2e8be8 <line:395:5, col:51>
    (BinaryOperator 0xa2e8bd0 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa2e89c8 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa2e8990 <col:14, col:22> '_Bool'
          (MemberExpr 0xa2e8970 <col:14, col:16> '<bound member function type>' .empty 0xa03e840
            (DeclRefExpr 0xa2e8958 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa2e8670 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa2e8bc0 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa2e8b78 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa2e8b68 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa2e8b4c <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9d72ad0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa2e8ba0 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa2e8a60 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa2e8bb0 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa2e8b20 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa2e8b00 <col:44, col:46> '<bound member function type>' .at 0xa03f1d0
                (DeclRefExpr 0xa2e8a90 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa2e8670 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa2e8b40 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa2e8ae8 <col:49> 'int' 0)))))))))


inline wcstring to_string(const int &x) (CompoundStmt 0xa2e9130 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa2e9120 <line:401:5, col:42>
    (ExprWithCleanups 0xa2e9100 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa2e90a0)
      (CXXConstructExpr 0xa2e90d8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa2e90c8 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa2e90b8 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa2e90a8 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa2e90a0)
              (CallExpr 0xa2e9068 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa2e9058 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa2e9000 <col:12> 'wcstring (const long &)' lvalue Function 0xa2e78d0 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa2e74d0 'to_string')))
                (MaterializeTemporaryExpr 0xa2e9088 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa2e8fb8 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa2e8fa8 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa2e8f98 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa2e8f6c <col:40> 'const int' lvalue ParmVar 0xa2e8c30 'x' 'const int &')))))))))))))


wchar_t **make_null_terminated_array(const wcstring_list_t &lst);
char **make_null_terminated_array(const std::vector<std::string> &lst);
template <typename CharType_t = char> class null_terminated_array_t
template <typename CharType_t = wchar_t> class null_terminated_array_t
template <typename CharType_t> class null_terminated_array_t {
    class null_terminated_array_t;
    CharType_t **array;
    void operator=(null_terminated_array_t<CharType_t> rhs);
    null_terminated_array_t<CharType_t>(const null_terminated_array_t<CharType_t> &);
    typedef std::vector<std::basic_string<CharType_t> > string_list_t;
    size_t size() const (CompoundStmt 0xa2f1bd8 <../codeBase/fish-shell-master/common.h:420:5, line:430:5>
  (DeclStmt 0xa2f19e0 <line:421:9, col:23>
    0xa2f1980 "size_t len =
      (ImplicitCastExpr 0xa2f19d0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa2f19b8 <col:22> 'int' 0))")
  (IfStmt 0xa2f1b80 <line:422:9, line:428:9>
    <<<NULL>>>
    (BinaryOperator 0xa2f1a68 <line:422:13, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '!='
      (MemberExpr 0xa2f1a34 <../codeBase/fish-shell-master/common.h:422:13> 'CharType_t **const' lvalue ->array 0xa2e9960
        (CXXThisExpr 0xa2f1a08 <col:13> 'const null_terminated_array_t<CharType_t> *' this))
      (GNUNullExpr 0xa2f1a58 </usr/include/clang/3.0/include/stddef.h:47:14> 'int'))
    (CompoundStmt 0xa2f1b68 <../codeBase/fish-shell-master/common.h:423:9, line:428:9>
      (WhileStmt 0xa2f1b50 <line:424:13, line:427:13>
        <<<NULL>>>
        (BinaryOperator 0xa2f1af0 <line:424:20, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '!='
          (ArraySubscriptExpr 0xa2f1ac8 <../codeBase/fish-shell-master/common.h:424:20, col:29> '<dependent type>' lvalue
            (MemberExpr 0xa2f1a90 <col:20> 'CharType_t **const' lvalue ->array 0xa2e9960
              (CXXThisExpr 0xa2f1a80 <col:20> 'const null_terminated_array_t<CharType_t> *' this))
            (DeclRefExpr 0xa2f1ab0 <col:26> 'size_t':'unsigned int' lvalue Var 0xa2f1980 'len' 'size_t':'unsigned int'))
          (GNUNullExpr 0xa2f1ae0 </usr/include/clang/3.0/include/stddef.h:47:14> 'int'))
        (CompoundStmt 0xa2f1b38 <../codeBase/fish-shell-master/common.h:425:13, line:427:13>
          (UnaryOperator 0xa2f1b20 <line:426:17, col:20> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0xa2f1b08 <col:17> 'size_t':'unsigned int' lvalue Var 0xa2f1980 'len' 'size_t':'unsigned int')))))
    <<<NULL>>>)
  (ReturnStmt 0xa2f1bc8 <line:429:9, col:16>
    (ImplicitCastExpr 0xa2f1bb8 <col:16> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa2f1b9c <col:16> 'size_t':'unsigned int' lvalue Var 0xa2f1980 'len' 'size_t':'unsigned int'))))


    void free() (CompoundStmt 0xa2f1d30 <../codeBase/fish-shell-master/common.h:433:5, line:436:5>
  (CallExpr 0xa2f1cb8 <line:434:9, col:29> 'void'
    (ImplicitCastExpr 0xa2f1ca8 <col:9, col:11> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2f1c0c <col:9, col:11> 'void (void *) throw()' lvalue Function 0x9d8abc0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa2f1c70 <col:16, col:24> 'void *' <Dependent>
      (MemberExpr 0xa2f1c40 <col:24> 'CharType_t **' lvalue ->array 0xa2e9960
        (CXXThisExpr 0xa2f1c30 <col:24> 'null_terminated_array_t<CharType_t> *' this))))
  (BinaryOperator 0xa2f1d18 <line:435:9, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '='
    (MemberExpr 0xa2f1ce8 <../codeBase/fish-shell-master/common.h:435:9> 'CharType_t **' lvalue ->array 0xa2e9960
      (CXXThisExpr 0xa2f1cd8 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (GNUNullExpr 0xa2f1d08 </usr/include/clang/3.0/include/stddef.h:47:14> 'int')))


public:
public:
    null_terminated_array_t<CharType_t>() : array((GNUNullExpr 0xa2f1d48 </usr/include/clang/3.0/include/stddef.h:47:14> 'int')
) (CompoundStmt 0xa2f1da0 <../codeBase/fish-shell-master/common.h:439:45, col:47>)


    null_terminated_array_t<CharType_t>(const string_list_t &argv) : array((CallExpr 0xa2f1e00 <../codeBase/fish-shell-master/common.h:440:64, col:95> '<dependent type>'
  (UnresolvedLookupExpr 0xa2f1db0 <col:64> '<overloaded function type>' lvalue (ADL) = '1' 0xa2e9630 0xa2e9200)
  (DeclRefExpr 0xa2f1de8 <col:91> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa2ea2e0 'argv' 'const string_list_t &'))
) (CompoundStmt 0xa2f1e60 <../codeBase/fish-shell-master/common.h:441:5, line:442:5>)


    void ~null_terminated_array_t<CharType_t>() (CompoundStmt 0xa2f1ed8 <../codeBase/fish-shell-master/common.h:445:5, line:447:5>
  (CallExpr 0xa2f1eb8 <line:446:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2f1e80 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa2f1e70 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


    void set(const string_list_t &argv) (CompoundStmt 0xa2f2028 <../codeBase/fish-shell-master/common.h:450:5, line:453:5>
  (CallExpr 0xa2f1f38 <line:451:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2f1f00 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa2f1ef0 <col:9> 'null_terminated_array_t<CharType_t> *' this)))
  (BinaryOperator 0xa2f2010 <line:452:9, col:54> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa2f1f68 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa2f1f58 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (CallExpr 0xa2f1ff0 <col:23, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa2f1fa0 <col:23> '<overloaded function type>' lvalue (ADL) = '1' 0xa2e9630 0xa2e9200)
      (DeclRefExpr 0xa2f1fd8 <col:50> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa2ea4a0 'argv' 'const string_list_t &'))))


    const CharType_t *const *get() const (CompoundStmt 0xa2f2080 <../codeBase/fish-shell-master/common.h:456:5, line:458:5>
  (ReturnStmt 0xa2f2070 <line:457:9, col:16>
    (MemberExpr 0xa2f2050 <col:16> 'CharType_t **const' lvalue ->array 0xa2e9960
      (CXXThisExpr 0xa2f2040 <col:16> 'const null_terminated_array_t<CharType_t> *' this))))


    void clear() (CompoundStmt 0xa2f2100 <../codeBase/fish-shell-master/common.h:461:5, line:463:5>
  (CallExpr 0xa2f20e0 <line:462:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa2f20a8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa2f2098 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


};
void convert_wide_array_to_narrow(const null_terminated_array_t<wchar_t> &arr, null_terminated_array_t<char> *output);
class narrow_string_rep_t {
    class narrow_string_rep_t;
private:
private:
    const char *str;
    narrow_string_rep_t &operator=(const narrow_string_rep_t &);
    narrow_string_rep_t(const narrow_string_rep_t &x);
public:
public:
    void ~narrow_string_rep_t() (CompoundStmt 0xa2f2ce8 <../codeBase/fish-shell-master/common.h:481:5, line:483:5>
  (CallExpr 0xa2f2cc8 <line:482:9, col:25> 'void'
    (ImplicitCastExpr 0xa2f2cb8 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2f2ca0 <col:9> 'void (void *) throw()' lvalue Function 0x9d8abc0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa2f2c88 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa2f2c78 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa2f2c68 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa2f2c38 <col:22> 'const char *' lvalue ->str 0xa2f2680
            (CXXThisExpr 0xa2f2c28 <col:22> 'class narrow_string_rep_t *' this)))))))


    narrow_string_rep_t() : str((ImplicitCastExpr 0xa2f2d10 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa2f2d00 <col:14> 'int'))
) (CompoundStmt 0xa2f2d40 <../codeBase/fish-shell-master/common.h:485:39, col:40>)


    void set(const wcstring &s) (CompoundStmt 0xa2f2f90 <../codeBase/fish-shell-master/common.h:488:5, line:491:5>
  (CallExpr 0xa2f2e28 <line:489:9, col:25> 'void'
    (ImplicitCastExpr 0xa2f2e18 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa2f2e00 <col:9> 'void (void *) throw()' lvalue Function 0x9d8abc0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa2f2de8 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa2f2dd8 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa2f2dc8 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa2f2d98 <col:22> 'const char *' lvalue ->str 0xa2f2680
            (CXXThisExpr 0xa2f2d88 <col:22> 'class narrow_string_rep_t *' this))))))
  (BinaryOperator 0xa2f2f78 <line:490:9, col:32> 'const char *' lvalue '='
    (MemberExpr 0xa2f2e58 <col:9> 'const char *' lvalue ->str 0xa2f2680
      (CXXThisExpr 0xa2f2e48 <col:9> 'class narrow_string_rep_t *' this))
    (ImplicitCastExpr 0xa2f2f68 <col:15, col:32> 'const char *' <NoOp>
      (CallExpr 0xa2f2f48 <col:15, col:32> 'char *'
        (ImplicitCastExpr 0xa2f2f38 <col:15> 'char *(*)(const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa2f2f04 <col:15> 'char *(const wchar_t *)' lvalue Function 0xa2e35d0 'wcs2str' 'char *(const wchar_t *)'))
        (CXXMemberCallExpr 0xa2f2ee8 <col:23, col:31> 'const wchar_t *'
          (MemberExpr 0xa2f2ec8 <col:23, col:25> '<bound member function type>' .c_str 0xa0505b0
            (DeclRefExpr 0xa2f2eb0 <col:23> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa2f2a70 's' 'const wcstring &')))))))


    const char *get() const (CompoundStmt 0xa2f3018 <../codeBase/fish-shell-master/common.h:494:5, line:496:5>
  (ReturnStmt 0xa2f3008 <line:495:9, col:16>
    (ImplicitCastExpr 0xa2f2ff8 <col:16> 'const char *' <LValueToRValue>
      (MemberExpr 0xa2f2fd8 <col:16> 'const char *const' lvalue ->str 0xa2f2680
        (CXXThisExpr 0xa2f2fc8 <col:16> 'const class narrow_string_rep_t *' this)))))


};
bool is_forked_child();
class scoped_lock {
    class scoped_lock;
    pthread_mutex_t *lock_obj;
    bool locked;
    scoped_lock &operator=(const scoped_lock &);
    scoped_lock(const scoped_lock &);
public:
public:
    void lock();
    void unlock();
    scoped_lock(pthread_mutex_t &mutex);
    void ~scoped_lock();
};
template <typename T> class scoped_push {
    class scoped_push;
    T *const ref;
    T saved_value;
    bool restored;
public:
public:
    scoped_push<T>(T *r) : ref((DeclRefExpr 0xa2f3f5c <../codeBase/fish-shell-master/common.h:534:28> 'T *' lvalue ParmVar 0xa2f3be0 'r' 'T *')
), saved_value((UnaryOperator 0xa2f3fd0 <../codeBase/fish-shell-master/common.h:534:44, col:45> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa2f3fb8 <col:45> 'T *' lvalue ParmVar 0xa2f3be0 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa2f4028 <../codeBase/fish-shell-master/common.h:534:58> '_Bool' false)
) (CompoundStmt 0xa2f4088 <../codeBase/fish-shell-master/common.h:535:5, line:536:5>)


    scoped_push<T>(T *r, const T &new_value) : ref((DeclRefExpr 0xa2f4098 <../codeBase/fish-shell-master/common.h:538:49> 'T *' lvalue ParmVar 0xa2f3cf0 'r' 'T *')
), saved_value((UnaryOperator 0xa2f4100 <../codeBase/fish-shell-master/common.h:538:65, col:66> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa2f40e8 <col:66> 'T *' lvalue ParmVar 0xa2f3cf0 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa2f4158 <../codeBase/fish-shell-master/common.h:538:79> '_Bool' false)
) (CompoundStmt 0xa2f4218 <../codeBase/fish-shell-master/common.h:539:5, line:541:5>
  (BinaryOperator 0xa2f4200 <line:540:9, col:14> '<dependent type>' '='
    (UnaryOperator 0xa2f41d0 <col:9, col:10> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa2f41b4 <col:10> 'T *' lvalue ParmVar 0xa2f3cf0 'r' 'T *'))
    (DeclRefExpr 0xa2f41e4 <col:14> 'const T' lvalue ParmVar 0xa2f3d60 'new_value' 'const T &')))


    void ~scoped_push<T>() (CompoundStmt 0xa2f4298 <../codeBase/fish-shell-master/common.h:544:5, line:546:5>
  (CallExpr 0xa2f4278 <line:545:9, col:17> '<dependent type>'
    (MemberExpr 0xa2f4258 <col:9> '<bound member function type>' ->restore 0xa2f3f00
      (CXXThisExpr 0xa2f4248 <col:9> 'scoped_push<T> *' this))))


    void restore() (CompoundStmt 0xa2f4498 <../codeBase/fish-shell-master/common.h:549:5, line:555:5>
  (IfStmt 0xa2f4478 <line:550:9, line:554:9>
    <<<NULL>>>
    (UnaryOperator 0xa2f42f0 <line:550:13, col:14> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa2f42e0 <col:14> '_Bool' <LValueToRValue>
        (MemberExpr 0xa2f42c0 <col:14> '_Bool' lvalue ->restored 0xa2f3b60
          (CXXThisExpr 0xa2f42b0 <col:14> 'scoped_push<T> *' this))))
    (CompoundStmt 0xa2f4460 <line:551:9, line:554:9>
      (CallExpr 0xa2f43e0 <line:552:13, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa2f4328 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = '1' 0x9e55460 0x9e559a0 0x9fdb610 0xa284a60)
        (UnaryOperator 0xa2f4398 <col:23, col:24> '<dependent type>' prefix '*'
          (MemberExpr 0xa2f4378 <col:24> 'T *const' lvalue ->ref 0xa2f3ae0
            (CXXThisExpr 0xa2f4368 <col:24> 'scoped_push<T> *' this)))
        (MemberExpr 0xa2f43c0 <col:29> 'T' lvalue ->saved_value 0xa2f3b20
          (CXXThisExpr 0xa2f43b0 <col:29> 'scoped_push<T> *' this)))
      (BinaryOperator 0xa2f4448 <line:553:13, col:24> '<dependent type>' '='
        (MemberExpr 0xa2f4418 <col:13> '_Bool' lvalue ->restored 0xa2f3b60
          (CXXThisExpr 0xa2f4408 <col:13> 'scoped_push<T> *' this))
        (CXXBoolLiteralExpr 0xa2f4438 <col:24> '_Bool' true)))
    <<<NULL>>>))


};
class wcstokenizer {
    class wcstokenizer;
    wchar_t *buffer;
    wchar_t *str;
    wchar_t *state;
    const wcstring sep;
    wcstokenizer &operator=(const wcstokenizer &);
    wcstokenizer(const wcstokenizer &);
public:
public:
    wcstokenizer(const wcstring &s, const wcstring &separator);
    bool next(wcstring &result);
    void ~wcstokenizer();
};
void append_path_component(wcstring &path, const wcstring &component);
wcstring format_string(const wchar_t *format, ...);
wcstring vformat_string(const wchar_t *format, va_list va_orig);
void append_format(wcstring &str, const wchar_t *format, ...);
void append_formatv(wcstring &str, const wchar_t *format, va_list ap);
char **wcsv2strv(const wchar_t *const *in);
wchar_t *wcsvarname(const wchar_t *str);
const wchar_t *wcsfuncname(const wchar_t *str);
int wcsvarchr(wchar_t chr);
int my_wcswidth(const wchar_t *c);
wchar_t *quote_end(const wchar_t *in);
void error_reset();
wcstring wsetlocale(int category, const wchar_t *locale);
bool contains_internal(const wchar_t *needle, ...);
bool contains_internal(const wcstring &needle, ...);
long read_blocked(int fd, void *buf, size_t count);
ssize_t write_loop(int fd, const char *buff, size_t count);
ssize_t read_loop(int fd, void *buff, size_t count);
void debug(int level, const char *msg, ...);
void debug(int level, const wchar_t *msg, ...);
wchar_t *escape(const wchar_t *in, escape_flags_t flags);
wcstring escape_string(const wcstring &in, escape_flags_t flags);
wchar_t *unescape(const wchar_t *in, int escape_special);
bool unescape_string(wcstring &str, int escape_special);
int common_get_width();
int common_get_height();
void common_handle_winch(int signal);
void write_screen(const wcstring &msg, wcstring &buff);
void tokenize_variable_array(const wcstring &val, wcstring_list_t &out);
int create_directory(const wcstring &d);
void bugreport();
double timef();
void set_main_thread();
bool is_main_thread();
void configure_thread_assertions_for_testing();
void setup_fork_guards();
void save_term_foreground_process_group();
void restore_term_foreground_process_group();
bool is_forked_child();
void assert_is_not_forked_child(const char *who);
extern "C" {
    void debug_thread_error();
}
void wutil_init();
void wutil_destroy();
FILE *wfopen(const wcstring &path, const char *mode);
bool set_cloexec(int fd);
FILE *wfreopen(const wcstring &path, const char *mode, FILE *stream);
int wopen(const wcstring &pathname, int flags, mode_t mode = (ImplicitCastExpr 0xa2f7f20 <../codeBase/fish-shell-master/wutil.h:46:62> 'mode_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2f7f08 <col:62> 'int' 0))
);
int wopen_cloexec(const wcstring &pathname, int flags, mode_t mode = (ImplicitCastExpr 0xa2f8110 <../codeBase/fish-shell-master/wutil.h:49:70> 'mode_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2f80f8 <col:70> 'int' 0))
);
int make_fd_nonblocking(int fd);
int make_fd_blocking(int fd);
int wcreat(const wcstring &pathname, mode_t mode);
DIR *wopendir(const wcstring &name);
int wstat(const wcstring &file_name, struct stat *buf);
int lwstat(const wcstring &file_name, struct stat *buf);
int waccess(const wcstring &pathname, int mode);
int wunlink(const wcstring &pathname);
void wperror(const wcstring &s);
void safe_perror(const char *message);
const char *safe_strerror(int err);
wchar_t *wgetcwd(wchar_t *buff, size_t sz);
int wchdir(const wcstring &dir);
wchar_t *wrealpath(const wcstring &pathname, wchar_t *resolved_path);
bool wreaddir(DIR *dir, std::wstring &out_name);
bool wreaddir_resolving(DIR *dir, const std::wstring &dir_path, std::wstring &out_name, bool *out_is_dir);
std::wstring wdirname(const std::wstring &path);
std::wstring wbasename(const std::wstring &path);
const wchar_t *wgettext(const wchar_t *in);
const wchar_t *wgetenv(const wcstring &name);
int wmkdir(const wcstring &dir, int mode);
int wrename(const wcstring &oldName, const wcstring &newName);
int fish_wcstoi(const wchar_t *str, wchar_t **endptr, int base);
typedef std::pair<dev_t, ino_t> file_id_t;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
typedef unsigned int uintptr_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
extern "C" {
    struct timezone {
        struct timezone;
        int tz_minuteswest;
        int tz_dsttime;
    };
    typedef struct timezone *restrict __timezone_ptr_t;
    extern int gettimeofday(struct timeval *restrict __tv, __timezone_ptr_t __tz) throw();
    extern int settimeofday(const struct timeval *__tv, const struct timezone *__tz) throw();
    extern int adjtime(const struct timeval *__delta, struct timeval *__olddelta) throw();
    enum __itimer_which {
        ITIMER_REAL = (ImplicitCastExpr 0xa2fe028 </usr/include/i386-linux-gnu/sys/time.h:96:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2fdf30 <col:19> 'int' 0))
,
        ITIMER_VIRTUAL = (ImplicitCastExpr 0xa2fe038 </usr/include/i386-linux-gnu/sys/time.h:99:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2fdf88 <col:22> 'int' 1))
,
        ITIMER_PROF = (ImplicitCastExpr 0xa2fe048 </usr/include/i386-linux-gnu/sys/time.h:103:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa2fdfd8 <col:19> 'int' 2))

    };
    struct itimerval {
        struct itimerval;
        struct timeval it_interval;
        struct timeval it_value;
    };
    typedef int __itimer_which_t;
    extern int getitimer(__itimer_which_t __which, struct itimerval *__value) throw();
    extern int setitimer(__itimer_which_t __which, const struct itimerval *restrict __new, struct itimerval *restrict __old) throw();
    extern int utimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int lutimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int futimes(int __fd, const struct timeval __tvp[2]) throw();
    extern int futimesat(int __fd, const char *__file, const struct timeval __tvp[2]) throw();
}
extern "C" {
    extern int __sigismember(const __sigset_t *, int);
    extern int __sigaddset(__sigset_t *, int);
    extern int __sigdelset(__sigset_t *, int);
    typedef __sig_atomic_t sig_atomic_t;
    union sigval {
        union sigval;
        int sival_int;
        void *sival_ptr;
    };
    typedef union sigval sigval_t;
    struct siginfo {
        struct siginfo;
        int si_signo;
        int si_errno;
        int si_code;
        union {
            int _pad[29];
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:63:2> _kill;
            struct {
                int si_tid;
                int si_overrun;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:70:2> _timer;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:78:2> _rt;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                int si_status;
                __clock_t si_utime;
                __clock_t si_stime;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:86:2> _sigchld;
            struct {
                void *si_addr;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:96:2> _sigfault;
            struct {
                long si_band;
                int si_fd;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:102:2> _sigpoll;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:58:5> _sifields;
    };
    typedef struct siginfo siginfo_t;
    enum  {
        SI_ASYNCNL = (UnaryOperator 0xa300638 </usr/include/i386-linux-gnu/bits/siginfo.h:131:16, col:17> 'int' prefix '-'
  (IntegerLiteral 0xa300620 <col:17> 'int' 60))
,
        SI_TKILL = (UnaryOperator 0xa3006a0 </usr/include/i386-linux-gnu/bits/siginfo.h:133:14, col:15> 'int' prefix '-'
  (IntegerLiteral 0xa300688 <col:15> 'int' 6))
,
        SI_SIGIO,
        SI_ASYNCIO,
        SI_MESGQ,
        SI_TIMER,
        SI_QUEUE,
        SI_USER,
        SI_KERNEL = (IntegerLiteral 0xa300878 </usr/include/i386-linux-gnu/bits/siginfo.h:147:15> 'int' 128)

    };
    enum  {
        ILL_ILLOPC = (ImplicitCastExpr 0xa300b48 </usr/include/i386-linux-gnu/bits/siginfo.h:155:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa300930 <col:16> 'int' 1))
,
        ILL_ILLOPN,
        ILL_ILLADR,
        ILL_ILLTRP,
        ILL_PRVOPC,
        ILL_PRVREG,
        ILL_COPROC,
        ILL_BADSTK
    };
    enum  {
        FPE_INTDIV = (ImplicitCastExpr 0xa300dd8 </usr/include/i386-linux-gnu/bits/siginfo.h:176:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa300bc0 <col:16> 'int' 1))
,
        FPE_INTOVF,
        FPE_FLTDIV,
        FPE_FLTOVF,
        FPE_FLTUND,
        FPE_FLTRES,
        FPE_FLTINV,
        FPE_FLTSUB
    };
    enum  {
        SEGV_MAPERR = (ImplicitCastExpr 0xa300ee8 </usr/include/i386-linux-gnu/bits/siginfo.h:197:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa300e50 <col:17> 'int' 1))
,
        SEGV_ACCERR
    };
    enum  {
        BUS_ADRALN = (ImplicitCastExpr 0xa301038 </usr/include/i386-linux-gnu/bits/siginfo.h:206:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa300f60 <col:16> 'int' 1))
,
        BUS_ADRERR,
        BUS_OBJERR
    };
    enum  {
        TRAP_BRKPT = (ImplicitCastExpr 0xa301148 </usr/include/i386-linux-gnu/bits/siginfo.h:217:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3010b0 <col:16> 'int' 1))
,
        TRAP_TRACE
    };
    enum  {
        CLD_EXITED = (ImplicitCastExpr 0xa301358 </usr/include/i386-linux-gnu/bits/siginfo.h:226:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3011c0 <col:16> 'int' 1))
,
        CLD_KILLED,
        CLD_DUMPED,
        CLD_TRAPPED,
        CLD_STOPPED,
        CLD_CONTINUED
    };
    enum  {
        POLL_IN = (ImplicitCastExpr 0xa301568 </usr/include/i386-linux-gnu/bits/siginfo.h:243:13> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3013d0 <col:13> 'int' 1))
,
        POLL_OUT,
        POLL_MSG,
        POLL_ERR,
        POLL_PRI,
        POLL_HUP
    };
    struct sigevent {
        struct sigevent;
        sigval_t sigev_value;
        int sigev_signo;
        int sigev_notify;
        union {
            int _pad[13];
            __pid_t _tid;
            struct {
                void (*_function)(sigval_t);
                void *_attribute;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:287:2> _sigev_thread;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:279:5> _sigev_un;
    };
    typedef struct sigevent sigevent_t;
    enum  {
        SIGEV_SIGNAL = (ImplicitCastExpr 0xa301ec8 </usr/include/i386-linux-gnu/bits/siginfo.h:302:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa301da0 <col:18> 'int' 0))
,
        SIGEV_NONE,
        SIGEV_THREAD,
        SIGEV_THREAD_ID = (ImplicitCastExpr 0xa301ed8 </usr/include/i386-linux-gnu/bits/siginfo.h:309:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa301e78 <col:21> 'int' 4))

    };
    typedef void (*__sighandler_t)(int);
    extern __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t bsd_signal(int __sig, __sighandler_t __handler) throw();
    extern int kill(__pid_t __pid, int __sig) throw();
    extern int killpg(__pid_t __pgrp, int __sig) throw();
    extern int raise(int __sig) throw();
    extern __sighandler_t ssignal(int __sig, __sighandler_t __handler) throw();
    extern int gsignal(int __sig) throw();
    extern void psignal(int __sig, const char *__s);
    extern void psiginfo(const siginfo_t *__pinfo, const char *__s);
    extern int __sigpause(int __sig_or_mask, int __is_sig);
    extern int sigpause(int __sig);
    extern int sigblock(int __mask) throw();
    extern int sigsetmask(int __mask) throw();
    extern int siggetmask() throw();
    typedef __sighandler_t sighandler_t;
    typedef __sighandler_t sig_t;
    extern int sigemptyset(sigset_t *__set) throw();
    extern int sigfillset(sigset_t *__set) throw();
    extern int sigaddset(sigset_t *__set, int __signo) throw();
    extern int sigdelset(sigset_t *__set, int __signo) throw();
    extern int sigismember(const sigset_t *__set, int __signo) throw();
    extern int sigisemptyset(const sigset_t *__set) throw();
    extern int sigandset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    extern int sigorset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    struct sigaction {
        struct sigaction;
        union {
            __sighandler_t sa_handler;
            void (*sa_sigaction)(int, siginfo_t *, void *);
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/sigaction.h:29:5> __sigaction_handler;
        __sigset_t sa_mask;
        int sa_flags;
        void (*sa_restorer)();
    };
    extern int sigprocmask(int __how, const sigset_t *restrict __set, sigset_t *restrict __oset) throw();
    extern int sigsuspend(const sigset_t *__set);
    extern int sigaction(int __sig, const struct sigaction *restrict __act, struct sigaction *restrict __oact) throw();
    extern int sigpending(sigset_t *__set) throw();
    extern int sigwait(const sigset_t *restrict __set, int *restrict __sig);
    extern int sigwaitinfo(const sigset_t *restrict __set, siginfo_t *restrict __info);
    extern int sigtimedwait(const sigset_t *restrict __set, siginfo_t *restrict __info, const struct timespec *restrict __timeout);
    extern int sigqueue(__pid_t __pid, int __sig, const union sigval __val) throw();
    extern const char *const _sys_siglist[65];
    extern const char *const sys_siglist[65];
    struct sigvec {
        struct sigvec;
        __sighandler_t sv_handler;
        int sv_mask;
        int sv_flags;
    };
    extern int sigvec(int __sig, const struct sigvec *__vec, struct sigvec *__ovec) throw();
    typedef signed char __s8;
    typedef unsigned char __u8;
    typedef short __s16;
    typedef unsigned short __u16;
    typedef int __s32;
    typedef unsigned int __u32;
    typedef long long __s64;
    typedef unsigned long long __u64;
    typedef unsigned short umode_t;
    struct {
        unsigned long fds_bits[32];
    };
    typedef struct __kernel_fd_set __kernel_fd_set;
    typedef void (*__kernel_sighandler_t)(int);
    typedef int __kernel_key_t;
    typedef int __kernel_mqd_t;
    typedef unsigned long __kernel_ino_t;
    typedef unsigned short __kernel_mode_t;
    typedef unsigned short __kernel_nlink_t;
    typedef long __kernel_off_t;
    typedef int __kernel_pid_t;
    typedef unsigned short __kernel_ipc_pid_t;
    typedef unsigned short __kernel_uid_t;
    typedef unsigned short __kernel_gid_t;
    typedef unsigned int __kernel_size_t;
    typedef int __kernel_ssize_t;
    typedef int __kernel_ptrdiff_t;
    typedef long __kernel_time_t;
    typedef long __kernel_suseconds_t;
    typedef long __kernel_clock_t;
    typedef int __kernel_timer_t;
    typedef int __kernel_clockid_t;
    typedef int __kernel_daddr_t;
    typedef char *__kernel_caddr_t;
    typedef unsigned short __kernel_uid16_t;
    typedef unsigned short __kernel_gid16_t;
    typedef unsigned int __kernel_uid32_t;
    typedef unsigned int __kernel_gid32_t;
    typedef unsigned short __kernel_old_uid_t;
    typedef unsigned short __kernel_old_gid_t;
    typedef unsigned short __kernel_old_dev_t;
    typedef long long __kernel_loff_t;
    struct {
        int val[2];
    };
    typedef struct __kernel_fsid_t __kernel_fsid_t;
    typedef __u16 __le16;
    typedef __u16 __be16;
    typedef __u32 __le32;
    typedef __u32 __be32;
    typedef __u64 __le64;
    typedef __u64 __be64;
    typedef __u16 __sum16;
    typedef __u32 __wsum;
    struct _fpx_sw_bytes {
        struct _fpx_sw_bytes;
        __u32 magic1;
        __u32 extended_size;
        __u64 xstate_bv;
        __u32 xstate_size;
        __u32 padding[7];
    };
    struct _fpreg {
        struct _fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _fpxreg {
        struct _fpxreg;
        unsigned short significand[4];
        unsigned short exponent;
        unsigned short padding[3];
    };
    struct _xmmreg {
        struct _xmmreg;
        unsigned long element[4];
    };
    struct _fpstate {
        struct _fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _fpreg _st[8];
        unsigned short status;
        unsigned short magic;
        unsigned long _fxsr_env[6];
        unsigned long mxcsr;
        unsigned long reserved;
        struct _fpxreg _fxsr_st[8];
        struct _xmmreg _xmm[8];
        unsigned long padding1[44];
        union {
            unsigned long padding2[12];
            struct _fpx_sw_bytes sw_reserved;
        } ;
        ;
        ;
    };
    struct sigcontext {
        struct sigcontext;
        unsigned short gs;
        unsigned short __gsh;
        unsigned short fs;
        unsigned short __fsh;
        unsigned short es;
        unsigned short __esh;
        unsigned short ds;
        unsigned short __dsh;
        unsigned long edi;
        unsigned long esi;
        unsigned long ebp;
        unsigned long esp;
        unsigned long ebx;
        unsigned long edx;
        unsigned long ecx;
        unsigned long eax;
        unsigned long trapno;
        unsigned long err;
        unsigned long eip;
        unsigned short cs;
        unsigned short __csh;
        unsigned long eflags;
        unsigned long esp_at_signal;
        unsigned short ss;
        unsigned short __ssh;
        struct _fpstate *fpstate;
        unsigned long oldmask;
        unsigned long cr2;
    };
    struct _xsave_hdr {
        struct _xsave_hdr;
        __u64 xstate_bv;
        __u64 reserved1[2];
        __u64 reserved2[5];
    };
    struct _ymmh_state {
        struct _ymmh_state;
        __u32 ymmh_space[64];
    };
    struct _xstate {
        struct _xstate;
        struct _fpstate fpstate;
        struct _xsave_hdr xstate_hdr;
        struct _ymmh_state ymmh;
    };
    extern int sigreturn(struct sigcontext *__scp) throw();
    extern int siginterrupt(int __sig, int __interrupt) throw();
    struct sigstack {
        struct sigstack;
        void *ss_sp;
        int ss_onstack;
    };
    enum  {
        SS_ONSTACK = (ImplicitCastExpr 0xa327b58 </usr/include/i386-linux-gnu/bits/sigstack.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa327ac0 <col:16> 'int' 1))
,
        SS_DISABLE
    };
    struct sigaltstack {
        struct sigaltstack;
        void *ss_sp;
        int ss_flags;
        size_t ss_size;
    };
    typedef struct sigaltstack stack_t;
    typedef int greg_t;
    typedef greg_t gregset_t[19];
    enum  {
        REG_GS = (ImplicitCastExpr 0xa328408 </usr/include/i386-linux-gnu/sys/ucontext.h:43:12> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa327f30 <col:12> 'int' 0))
,
        REG_FS,
        REG_ES,
        REG_DS,
        REG_EDI,
        REG_ESI,
        REG_EBP,
        REG_ESP,
        REG_EBX,
        REG_EDX,
        REG_ECX,
        REG_EAX,
        REG_TRAPNO,
        REG_ERR,
        REG_EIP,
        REG_CS,
        REG_EFL,
        REG_UESP,
        REG_SS
    };
    struct _libc_fpreg {
        struct _libc_fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _libc_fpstate {
        struct _libc_fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _libc_fpreg _st[8];
        unsigned long status;
    };
    typedef struct _libc_fpstate *fpregset_t;
    struct {
        gregset_t gregs;
        fpregset_t fpregs;
        unsigned long oldmask;
        unsigned long cr2;
    };
    typedef struct mcontext_t mcontext_t;
    struct ucontext {
        struct ucontext;
        unsigned long uc_flags;
        struct ucontext *uc_link;
        stack_t uc_stack;
        mcontext_t uc_mcontext;
        __sigset_t uc_sigmask;
        struct _libc_fpstate __fpregs_mem;
    };
    typedef struct ucontext ucontext_t;
    extern int sigstack(struct sigstack *__ss, struct sigstack *__oss) throw();
    extern int sigaltstack(const struct sigaltstack *restrict __ss, struct sigaltstack *restrict __oss) throw();
    extern int sighold(int __sig) throw();
    extern int sigrelse(int __sig) throw();
    extern int sigignore(int __sig) throw();
    extern __sighandler_t sigset(int __sig, __sighandler_t __disp) throw();
    extern int pthread_sigmask(int __how, const __sigset_t *restrict __newmask, __sigset_t *restrict __oldmask) throw();
    extern int pthread_kill(pthread_t __threadid, int __signo) throw();
    extern int pthread_sigqueue(pthread_t __threadid, int __signo, const union sigval __value) throw();
    extern int __libc_current_sigrtmin() throw();
    extern int __libc_current_sigrtmax() throw();
}
int fish_wcwidth(wchar_t wc);
int fish_wcswidth(const wchar_t *str, size_t n);
typedef char tputs_arg_t;
wchar_t *wcsndup(const wchar_t *in, size_t c);
long convert_digit(wchar_t d, int base);
size_t wcslcat(wchar_t *dst, const wchar_t *src, size_t siz);
size_t wcslcpy(wchar_t *dst, const wchar_t *src, size_t siz);
char *fish_gettext(const char *msgid);
char *fish_bindtextdomain(const char *domainname, const char *dirname);
char *fish_textdomain(const char *domainname);
char *fish_dcgettext(const char *domainname, const char *msgid, int category);
extern int _nl_msg_cat_cntr;
wchar_t *woptarg = (ImplicitCastExpr 0xa32ac30 </usr/include/linux/stddef.h:8:14> 'wchar_t *' <NullToPointer>
  (IntegerLiteral 0xa32ac18 <col:14> 'int' 0))
;
int woptind = (IntegerLiteral 0xa32ac88 <../codeBase/fish-shell-master/wgetopt.cpp:120:15> 'int' 0)
;
static wchar_t *nextchar;
int wopterr = (IntegerLiteral 0xa33ba98 <../codeBase/fish-shell-master/wgetopt.cpp:134:15> 'int' 1)
;
int woptopt = (ImplicitCastExpr 0xa33bb10 <../codeBase/fish-shell-master/wgetopt.cpp:140:15> 'int' <IntegralCast>
  (CharacterLiteral 0xa33baf8 <col:15> 'char'63))
;
enum  {
    REQUIRE_ORDER,
    PERMUTE,
    RETURN_IN_ORDER
};
static enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8> ordering;
static char *posixly_correct;
static int first_nonopt;
static int last_nonopt;
static void exchange(wchar_t **argv) (CompoundStmt 0xa33d0f8 <../codeBase/fish-shell-master/wgetopt.cpp:256:1, line:307:1>
  (DeclStmt 0xa33bf10 <line:257:5, col:30>
    0xa33beb0 "int bottom =
      (ImplicitCastExpr 0xa33bf00 <col:18> 'int' <LValueToRValue>
        (DeclRefExpr 0xa33bee4 <col:18> 'int' lvalue Var 0xa33bd10 'first_nonopt' 'int'))")
  (DeclStmt 0xa33bf90 <line:258:5, col:29>
    0xa33bf30 "int middle =
      (ImplicitCastExpr 0xa33bf80 <col:18> 'int' <LValueToRValue>
        (DeclRefExpr 0xa33bf64 <col:18> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int'))")
  (DeclStmt 0xa33c010 <line:259:5, col:22>
    0xa33bfb0 "int top =
      (ImplicitCastExpr 0xa33c000 <col:15> 'int' <LValueToRValue>
        (DeclRefExpr 0xa33bfe4 <col:15> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))")
  (DeclStmt 0xa33c068 <line:260:5, col:17>
    0xa33c030 "wchar_t *tem")
  (WhileStmt 0xa33cfd0 <line:267:5, line:301:5>
    <<<NULL>>>
    (BinaryOperator 0xa33c148 <line:267:12, col:37> '_Bool' '&&'
      (BinaryOperator 0xa33c0c8 <col:12, col:18> '_Bool' '>'
        (ImplicitCastExpr 0xa33c0a8 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa33c078 <col:12> 'int' lvalue Var 0xa33bfb0 'top' 'int'))
        (ImplicitCastExpr 0xa33c0b8 <col:18> 'int' <LValueToRValue>
          (DeclRefExpr 0xa33c090 <col:18> 'int' lvalue Var 0xa33bf30 'middle' 'int')))
      (BinaryOperator 0xa33c130 <col:28, col:37> '_Bool' '>'
        (ImplicitCastExpr 0xa33c110 <col:28> 'int' <LValueToRValue>
          (DeclRefExpr 0xa33c0e0 <col:28> 'int' lvalue Var 0xa33bf30 'middle' 'int'))
        (ImplicitCastExpr 0xa33c120 <col:37> 'int' <LValueToRValue>
          (DeclRefExpr 0xa33c0f8 <col:37> 'int' lvalue Var 0xa33beb0 'bottom' 'int'))))
    (CompoundStmt 0xa33cfb8 <line:268:5, line:301:5>
      (IfStmt 0xa33cf98 <line:269:9, line:300:9>
        <<<NULL>>>
        (BinaryOperator 0xa33c230 <line:269:13, col:37> '_Bool' '>'
          (BinaryOperator 0xa33c1b0 <col:13, col:19> 'int' '-'
            (ImplicitCastExpr 0xa33c190 <col:13> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33c160 <col:13> 'int' lvalue Var 0xa33bfb0 'top' 'int'))
            (ImplicitCastExpr 0xa33c1a0 <col:19> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33c178 <col:19> 'int' lvalue Var 0xa33bf30 'middle' 'int')))
          (BinaryOperator 0xa33c218 <col:28, col:37> 'int' '-'
            (ImplicitCastExpr 0xa33c1f8 <col:28> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33c1c8 <col:28> 'int' lvalue Var 0xa33bf30 'middle' 'int'))
            (ImplicitCastExpr 0xa33c208 <col:37> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33c1e0 <col:37> 'int' lvalue Var 0xa33beb0 'bottom' 'int'))))
        (CompoundStmt 0xa33c968 <line:270:9, line:284:9>
          (DeclStmt 0xa33c300 <line:272:13, col:38>
            0xa33c260 "int len =
              (BinaryOperator 0xa33c2e8 <col:23, col:32> 'int' '-'
                (ImplicitCastExpr 0xa33c2c8 <col:23> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33c294 <col:23> 'int' lvalue Var 0xa33bf30 'middle' 'int'))
                (ImplicitCastExpr 0xa33c2d8 <col:32> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33c2ac <col:32> 'int' lvalue Var 0xa33beb0 'bottom' 'int')))")
          (DeclStmt 0xa33c358 <line:273:13, col:27>
            0xa33c320 "register int i")
          (ForStmt 0xa33c8e0 <line:276:13, line:281:13>
            (BinaryOperator 0xa33c398 <line:276:18, col:22> 'int' lvalue '='
              (DeclRefExpr 0xa33c368 <col:18> 'int' lvalue Var 0xa33c320 'i' 'int')
              (IntegerLiteral 0xa33c380 <col:22> 'int' 0))
            <<<NULL>>>
            (BinaryOperator 0xa33c400 <col:25, col:29> '_Bool' '<'
              (ImplicitCastExpr 0xa33c3e0 <col:25> 'int' <LValueToRValue>
                (DeclRefExpr 0xa33c3b0 <col:25> 'int' lvalue Var 0xa33c320 'i' 'int'))
              (ImplicitCastExpr 0xa33c3f0 <col:29> 'int' <LValueToRValue>
                (DeclRefExpr 0xa33c3c8 <col:29> 'int' lvalue Var 0xa33c260 'len' 'int')))
            (UnaryOperator 0xa33c430 <col:34, col:35> 'int' postfix '++'
              (DeclRefExpr 0xa33c418 <col:34> 'int' lvalue Var 0xa33c320 'i' 'int'))
            (CompoundStmt 0xa33c8c0 <line:277:13, line:281:13>
              (BinaryOperator 0xa33c518 <line:278:17, col:38> 'wchar_t *' lvalue '='
                (DeclRefExpr 0xa33c444 <col:17> 'wchar_t *' lvalue Var 0xa33c030 'tem' 'wchar_t *')
                (ImplicitCastExpr 0xa33c508 <col:23, col:38> 'wchar_t *' <LValueToRValue>
                  (ArraySubscriptExpr 0xa33c4f0 <col:23, col:38> 'wchar_t *' lvalue
                    (ImplicitCastExpr 0xa33c4e0 <col:23> 'wchar_t **' <LValueToRValue>
                      (DeclRefExpr 0xa33c45c <col:23> 'wchar_t **' lvalue ParmVar 0xa33bdb0 'argv' 'wchar_t **'))
                    (BinaryOperator 0xa33c4c8 <col:28, col:37> 'int' '+'
                      (ImplicitCastExpr 0xa33c4a8 <col:28> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33c474 <col:28> 'int' lvalue Var 0xa33beb0 'bottom' 'int'))
                      (ImplicitCastExpr 0xa33c4b8 <col:37> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33c48c <col:37> 'int' lvalue Var 0xa33c320 'i' 'int'))))))
              (BinaryOperator 0xa33c728 <line:279:17, col:68> 'wchar_t *' lvalue '='
                (ArraySubscriptExpr 0xa33c5c0 <col:17, col:32> 'wchar_t *' lvalue
                  (ImplicitCastExpr 0xa33c5b0 <col:17> 'wchar_t **' <LValueToRValue>
                    (DeclRefExpr 0xa33c530 <col:17> 'wchar_t **' lvalue ParmVar 0xa33bdb0 'argv' 'wchar_t **'))
                  (BinaryOperator 0xa33c598 <col:22, col:31> 'int' '+'
                    (ImplicitCastExpr 0xa33c578 <col:22> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa33c548 <col:22> 'int' lvalue Var 0xa33beb0 'bottom' 'int'))
                    (ImplicitCastExpr 0xa33c588 <col:31> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa33c560 <col:31> 'int' lvalue Var 0xa33c320 'i' 'int'))))
                (ImplicitCastExpr 0xa33c718 <col:36, col:68> 'wchar_t *' <LValueToRValue>
                  (ArraySubscriptExpr 0xa33c700 <col:36, col:68> 'wchar_t *' lvalue
                    (ImplicitCastExpr 0xa33c6f0 <col:36> 'wchar_t **' <LValueToRValue>
                      (DeclRefExpr 0xa33c5d4 <col:36> 'wchar_t **' lvalue ParmVar 0xa33bdb0 'argv' 'wchar_t **'))
                    (BinaryOperator 0xa33c6d8 <col:41, col:67> 'int' '+'
                      (BinaryOperator 0xa33c698 <col:41, col:63> 'int' '-'
                        (ImplicitCastExpr 0xa33c688 <col:41> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa33c5ec <col:41> 'int' lvalue Var 0xa33bfb0 'top' 'int'))
                        (ParenExpr 0xa33c670 <col:47, col:63> 'int'
                          (BinaryOperator 0xa33c658 <col:48, col:57> 'int' '-'
                            (ImplicitCastExpr 0xa33c638 <col:48> 'int' <LValueToRValue>
                              (DeclRefExpr 0xa33c604 <col:48> 'int' lvalue Var 0xa33bf30 'middle' 'int'))
                            (ImplicitCastExpr 0xa33c648 <col:57> 'int' <LValueToRValue>
                              (DeclRefExpr 0xa33c61c <col:57> 'int' lvalue Var 0xa33beb0 'bottom' 'int')))))
                      (ImplicitCastExpr 0xa33c6c8 <col:67> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33c6b0 <col:67> 'int' lvalue Var 0xa33c320 'i' 'int'))))))
              (BinaryOperator 0xa33c8a8 <line:280:17, col:53> 'wchar_t *' lvalue '='
                (ArraySubscriptExpr 0xa33c868 <col:17, col:49> 'wchar_t *' lvalue
                  (ImplicitCastExpr 0xa33c858 <col:17> 'wchar_t **' <LValueToRValue>
                    (DeclRefExpr 0xa33c740 <col:17> 'wchar_t **' lvalue ParmVar 0xa33bdb0 'argv' 'wchar_t **'))
                  (BinaryOperator 0xa33c840 <col:22, col:48> 'int' '+'
                    (BinaryOperator 0xa33c800 <col:22, col:44> 'int' '-'
                      (ImplicitCastExpr 0xa33c7f0 <col:22> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33c758 <col:22> 'int' lvalue Var 0xa33bfb0 'top' 'int'))
                      (ParenExpr 0xa33c7d8 <col:28, col:44> 'int'
                        (BinaryOperator 0xa33c7c0 <col:29, col:38> 'int' '-'
                          (ImplicitCastExpr 0xa33c7a0 <col:29> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa33c770 <col:29> 'int' lvalue Var 0xa33bf30 'middle' 'int'))
                          (ImplicitCastExpr 0xa33c7b0 <col:38> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa33c788 <col:38> 'int' lvalue Var 0xa33beb0 'bottom' 'int')))))
                    (ImplicitCastExpr 0xa33c830 <col:48> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa33c818 <col:48> 'int' lvalue Var 0xa33c320 'i' 'int'))))
                (ImplicitCastExpr 0xa33c898 <col:53> 'wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa33c87c <col:53> 'wchar_t *' lvalue Var 0xa33c030 'tem' 'wchar_t *')))))
          (CompoundAssignOperator 0xa33c948 <line:283:13, col:20> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa33c904 <col:13> 'int' lvalue Var 0xa33bfb0 'top' 'int')
            (ImplicitCastExpr 0xa33c938 <col:20> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33c91c <col:20> 'int' lvalue Var 0xa33c260 'len' 'int'))))
        (CompoundStmt 0xa33cf78 <line:286:9, line:300:9>
          (DeclStmt 0xa33ca40 <line:288:13, col:35>
            0xa33c9a0 "int len =
              (BinaryOperator 0xa33ca28 <col:23, col:29> 'int' '-'
                (ImplicitCastExpr 0xa33ca08 <col:23> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33c9d4 <col:23> 'int' lvalue Var 0xa33bfb0 'top' 'int'))
                (ImplicitCastExpr 0xa33ca18 <col:29> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33c9ec <col:29> 'int' lvalue Var 0xa33bf30 'middle' 'int')))")
          (DeclStmt 0xa33ca98 <line:289:13, col:27>
            0xa33ca60 "register int i")
          (ForStmt 0xa33cef0 <line:292:13, line:297:13>
            (BinaryOperator 0xa33cad8 <line:292:18, col:22> 'int' lvalue '='
              (DeclRefExpr 0xa33caa8 <col:18> 'int' lvalue Var 0xa33ca60 'i' 'int')
              (IntegerLiteral 0xa33cac0 <col:22> 'int' 0))
            <<<NULL>>>
            (BinaryOperator 0xa33cb40 <col:25, col:29> '_Bool' '<'
              (ImplicitCastExpr 0xa33cb20 <col:25> 'int' <LValueToRValue>
                (DeclRefExpr 0xa33caf0 <col:25> 'int' lvalue Var 0xa33ca60 'i' 'int'))
              (ImplicitCastExpr 0xa33cb30 <col:29> 'int' <LValueToRValue>
                (DeclRefExpr 0xa33cb08 <col:29> 'int' lvalue Var 0xa33c9a0 'len' 'int')))
            (UnaryOperator 0xa33cb70 <col:34, col:35> 'int' postfix '++'
              (DeclRefExpr 0xa33cb58 <col:34> 'int' lvalue Var 0xa33ca60 'i' 'int'))
            (CompoundStmt 0xa33ced0 <line:293:13, line:297:13>
              (BinaryOperator 0xa33cc58 <line:294:17, col:38> 'wchar_t *' lvalue '='
                (DeclRefExpr 0xa33cb84 <col:17> 'wchar_t *' lvalue Var 0xa33c030 'tem' 'wchar_t *')
                (ImplicitCastExpr 0xa33cc48 <col:23, col:38> 'wchar_t *' <LValueToRValue>
                  (ArraySubscriptExpr 0xa33cc30 <col:23, col:38> 'wchar_t *' lvalue
                    (ImplicitCastExpr 0xa33cc20 <col:23> 'wchar_t **' <LValueToRValue>
                      (DeclRefExpr 0xa33cb9c <col:23> 'wchar_t **' lvalue ParmVar 0xa33bdb0 'argv' 'wchar_t **'))
                    (BinaryOperator 0xa33cc08 <col:28, col:37> 'int' '+'
                      (ImplicitCastExpr 0xa33cbe8 <col:28> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33cbb4 <col:28> 'int' lvalue Var 0xa33beb0 'bottom' 'int'))
                      (ImplicitCastExpr 0xa33cbf8 <col:37> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33cbcc <col:37> 'int' lvalue Var 0xa33ca60 'i' 'int'))))))
              (BinaryOperator 0xa33cdd0 <line:295:17, col:51> 'wchar_t *' lvalue '='
                (ArraySubscriptExpr 0xa33cd00 <col:17, col:32> 'wchar_t *' lvalue
                  (ImplicitCastExpr 0xa33ccf0 <col:17> 'wchar_t **' <LValueToRValue>
                    (DeclRefExpr 0xa33cc70 <col:17> 'wchar_t **' lvalue ParmVar 0xa33bdb0 'argv' 'wchar_t **'))
                  (BinaryOperator 0xa33ccd8 <col:22, col:31> 'int' '+'
                    (ImplicitCastExpr 0xa33ccb8 <col:22> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa33cc88 <col:22> 'int' lvalue Var 0xa33beb0 'bottom' 'int'))
                    (ImplicitCastExpr 0xa33ccc8 <col:31> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa33cca0 <col:31> 'int' lvalue Var 0xa33ca60 'i' 'int'))))
                (ImplicitCastExpr 0xa33cdc0 <col:36, col:51> 'wchar_t *' <LValueToRValue>
                  (ArraySubscriptExpr 0xa33cda8 <col:36, col:51> 'wchar_t *' lvalue
                    (ImplicitCastExpr 0xa33cd98 <col:36> 'wchar_t **' <LValueToRValue>
                      (DeclRefExpr 0xa33cd14 <col:36> 'wchar_t **' lvalue ParmVar 0xa33bdb0 'argv' 'wchar_t **'))
                    (BinaryOperator 0xa33cd80 <col:41, col:50> 'int' '+'
                      (ImplicitCastExpr 0xa33cd60 <col:41> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33cd2c <col:41> 'int' lvalue Var 0xa33bf30 'middle' 'int'))
                      (ImplicitCastExpr 0xa33cd70 <col:50> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33cd44 <col:50> 'int' lvalue Var 0xa33ca60 'i' 'int'))))))
              (BinaryOperator 0xa33ceb8 <line:296:17, col:36> 'wchar_t *' lvalue '='
                (ArraySubscriptExpr 0xa33ce78 <col:17, col:32> 'wchar_t *' lvalue
                  (ImplicitCastExpr 0xa33ce68 <col:17> 'wchar_t **' <LValueToRValue>
                    (DeclRefExpr 0xa33cde8 <col:17> 'wchar_t **' lvalue ParmVar 0xa33bdb0 'argv' 'wchar_t **'))
                  (BinaryOperator 0xa33ce50 <col:22, col:31> 'int' '+'
                    (ImplicitCastExpr 0xa33ce30 <col:22> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa33ce00 <col:22> 'int' lvalue Var 0xa33bf30 'middle' 'int'))
                    (ImplicitCastExpr 0xa33ce40 <col:31> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa33ce18 <col:31> 'int' lvalue Var 0xa33ca60 'i' 'int'))))
                (ImplicitCastExpr 0xa33cea8 <col:36> 'wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa33ce8c <col:36> 'wchar_t *' lvalue Var 0xa33c030 'tem' 'wchar_t *')))))
          (CompoundAssignOperator 0xa33cf58 <line:299:13, col:23> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa33cf14 <col:13> 'int' lvalue Var 0xa33beb0 'bottom' 'int')
            (ImplicitCastExpr 0xa33cf48 <col:23> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33cf2c <col:23> 'int' lvalue Var 0xa33c9a0 'len' 'int')))))))
  (CompoundAssignOperator 0xa33d080 <line:305:5, col:43> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa33cfe4 <col:5> 'int' lvalue Var 0xa33bd10 'first_nonopt' 'int')
    (ParenExpr 0xa33d068 <col:21, col:43> 'int'
      (BinaryOperator 0xa33d050 <col:22, col:32> 'int' '-'
        (ImplicitCastExpr 0xa33d030 <col:22> 'int' <LValueToRValue>
          (DeclRefExpr 0xa33cffc <col:22> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
        (ImplicitCastExpr 0xa33d040 <col:32> 'int' <LValueToRValue>
          (DeclRefExpr 0xa33d014 <col:32> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int')))))
  (BinaryOperator 0xa33d0e0 <line:306:5, col:19> 'int' lvalue '='
    (DeclRefExpr 0xa33d0a0 <col:5> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int')
    (ImplicitCastExpr 0xa33d0d0 <col:19> 'int' <LValueToRValue>
      (DeclRefExpr 0xa33d0b8 <col:19> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))


static const wchar_t *_wgetopt_initialize(const wchar_t *optstring) (CompoundStmt 0xa33d890 <../codeBase/fish-shell-master/wgetopt.cpp:313:1, line:342:1>
  (BinaryOperator 0xa33d2b8 <line:318:5, col:44> 'int' lvalue '='
    (DeclRefExpr 0xa33d204 <col:5> 'int' lvalue Var 0xa33bd10 'first_nonopt' 'int')
    (ImplicitCastExpr 0xa33d2a8 <col:20, col:44> 'int' <LValueToRValue>
      (BinaryOperator 0xa33d290 <col:20, col:44> 'int' lvalue '='
        (DeclRefExpr 0xa33d21c <col:20> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int')
        (ImplicitCastExpr 0xa33d280 <col:34, col:44> 'int' <LValueToRValue>
          (BinaryOperator 0xa33d268 <col:34, col:44> 'int' lvalue '='
            (DeclRefExpr 0xa33d234 <col:34> 'int' lvalue Var 0xa32ac50 'woptind' 'int')
            (IntegerLiteral 0xa33d250 <col:44> 'int' 1))))))
  (BinaryOperator 0xa33d310 <line:320:5, /usr/include/linux/stddef.h:8:14> 'wchar_t *' lvalue '='
    (DeclRefExpr 0xa33d2d0 <../codeBase/fish-shell-master/wgetopt.cpp:320:5> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')
    (ImplicitCastExpr 0xa33d300 </usr/include/linux/stddef.h:8:14> 'wchar_t *' <NullToPointer>
      (IntegerLiteral 0xa33d2e8 <col:14> 'int' 0)))
  (BinaryOperator 0xa33d438 <../codeBase/fish-shell-master/wgetopt.cpp:322:5, col:47> 'char *' lvalue '='
    (DeclRefExpr 0xa33d328 <col:5> 'char *' lvalue Var 0xa33bcc0 'posixly_correct' 'char *')
    (CallExpr 0xa33d408 <col:23, col:47> 'char *'
      (ImplicitCastExpr 0xa33d3f8 <col:23> 'char *(*)(const char *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa33d3a0 <col:23> 'char *(const char *) throw()' lvalue Function 0x9e05e80 'getenv' 'char *(const char *) throw()'))
      (ImplicitCastExpr 0xa33d428 <col:30> 'const char *' <ArrayToPointerDecay>
        (StringLiteral 0xa33d374 <col:30> 'const char [16]' lvalue "POSIXLY_CORRECT"))))
  (IfStmt 0xa33d838 <line:326:5, line:339:20>
    <<<NULL>>>
    (BinaryOperator 0xa33d4e0 <line:326:9, col:25> '_Bool' '=='
      (ImplicitCastExpr 0xa33d4c0 <col:9, col:20> 'wchar_t' <LValueToRValue>
        (ArraySubscriptExpr 0xa33d490 <col:9, col:20> 'const wchar_t' lvalue
          (ImplicitCastExpr 0xa33d480 <col:9> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa33d450 <col:9> 'const wchar_t *' lvalue ParmVar 0xa33d140 'optstring' 'const wchar_t *'))
          (IntegerLiteral 0xa33d468 <col:19> 'int' 0)))
      (ImplicitCastExpr 0xa33d4d0 <col:25> 'wchar_t' <IntegralCast>
        (CharacterLiteral 0xa33d4a8 <col:25> 'char'45)))
    (CompoundStmt 0xa33d5b0 <line:327:5, line:330:5>
      (BinaryOperator 0xa33d568 <line:328:9, col:20> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' lvalue '='
        (DeclRefExpr 0xa33d4f8 <col:9> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' lvalue Var 0xa33bc70 'ordering' 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>')
        (DeclRefExpr 0xa33d510 <col:20> 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' EnumConstant 0xa33bc00 'RETURN_IN_ORDER' 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>'))
      (UnaryOperator 0xa33d598 <line:329:9, col:11> 'const wchar_t *' lvalue prefix '++'
        (DeclRefExpr 0xa33d580 <col:11> 'const wchar_t *' lvalue ParmVar 0xa33d140 'optstring' 'const wchar_t *')))
    (IfStmt 0xa33d818 <line:331:10, line:339:20>
      <<<NULL>>>
      (BinaryOperator 0xa33d658 <line:331:14, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa33d638 <col:14, col:25> 'wchar_t' <LValueToRValue>
          (ArraySubscriptExpr 0xa33d608 <col:14, col:25> 'const wchar_t' lvalue
            (ImplicitCastExpr 0xa33d5f8 <col:14> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa33d5c8 <col:14> 'const wchar_t *' lvalue ParmVar 0xa33d140 'optstring' 'const wchar_t *'))
            (IntegerLiteral 0xa33d5e0 <col:24> 'int' 0)))
        (ImplicitCastExpr 0xa33d648 <col:30> 'wchar_t' <IntegralCast>
          (CharacterLiteral 0xa33d620 <col:30> 'char'43)))
      (CompoundStmt 0xa33d6e8 <line:332:5, line:335:5>
        (BinaryOperator 0xa33d6a0 <line:333:9, col:20> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' lvalue '='
          (DeclRefExpr 0xa33d670 <col:9> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' lvalue Var 0xa33bc70 'ordering' 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>')
          (DeclRefExpr 0xa33d688 <col:20> 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' EnumConstant 0xa33bb80 'REQUIRE_ORDER' 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>'))
        (UnaryOperator 0xa33d6d0 <line:334:9, col:11> 'const wchar_t *' lvalue prefix '++'
          (DeclRefExpr 0xa33d6b8 <col:11> 'const wchar_t *' lvalue ParmVar 0xa33d140 'optstring' 'const wchar_t *')))
      (IfStmt 0xa33d7f8 <line:336:10, line:339:20>
        <<<NULL>>>
        (BinaryOperator 0xa33d750 <line:336:14, /usr/include/linux/stddef.h:8:14> '_Bool' '!='
          (ImplicitCastExpr 0xa33d730 <../codeBase/fish-shell-master/wgetopt.cpp:336:14> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa33d700 <col:14> 'char *' lvalue Var 0xa33bcc0 'posixly_correct' 'char *'))
          (ImplicitCastExpr 0xa33d740 </usr/include/linux/stddef.h:8:14> 'char *' <NullToPointer>
            (IntegerLiteral 0xa33d718 <col:14> 'int' 0)))
        (BinaryOperator 0xa33d798 <../codeBase/fish-shell-master/wgetopt.cpp:337:9, col:20> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' lvalue '='
          (DeclRefExpr 0xa33d768 <col:9> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' lvalue Var 0xa33bc70 'ordering' 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>')
          (DeclRefExpr 0xa33d780 <col:20> 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' EnumConstant 0xa33bb80 'REQUIRE_ORDER' 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>'))
        (BinaryOperator 0xa33d7e0 <line:339:9, col:20> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' lvalue '='
          (DeclRefExpr 0xa33d7b0 <col:9> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' lvalue Var 0xa33bc70 'ordering' 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>')
          (DeclRefExpr 0xa33d7c8 <col:20> 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' EnumConstant 0xa33bbc0 'PERMUTE' 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>')))))
  (ReturnStmt 0xa33d880 <line:341:5, col:12>
    (ImplicitCastExpr 0xa33d870 <col:12> 'const wchar_t *' <LValueToRValue>
      (DeclRefExpr 0xa33d854 <col:12> 'const wchar_t *' lvalue ParmVar 0xa33d140 'optstring' 'const wchar_t *'))))


int _wgetopt_internal(int argc, wchar_t *const *argv, const wchar_t *optstring, const struct woption *longopts, int *longind, int long_only) (CompoundStmt 0xa344670 <../codeBase/fish-shell-master/wgetopt.cpp:402:1, line:691:1>
  (BinaryOperator 0xa33db88 <line:403:5, /usr/include/linux/stddef.h:8:14> 'wchar_t *' lvalue '='
    (DeclRefExpr 0xa33db48 <../codeBase/fish-shell-master/wgetopt.cpp:403:5> 'wchar_t *' lvalue Var 0xa32abe0 'woptarg' 'wchar_t *')
    (ImplicitCastExpr 0xa33db78 </usr/include/linux/stddef.h:8:14> 'wchar_t *' <NullToPointer>
      (IntegerLiteral 0xa33db60 <col:14> 'int' 0)))
  (IfStmt 0xa33dcf0 <../codeBase/fish-shell-master/wgetopt.cpp:405:5, line:406:50>
    <<<NULL>>>
    (BinaryOperator 0xa33dbe0 <line:405:9, col:20> '_Bool' '=='
      (ImplicitCastExpr 0xa33dbd0 <col:9> 'int' <LValueToRValue>
        (DeclRefExpr 0xa33dba0 <col:9> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
      (IntegerLiteral 0xa33dbb8 <col:20> 'int' 0))
    (BinaryOperator 0xa33dcd8 <line:406:9, col:50> 'const wchar_t *' lvalue '='
      (DeclRefExpr 0xa33dbf8 <col:9> 'const wchar_t *' lvalue ParmVar 0xa33d970 'optstring' 'const wchar_t *')
      (CallExpr 0xa33dca8 <col:21, col:50> 'const wchar_t *'
        (ImplicitCastExpr 0xa33dc98 <col:21> 'const wchar_t *(*)(const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa33dc5c <col:21> 'const wchar_t *(const wchar_t *)' lvalue Function 0xa33d1a0 '_wgetopt_initialize' 'const wchar_t *(const wchar_t *)'))
        (ImplicitCastExpr 0xa33dcc8 <col:41> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa33dc44 <col:41> 'const wchar_t *' lvalue ParmVar 0xa33d970 'optstring' 'const wchar_t *'))))
    <<<NULL>>>)
  (IfStmt 0xa33f3f8 <line:408:5, line:477:5>
    <<<NULL>>>
    (BinaryOperator 0xa33de08 <line:408:9, col:42> '_Bool' '||'
      (BinaryOperator 0xa33dd60 <col:9, /usr/include/linux/stddef.h:8:14> '_Bool' '=='
        (ImplicitCastExpr 0xa33dd40 <../codeBase/fish-shell-master/wgetopt.cpp:408:9> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa33dd0c <col:9> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *'))
        (ImplicitCastExpr 0xa33dd50 </usr/include/linux/stddef.h:8:14> 'wchar_t *' <NullToPointer>
          (IntegerLiteral 0xa33dd28 <col:14> 'int' 0)))
      (BinaryOperator 0xa33ddf0 <../codeBase/fish-shell-master/wgetopt.cpp:408:29, col:42> '_Bool' '=='
        (ImplicitCastExpr 0xa33ddd0 <col:29, col:30> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa33dda0 <col:29, col:30> 'wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa33dd90 <col:30> 'wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa33dd78 <col:30> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *'))))
        (ImplicitCastExpr 0xa33dde0 <col:42> 'wchar_t' <IntegralCast>
          (CharacterLiteral 0xa33ddb8 <col:42> 'char'0))))
    (CompoundStmt 0xa33f3d0 <line:409:5, line:477:5>
      (IfStmt 0xa33e4c8 <line:412:9, line:429:9>
        <<<NULL>>>
        (BinaryOperator 0xa33de80 <line:412:13, col:25> '_Bool' '=='
          (ImplicitCastExpr 0xa33de60 <col:13> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa33de50 <col:13> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' <LValueToRValue>
              (DeclRefExpr 0xa33de20 <col:13> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' lvalue Var 0xa33bc70 'ordering' 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>')))
          (ImplicitCastExpr 0xa33de70 <col:25> 'int' <IntegralCast>
            (DeclRefExpr 0xa33de38 <col:25> 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' EnumConstant 0xa33bbc0 'PERMUTE' 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>')))
        (CompoundStmt 0xa33e4a8 <line:413:9, line:429:9>
          (IfStmt 0xa33e148 <line:417:13, line:420:32>
            <<<NULL>>>
            (BinaryOperator 0xa33df68 <line:417:17, col:63> '_Bool' '&&'
              (BinaryOperator 0xa33dee8 <col:17, col:33> '_Bool' '!='
                (ImplicitCastExpr 0xa33dec8 <col:17> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33de98 <col:17> 'int' lvalue Var 0xa33bd10 'first_nonopt' 'int'))
                (ImplicitCastExpr 0xa33ded8 <col:33> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33deb0 <col:33> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int')))
              (BinaryOperator 0xa33df50 <col:48, col:63> '_Bool' '!='
                (ImplicitCastExpr 0xa33df30 <col:48> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33df00 <col:48> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int'))
                (ImplicitCastExpr 0xa33df40 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33df18 <col:63> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
            (CallExpr 0xa33e048 <line:418:17, col:43> 'void'
              (ImplicitCastExpr 0xa33e038 <col:17> 'void (*)(wchar_t **)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa33e008 <col:17> 'void (wchar_t **)' lvalue Function 0xa33be30 'exchange' 'void (wchar_t **)'))
              (CStyleCastExpr 0xa33dff0 <col:26, col:39> 'wchar_t **' <NoOp>
                (ImplicitCastExpr 0xa33dfe0 <col:39> 'wchar_t *const *' <LValueToRValue>
                  (DeclRefExpr 0xa33dfb4 <col:39> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))))
            (IfStmt 0xa33e128 <line:419:18, line:420:32>
              <<<NULL>>>
              (BinaryOperator 0xa33e0b8 <line:419:22, col:37> '_Bool' '!='
                (ImplicitCastExpr 0xa33e098 <col:22> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e068 <col:22> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int'))
                (ImplicitCastExpr 0xa33e0a8 <col:37> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e080 <col:37> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))
              (BinaryOperator 0xa33e110 <line:420:17, col:32> 'int' lvalue '='
                (DeclRefExpr 0xa33e0d0 <col:17> 'int' lvalue Var 0xa33bd10 'first_nonopt' 'int')
                (ImplicitCastExpr 0xa33e100 <col:32> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e0e8 <col:32> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))
              <<<NULL>>>))
          (WhileStmt 0xa33e438 <line:425:13, line:427:24>
            <<<NULL>>>
            (BinaryOperator 0xa33e3f0 <line:425:20, line:426:76> '_Bool' '&&'
              (BinaryOperator 0xa33e1b8 <line:425:20, col:30> '_Bool' '<'
                (ImplicitCastExpr 0xa33e198 <col:20> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e164 <col:20> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
                (ImplicitCastExpr 0xa33e1a8 <col:30> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e17c <col:30> 'int' lvalue ParmVar 0xa33d8d0 'argc' 'int')))
              (ParenExpr 0xa33e3d8 <line:426:24, col:76> '_Bool'
                (BinaryOperator 0xa33e3c0 <col:25, col:72> '_Bool' '||'
                  (BinaryOperator 0xa33e2b0 <col:25, col:45> '_Bool' '!='
                    (ImplicitCastExpr 0xa33e290 <col:25, col:40> 'wchar_t' <LValueToRValue>
                      (ArraySubscriptExpr 0xa33e260 <col:25, col:40> 'wchar_t' lvalue
                        (ImplicitCastExpr 0xa33e250 <col:25, col:37> 'wchar_t *' <LValueToRValue>
                          (ArraySubscriptExpr 0xa33e220 <col:25, col:37> 'wchar_t *const' lvalue
                            (ImplicitCastExpr 0xa33e200 <col:25> 'wchar_t *const *' <LValueToRValue>
                              (DeclRefExpr 0xa33e1d0 <col:25> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                            (ImplicitCastExpr 0xa33e210 <col:30> 'int' <LValueToRValue>
                              (DeclRefExpr 0xa33e1e8 <col:30> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                        (IntegerLiteral 0xa33e238 <col:39> 'int' 0)))
                    (ImplicitCastExpr 0xa33e2a0 <col:45> 'wchar_t' <IntegralCast>
                      (CharacterLiteral 0xa33e278 <col:45> 'char'45)))
                  (BinaryOperator 0xa33e3a8 <col:52, col:72> '_Bool' '=='
                    (ImplicitCastExpr 0xa33e388 <col:52, col:67> 'wchar_t' <LValueToRValue>
                      (ArraySubscriptExpr 0xa33e358 <col:52, col:67> 'wchar_t' lvalue
                        (ImplicitCastExpr 0xa33e348 <col:52, col:64> 'wchar_t *' <LValueToRValue>
                          (ArraySubscriptExpr 0xa33e318 <col:52, col:64> 'wchar_t *const' lvalue
                            (ImplicitCastExpr 0xa33e2f8 <col:52> 'wchar_t *const *' <LValueToRValue>
                              (DeclRefExpr 0xa33e2c8 <col:52> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                            (ImplicitCastExpr 0xa33e308 <col:57> 'int' <LValueToRValue>
                              (DeclRefExpr 0xa33e2e0 <col:57> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                        (IntegerLiteral 0xa33e330 <col:66> 'int' 1)))
                    (ImplicitCastExpr 0xa33e398 <col:72> 'wchar_t' <IntegralCast>
                      (CharacterLiteral 0xa33e370 <col:72> 'char'0))))))
            (UnaryOperator 0xa33e420 <line:427:17, col:24> 'int' postfix '++'
              (DeclRefExpr 0xa33e408 <col:17> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))
          (BinaryOperator 0xa33e490 <line:428:13, col:27> 'int' lvalue '='
            (DeclRefExpr 0xa33e44c <col:13> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int')
            (ImplicitCastExpr 0xa33e480 <col:27> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33e464 <col:27> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
        <<<NULL>>>)
      (IfStmt 0xa33eb08 <line:436:9, line:447:9>
        <<<NULL>>>
        (BinaryOperator 0xa33e738 <line:436:13, col:60> '_Bool' '&&'
          (BinaryOperator 0xa33e538 <col:13, col:24> '_Bool' '!='
            (ImplicitCastExpr 0xa33e518 <col:13> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33e4e4 <col:13> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
            (ImplicitCastExpr 0xa33e528 <col:24> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33e4fc <col:24> 'int' lvalue ParmVar 0xa33d8d0 'argc' 'int')))
          (UnaryOperator 0xa33e720 <col:32, col:60> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa33e710 <col:33, col:60> '_Bool' <IntegralToBoolean>
              (CallExpr 0xa33e6b8 <col:33, col:60> 'int'
                (ImplicitCastExpr 0xa33e6a8 <col:33> 'int (*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa33e654 <col:33> 'int (const wchar_t *, const wchar_t *) throw()' lvalue Function 0x9d70c50 'wcscmp' 'int (const wchar_t *, const wchar_t *) throw()'))
                (ImplicitCastExpr 0xa33e6f0 <col:40, col:52> 'const wchar_t *' <NoOp>
                  (ImplicitCastExpr 0xa33e6e0 <col:40, col:52> 'wchar_t *' <LValueToRValue>
                    (ArraySubscriptExpr 0xa33e5d8 <col:40, col:52> 'wchar_t *const' lvalue
                      (ImplicitCastExpr 0xa33e5b8 <col:40> 'wchar_t *const *' <LValueToRValue>
                        (DeclRefExpr 0xa33e584 <col:40> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                      (ImplicitCastExpr 0xa33e5c8 <col:45> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33e59c <col:45> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))))
                (ImplicitCastExpr 0xa33e700 <col:55> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0xa33e630 <col:55> 'const wchar_t [3]' lvalue L"-\000\000\000-\000\000\000"))))))
        (CompoundStmt 0xa33eae8 <line:437:9, line:447:9>
          (UnaryOperator 0xa33e768 <line:438:13, col:20> 'int' postfix '++'
            (DeclRefExpr 0xa33e750 <col:13> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
          (IfStmt 0xa33ea18 <line:440:13, line:443:32>
            <<<NULL>>>
            (BinaryOperator 0xa33e850 <line:440:17, col:63> '_Bool' '&&'
              (BinaryOperator 0xa33e7d0 <col:17, col:33> '_Bool' '!='
                (ImplicitCastExpr 0xa33e7b0 <col:17> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e77c <col:17> 'int' lvalue Var 0xa33bd10 'first_nonopt' 'int'))
                (ImplicitCastExpr 0xa33e7c0 <col:33> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e794 <col:33> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int')))
              (BinaryOperator 0xa33e838 <col:48, col:63> '_Bool' '!='
                (ImplicitCastExpr 0xa33e818 <col:48> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e7e8 <col:48> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int'))
                (ImplicitCastExpr 0xa33e828 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e800 <col:63> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
            (CallExpr 0xa33e918 <line:441:17, col:43> 'void'
              (ImplicitCastExpr 0xa33e908 <col:17> 'void (*)(wchar_t **)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa33e8f0 <col:17> 'void (wchar_t **)' lvalue Function 0xa33be30 'exchange' 'void (wchar_t **)'))
              (CStyleCastExpr 0xa33e8d8 <col:26, col:39> 'wchar_t **' <NoOp>
                (ImplicitCastExpr 0xa33e8c8 <col:39> 'wchar_t *const *' <LValueToRValue>
                  (DeclRefExpr 0xa33e89c <col:39> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))))
            (IfStmt 0xa33e9f8 <line:442:18, line:443:32>
              <<<NULL>>>
              (BinaryOperator 0xa33e988 <line:442:22, col:38> '_Bool' '=='
                (ImplicitCastExpr 0xa33e968 <col:22> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e938 <col:22> 'int' lvalue Var 0xa33bd10 'first_nonopt' 'int'))
                (ImplicitCastExpr 0xa33e978 <col:38> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e950 <col:38> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int')))
              (BinaryOperator 0xa33e9e0 <line:443:17, col:32> 'int' lvalue '='
                (DeclRefExpr 0xa33e9a0 <col:17> 'int' lvalue Var 0xa33bd10 'first_nonopt' 'int')
                (ImplicitCastExpr 0xa33e9d0 <col:32> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33e9b8 <col:32> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))
              <<<NULL>>>))
          (BinaryOperator 0xa33ea78 <line:444:13, col:27> 'int' lvalue '='
            (DeclRefExpr 0xa33ea34 <col:13> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int')
            (ImplicitCastExpr 0xa33ea68 <col:27> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33ea4c <col:27> 'int' lvalue ParmVar 0xa33d8d0 'argc' 'int')))
          (BinaryOperator 0xa33ead0 <line:446:13, col:23> 'int' lvalue '='
            (DeclRefExpr 0xa33ea90 <col:13> 'int' lvalue Var 0xa32ac50 'woptind' 'int')
            (ImplicitCastExpr 0xa33eac0 <col:23> 'int' <LValueToRValue>
              (DeclRefExpr 0xa33eaa8 <col:23> 'int' lvalue ParmVar 0xa33d8d0 'argc' 'int'))))
        <<<NULL>>>)
      (IfStmt 0xa33ece0 <line:452:9, line:459:9>
        <<<NULL>>>
        (BinaryOperator 0xa33eb78 <line:452:13, col:24> '_Bool' '=='
          (ImplicitCastExpr 0xa33eb58 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0xa33eb24 <col:13> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
          (ImplicitCastExpr 0xa33eb68 <col:24> 'int' <LValueToRValue>
            (DeclRefExpr 0xa33eb3c <col:24> 'int' lvalue ParmVar 0xa33d8d0 'argc' 'int')))
        (CompoundStmt 0xa33ecc8 <line:453:9, line:459:9>
          (IfStmt 0xa33ec50 <line:456:13, line:457:27>
            <<<NULL>>>
            (BinaryOperator 0xa33ebe0 <line:456:17, col:33> '_Bool' '!='
              (ImplicitCastExpr 0xa33ebc0 <col:17> 'int' <LValueToRValue>
                (DeclRefExpr 0xa33eb90 <col:17> 'int' lvalue Var 0xa33bd10 'first_nonopt' 'int'))
              (ImplicitCastExpr 0xa33ebd0 <col:33> 'int' <LValueToRValue>
                (DeclRefExpr 0xa33eba8 <col:33> 'int' lvalue Var 0xa33bd60 'last_nonopt' 'int')))
            (BinaryOperator 0xa33ec38 <line:457:17, col:27> 'int' lvalue '='
              (DeclRefExpr 0xa33ebf8 <col:17> 'int' lvalue Var 0xa32ac50 'woptind' 'int')
              (ImplicitCastExpr 0xa33ec28 <col:27> 'int' <LValueToRValue>
                (DeclRefExpr 0xa33ec10 <col:27> 'int' lvalue Var 0xa33bd10 'first_nonopt' 'int')))
            <<<NULL>>>)
          (ReturnStmt 0xa33ecb8 <line:458:13, /usr/include/libio.h:90:17>
            (ParenExpr 0xa33eca0 <col:14, col:17> 'int'
              (UnaryOperator 0xa33ec88 <col:15, col:16> 'int' prefix '-'
                (IntegerLiteral 0xa33ec70 <col:16> 'int' 1)))))
        <<<NULL>>>)
      (IfStmt 0xa33f108 <../codeBase/fish-shell-master/wgetopt.cpp:464:9, line:470:9>
        <<<NULL>>>
        (ParenExpr 0xa33ef08 <line:464:13, col:65> '_Bool'
          (BinaryOperator 0xa33eef0 <col:14, col:61> '_Bool' '||'
            (BinaryOperator 0xa33ede0 <col:14, col:34> '_Bool' '!='
              (ImplicitCastExpr 0xa33edc0 <col:14, col:29> 'wchar_t' <LValueToRValue>
                (ArraySubscriptExpr 0xa33ed90 <col:14, col:29> 'wchar_t' lvalue
                  (ImplicitCastExpr 0xa33ed80 <col:14, col:26> 'wchar_t *' <LValueToRValue>
                    (ArraySubscriptExpr 0xa33ed50 <col:14, col:26> 'wchar_t *const' lvalue
                      (ImplicitCastExpr 0xa33ed30 <col:14> 'wchar_t *const *' <LValueToRValue>
                        (DeclRefExpr 0xa33ecfc <col:14> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                      (ImplicitCastExpr 0xa33ed40 <col:19> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33ed14 <col:19> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                  (IntegerLiteral 0xa33ed68 <col:28> 'int' 0)))
              (ImplicitCastExpr 0xa33edd0 <col:34> 'wchar_t' <IntegralCast>
                (CharacterLiteral 0xa33eda8 <col:34> 'char'45)))
            (BinaryOperator 0xa33eed8 <col:41, col:61> '_Bool' '=='
              (ImplicitCastExpr 0xa33eeb8 <col:41, col:56> 'wchar_t' <LValueToRValue>
                (ArraySubscriptExpr 0xa33ee88 <col:41, col:56> 'wchar_t' lvalue
                  (ImplicitCastExpr 0xa33ee78 <col:41, col:53> 'wchar_t *' <LValueToRValue>
                    (ArraySubscriptExpr 0xa33ee48 <col:41, col:53> 'wchar_t *const' lvalue
                      (ImplicitCastExpr 0xa33ee28 <col:41> 'wchar_t *const *' <LValueToRValue>
                        (DeclRefExpr 0xa33edf8 <col:41> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                      (ImplicitCastExpr 0xa33ee38 <col:46> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa33ee10 <col:46> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                  (IntegerLiteral 0xa33ee60 <col:55> 'int' 1)))
              (ImplicitCastExpr 0xa33eec8 <col:61> 'wchar_t' <IntegralCast>
                (CharacterLiteral 0xa33eea0 <col:61> 'char'0)))))
        (CompoundStmt 0xa33f0e8 <line:465:9, line:470:9>
          (IfStmt 0xa33eff0 <line:466:13, /usr/include/libio.h:90:17>
            <<<NULL>>>
            (BinaryOperator 0xa33ef80 <../codeBase/fish-shell-master/wgetopt.cpp:466:17, col:29> '_Bool' '=='
              (ImplicitCastExpr 0xa33ef60 <col:17> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa33ef50 <col:17> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' <LValueToRValue>
                  (DeclRefExpr 0xa33ef1c <col:17> 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' lvalue Var 0xa33bc70 'ordering' 'enum <anonymous enum at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>':'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>')))
              (ImplicitCastExpr 0xa33ef70 <col:29> 'int' <IntegralCast>
                (DeclRefExpr 0xa33ef34 <col:29> 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>' EnumConstant 0xa33bb80 'REQUIRE_ORDER' 'enum <anonymous at ../codeBase/fish-shell-master/wgetopt.cpp:171:8>')))
            (ReturnStmt 0xa33efe0 <line:467:17, /usr/include/libio.h:90:17>
              (ParenExpr 0xa33efc8 <col:14, col:17> 'int'
                (UnaryOperator 0xa33efb0 <col:15, col:16> 'int' prefix '-'
                  (IntegerLiteral 0xa33ef98 <col:16> 'int' 1))))
            <<<NULL>>>)
          (BinaryOperator 0xa33f0a8 <../codeBase/fish-shell-master/wgetopt.cpp:468:13, col:37> 'wchar_t *' lvalue '='
            (DeclRefExpr 0xa33f00c <col:13> 'wchar_t *' lvalue Var 0xa32abe0 'woptarg' 'wchar_t *')
            (ImplicitCastExpr 0xa33f098 <col:23, col:37> 'wchar_t *' <LValueToRValue>
              (ArraySubscriptExpr 0xa33f080 <col:23, col:37> 'wchar_t *const' lvalue
                (ImplicitCastExpr 0xa33f070 <col:23> 'wchar_t *const *' <LValueToRValue>
                  (DeclRefExpr 0xa33f024 <col:23> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                (UnaryOperator 0xa33f058 <col:28, col:35> 'int' postfix '++'
                  (DeclRefExpr 0xa33f03c <col:28> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))))
          (ReturnStmt 0xa33f0d8 <line:469:13, col:20>
            (IntegerLiteral 0xa33f0c0 <col:20> 'int' 1)))
        <<<NULL>>>)
      (BinaryOperator 0xa33f3b8 <line:475:9, line:476:68> 'wchar_t *' lvalue '='
        (DeclRefExpr 0xa33f124 <line:475:9> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')
        (ParenExpr 0xa33f3a0 <col:20, line:476:68> 'wchar_t *'
          (BinaryOperator 0xa33f388 <line:475:21, line:476:67> 'wchar_t *' '+'
            (BinaryOperator 0xa33f1d0 <line:475:21, col:37> 'wchar_t *' '+'
              (ImplicitCastExpr 0xa33f1c0 <col:21, col:33> 'wchar_t *' <LValueToRValue>
                (ArraySubscriptExpr 0xa33f190 <col:21, col:33> 'wchar_t *const' lvalue
                  (ImplicitCastExpr 0xa33f170 <col:21> 'wchar_t *const *' <LValueToRValue>
                    (DeclRefExpr 0xa33f13c <col:21> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                  (ImplicitCastExpr 0xa33f180 <col:26> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa33f154 <col:26> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
              (IntegerLiteral 0xa33f1a8 <col:37> 'int' 1))
            (ImplicitCastExpr 0xa33f378 <line:476:23, col:67> 'int' <IntegralCast>
              (ParenExpr 0xa33f360 <col:23, col:67> '_Bool'
                (BinaryOperator 0xa33f348 <col:24, col:64> '_Bool' '&&'
                  (BinaryOperator 0xa33f238 <col:24, /usr/include/linux/stddef.h:8:14> '_Bool' '!='
                    (ImplicitCastExpr 0xa33f218 <../codeBase/fish-shell-master/wgetopt.cpp:476:24> 'const struct woption *' <LValueToRValue>
                      (DeclRefExpr 0xa33f1e8 <col:24> 'const struct woption *' lvalue ParmVar 0xa33d9c0 'longopts' 'const struct woption *'))
                    (ImplicitCastExpr 0xa33f228 </usr/include/linux/stddef.h:8:14> 'const struct woption *' <NullToPointer>
                      (IntegerLiteral 0xa33f200 <col:14> 'int' 0)))
                  (BinaryOperator 0xa33f330 <../codeBase/fish-shell-master/wgetopt.cpp:476:44, col:64> '_Bool' '=='
                    (ImplicitCastExpr 0xa33f310 <col:44, col:59> 'wchar_t' <LValueToRValue>
                      (ArraySubscriptExpr 0xa33f2e0 <col:44, col:59> 'wchar_t' lvalue
                        (ImplicitCastExpr 0xa33f2d0 <col:44, col:56> 'wchar_t *' <LValueToRValue>
                          (ArraySubscriptExpr 0xa33f2a0 <col:44, col:56> 'wchar_t *const' lvalue
                            (ImplicitCastExpr 0xa33f280 <col:44> 'wchar_t *const *' <LValueToRValue>
                              (DeclRefExpr 0xa33f250 <col:44> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                            (ImplicitCastExpr 0xa33f290 <col:49> 'int' <LValueToRValue>
                              (DeclRefExpr 0xa33f268 <col:49> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                        (IntegerLiteral 0xa33f2b8 <col:58> 'int' 1)))
                    (ImplicitCastExpr 0xa33f320 <col:64> 'wchar_t' <IntegralCast>
                      (CharacterLiteral 0xa33f2f8 <col:64> 'char'45))))))))))
    <<<NULL>>>)
  (IfStmt 0xa342e58 <line:494:5, line:618:5>
    <<<NULL>>>
    (BinaryOperator 0xa33f898 <line:494:9, line:496:95> '_Bool' '&&'
      (BinaryOperator 0xa33f468 <line:494:9, /usr/include/linux/stddef.h:8:14> '_Bool' '!='
        (ImplicitCastExpr 0xa33f448 <../codeBase/fish-shell-master/wgetopt.cpp:494:9> 'const struct woption *' <LValueToRValue>
          (DeclRefExpr 0xa33f414 <col:9> 'const struct woption *' lvalue ParmVar 0xa33d9c0 'longopts' 'const struct woption *'))
        (ImplicitCastExpr 0xa33f458 </usr/include/linux/stddef.h:8:14> 'const struct woption *' <NullToPointer>
          (IntegerLiteral 0xa33f430 <col:14> 'int' 0)))
      (ParenExpr 0xa33f880 <../codeBase/fish-shell-master/wgetopt.cpp:495:16, line:496:95> '_Bool'
        (BinaryOperator 0xa33f868 <line:495:17, line:496:94> '_Bool' '||'
          (BinaryOperator 0xa33f560 <line:495:17, col:37> '_Bool' '=='
            (ImplicitCastExpr 0xa33f540 <col:17, col:32> 'wchar_t' <LValueToRValue>
              (ArraySubscriptExpr 0xa33f510 <col:17, col:32> 'wchar_t' lvalue
                (ImplicitCastExpr 0xa33f500 <col:17, col:29> 'wchar_t *' <LValueToRValue>
                  (ArraySubscriptExpr 0xa33f4d0 <col:17, col:29> 'wchar_t *const' lvalue
                    (ImplicitCastExpr 0xa33f4b0 <col:17> 'wchar_t *const *' <LValueToRValue>
                      (DeclRefExpr 0xa33f480 <col:17> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                    (ImplicitCastExpr 0xa33f4c0 <col:22> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa33f498 <col:22> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                (IntegerLiteral 0xa33f4e8 <col:31> 'int' 1)))
            (ImplicitCastExpr 0xa33f550 <col:37> 'wchar_t' <IntegralCast>
              (CharacterLiteral 0xa33f528 <col:37> 'char'45)))
          (ParenExpr 0xa33f850 <line:496:20, col:94> '_Bool'
            (BinaryOperator 0xa33f838 <col:21, col:93> '_Bool' '&&'
              (ImplicitCastExpr 0xa33f828 <col:21> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa33f818 <col:21> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa33f578 <col:21> 'int' lvalue ParmVar 0xa33da60 'long_only' 'int')))
              (ParenExpr 0xa33f800 <col:34, col:93> '_Bool'
                (BinaryOperator 0xa33f7e8 <col:35, col:92> '_Bool' '||'
                  (ImplicitCastExpr 0xa33f7d8 <col:35, col:50> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0xa33f7c8 <col:35, col:50> 'wchar_t' <LValueToRValue>
                      (ArraySubscriptExpr 0xa33f620 <col:35, col:50> 'wchar_t' lvalue
                        (ImplicitCastExpr 0xa33f610 <col:35, col:47> 'wchar_t *' <LValueToRValue>
                          (ArraySubscriptExpr 0xa33f5e0 <col:35, col:47> 'wchar_t *const' lvalue
                            (ImplicitCastExpr 0xa33f5c0 <col:35> 'wchar_t *const *' <LValueToRValue>
                              (DeclRefExpr 0xa33f590 <col:35> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                            (ImplicitCastExpr 0xa33f5d0 <col:40> 'int' <LValueToRValue>
                              (DeclRefExpr 0xa33f5a8 <col:40> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                        (IntegerLiteral 0xa33f5f8 <col:49> 'int' 2))))
                  (UnaryOperator 0xa33f7b0 <col:55, col:92> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa33f7a0 <line:202:20, line:496:92> '_Bool' <PointerToBoolean>
                      (CallExpr 0xa33f758 <line:202:20, line:496:92> 'wchar_t *'
                        (ImplicitCastExpr 0xa33f748 <line:202:20> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa33f72c <col:20> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9d72ad0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
                        (ImplicitCastExpr 0xa33f780 <line:496:65> 'const wchar_t *' <LValueToRValue>
                          (DeclRefExpr 0xa33f66c <col:65> 'const wchar_t *' lvalue ParmVar 0xa33d970 'optstring' 'const wchar_t *'))
                        (ImplicitCastExpr 0xa33f790 <col:76, col:91> 'wchar_t' <LValueToRValue>
                          (ArraySubscriptExpr 0xa33f718 <col:76, col:91> 'wchar_t' lvalue
                            (ImplicitCastExpr 0xa33f708 <col:76, col:88> 'wchar_t *' <LValueToRValue>
                              (ArraySubscriptExpr 0xa33f6d8 <col:76, col:88> 'wchar_t *const' lvalue
                                (ImplicitCastExpr 0xa33f6b8 <col:76> 'wchar_t *const *' <LValueToRValue>
                                  (DeclRefExpr 0xa33f684 <col:76> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                                (ImplicitCastExpr 0xa33f6c8 <col:81> 'int' <LValueToRValue>
                                  (DeclRefExpr 0xa33f69c <col:81> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                            (IntegerLiteral 0xa33f6f0 <col:90> 'int' 1)))))))))))))
    (CompoundStmt 0xa342e18 <line:497:5, line:618:5>
      (DeclStmt 0xa33f8f8 <line:498:9, col:25>
        0xa33f8c0 "wchar_t *nameend")
      (DeclStmt 0xa33f958 <line:499:9, col:32>
        0xa33f920 "const struct woption *p")
      (DeclStmt 0xa33f9e0 <line:500:9, col:44>
        0xa33f980 "const struct woption *pfound =
          (ImplicitCastExpr 0xa33f9d0 </usr/include/linux/stddef.h:8:14> 'const struct woption *' <NullToPointer>
            (IntegerLiteral 0xa33f9b8 <col:14> 'int' 0))")
      (DeclStmt 0xa33fa50 <../codeBase/fish-shell-master/wgetopt.cpp:501:9, col:22>
        0xa33fa00 "int exact =
          (IntegerLiteral 0xa33fa38 <col:21> 'int' 0)")
      (DeclStmt 0xa33fac0 <line:502:9, col:22>
        0xa33fa70 "int ambig =
          (IntegerLiteral 0xa33faa8 <col:21> 'int' 0)")
      (DeclStmt 0xa33fb30 <line:503:9, col:25>
        0xa33fae0 "int indfound =
          (IntegerLiteral 0xa33fb18 <col:24> 'int' 0)")
      (DeclStmt 0xa33fb88 <line:504:9, col:25>
        0xa33fb50 "int option_index")
      (ForStmt 0xa33fd38 <line:506:9, line:507:32>
        (BinaryOperator 0xa33fbd8 <line:506:14, col:24> 'wchar_t *' lvalue '='
          (DeclRefExpr 0xa33fb98 <col:14> 'wchar_t *' lvalue Var 0xa33f8c0 'nameend' 'wchar_t *')
          (ImplicitCastExpr 0xa33fbc8 <col:24> 'wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa33fbb0 <col:24> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))
        <<<NULL>>>
        (BinaryOperator 0xa33fce0 <col:34, col:58> '_Bool' '&&'
          (ImplicitCastExpr 0xa33fcd0 <col:34, col:35> '_Bool' <IntegralToBoolean>
            (ImplicitCastExpr 0xa33fcc0 <col:34, col:35> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa33fc18 <col:34, col:35> 'wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa33fc08 <col:35> 'wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa33fbf0 <col:35> 'wchar_t *' lvalue Var 0xa33f8c0 'nameend' 'wchar_t *')))))
          (BinaryOperator 0xa33fca8 <col:46, col:58> '_Bool' '!='
            (ImplicitCastExpr 0xa33fc88 <col:46, col:47> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa33fc58 <col:46, col:47> 'wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa33fc48 <col:47> 'wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa33fc2c <col:47> 'wchar_t *' lvalue Var 0xa33f8c0 'nameend' 'wchar_t *'))))
            (ImplicitCastExpr 0xa33fc98 <col:58> 'wchar_t' <IntegralCast>
              (CharacterLiteral 0xa33fc70 <col:58> 'char'61))))
        (UnaryOperator 0xa33fd10 <col:63, col:70> 'wchar_t *' postfix '++'
          (DeclRefExpr 0xa33fcf8 <col:63> 'wchar_t *' lvalue Var 0xa33f8c0 'nameend' 'wchar_t *'))
        (NullStmt 0xa33fd28 <line:507:32>))
      (ForStmt 0xa3405a8 <line:511:9, line:531:13>
        (BinaryOperator 0xa33fe00 <line:511:14, col:43> 'int' lvalue ','
          (BinaryOperator 0xa33fda0 <col:14, col:18> 'const struct woption *' lvalue '='
            (DeclRefExpr 0xa33fd5c <col:14> 'const struct woption *' lvalue Var 0xa33f920 'p' 'const struct woption *')
            (ImplicitCastExpr 0xa33fd90 <col:18> 'const struct woption *' <LValueToRValue>
              (DeclRefExpr 0xa33fd74 <col:18> 'const struct woption *' lvalue ParmVar 0xa33d9c0 'longopts' 'const struct woption *')))
          (BinaryOperator 0xa33fde8 <col:28, col:43> 'int' lvalue '='
            (DeclRefExpr 0xa33fdb8 <col:28> 'int' lvalue Var 0xa33fb50 'option_index' 'int')
            (IntegerLiteral 0xa33fdd0 <col:43> 'int' 0)))
        <<<NULL>>>
        (ImplicitCastExpr 0xa33fe88 <col:46, col:49> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0xa33fe78 <col:46, col:49> 'const wchar_t *' <LValueToRValue>
            (MemberExpr 0xa33fe54 <col:46, col:49> 'const wchar_t *const' lvalue ->name 0x9e0d2f0
              (ImplicitCastExpr 0xa33fe30 <col:46> 'const struct woption *' <LValueToRValue>
                (DeclRefExpr 0xa33fe18 <col:46> 'const struct woption *' lvalue Var 0xa33f920 'p' 'const struct woption *')))))
        (BinaryOperator 0xa33fef8 <col:55, col:72> 'int' ','
          (UnaryOperator 0xa33feb0 <col:55, col:56> 'const struct woption *' postfix '++'
            (DeclRefExpr 0xa33fe94 <col:55> 'const struct woption *' lvalue Var 0xa33f920 'p' 'const struct woption *'))
          (UnaryOperator 0xa33fee0 <col:60, col:72> 'int' postfix '++'
            (DeclRefExpr 0xa33fec4 <col:60> 'int' lvalue Var 0xa33fb50 'option_index' 'int')))
        (IfStmt 0xa340588 <line:512:13, line:531:13>
          <<<NULL>>>
          (UnaryOperator 0xa3400b0 <line:512:17, col:63> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa3400a0 <col:18, col:63> '_Bool' <IntegralToBoolean>
              (CallExpr 0xa340038 <col:18, col:63> 'int'
                (ImplicitCastExpr 0xa340028 <col:18> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa340010 <col:18> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x9d70e60 'wcsncmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()'))
                (ImplicitCastExpr 0xa340060 <col:26, col:29> 'const wchar_t *' <LValueToRValue>
                  (MemberExpr 0xa33ff6c <col:26, col:29> 'const wchar_t *const' lvalue ->name 0x9e0d2f0
                    (ImplicitCastExpr 0xa33ff60 <col:26> 'const struct woption *' <LValueToRValue>
                      (DeclRefExpr 0xa33ff44 <col:26> 'const struct woption *' lvalue Var 0xa33f920 'p' 'const struct woption *'))))
                (ImplicitCastExpr 0xa340080 <col:35> 'const wchar_t *' <NoOp>
                  (ImplicitCastExpr 0xa340070 <col:35> 'wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa33ff8c <col:35> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))
                (ImplicitCastExpr 0xa340090 <col:45, col:55> 'size_t':'unsigned int' <IntegralCast>
                  (BinaryOperator 0xa33fff8 <col:45, col:55> 'int' '-'
                    (ImplicitCastExpr 0xa33ffd8 <col:45> 'wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa33ffa4 <col:45> 'wchar_t *' lvalue Var 0xa33f8c0 'nameend' 'wchar_t *'))
                    (ImplicitCastExpr 0xa33ffe8 <col:55> 'wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa33ffbc <col:55> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))))))
          (CompoundStmt 0xa340570 <line:513:13, line:531:13>
            (IfStmt 0xa340550 <line:514:17, line:530:29>
              <<<NULL>>>
              (BinaryOperator 0xa340280 <line:514:21, col:87> '_Bool' '=='
                (CStyleCastExpr 0xa340168 <col:21, col:54> 'unsigned int' <NoOp>
                  (ImplicitCastExpr 0xa340158 <col:35, col:54> 'unsigned int' <IntegralCast>
                    (ParenExpr 0xa340130 <col:35, col:54> 'int'
                      (BinaryOperator 0xa340118 <col:36, col:46> 'int' '-'
                        (ImplicitCastExpr 0xa3400f8 <col:36> 'wchar_t *' <LValueToRValue>
                          (DeclRefExpr 0xa3400c4 <col:36> 'wchar_t *' lvalue Var 0xa33f8c0 'nameend' 'wchar_t *'))
                        (ImplicitCastExpr 0xa340108 <col:46> 'wchar_t *' <LValueToRValue>
                          (DeclRefExpr 0xa3400dc <col:46> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *'))))))
                (CStyleCastExpr 0xa340268 <col:59, col:87> 'unsigned int' <NoOp>
                  (CallExpr 0xa340228 <col:73, col:87> 'size_t':'unsigned int'
                    (ImplicitCastExpr 0xa340218 <col:73> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa3401fc <col:73> 'size_t (const wchar_t *) throw()' lvalue Function 0x9d737a0 'wcslen' 'size_t (const wchar_t *) throw()'))
                    (ImplicitCastExpr 0xa340248 <col:80, col:83> 'const wchar_t *' <LValueToRValue>
                      (MemberExpr 0xa3401dc <col:80, col:83> 'const wchar_t *const' lvalue ->name 0x9e0d2f0
                        (ImplicitCastExpr 0xa3401d0 <col:80> 'const struct woption *' <LValueToRValue>
                          (DeclRefExpr 0xa3401b4 <col:80> 'const struct woption *' lvalue Var 0xa33f920 'p' 'const struct woption *')))))))
              (CompoundStmt 0xa340398 <line:515:17, line:521:17>
                (BinaryOperator 0xa3402d8 <line:517:21, col:30> 'const struct woption *' lvalue '='
                  (DeclRefExpr 0xa340298 <col:21> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *')
                  (ImplicitCastExpr 0xa3402c8 <col:30> 'const struct woption *' <LValueToRValue>
                    (DeclRefExpr 0xa3402b0 <col:30> 'const struct woption *' lvalue Var 0xa33f920 'p' 'const struct woption *')))
                (BinaryOperator 0xa340330 <line:518:21, col:32> 'int' lvalue '='
                  (DeclRefExpr 0xa3402f0 <col:21> 'int' lvalue Var 0xa33fae0 'indfound' 'int')
                  (ImplicitCastExpr 0xa340320 <col:32> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa340308 <col:32> 'int' lvalue Var 0xa33fb50 'option_index' 'int')))
                (BinaryOperator 0xa340378 <line:519:21, col:29> 'int' lvalue '='
                  (DeclRefExpr 0xa340348 <col:21> 'int' lvalue Var 0xa33fa00 'exact' 'int')
                  (IntegerLiteral 0xa340360 <col:29> 'int' 1))
                (BreakStmt 0xa340390 <line:520:21>))
              (IfStmt 0xa340530 <line:522:22, line:530:29>
                <<<NULL>>>
                (BinaryOperator 0xa340408 <line:522:26, /usr/include/linux/stddef.h:8:14> '_Bool' '=='
                  (ImplicitCastExpr 0xa3403e8 <../codeBase/fish-shell-master/wgetopt.cpp:522:26> 'const struct woption *' <LValueToRValue>
                    (DeclRefExpr 0xa3403b8 <col:26> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *'))
                  (ImplicitCastExpr 0xa3403f8 </usr/include/linux/stddef.h:8:14> 'const struct woption *' <NullToPointer>
                    (IntegerLiteral 0xa3403d0 <col:14> 'int' 0)))
                (CompoundStmt 0xa3404d0 <../codeBase/fish-shell-master/wgetopt.cpp:523:17, line:527:17>
                  (BinaryOperator 0xa340460 <line:525:21, col:30> 'const struct woption *' lvalue '='
                    (DeclRefExpr 0xa340420 <col:21> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *')
                    (ImplicitCastExpr 0xa340450 <col:30> 'const struct woption *' <LValueToRValue>
                      (DeclRefExpr 0xa340438 <col:30> 'const struct woption *' lvalue Var 0xa33f920 'p' 'const struct woption *')))
                  (BinaryOperator 0xa3404b8 <line:526:21, col:32> 'int' lvalue '='
                    (DeclRefExpr 0xa340478 <col:21> 'int' lvalue Var 0xa33fae0 'indfound' 'int')
                    (ImplicitCastExpr 0xa3404a8 <col:32> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa340490 <col:32> 'int' lvalue Var 0xa33fb50 'option_index' 'int'))))
                (BinaryOperator 0xa340518 <line:530:21, col:29> 'int' lvalue '='
                  (DeclRefExpr 0xa3404e8 <col:21> 'int' lvalue Var 0xa33fa70 'ambig' 'int')
                  (IntegerLiteral 0xa340500 <col:29> 'int' 1)))))
          <<<NULL>>>))
      (IfStmt 0xa340b20 <line:533:9, line:541:9>
        <<<NULL>>>
        (BinaryOperator 0xa340658 <line:533:13, col:23> '_Bool' '&&'
          (ImplicitCastExpr 0xa340648 <col:13> '_Bool' <IntegralToBoolean>
            (ImplicitCastExpr 0xa340638 <col:13> 'int' <LValueToRValue>
              (DeclRefExpr 0xa3405cc <col:13> 'int' lvalue Var 0xa33fa70 'ambig' 'int')))
          (UnaryOperator 0xa340620 <col:22, col:23> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa340610 <col:23> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0xa340600 <col:23> 'int' <LValueToRValue>
                (DeclRefExpr 0xa3405e4 <col:23> 'int' lvalue Var 0xa33fa00 'exact' 'int')))))
        (CompoundStmt 0xa340b00 <line:534:9, line:541:9>
          (IfStmt 0xa340988 <line:535:13, line:537:48>
            <<<NULL>>>
            (ImplicitCastExpr 0xa340698 <line:535:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0xa340688 <col:17> 'int' <LValueToRValue>
                (DeclRefExpr 0xa340670 <col:17> 'int' lvalue Var 0xa33ba60 'wopterr' 'int')))
            (CallExpr 0xa340918 <line:536:17, line:537:48> 'int'
              (ImplicitCastExpr 0xa340908 <line:536:17> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3408ac <col:17> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9d794c0 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
              (ImplicitCastExpr 0xa340948 </usr/include/stdio.h:175:16> 'struct _IO_FILE *' <LValueToRValue>
                (DeclRefExpr 0xa3406dc <col:16> 'struct _IO_FILE *' lvalue Var 0x9d60d40 'stderr' 'struct _IO_FILE *'))
              (ImplicitCastExpr 0xa340958 <../codeBase/fish-shell-master/wgetopt.cpp:190:19, col:26> 'const wchar_t *' <ArrayToPointerDecay>
                (ParenExpr 0xa3407d8 <col:19, col:26> 'const wchar_t [32]' lvalue
                  (StringLiteral 0xa340740 <line:536:36> 'const wchar_t [32]' lvalue L"%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000O\000\000\000p\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000 \000\000\000'\000\000\000%\000\000\000l\000\000\000s\000\000\000'\000\000\000 \000\000\000i\000\000\000s\000\000\000 \000\000\000a\000\000\000m\000\000\000b\000\000\000i\000\000\000g\000\000\000u\000\000\000o\000\000\000u\000\000\000s\000\000\000\n\000\000\000")))
              (ImplicitCastExpr 0xa340968 <line:537:26, col:32> 'wchar_t *' <LValueToRValue>
                (ArraySubscriptExpr 0xa340830 <col:26, col:32> 'wchar_t *const' lvalue
                  (ImplicitCastExpr 0xa340820 <col:26> 'wchar_t *const *' <LValueToRValue>
                    (DeclRefExpr 0xa3407ec <col:26> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                  (IntegerLiteral 0xa340808 <col:31> 'int' 0)))
              (ImplicitCastExpr 0xa340978 <col:35, col:47> 'wchar_t *' <LValueToRValue>
                (ArraySubscriptExpr 0xa340898 <col:35, col:47> 'wchar_t *const' lvalue
                  (ImplicitCastExpr 0xa340878 <col:35> 'wchar_t *const *' <LValueToRValue>
                    (DeclRefExpr 0xa340844 <col:35> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                  (ImplicitCastExpr 0xa340888 <col:40> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa34085c <col:40> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))))
            <<<NULL>>>)
          (CompoundAssignOperator 0xa340a78 <line:538:13, col:40> 'wchar_t *' lvalue '+=' ComputeLHSTy='wchar_t *' ComputeResultTy='wchar_t *'
            (DeclRefExpr 0xa3409a4 <col:13> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')
            (CallExpr 0xa340a38 <col:25, col:40> 'size_t':'unsigned int'
              (ImplicitCastExpr 0xa340a28 <col:25> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa340a0c <col:25> 'size_t (const wchar_t *) throw()' lvalue Function 0x9d737a0 'wcslen' 'size_t (const wchar_t *) throw()'))
              (ImplicitCastExpr 0xa340a68 <col:32> 'const wchar_t *' <NoOp>
                (ImplicitCastExpr 0xa340a58 <col:32> 'wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa3409f4 <col:32> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))))
          (UnaryOperator 0xa340ab0 <line:539:13, col:20> 'int' postfix '++'
            (DeclRefExpr 0xa340a98 <col:13> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
          (ReturnStmt 0xa340af0 <line:540:13, col:20>
            (ImplicitCastExpr 0xa340ae0 <col:20> 'int' <IntegralCast>
              (CharacterLiteral 0xa340ac8 <col:20> 'char'63))))
        <<<NULL>>>)
      (IfStmt 0xa3422e8 <line:543:9, line:594:9>
        <<<NULL>>>
        (BinaryOperator 0xa340b90 <line:543:13, /usr/include/linux/stddef.h:8:14> '_Bool' '!='
          (ImplicitCastExpr 0xa340b70 <../codeBase/fish-shell-master/wgetopt.cpp:543:13> 'const struct woption *' <LValueToRValue>
            (DeclRefExpr 0xa340b3c <col:13> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *'))
          (ImplicitCastExpr 0xa340b80 </usr/include/linux/stddef.h:8:14> 'const struct woption *' <NullToPointer>
            (IntegerLiteral 0xa340b58 <col:14> 'int' 0)))
        (CompoundStmt 0xa3422b8 <../codeBase/fish-shell-master/wgetopt.cpp:544:9, line:594:9>
          (BinaryOperator 0xa340be8 <line:545:13, col:28> 'int' lvalue '='
            (DeclRefExpr 0xa340ba8 <col:13> 'int' lvalue Var 0xa33fb50 'option_index' 'int')
            (ImplicitCastExpr 0xa340bd8 <col:28> 'int' <LValueToRValue>
              (DeclRefExpr 0xa340bc0 <col:28> 'int' lvalue Var 0xa33fae0 'indfound' 'int')))
          (UnaryOperator 0xa340c18 <line:546:13, col:20> 'int' postfix '++'
            (DeclRefExpr 0xa340c00 <col:13> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
          (IfStmt 0xa341e78 <line:547:13, line:584:13>
            <<<NULL>>>
            (ImplicitCastExpr 0xa340c80 <line:547:17, col:18> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0xa340c70 <col:17, col:18> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa340c58 <col:17, col:18> 'wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa340c48 <col:18> 'wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa340c2c <col:18> 'wchar_t *' lvalue Var 0xa33f8c0 'nameend' 'wchar_t *')))))
            (CompoundStmt 0xa341700 <line:548:13, line:571:13>
              (IfStmt 0xa3416e0 <line:551:17, line:570:17>
                <<<NULL>>>
                (ImplicitCastExpr 0xa340ce8 <line:551:21, col:29> '_Bool' <IntegralToBoolean>
                  (ImplicitCastExpr 0xa340cd8 <col:21, col:29> 'int' <LValueToRValue>
                    (MemberExpr 0xa340cb4 <col:21, col:29> 'const int' lvalue ->has_arg 0x9e0d330
                      (ImplicitCastExpr 0xa340ca8 <col:21> 'const struct woption *' <LValueToRValue>
                        (DeclRefExpr 0xa340c8c <col:21> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *')))))
                (BinaryOperator 0xa340d68 <line:552:21, col:41> 'wchar_t *' lvalue '='
                  (DeclRefExpr 0xa340cf4 <col:21> 'wchar_t *' lvalue Var 0xa32abe0 'woptarg' 'wchar_t *')
                  (BinaryOperator 0xa340d50 <col:31, col:41> 'wchar_t *' '+'
                    (ImplicitCastExpr 0xa340d40 <col:31> 'wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa340d0c <col:31> 'wchar_t *' lvalue Var 0xa33f8c0 'nameend' 'wchar_t *'))
                    (IntegerLiteral 0xa340d28 <col:41> 'int' 1)))
                (CompoundStmt 0xa3416c0 <line:554:17, line:570:17>
                  (IfStmt 0xa341578 <line:555:21, line:567:21>
                    <<<NULL>>>
                    (ImplicitCastExpr 0xa340da8 <line:555:25> '_Bool' <IntegralToBoolean>
                      (ImplicitCastExpr 0xa340d98 <col:25> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa340d80 <col:25> 'int' lvalue Var 0xa33ba60 'wopterr' 'int')))
                    (CompoundStmt 0xa341560 <line:556:21, line:567:21>
                      (IfStmt 0xa341540 <line:557:25, line:566:81>
                        <<<NULL>>>
                        (BinaryOperator 0xa340ec8 <line:557:29, col:53> '_Bool' '=='
                          (ImplicitCastExpr 0xa340ea8 <col:29, col:48> 'wchar_t' <LValueToRValue>
                            (ArraySubscriptExpr 0xa340e78 <col:29, col:48> 'wchar_t' lvalue
                              (ImplicitCastExpr 0xa340e68 <col:29, col:45> 'wchar_t *' <LValueToRValue>
                                (ArraySubscriptExpr 0xa340e38 <col:29, col:45> 'wchar_t *const' lvalue
                                  (ImplicitCastExpr 0xa340e28 <col:29> 'wchar_t *const *' <LValueToRValue>
                                    (DeclRefExpr 0xa340db4 <col:29> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                                  (BinaryOperator 0xa340e10 <col:34, col:44> 'int' '-'
                                    (ImplicitCastExpr 0xa340e00 <col:34> 'int' <LValueToRValue>
                                      (DeclRefExpr 0xa340dcc <col:34> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
                                    (IntegerLiteral 0xa340de8 <col:44> 'int' 1))))
                              (IntegerLiteral 0xa340e50 <col:47> 'int' 1)))
                          (ImplicitCastExpr 0xa340eb8 <col:53> 'wchar_t' <IntegralCast>
                            (CharacterLiteral 0xa340e90 <col:53> 'char'45)))
                        (CallExpr 0xa341128 <line:559:29, line:561:59> 'int'
                          (ImplicitCastExpr 0xa341118 <line:559:29> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
                            (DeclRefExpr 0xa3410fc <col:29> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9d794c0 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
                          (ImplicitCastExpr 0xa341158 </usr/include/stdio.h:175:16> 'struct _IO_FILE *' <LValueToRValue>
                            (DeclRefExpr 0xa340f14 <col:16> 'struct _IO_FILE *' lvalue Var 0x9d60d40 'stderr' 'struct _IO_FILE *'))
                          (ImplicitCastExpr 0xa341168 <../codeBase/fish-shell-master/wgetopt.cpp:190:19, col:26> 'const wchar_t *' <ArrayToPointerDecay>
                            (ParenExpr 0xa341048 <col:19, col:26> 'const wchar_t [47]' lvalue
                              (StringLiteral 0xa340f70 <line:560:40> 'const wchar_t [47]' lvalue L"%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000O\000\000\000p\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000 \000\000\000'\000\000\000-\000\000\000-\000\000\000%\000\000\000l\000\000\000s\000\000\000'\000\000\000 \000\000\000d\000\000\000o\000\000\000e\000\000\000s\000\000\000n\000\000\000'\000\000\000t\000\000\000 \000\000\000a\000\000\000l\000\000\000l\000\000\000o\000\000\000w\000\000\000 \000\000\000a\000\000\000n\000\000\000 \000\000\000a\000\000\000r\000\000\000g\000\000\000u\000\000\000m\000\000\000e\000\000\000n\000\000\000t\000\000\000\n\000\000\000")))
                          (ImplicitCastExpr 0xa341178 <line:561:38, col:44> 'wchar_t *' <LValueToRValue>
                            (ArraySubscriptExpr 0xa3410a0 <col:38, col:44> 'wchar_t *const' lvalue
                              (ImplicitCastExpr 0xa341090 <col:38> 'wchar_t *const *' <LValueToRValue>
                                (DeclRefExpr 0xa34105c <col:38> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                              (IntegerLiteral 0xa341078 <col:43> 'int' 0)))
                          (ImplicitCastExpr 0xa341188 <col:47, col:55> 'const wchar_t *' <LValueToRValue>
                            (MemberExpr 0xa3410dc <col:47, col:55> 'const wchar_t *const' lvalue ->name 0x9e0d2f0
                              (ImplicitCastExpr 0xa3410d0 <col:47> 'const struct woption *' <LValueToRValue>
                                (DeclRefExpr 0xa3410b4 <col:47> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *')))))
                        (CallExpr 0xa3414c0 <line:564:29, line:566:81> 'int'
                          (ImplicitCastExpr 0xa3414b0 <line:564:29> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
                            (DeclRefExpr 0xa341494 <col:29> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9d794c0 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
                          (ImplicitCastExpr 0xa3414f0 </usr/include/stdio.h:175:16> 'struct _IO_FILE *' <LValueToRValue>
                            (DeclRefExpr 0xa3411cc <col:16> 'struct _IO_FILE *' lvalue Var 0x9d60d40 'stderr' 'struct _IO_FILE *'))
                          (ImplicitCastExpr 0xa341500 <../codeBase/fish-shell-master/wgetopt.cpp:190:19, col:26> 'const wchar_t *' <ArrayToPointerDecay>
                            (ParenExpr 0xa341308 <col:19, col:26> 'const wchar_t [48]' lvalue
                              (StringLiteral 0xa341230 <line:565:40> 'const wchar_t [48]' lvalue L"%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000O\000\000\000p\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000 \000\000\000'\000\000\000%\000\000\000l\000\000\000c\000\000\000%\000\000\000l\000\000\000s\000\000\000'\000\000\000 \000\000\000d\000\000\000o\000\000\000e\000\000\000s\000\000\000n\000\000\000'\000\000\000t\000\000\000 \000\000\000a\000\000\000l\000\000\000l\000\000\000o\000\000\000w\000\000\000 \000\000\000a\000\000\000n\000\000\000 \000\000\000a\000\000\000r\000\000\000g\000\000\000u\000\000\000m\000\000\000e\000\000\000n\000\000\000t\000\000\000\n\000\000\000")))
                          (ImplicitCastExpr 0xa341510 <line:566:38, col:44> 'wchar_t *' <LValueToRValue>
                            (ArraySubscriptExpr 0xa341360 <col:38, col:44> 'wchar_t *const' lvalue
                              (ImplicitCastExpr 0xa341350 <col:38> 'wchar_t *const *' <LValueToRValue>
                                (DeclRefExpr 0xa34131c <col:38> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                              (IntegerLiteral 0xa341338 <col:43> 'int' 0)))
                          (ImplicitCastExpr 0xa341520 <col:47, col:66> 'wchar_t' <LValueToRValue>
                            (ArraySubscriptExpr 0xa341438 <col:47, col:66> 'wchar_t' lvalue
                              (ImplicitCastExpr 0xa341428 <col:47, col:63> 'wchar_t *' <LValueToRValue>
                                (ArraySubscriptExpr 0xa3413f8 <col:47, col:63> 'wchar_t *const' lvalue
                                  (ImplicitCastExpr 0xa3413e8 <col:47> 'wchar_t *const *' <LValueToRValue>
                                    (DeclRefExpr 0xa341374 <col:47> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                                  (BinaryOperator 0xa3413d0 <col:52, col:62> 'int' '-'
                                    (ImplicitCastExpr 0xa3413c0 <col:52> 'int' <LValueToRValue>
                                      (DeclRefExpr 0xa34138c <col:52> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
                                    (IntegerLiteral 0xa3413a8 <col:62> 'int' 1))))
                              (IntegerLiteral 0xa341410 <col:65> 'int' 0)))
                          (ImplicitCastExpr 0xa341530 <col:69, col:77> 'const wchar_t *' <LValueToRValue>
                            (MemberExpr 0xa341474 <col:69, col:77> 'const wchar_t *const' lvalue ->name 0x9e0d2f0
                              (ImplicitCastExpr 0xa341468 <col:69> 'const struct woption *' <LValueToRValue>
                                (DeclRefExpr 0xa34144c <col:69> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *')))))))
                    <<<NULL>>>)
                  (CompoundAssignOperator 0xa341668 <line:568:21, col:48> 'wchar_t *' lvalue '+=' ComputeLHSTy='wchar_t *' ComputeResultTy='wchar_t *'
                    (DeclRefExpr 0xa341594 <col:21> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')
                    (CallExpr 0xa341628 <col:33, col:48> 'size_t':'unsigned int'
                      (ImplicitCastExpr 0xa341618 <col:33> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa3415fc <col:33> 'size_t (const wchar_t *) throw()' lvalue Function 0x9d737a0 'wcslen' 'size_t (const wchar_t *) throw()'))
                      (ImplicitCastExpr 0xa341658 <col:40> 'const wchar_t *' <NoOp>
                        (ImplicitCastExpr 0xa341648 <col:40> 'wchar_t *' <LValueToRValue>
                          (DeclRefExpr 0xa3415e4 <col:40> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))))
                  (ReturnStmt 0xa3416b0 <line:569:21, col:28>
                    (ImplicitCastExpr 0xa3416a0 <col:28> 'int' <IntegralCast>
                      (CharacterLiteral 0xa341688 <col:28> 'char'63))))))
            (IfStmt 0xa341e58 <line:572:18, line:584:13>
              <<<NULL>>>
              (BinaryOperator 0xa341788 <line:572:22, col:41> '_Bool' '=='
                (ImplicitCastExpr 0xa341778 <col:22, col:30> 'int' <LValueToRValue>
                  (MemberExpr 0xa34173c <col:22, col:30> 'const int' lvalue ->has_arg 0x9e0d330
                    (ImplicitCastExpr 0xa341730 <col:22> 'const struct woption *' <LValueToRValue>
                      (DeclRefExpr 0xa341714 <col:22> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *'))))
                (IntegerLiteral 0xa341760 <col:41> 'int' 1))
              (CompoundStmt 0xa341e40 <line:573:13, line:584:13>
                (IfStmt 0xa341e20 <line:574:17, line:583:17>
                  <<<NULL>>>
                  (BinaryOperator 0xa3417f0 <line:574:21, col:31> '_Bool' '<'
                    (ImplicitCastExpr 0xa3417d0 <col:21> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa3417a0 <col:21> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
                    (ImplicitCastExpr 0xa3417e0 <col:31> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa3417b8 <col:31> 'int' lvalue ParmVar 0xa33d8d0 'argc' 'int')))
                  (BinaryOperator 0xa3418a0 <line:575:21, col:45> 'wchar_t *' lvalue '='
                    (DeclRefExpr 0xa341808 <col:21> 'wchar_t *' lvalue Var 0xa32abe0 'woptarg' 'wchar_t *')
                    (ImplicitCastExpr 0xa341890 <col:31, col:45> 'wchar_t *' <LValueToRValue>
                      (ArraySubscriptExpr 0xa341878 <col:31, col:45> 'wchar_t *const' lvalue
                        (ImplicitCastExpr 0xa341868 <col:31> 'wchar_t *const *' <LValueToRValue>
                          (DeclRefExpr 0xa341820 <col:31> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                        (UnaryOperator 0xa341850 <col:36, col:43> 'int' postfix '++'
                          (DeclRefExpr 0xa341838 <col:36> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))))
                  (CompoundStmt 0xa341e00 <line:577:17, line:583:17>
                    (IfStmt 0xa341bd8 <line:578:21, line:580:60>
                      <<<NULL>>>
                      (ImplicitCastExpr 0xa3418e0 <line:578:25> '_Bool' <IntegralToBoolean>
                        (ImplicitCastExpr 0xa3418d0 <col:25> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa3418b8 <col:25> 'int' lvalue Var 0xa33ba60 'wopterr' 'int')))
                      (CallExpr 0xa341b68 <line:579:25, line:580:60> 'int'
                        (ImplicitCastExpr 0xa341b58 <line:579:25> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa341b3c <col:25> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9d794c0 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
                        (ImplicitCastExpr 0xa341b98 </usr/include/stdio.h:175:16> 'struct _IO_FILE *' <LValueToRValue>
                          (DeclRefExpr 0xa341924 <col:16> 'struct _IO_FILE *' lvalue Var 0x9d60d40 'stderr' 'struct _IO_FILE *'))
                        (ImplicitCastExpr 0xa341ba8 <../codeBase/fish-shell-master/wgetopt.cpp:190:19, col:26> 'const wchar_t *' <ArrayToPointerDecay>
                          (ParenExpr 0xa341a38 <col:19, col:26> 'const wchar_t [40]' lvalue
                            (StringLiteral 0xa341980 <line:579:44> 'const wchar_t [40]' lvalue L"%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000O\000\000\000p\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000 \000\000\000'\000\000\000%\000\000\000l\000\000\000s\000\000\000'\000\000\000 \000\000\000r\000\000\000e\000\000\000q\000\000\000u\000\000\000i\000\000\000r\000\000\000e\000\000\000s\000\000\000 \000\000\000a\000\000\000n\000\000\000 \000\000\000a\000\000\000r\000\000\000g\000\000\000u\000\000\000m\000\000\000e\000\000\000n\000\000\000t\000\000\000\n\000\000\000")))
                        (ImplicitCastExpr 0xa341bb8 <line:580:34, col:40> 'wchar_t *' <LValueToRValue>
                          (ArraySubscriptExpr 0xa341a90 <col:34, col:40> 'wchar_t *const' lvalue
                            (ImplicitCastExpr 0xa341a80 <col:34> 'wchar_t *const *' <LValueToRValue>
                              (DeclRefExpr 0xa341a4c <col:34> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                            (IntegerLiteral 0xa341a68 <col:39> 'int' 0)))
                        (ImplicitCastExpr 0xa341bc8 <col:43, col:59> 'wchar_t *' <LValueToRValue>
                          (ArraySubscriptExpr 0xa341b28 <col:43, col:59> 'wchar_t *const' lvalue
                            (ImplicitCastExpr 0xa341b18 <col:43> 'wchar_t *const *' <LValueToRValue>
                              (DeclRefExpr 0xa341aa4 <col:43> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                            (BinaryOperator 0xa341b00 <col:48, col:58> 'int' '-'
                              (ImplicitCastExpr 0xa341af0 <col:48> 'int' <LValueToRValue>
                                (DeclRefExpr 0xa341abc <col:48> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
                              (IntegerLiteral 0xa341ad8 <col:58> 'int' 1)))))
                      <<<NULL>>>)
                    (CompoundAssignOperator 0xa341cc8 <line:581:21, col:48> 'wchar_t *' lvalue '+=' ComputeLHSTy='wchar_t *' ComputeResultTy='wchar_t *'
                      (DeclRefExpr 0xa341bf4 <col:21> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')
                      (CallExpr 0xa341c88 <col:33, col:48> 'size_t':'unsigned int'
                        (ImplicitCastExpr 0xa341c78 <col:33> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa341c5c <col:33> 'size_t (const wchar_t *) throw()' lvalue Function 0x9d737a0 'wcslen' 'size_t (const wchar_t *) throw()'))
                        (ImplicitCastExpr 0xa341cb8 <col:40> 'const wchar_t *' <NoOp>
                          (ImplicitCastExpr 0xa341ca8 <col:40> 'wchar_t *' <LValueToRValue>
                            (DeclRefExpr 0xa341c44 <col:40> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))))
                    (ReturnStmt 0xa341df0 <line:582:21, col:56>
                      (ImplicitCastExpr 0xa341de0 <col:28, col:56> 'int' <IntegralCast>
                        (ConditionalOperator 0xa341dc0 <col:28, col:56> 'char'
                          (BinaryOperator 0xa341d78 <col:28, col:44> '_Bool' '=='
                            (ImplicitCastExpr 0xa341d58 <col:28, col:39> 'wchar_t' <LValueToRValue>
                              (ArraySubscriptExpr 0xa341d28 <col:28, col:39> 'const wchar_t' lvalue
                                (ImplicitCastExpr 0xa341d18 <col:28> 'const wchar_t *' <LValueToRValue>
                                  (DeclRefExpr 0xa341ce8 <col:28> 'const wchar_t *' lvalue ParmVar 0xa33d970 'optstring' 'const wchar_t *'))
                                (IntegerLiteral 0xa341d00 <col:38> 'int' 0)))
                            (ImplicitCastExpr 0xa341d68 <col:44> 'wchar_t' <IntegralCast>
                              (CharacterLiteral 0xa341d40 <col:44> 'char'58)))
                          (CharacterLiteral 0xa341d90 <col:50> 'char'58)
                          (CharacterLiteral 0xa341da8 <col:56> 'char'63)))))))
              <<<NULL>>>))
          (CompoundAssignOperator 0xa341f68 <line:585:13, col:40> 'wchar_t *' lvalue '+=' ComputeLHSTy='wchar_t *' ComputeResultTy='wchar_t *'
            (DeclRefExpr 0xa341e94 <col:13> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')
            (CallExpr 0xa341f28 <col:25, col:40> 'size_t':'unsigned int'
              (ImplicitCastExpr 0xa341f18 <col:25> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa341efc <col:25> 'size_t (const wchar_t *) throw()' lvalue Function 0x9d737a0 'wcslen' 'size_t (const wchar_t *) throw()'))
              (ImplicitCastExpr 0xa341f58 <col:32> 'const wchar_t *' <NoOp>
                (ImplicitCastExpr 0xa341f48 <col:32> 'wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa341ee4 <col:32> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))))
          (IfStmt 0xa342070 <line:586:13, line:587:28>
            <<<NULL>>>
            (BinaryOperator 0xa341fd8 <line:586:17, /usr/include/linux/stddef.h:8:14> '_Bool' '!='
              (ImplicitCastExpr 0xa341fb8 <../codeBase/fish-shell-master/wgetopt.cpp:586:17> 'int *' <LValueToRValue>
                (DeclRefExpr 0xa341f88 <col:17> 'int *' lvalue ParmVar 0xa33da10 'longind' 'int *'))
              (ImplicitCastExpr 0xa341fc8 </usr/include/linux/stddef.h:8:14> 'int *' <NullToPointer>
                (IntegerLiteral 0xa341fa0 <col:14> 'int' 0)))
            (BinaryOperator 0xa342058 <../codeBase/fish-shell-master/wgetopt.cpp:587:17, col:28> 'int' lvalue '='
              (UnaryOperator 0xa342018 <col:17, col:18> 'int' lvalue prefix '*'
                (ImplicitCastExpr 0xa342008 <col:18> 'int *' <LValueToRValue>
                  (DeclRefExpr 0xa341ff0 <col:18> 'int *' lvalue ParmVar 0xa33da10 'longind' 'int *')))
              (ImplicitCastExpr 0xa342048 <col:28> 'int' <LValueToRValue>
                (DeclRefExpr 0xa34202c <col:28> 'int' lvalue Var 0xa33fb50 'option_index' 'int')))
            <<<NULL>>>)
          (IfStmt 0xa342230 <line:588:13, line:592:13>
            <<<NULL>>>
            (ImplicitCastExpr 0xa3420e8 <line:588:17, col:25> '_Bool' <PointerToBoolean>
              (ImplicitCastExpr 0xa3420d8 <col:17, col:25> 'int *' <LValueToRValue>
                (MemberExpr 0xa3420b4 <col:17, col:25> 'int *const' lvalue ->flag 0x9e0d370
                  (ImplicitCastExpr 0xa3420a8 <col:17> 'const struct woption *' <LValueToRValue>
                    (DeclRefExpr 0xa34208c <col:17> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *')))))
            (CompoundStmt 0xa342218 <line:589:13, line:592:13>
              (BinaryOperator 0xa3421d8 <line:590:17, col:43> 'int' lvalue '='
                (UnaryOperator 0xa342168 <col:17, col:31> 'int' lvalue prefix '*'
                  (ImplicitCastExpr 0xa342158 <col:18, col:31> 'int *' <LValueToRValue>
                    (ParenExpr 0xa342140 <col:18, col:31> 'int *const' lvalue
                      (MemberExpr 0xa34211c <col:19, col:27> 'int *const' lvalue ->flag 0x9e0d370
                        (ImplicitCastExpr 0xa342110 <col:19> 'const struct woption *' <LValueToRValue>
                          (DeclRefExpr 0xa3420f4 <col:19> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *'))))))
                (ImplicitCastExpr 0xa3421c8 <col:35, col:43> 'int' <LValueToRValue>
                  (MemberExpr 0xa3421a4 <col:35, col:43> 'const int' lvalue ->val 0x9e0d3b0
                    (ImplicitCastExpr 0xa342198 <col:35> 'const struct woption *' <LValueToRValue>
                      (DeclRefExpr 0xa34217c <col:35> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *')))))
              (ReturnStmt 0xa342208 <line:591:17, col:24>
                (IntegerLiteral 0xa3421f0 <col:24> 'int' 0)))
            <<<NULL>>>)
          (ReturnStmt 0xa3422a8 <line:593:13, col:28>
            (ImplicitCastExpr 0xa342298 <col:20, col:28> 'int' <LValueToRValue>
              (MemberExpr 0xa342274 <col:20, col:28> 'const int' lvalue ->val 0x9e0d3b0
                (ImplicitCastExpr 0xa342268 <col:20> 'const struct woption *' <LValueToRValue>
                  (DeclRefExpr 0xa34224c <col:20> 'const struct woption *' lvalue Var 0xa33f980 'pfound' 'const struct woption *'))))))
        <<<NULL>>>)
      (IfStmt 0xa342df8 <line:600:9, line:617:9>
        <<<NULL>>>
        (BinaryOperator 0xa3425a8 <line:600:13, /usr/include/linux/stddef.h:8:14> '_Bool' '||'
          (BinaryOperator 0xa342450 <../codeBase/fish-shell-master/wgetopt.cpp:600:13, col:47> '_Bool' '||'
            (UnaryOperator 0xa342340 <col:13, col:14> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa342330 <col:14> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa342320 <col:14> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa342304 <col:14> 'int' lvalue ParmVar 0xa33da60 'long_only' 'int'))))
            (BinaryOperator 0xa342438 <col:27, col:47> '_Bool' '=='
              (ImplicitCastExpr 0xa342418 <col:27, col:42> 'wchar_t' <LValueToRValue>
                (ArraySubscriptExpr 0xa3423e8 <col:27, col:42> 'wchar_t' lvalue
                  (ImplicitCastExpr 0xa3423d8 <col:27, col:39> 'wchar_t *' <LValueToRValue>
                    (ArraySubscriptExpr 0xa3423a8 <col:27, col:39> 'wchar_t *const' lvalue
                      (ImplicitCastExpr 0xa342388 <col:27> 'wchar_t *const *' <LValueToRValue>
                        (DeclRefExpr 0xa342354 <col:27> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                      (ImplicitCastExpr 0xa342398 <col:32> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa34236c <col:32> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                  (IntegerLiteral 0xa3423c0 <col:41> 'int' 1)))
              (ImplicitCastExpr 0xa342428 <col:47> 'wchar_t' <IntegralCast>
                (CharacterLiteral 0xa342400 <col:47> 'char'45))))
          (BinaryOperator 0xa342590 <line:202:20, /usr/include/linux/stddef.h:8:14> '_Bool' '=='
            (CallExpr 0xa342520 <../codeBase/fish-shell-master/wgetopt.cpp:202:20, line:601:49> 'wchar_t *'
              (ImplicitCastExpr 0xa342510 <line:202:20> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa3424f4 <col:20> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9d72ad0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
              (ImplicitCastExpr 0xa342548 <line:601:29> 'const wchar_t *' <LValueToRValue>
                (DeclRefExpr 0xa34249c <col:29> 'const wchar_t *' lvalue ParmVar 0xa33d970 'optstring' 'const wchar_t *'))
              (ImplicitCastExpr 0xa342558 <col:40, col:41> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa3424e0 <col:40, col:41> 'wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa3424d0 <col:41> 'wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa3424b4 <col:41> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))))
            (ImplicitCastExpr 0xa342580 </usr/include/linux/stddef.h:8:14> 'wchar_t *' <NullToPointer>
              (IntegerLiteral 0xa342568 <col:14> 'int' 0))))
        (CompoundStmt 0xa342dd8 <../codeBase/fish-shell-master/wgetopt.cpp:602:9, line:617:9>
          (IfStmt 0xa342c88 <line:603:13, line:613:13>
            <<<NULL>>>
            (ImplicitCastExpr 0xa3425e8 <line:603:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0xa3425d8 <col:17> 'int' <LValueToRValue>
                (DeclRefExpr 0xa3425c0 <col:17> 'int' lvalue Var 0xa33ba60 'wopterr' 'int')))
            (CompoundStmt 0xa342c70 <line:604:13, line:613:13>
              (IfStmt 0xa342c50 <line:605:17, line:612:65>
                <<<NULL>>>
                (BinaryOperator 0xa3426d8 <line:605:21, col:41> '_Bool' '=='
                  (ImplicitCastExpr 0xa3426b8 <col:21, col:36> 'wchar_t' <LValueToRValue>
                    (ArraySubscriptExpr 0xa342688 <col:21, col:36> 'wchar_t' lvalue
                      (ImplicitCastExpr 0xa342678 <col:21, col:33> 'wchar_t *' <LValueToRValue>
                        (ArraySubscriptExpr 0xa342648 <col:21, col:33> 'wchar_t *const' lvalue
                          (ImplicitCastExpr 0xa342628 <col:21> 'wchar_t *const *' <LValueToRValue>
                            (DeclRefExpr 0xa3425f4 <col:21> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                          (ImplicitCastExpr 0xa342638 <col:26> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa34260c <col:26> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                      (IntegerLiteral 0xa342660 <col:35> 'int' 1)))
                  (ImplicitCastExpr 0xa3426c8 <col:41> 'wchar_t' <IntegralCast>
                    (CharacterLiteral 0xa3426a0 <col:41> 'char'45)))
                (CallExpr 0xa3428d0 <line:607:21, line:608:47> 'int'
                  (ImplicitCastExpr 0xa3428c0 <line:607:21> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa3428a4 <col:21> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9d794c0 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
                  (ImplicitCastExpr 0xa342900 </usr/include/stdio.h:175:16> 'struct _IO_FILE *' <LValueToRValue>
                    (DeclRefExpr 0xa342724 <col:16> 'struct _IO_FILE *' lvalue Var 0x9d60d40 'stderr' 'struct _IO_FILE *'))
                  (ImplicitCastExpr 0xa342910 <../codeBase/fish-shell-master/wgetopt.cpp:190:19, col:26> 'const wchar_t *' <ArrayToPointerDecay>
                    (ParenExpr 0xa342820 <col:19, col:26> 'const wchar_t [34]' lvalue
                      (StringLiteral 0xa342780 <line:607:40> 'const wchar_t [34]' lvalue L"%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000U\000\000\000n\000\000\000r\000\000\000e\000\000\000c\000\000\000o\000\000\000g\000\000\000n\000\000\000i\000\000\000z\000\000\000e\000\000\000d\000\000\000 \000\000\000o\000\000\000p\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000 \000\000\000'\000\000\000-\000\000\000-\000\000\000%\000\000\000l\000\000\000s\000\000\000'\000\000\000\n\000\000\000")))
                  (ImplicitCastExpr 0xa342920 <line:608:30, col:36> 'wchar_t *' <LValueToRValue>
                    (ArraySubscriptExpr 0xa342878 <col:30, col:36> 'wchar_t *const' lvalue
                      (ImplicitCastExpr 0xa342868 <col:30> 'wchar_t *const *' <LValueToRValue>
                        (DeclRefExpr 0xa342834 <col:30> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                      (IntegerLiteral 0xa342850 <col:35> 'int' 0)))
                  (ImplicitCastExpr 0xa342930 <col:39> 'wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa34288c <col:39> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))
                (CallExpr 0xa342bd0 <line:611:21, line:612:65> 'int'
                  (ImplicitCastExpr 0xa342bc0 <line:611:21> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa342ba4 <col:21> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9d794c0 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
                  (ImplicitCastExpr 0xa342c00 </usr/include/stdio.h:175:16> 'struct _IO_FILE *' <LValueToRValue>
                    (DeclRefExpr 0xa342974 <col:16> 'struct _IO_FILE *' lvalue Var 0x9d60d40 'stderr' 'struct _IO_FILE *'))
                  (ImplicitCastExpr 0xa342c10 <../codeBase/fish-shell-master/wgetopt.cpp:190:19, col:26> 'const wchar_t *' <ArrayToPointerDecay>
                    (ParenExpr 0xa342a78 <col:19, col:26> 'const wchar_t [35]' lvalue
                      (StringLiteral 0xa3429d0 <line:611:40> 'const wchar_t [35]' lvalue L"%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000U\000\000\000n\000\000\000r\000\000\000e\000\000\000c\000\000\000o\000\000\000g\000\000\000n\000\000\000i\000\000\000z\000\000\000e\000\000\000d\000\000\000 \000\000\000o\000\000\000p\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000 \000\000\000'\000\000\000%\000\000\000l\000\000\000c\000\000\000%\000\000\000l\000\000\000s\000\000\000'\000\000\000\n\000\000\000")))
                  (ImplicitCastExpr 0xa342c20 <line:612:30, col:36> 'wchar_t *' <LValueToRValue>
                    (ArraySubscriptExpr 0xa342ad0 <col:30, col:36> 'wchar_t *const' lvalue
                      (ImplicitCastExpr 0xa342ac0 <col:30> 'wchar_t *const *' <LValueToRValue>
                        (DeclRefExpr 0xa342a8c <col:30> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                      (IntegerLiteral 0xa342aa8 <col:35> 'int' 0)))
                  (ImplicitCastExpr 0xa342c30 <col:39, col:54> 'wchar_t' <LValueToRValue>
                    (ArraySubscriptExpr 0xa342b78 <col:39, col:54> 'wchar_t' lvalue
                      (ImplicitCastExpr 0xa342b68 <col:39, col:51> 'wchar_t *' <LValueToRValue>
                        (ArraySubscriptExpr 0xa342b38 <col:39, col:51> 'wchar_t *const' lvalue
                          (ImplicitCastExpr 0xa342b18 <col:39> 'wchar_t *const *' <LValueToRValue>
                            (DeclRefExpr 0xa342ae4 <col:39> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                          (ImplicitCastExpr 0xa342b28 <col:44> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa342afc <col:44> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))))
                      (IntegerLiteral 0xa342b50 <col:53> 'int' 0)))
                  (ImplicitCastExpr 0xa342c40 <col:57> 'wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa342b8c <col:57> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))))
            <<<NULL>>>)
          (BinaryOperator 0xa342d58 <line:614:13, col:36> 'wchar_t *' lvalue '='
            (DeclRefExpr 0xa342ca4 <col:13> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')
            (CStyleCastExpr 0xa342d40 <col:24, col:36> 'wchar_t *' <NoOp>
              (ImplicitCastExpr 0xa342d30 <col:36> 'const wchar_t *' <ArrayToPointerDecay>
                (StringLiteral 0xa342d00 <col:36> 'const wchar_t [1]' lvalue L""))))
          (UnaryOperator 0xa342d88 <line:615:13, col:20> 'int' postfix '++'
            (DeclRefExpr 0xa342d70 <col:13> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
          (ReturnStmt 0xa342dc8 <line:616:13, col:20>
            (ImplicitCastExpr 0xa342db8 <col:20> 'int' <IntegralCast>
              (CharacterLiteral 0xa342da0 <col:20> 'char'63))))
        <<<NULL>>>))
    <<<NULL>>>)
  (CompoundStmt 0xa344648 <line:622:5, line:690:5>
    (DeclStmt 0xa342f10 <line:623:9, col:32>
      0xa342e80 "wchar_t c =
        (ImplicitCastExpr 0xa342f00 <col:21, col:30> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa342ee8 <col:21, col:30> 'wchar_t' lvalue prefix '*'
            (UnaryOperator 0xa342ed0 <col:22, col:30> 'wchar_t *' postfix '++'
              (DeclRefExpr 0xa342eb4 <col:22> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *'))))")
    (DeclStmt 0xa343068 <line:624:9, col:69>
      0xa342f30 "wchar_t *temp =
        (CXXConstCastExpr 0xa343050 <col:25, col:68> 'wchar_t *' const_cast<wchar_t *> <NoOp>
          (CallExpr 0xa342ff8 <line:202:20, line:624:67> 'wchar_t *'
            (ImplicitCastExpr 0xa342fe8 <line:202:20> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
              (DeclRefExpr 0xa342fcc <col:20> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x9d72ad0 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
            (ImplicitCastExpr 0xa343020 <line:624:55> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa342f9c <col:55> 'const wchar_t *' lvalue ParmVar 0xa33d970 'optstring' 'const wchar_t *'))
            (ImplicitCastExpr 0xa343030 <col:66> 'wchar_t' <LValueToRValue>
              (DeclRefExpr 0xa342fb4 <col:66> 'wchar_t' lvalue Var 0xa342e80 'c' 'wchar_t'))))")
    (IfStmt 0xa343138 <line:627:9, line:628:15>
      <<<NULL>>>
      (BinaryOperator 0xa3430f0 <line:627:13, col:26> '_Bool' '=='
        (ImplicitCastExpr 0xa3430d0 <col:13, col:14> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa3430a0 <col:13, col:14> 'wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa343090 <col:14> 'wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa343078 <col:14> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *'))))
        (ImplicitCastExpr 0xa3430e0 <col:26> 'wchar_t' <IntegralCast>
          (CharacterLiteral 0xa3430b8 <col:26> 'char'0)))
      (UnaryOperator 0xa343120 <line:628:13, col:15> 'int' lvalue prefix '++'
        (DeclRefExpr 0xa343108 <col:15> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
      <<<NULL>>>)
    (IfStmt 0xa343828 <line:630:9, line:643:9>
      <<<NULL>>>
      (BinaryOperator 0xa343228 <line:630:13, col:34> '_Bool' '||'
        (BinaryOperator 0xa3431a8 <col:13, /usr/include/linux/stddef.h:8:14> '_Bool' '=='
          (ImplicitCastExpr 0xa343188 <../codeBase/fish-shell-master/wgetopt.cpp:630:13> 'wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa343154 <col:13> 'wchar_t *' lvalue Var 0xa342f30 'temp' 'wchar_t *'))
          (ImplicitCastExpr 0xa343198 </usr/include/linux/stddef.h:8:14> 'wchar_t *' <NullToPointer>
            (IntegerLiteral 0xa343170 <col:14> 'int' 0)))
        (BinaryOperator 0xa343210 <../codeBase/fish-shell-master/wgetopt.cpp:630:29, col:34> '_Bool' '=='
          (ImplicitCastExpr 0xa3431f0 <col:29> 'wchar_t' <LValueToRValue>
            (DeclRefExpr 0xa3431c0 <col:29> 'wchar_t' lvalue Var 0xa342e80 'c' 'wchar_t'))
          (ImplicitCastExpr 0xa343200 <col:34> 'wchar_t' <IntegralCast>
            (CharacterLiteral 0xa3431d8 <col:34> 'char'58))))
      (CompoundStmt 0xa343808 <line:631:9, line:643:9>
        (IfStmt 0xa343718 <line:632:13, line:639:13>
          <<<NULL>>>
          (ImplicitCastExpr 0xa343268 <line:632:17> '_Bool' <IntegralToBoolean>
            (ImplicitCastExpr 0xa343258 <col:17> 'int' <LValueToRValue>
              (DeclRefExpr 0xa343240 <col:17> 'int' lvalue Var 0xa33ba60 'wopterr' 'int')))
          (CompoundStmt 0xa343700 <line:633:13, line:639:13>
            (IfStmt 0xa3436e0 <line:634:17, line:638:84>
              <<<NULL>>>
              (ImplicitCastExpr 0xa3432a0 <line:634:21> '_Bool' <PointerToBoolean>
                (ImplicitCastExpr 0xa343290 <col:21> 'char *' <LValueToRValue>
                  (DeclRefExpr 0xa343274 <col:21> 'char *' lvalue Var 0xa33bcc0 'posixly_correct' 'char *')))
              (CallExpr 0xa343478 <line:636:21, col:84> 'int'
                (ImplicitCastExpr 0xa343468 <col:21> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa34344c <col:21> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9d794c0 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
                (ImplicitCastExpr 0xa3434a8 </usr/include/stdio.h:175:16> 'struct _IO_FILE *' <LValueToRValue>
                  (DeclRefExpr 0xa3432e4 <col:16> 'struct _IO_FILE *' lvalue Var 0x9d60d40 'stderr' 'struct _IO_FILE *'))
                (ImplicitCastExpr 0xa3434b8 <../codeBase/fish-shell-master/wgetopt.cpp:190:19, col:26> 'const wchar_t *' <ArrayToPointerDecay>
                  (ParenExpr 0xa3433c8 <col:19, col:26> 'const wchar_t [28]' lvalue
                    (StringLiteral 0xa343340 <line:636:40> 'const wchar_t [28]' lvalue L"%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000I\000\000\000l\000\000\000l\000\000\000e\000\000\000g\000\000\000a\000\000\000l\000\000\000 \000\000\000o\000\000\000p\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000 \000\000\000-\000\000\000-\000\000\000 \000\000\000%\000\000\000l\000\000\000c\000\000\000\n\000\000\000")))
                (ImplicitCastExpr 0xa3434c8 <col:74, col:80> 'wchar_t *' <LValueToRValue>
                  (ArraySubscriptExpr 0xa343420 <col:74, col:80> 'wchar_t *const' lvalue
                    (ImplicitCastExpr 0xa343410 <col:74> 'wchar_t *const *' <LValueToRValue>
                      (DeclRefExpr 0xa3433dc <col:74> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                    (IntegerLiteral 0xa3433f8 <col:79> 'int' 0)))
                (ImplicitCastExpr 0xa3434d8 <col:83> 'wchar_t' <LValueToRValue>
                  (DeclRefExpr 0xa343434 <col:83> 'wchar_t' lvalue Var 0xa342e80 'c' 'wchar_t')))
              (CallExpr 0xa343670 <line:638:21, col:84> 'int'
                (ImplicitCastExpr 0xa343660 <col:21> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa343644 <col:21> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9d794c0 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
                (ImplicitCastExpr 0xa3436a0 </usr/include/stdio.h:175:16> 'struct _IO_FILE *' <LValueToRValue>
                  (DeclRefExpr 0xa34351c <col:16> 'struct _IO_FILE *' lvalue Var 0x9d60d40 'stderr' 'struct _IO_FILE *'))
                (ImplicitCastExpr 0xa3436b0 <../codeBase/fish-shell-master/wgetopt.cpp:190:19, col:26> 'const wchar_t *' <ArrayToPointerDecay>
                  (ParenExpr 0xa3435c0 <col:19, col:26> 'const wchar_t [28]' lvalue
                    (StringLiteral 0xa343534 <line:638:40> 'const wchar_t [28]' lvalue L"%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000I\000\000\000n\000\000\000v\000\000\000a\000\000\000l\000\000\000i\000\000\000d\000\000\000 \000\000\000o\000\000\000p\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000 \000\000\000-\000\000\000-\000\000\000 \000\000\000%\000\000\000l\000\000\000c\000\000\000\n\000\000\000")))
                (ImplicitCastExpr 0xa3436c0 <col:74, col:80> 'wchar_t *' <LValueToRValue>
                  (ArraySubscriptExpr 0xa343618 <col:74, col:80> 'wchar_t *const' lvalue
                    (ImplicitCastExpr 0xa343608 <col:74> 'wchar_t *const *' <LValueToRValue>
                      (DeclRefExpr 0xa3435d4 <col:74> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                    (IntegerLiteral 0xa3435f0 <col:79> 'int' 0)))
                (ImplicitCastExpr 0xa3436d0 <col:83> 'wchar_t' <LValueToRValue>
                  (DeclRefExpr 0xa34362c <col:83> 'wchar_t' lvalue Var 0xa342e80 'c' 'wchar_t')))))
          <<<NULL>>>)
        (BinaryOperator 0xa343788 <line:640:13, col:23> 'int' lvalue '='
          (DeclRefExpr 0xa343734 <col:13> 'int' lvalue Var 0xa33bac0 'woptopt' 'int')
          (ImplicitCastExpr 0xa343778 <col:23> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa343768 <col:23> 'wchar_t' <LValueToRValue>
              (DeclRefExpr 0xa34374c <col:23> 'wchar_t' lvalue Var 0xa342e80 'c' 'wchar_t'))))
        (UnaryOperator 0xa3437b8 <line:641:13, col:20> 'int' postfix '++'
          (DeclRefExpr 0xa3437a0 <col:13> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
        (ReturnStmt 0xa3437f8 <line:642:13, col:20>
          (ImplicitCastExpr 0xa3437e8 <col:20> 'int' <IntegralCast>
            (CharacterLiteral 0xa3437d0 <col:20> 'char'63))))
      <<<NULL>>>)
    (IfStmt 0xa3445e0 <line:644:9, line:688:9>
      <<<NULL>>>
      (BinaryOperator 0xa3438d8 <line:644:13, col:24> '_Bool' '=='
        (ImplicitCastExpr 0xa3438b8 <col:13, col:19> 'wchar_t' <LValueToRValue>
          (ArraySubscriptExpr 0xa343888 <col:13, col:19> 'wchar_t' lvalue
            (ImplicitCastExpr 0xa343878 <col:13> 'wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa343844 <col:13> 'wchar_t *' lvalue Var 0xa342f30 'temp' 'wchar_t *'))
            (IntegerLiteral 0xa343860 <col:18> 'int' 1)))
        (ImplicitCastExpr 0xa3438c8 <col:24> 'wchar_t' <IntegralCast>
          (CharacterLiteral 0xa3438a0 <col:24> 'char'58)))
      (CompoundStmt 0xa3445c8 <line:645:9, line:688:9>
        (IfStmt 0xa3445a8 <line:646:13, line:687:13>
          <<<NULL>>>
          (BinaryOperator 0xa343980 <line:646:17, col:28> '_Bool' '=='
            (ImplicitCastExpr 0xa343960 <col:17, col:23> 'wchar_t' <LValueToRValue>
              (ArraySubscriptExpr 0xa343930 <col:17, col:23> 'wchar_t' lvalue
                (ImplicitCastExpr 0xa343920 <col:17> 'wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa3438f0 <col:17> 'wchar_t *' lvalue Var 0xa342f30 'temp' 'wchar_t *'))
                (IntegerLiteral 0xa343908 <col:22> 'int' 2)))
            (ImplicitCastExpr 0xa343970 <col:28> 'wchar_t' <IntegralCast>
              (CharacterLiteral 0xa343948 <col:28> 'char'58)))
          (CompoundStmt 0xa343db8 <line:647:13, line:657:13>
            (IfStmt 0xa343d40 <line:649:17, /usr/include/linux/stddef.h:8:14>
              <<<NULL>>>
              (BinaryOperator 0xa343c30 <../codeBase/fish-shell-master/wgetopt.cpp:649:21, col:34> '_Bool' '!='
                (ImplicitCastExpr 0xa3439f0 <col:21, col:22> 'wchar_t' <LValueToRValue>
                  (UnaryOperator 0xa3439c0 <col:21, col:22> 'wchar_t' lvalue prefix '*'
                    (ImplicitCastExpr 0xa3439b0 <col:22> 'wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa343998 <col:22> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *'))))
                (ImplicitCastExpr 0xa343c20 <col:34> 'wchar_t' <IntegralCast>
                  (CharacterLiteral 0xa3439d8 <col:34> 'char'0)))
              (CompoundStmt 0xa343cd0 <line:650:17, line:653:17>
                (BinaryOperator 0xa343c88 <line:651:21, col:31> 'wchar_t *' lvalue '='
                  (DeclRefExpr 0xa343c48 <col:21> 'wchar_t *' lvalue Var 0xa32abe0 'woptarg' 'wchar_t *')
                  (ImplicitCastExpr 0xa343c78 <col:31> 'wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa343c60 <col:31> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))
                (UnaryOperator 0xa343cb8 <line:652:21, col:28> 'int' postfix '++'
                  (DeclRefExpr 0xa343ca0 <col:21> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))
              (BinaryOperator 0xa343d28 <line:655:21, /usr/include/linux/stddef.h:8:14> 'wchar_t *' lvalue '='
                (DeclRefExpr 0xa343ce8 <../codeBase/fish-shell-master/wgetopt.cpp:655:21> 'wchar_t *' lvalue Var 0xa32abe0 'woptarg' 'wchar_t *')
                (ImplicitCastExpr 0xa343d18 </usr/include/linux/stddef.h:8:14> 'wchar_t *' <NullToPointer>
                  (IntegerLiteral 0xa343d00 <col:14> 'int' 0))))
            (BinaryOperator 0xa343da0 <../codeBase/fish-shell-master/wgetopt.cpp:656:17, /usr/include/linux/stddef.h:8:14> 'wchar_t *' lvalue '='
              (DeclRefExpr 0xa343d5c <../codeBase/fish-shell-master/wgetopt.cpp:656:17> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')
              (ImplicitCastExpr 0xa343d90 </usr/include/linux/stddef.h:8:14> 'wchar_t *' <NullToPointer>
                (IntegerLiteral 0xa343d78 <col:14> 'int' 0))))
          (CompoundStmt 0xa344590 <../codeBase/fish-shell-master/wgetopt.cpp:659:13, line:687:13>
            (IfStmt 0xa344518 <line:661:17, line:685:45>
              <<<NULL>>>
              (BinaryOperator 0xa343e48 <line:661:21, col:34> '_Bool' '!='
                (ImplicitCastExpr 0xa343e28 <col:21, col:22> 'wchar_t' <LValueToRValue>
                  (UnaryOperator 0xa343df8 <col:21, col:22> 'wchar_t' lvalue prefix '*'
                    (ImplicitCastExpr 0xa343de8 <col:22> 'wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa343dd0 <col:22> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *'))))
                (ImplicitCastExpr 0xa343e38 <col:34> 'wchar_t' <IntegralCast>
                  (CharacterLiteral 0xa343e10 <col:34> 'char'0)))
              (CompoundStmt 0xa343ee8 <line:662:17, line:667:17>
                (BinaryOperator 0xa343ea0 <line:663:21, col:31> 'wchar_t *' lvalue '='
                  (DeclRefExpr 0xa343e60 <col:21> 'wchar_t *' lvalue Var 0xa32abe0 'woptarg' 'wchar_t *')
                  (ImplicitCastExpr 0xa343e90 <col:31> 'wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa343e78 <col:31> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')))
                (UnaryOperator 0xa343ed0 <line:666:21, col:28> 'int' postfix '++'
                  (DeclRefExpr 0xa343eb8 <col:21> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))
              (IfStmt 0xa3444f8 <line:668:22, line:685:45>
                <<<NULL>>>
                (BinaryOperator 0xa343f50 <line:668:26, col:37> '_Bool' '=='
                  (ImplicitCastExpr 0xa343f30 <col:26> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa343f00 <col:26> 'int' lvalue Var 0xa32ac50 'woptind' 'int'))
                  (ImplicitCastExpr 0xa343f40 <col:37> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa343f18 <col:37> 'int' lvalue ParmVar 0xa33d8d0 'argc' 'int')))
                (CompoundStmt 0xa344428 <line:669:17, line:681:17>
                  (IfStmt 0xa344228 <line:670:21, line:675:21>
                    <<<NULL>>>
                    (ImplicitCastExpr 0xa343f90 <line:670:25> '_Bool' <IntegralToBoolean>
                      (ImplicitCastExpr 0xa343f80 <col:25> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa343f68 <col:25> 'int' lvalue Var 0xa33ba60 'wopterr' 'int')))
                    (CompoundStmt 0xa344210 <line:671:21, line:675:21>
                      (CallExpr 0xa3441a0 <line:673:25, line:674:44> 'int'
                        (ImplicitCastExpr 0xa344190 <line:673:25> 'int (*)(__FILE *restrict, const wchar_t *restrict, ...)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa344174 <col:25> 'int (__FILE *restrict, const wchar_t *restrict, ...)' lvalue Function 0x9d794c0 'fwprintf' 'int (__FILE *restrict, const wchar_t *restrict, ...)'))
                        (ImplicitCastExpr 0xa3441d0 </usr/include/stdio.h:175:16> 'struct _IO_FILE *' <LValueToRValue>
                          (DeclRefExpr 0xa343fd4 <col:16> 'struct _IO_FILE *' lvalue Var 0x9d60d40 'stderr' 'struct _IO_FILE *'))
                        (ImplicitCastExpr 0xa3441e0 <../codeBase/fish-shell-master/wgetopt.cpp:190:19, col:26> 'const wchar_t *' <ArrayToPointerDecay>
                          (ParenExpr 0xa3440f0 <col:19, col:26> 'const wchar_t [41]' lvalue
                            (StringLiteral 0xa344030 <line:673:44> 'const wchar_t [41]' lvalue L"%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000O\000\000\000p\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000 \000\000\000r\000\000\000e\000\000\000q\000\000\000u\000\000\000i\000\000\000r\000\000\000e\000\000\000s\000\000\000 \000\000\000a\000\000\000n\000\000\000 \000\000\000a\000\000\000r\000\000\000g\000\000\000u\000\000\000m\000\000\000e\000\000\000n\000\000\000t\000\000\000 \000\000\000-\000\000\000-\000\000\000 \000\000\000%\000\000\000l\000\000\000c\000\000\000\n\000\000\000")))
                        (ImplicitCastExpr 0xa3441f0 <line:674:34, col:40> 'wchar_t *' <LValueToRValue>
                          (ArraySubscriptExpr 0xa344148 <col:34, col:40> 'wchar_t *const' lvalue
                            (ImplicitCastExpr 0xa344138 <col:34> 'wchar_t *const *' <LValueToRValue>
                              (DeclRefExpr 0xa344104 <col:34> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                            (IntegerLiteral 0xa344120 <col:39> 'int' 0)))
                        (ImplicitCastExpr 0xa344200 <col:43> 'wchar_t' <LValueToRValue>
                          (DeclRefExpr 0xa34415c <col:43> 'wchar_t' lvalue Var 0xa342e80 'c' 'wchar_t'))))
                    <<<NULL>>>)
                  (BinaryOperator 0xa344298 <line:676:21, col:31> 'int' lvalue '='
                    (DeclRefExpr 0xa344244 <col:21> 'int' lvalue Var 0xa33bac0 'woptopt' 'int')
                    (ImplicitCastExpr 0xa344288 <col:31> 'int' <IntegralCast>
                      (ImplicitCastExpr 0xa344278 <col:31> 'wchar_t' <LValueToRValue>
                        (DeclRefExpr 0xa34425c <col:31> 'wchar_t' lvalue Var 0xa342e80 'c' 'wchar_t'))))
                  (IfStmt 0xa344408 <line:677:21, line:680:29>
                    <<<NULL>>>
                    (BinaryOperator 0xa344340 <line:677:25, col:41> '_Bool' '=='
                      (ImplicitCastExpr 0xa344320 <col:25, col:36> 'wchar_t' <LValueToRValue>
                        (ArraySubscriptExpr 0xa3442f0 <col:25, col:36> 'const wchar_t' lvalue
                          (ImplicitCastExpr 0xa3442e0 <col:25> 'const wchar_t *' <LValueToRValue>
                            (DeclRefExpr 0xa3442b0 <col:25> 'const wchar_t *' lvalue ParmVar 0xa33d970 'optstring' 'const wchar_t *'))
                          (IntegerLiteral 0xa3442c8 <col:35> 'int' 0)))
                      (ImplicitCastExpr 0xa344330 <col:41> 'wchar_t' <IntegralCast>
                        (CharacterLiteral 0xa344308 <col:41> 'char'58)))
                    (BinaryOperator 0xa344398 <line:678:25, col:29> 'wchar_t' lvalue '='
                      (DeclRefExpr 0xa344358 <col:25> 'wchar_t' lvalue Var 0xa342e80 'c' 'wchar_t')
                      (ImplicitCastExpr 0xa344388 <col:29> 'wchar_t' <IntegralCast>
                        (CharacterLiteral 0xa344370 <col:29> 'char'58)))
                    (BinaryOperator 0xa3443f0 <line:680:25, col:29> 'wchar_t' lvalue '='
                      (DeclRefExpr 0xa3443b0 <col:25> 'wchar_t' lvalue Var 0xa342e80 'c' 'wchar_t')
                      (ImplicitCastExpr 0xa3443e0 <col:29> 'wchar_t' <IntegralCast>
                        (CharacterLiteral 0xa3443c8 <col:29> 'char'63)))))
                (BinaryOperator 0xa3444e0 <line:685:21, col:45> 'wchar_t *' lvalue '='
                  (DeclRefExpr 0xa344444 <col:21> 'wchar_t *' lvalue Var 0xa32abe0 'woptarg' 'wchar_t *')
                  (ImplicitCastExpr 0xa3444d0 <col:31, col:45> 'wchar_t *' <LValueToRValue>
                    (ArraySubscriptExpr 0xa3444b8 <col:31, col:45> 'wchar_t *const' lvalue
                      (ImplicitCastExpr 0xa3444a8 <col:31> 'wchar_t *const *' <LValueToRValue>
                        (DeclRefExpr 0xa34445c <col:31> 'wchar_t *const *' lvalue ParmVar 0xa33d920 'argv' 'wchar_t *const *'))
                      (UnaryOperator 0xa344490 <col:36, col:43> 'int' postfix '++'
                        (DeclRefExpr 0xa344474 <col:36> 'int' lvalue Var 0xa32ac50 'woptind' 'int')))))))
            (BinaryOperator 0xa344578 <line:686:17, /usr/include/linux/stddef.h:8:14> 'wchar_t *' lvalue '='
              (DeclRefExpr 0xa344534 <../codeBase/fish-shell-master/wgetopt.cpp:686:17> 'wchar_t *' lvalue Var 0xa33ba10 'nextchar' 'wchar_t *')
              (ImplicitCastExpr 0xa344568 </usr/include/linux/stddef.h:8:14> 'wchar_t *' <NullToPointer>
                (IntegerLiteral 0xa344550 <col:14> 'int' 0))))))
      <<<NULL>>>)
    (ReturnStmt 0xa344638 <../codeBase/fish-shell-master/wgetopt.cpp:689:9, col:16>
      (ImplicitCastExpr 0xa344628 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa344618 <col:16> 'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa3445fc <col:16> 'wchar_t' lvalue Var 0xa342e80 'c' 'wchar_t'))))))


int wgetopt(int argc, wchar_t *const *argv, const wchar_t *optstring) (CompoundStmt 0xa344a40 <../codeBase/fish-shell-master/wgetopt.cpp:695:1, line:700:1>
  (ReturnStmt 0xa344a30 <line:696:5, line:699:31>
    (CallExpr 0xa3449c8 <line:696:12, line:699:31> 'int'
      (ImplicitCastExpr 0xa3449b8 <line:696:12> 'int (*)(int, wchar_t *const *, const wchar_t *, const struct woption *, int *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa344960 <col:12> 'int (int, wchar_t *const *, const wchar_t *, const struct woption *, int *, int)' lvalue Function 0xa33dad0 '_wgetopt_internal' 'int (int, wchar_t *const *, const wchar_t *, const struct woption *, int *, int)'))
      (ImplicitCastExpr 0xa344a00 <col:30> 'int' <LValueToRValue>
        (DeclRefExpr 0xa344854 <col:30> 'int' lvalue ParmVar 0xa3446b0 'argc' 'int'))
      (ImplicitCastExpr 0xa344a10 <col:36> 'wchar_t *const *' <LValueToRValue>
        (DeclRefExpr 0xa34486c <col:36> 'wchar_t *const *' lvalue ParmVar 0xa344700 'argv' 'wchar_t *const *'))
      (ImplicitCastExpr 0xa344a20 <col:42> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa344884 <col:42> 'const wchar_t *' lvalue ParmVar 0xa344750 'optstring' 'const wchar_t *'))
      (CStyleCastExpr 0xa3448e0 <line:697:30, col:55> 'const struct woption *' <NoOp>
        (ImplicitCastExpr 0xa3448d0 <col:55> 'const struct woption *' <NullToPointer>
          (IntegerLiteral 0xa3448a0 <col:55> 'int' 0)))
      (CStyleCastExpr 0xa344930 <line:698:30, col:38> 'int *' <NoOp>
        (ImplicitCastExpr 0xa344920 <col:38> 'int *' <NullToPointer>
          (IntegerLiteral 0xa3448f8 <col:38> 'int' 0)))
      (IntegerLiteral 0xa344948 <line:699:30> 'int' 0))))


int wgetopt_long(int argc, wchar_t *const *argv, const wchar_t *options, const struct woption *long_options, int *opt_index) (CompoundStmt 0xa344e20 <../codeBase/fish-shell-master/wgetopt.cpp:704:1, line:706:1>
  (ReturnStmt 0xa344e10 <line:705:5, col:77>
    (CallExpr 0xa344d88 <col:12, col:77> 'int'
      (ImplicitCastExpr 0xa344d78 <col:12> 'int (*)(int, wchar_t *const *, const wchar_t *, const struct woption *, int *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa344d60 <col:12> 'int (int, wchar_t *const *, const wchar_t *, const struct woption *, int *, int)' lvalue Function 0xa33dad0 '_wgetopt_internal' 'int (int, wchar_t *const *, const wchar_t *, const struct woption *, int *, int)'))
      (ImplicitCastExpr 0xa344dc0 <col:30> 'int' <LValueToRValue>
        (DeclRefExpr 0xa344ccc <col:30> 'int' lvalue ParmVar 0xa344a70 'argc' 'int'))
      (ImplicitCastExpr 0xa344dd0 <col:36> 'wchar_t *const *' <LValueToRValue>
        (DeclRefExpr 0xa344ce4 <col:36> 'wchar_t *const *' lvalue ParmVar 0xa344ac0 'argv' 'wchar_t *const *'))
      (ImplicitCastExpr 0xa344de0 <col:42> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa344cfc <col:42> 'const wchar_t *' lvalue ParmVar 0xa344b10 'options' 'const wchar_t *'))
      (ImplicitCastExpr 0xa344df0 <col:51> 'const struct woption *' <LValueToRValue>
        (DeclRefExpr 0xa344d14 <col:51> 'const struct woption *' lvalue ParmVar 0xa344b60 'long_options' 'const struct woption *'))
      (ImplicitCastExpr 0xa344e00 <col:65> 'int *' <LValueToRValue>
        (DeclRefExpr 0xa344d2c <col:65> 'int *' lvalue ParmVar 0xa344bb0 'opt_index' 'int *'))
      (IntegerLiteral 0xa344d48 <col:76> 'int' 0))))


int wgetopt_long_only(int argc, wchar_t *const *argv, const wchar_t *options, const struct woption *long_options, int *opt_index) (CompoundStmt 0xa345200 <../codeBase/fish-shell-master/wgetopt.cpp:710:1, line:712:1>
  (ReturnStmt 0xa3451f0 <line:711:5, col:77>
    (CallExpr 0xa345168 <col:12, col:77> 'int'
      (ImplicitCastExpr 0xa345158 <col:12> 'int (*)(int, wchar_t *const *, const wchar_t *, const struct woption *, int *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa345140 <col:12> 'int (int, wchar_t *const *, const wchar_t *, const struct woption *, int *, int)' lvalue Function 0xa33dad0 '_wgetopt_internal' 'int (int, wchar_t *const *, const wchar_t *, const struct woption *, int *, int)'))
      (ImplicitCastExpr 0xa3451a0 <col:30> 'int' <LValueToRValue>
        (DeclRefExpr 0xa3450ac <col:30> 'int' lvalue ParmVar 0xa344e50 'argc' 'int'))
      (ImplicitCastExpr 0xa3451b0 <col:36> 'wchar_t *const *' <LValueToRValue>
        (DeclRefExpr 0xa3450c4 <col:36> 'wchar_t *const *' lvalue ParmVar 0xa344ea0 'argv' 'wchar_t *const *'))
      (ImplicitCastExpr 0xa3451c0 <col:42> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa3450dc <col:42> 'const wchar_t *' lvalue ParmVar 0xa344ef0 'options' 'const wchar_t *'))
      (ImplicitCastExpr 0xa3451d0 <col:51> 'const struct woption *' <LValueToRValue>
        (DeclRefExpr 0xa3450f4 <col:51> 'const struct woption *' lvalue ParmVar 0xa344f40 'long_options' 'const struct woption *'))
      (ImplicitCastExpr 0xa3451e0 <col:65> 'int *' <LValueToRValue>
        (DeclRefExpr 0xa34510c <col:65> 'int *' lvalue ParmVar 0xa344f90 'opt_index' 'int *'))
      (IntegerLiteral 0xa345128 <col:76> 'int' 1))))


